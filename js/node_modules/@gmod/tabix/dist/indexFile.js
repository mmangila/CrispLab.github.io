"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs2/regenerator"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/objectWithoutProperties"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _abortablePromiseCache = _interopRequireDefault(require("abortable-promise-cache"));

var _quickLru = _interopRequireDefault(require("quick-lru"));

var IndexFile = /*#__PURE__*/function () {
  /**
   * @param {filehandle} filehandle
   * @param {function} [renameRefSeqs]
   */
  function IndexFile(_ref) {
    var filehandle = _ref.filehandle,
        _ref$renameRefSeqs = _ref.renameRefSeqs,
        renameRefSeqs = _ref$renameRefSeqs === void 0 ? function (n) {
      return n;
    } : _ref$renameRefSeqs;
    (0, _classCallCheck2.default)(this, IndexFile);
    (0, _defineProperty2.default)(this, "filehandle", void 0);
    (0, _defineProperty2.default)(this, "renameRefSeq", void 0);
    (0, _defineProperty2.default)(this, "_parseCache", void 0);
    this.filehandle = filehandle;
    this.renameRefSeq = renameRefSeqs;
  }

  (0, _createClass2.default)(IndexFile, [{
    key: "getMetadata",
    value: function () {
      var _getMetadata = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var opts,
            _yield$this$parse,
            indices,
            rest,
            _args = arguments;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                _context.next = 3;
                return this.parse(opts);

              case 3:
                _yield$this$parse = _context.sent;
                indices = _yield$this$parse.indices;
                rest = (0, _objectWithoutProperties2.default)(_yield$this$parse, ["indices"]);
                return _context.abrupt("return", rest);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getMetadata() {
        return _getMetadata.apply(this, arguments);
      }

      return getMetadata;
    }()
  }, {
    key: "_findFirstData",
    value: function _findFirstData(currentFdl, virtualOffset) {
      if (currentFdl) {
        return currentFdl.compareTo(virtualOffset) > 0 ? virtualOffset : currentFdl;
      } else {
        return virtualOffset;
      }
    }
  }, {
    key: "parse",
    value: function () {
      var _parse2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var _this = this;

        var opts,
            _args2 = arguments;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                opts = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};
                if (!this._parseCache) this._parseCache = new _abortablePromiseCache.default({
                  cache: new _quickLru.default({
                    maxSize: 1
                  }),
                  fill: function fill() {
                    return _this._parse(opts);
                  }
                });
                return _context2.abrupt("return", this._parseCache.get('index', null, opts.signal));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function parse() {
        return _parse2.apply(this, arguments);
      }

      return parse;
    }()
  }, {
    key: "hasRefSeq",
    value: function () {
      var _hasRefSeq = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(seqId) {
        var opts,
            _args3 = arguments;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                opts = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};
                _context3.next = 3;
                return this.parse(opts);

              case 3:
                _context3.t1 = seqId;
                _context3.t0 = _context3.sent.indices[_context3.t1];

                if (_context3.t0) {
                  _context3.next = 7;
                  break;
                }

                _context3.t0 = {};

              case 7:
                return _context3.abrupt("return", !!_context3.t0.binIndex);

              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function hasRefSeq(_x) {
        return _hasRefSeq.apply(this, arguments);
      }

      return hasRefSeq;
    }()
  }]);
  return IndexFile;
}();

exports.default = IndexFile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleEZpbGUudHMiXSwibmFtZXMiOlsiSW5kZXhGaWxlIiwiZmlsZWhhbmRsZSIsInJlbmFtZVJlZlNlcXMiLCJuIiwicmVuYW1lUmVmU2VxIiwib3B0cyIsInBhcnNlIiwiaW5kaWNlcyIsInJlc3QiLCJjdXJyZW50RmRsIiwidmlydHVhbE9mZnNldCIsImNvbXBhcmVUbyIsIl9wYXJzZUNhY2hlIiwiQWJvcnRhYmxlUHJvbWlzZUNhY2hlIiwiY2FjaGUiLCJRdWlja0xSVSIsIm1heFNpemUiLCJmaWxsIiwiX3BhcnNlIiwiZ2V0Iiwic2lnbmFsIiwic2VxSWQiLCJiaW5JbmRleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0lBVzhCQSxTO0FBSzVCOzs7O0FBSUEsMkJBTUc7QUFBQSxRQUxEQyxVQUtDLFFBTERBLFVBS0M7QUFBQSxrQ0FKREMsYUFJQztBQUFBLFFBSkRBLGFBSUMsbUNBSmUsVUFBQ0MsQ0FBRDtBQUFBLGFBQWVBLENBQWY7QUFBQSxLQUlmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDRCxTQUFLRixVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLFNBQUtHLFlBQUwsR0FBb0JGLGFBQXBCO0FBQ0Q7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjd0JHLGdCQUFBQSxJLDJEQUFnQixFOzt1QkFFSixLQUFLQyxLQUFMLENBQVdELElBQVgsQzs7OztBQUEzQkUsZ0JBQUFBLE8scUJBQUFBLE87QUFBWUMsZ0JBQUFBLEk7aURBQ2JBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FXUEMsVSxFQUNBQyxhLEVBQ0E7QUFDQSxVQUFJRCxVQUFKLEVBQWdCO0FBQ2QsZUFBT0EsVUFBVSxDQUFDRSxTQUFYLENBQXFCRCxhQUFyQixJQUFzQyxDQUF0QyxHQUNIQSxhQURHLEdBRUhELFVBRko7QUFHRCxPQUpELE1BSU87QUFDTCxlQUFPQyxhQUFQO0FBQ0Q7QUFDRjs7Ozs7Ozs7Ozs7OztBQUVXTCxnQkFBQUEsSSw4REFBZ0IsRTtBQUMxQixvQkFBSSxDQUFDLEtBQUtPLFdBQVYsRUFDRSxLQUFLQSxXQUFMLEdBQW1CLElBQUlDLDhCQUFKLENBQTBCO0FBQzNDQyxrQkFBQUEsS0FBSyxFQUFFLElBQUlDLGlCQUFKLENBQWE7QUFBRUMsb0JBQUFBLE9BQU8sRUFBRTtBQUFYLG1CQUFiLENBRG9DO0FBRTNDQyxrQkFBQUEsSUFBSSxFQUFFO0FBQUEsMkJBQU0sS0FBSSxDQUFDQyxNQUFMLENBQVliLElBQVosQ0FBTjtBQUFBO0FBRnFDLGlCQUExQixDQUFuQjtrREFJSyxLQUFLTyxXQUFMLENBQWlCTyxHQUFqQixDQUFxQixPQUFyQixFQUE4QixJQUE5QixFQUFvQ2QsSUFBSSxDQUFDZSxNQUF6QyxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lIQUdPQyxLOzs7Ozs7O0FBQWVoQixnQkFBQUEsSSw4REFBZ0IsRTs7dUJBQzVCLEtBQUtDLEtBQUwsQ0FBV0QsSUFBWCxDOzs7K0JBQTBCZ0IsSzs4Q0FBUmQsTzs7Ozs7OzsrQkFBa0IsRTs7O2lFQUFJZSxRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFib3J0YWJsZVByb21pc2VDYWNoZSBmcm9tICdhYm9ydGFibGUtcHJvbWlzZS1jYWNoZSdcbmltcG9ydCBRdWlja0xSVSBmcm9tICdxdWljay1scnUnXG5pbXBvcnQgeyBHZW5lcmljRmlsZWhhbmRsZSB9IGZyb20gJ2dlbmVyaWMtZmlsZWhhbmRsZSdcbmltcG9ydCBWaXJ0dWFsT2Zmc2V0IGZyb20gJy4vdmlydHVhbE9mZnNldCdcbmltcG9ydCBDaHVuayBmcm9tICcuL2NodW5rJ1xuXG5leHBvcnQgaW50ZXJmYWNlIE9wdGlvbnMge1xuICAvLyBzdXBwb3J0IGhhdmluZyBzb21lIHVua25vd24gcGFydHMgb2YgdGhlIG9wdGlvbnNcbiAgW2tleTogc3RyaW5nXTogdW5rbm93blxuICBzaWduYWw/OiBBYm9ydFNpZ25hbFxufVxuXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBJbmRleEZpbGUge1xuICBwdWJsaWMgZmlsZWhhbmRsZTogR2VuZXJpY0ZpbGVoYW5kbGVcbiAgcHVibGljIHJlbmFtZVJlZlNlcTogRnVuY3Rpb25cbiAgcHJpdmF0ZSBfcGFyc2VDYWNoZTogYW55XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7ZmlsZWhhbmRsZX0gZmlsZWhhbmRsZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBbcmVuYW1lUmVmU2Vxc11cbiAgICovXG4gIGNvbnN0cnVjdG9yKHtcbiAgICBmaWxlaGFuZGxlLFxuICAgIHJlbmFtZVJlZlNlcXMgPSAobjogc3RyaW5nKSA9PiBuLFxuICB9OiB7XG4gICAgZmlsZWhhbmRsZTogR2VuZXJpY0ZpbGVoYW5kbGVcbiAgICByZW5hbWVSZWZTZXFzPzogKGE6IHN0cmluZykgPT4gc3RyaW5nXG4gIH0pIHtcbiAgICB0aGlzLmZpbGVoYW5kbGUgPSBmaWxlaGFuZGxlXG4gICAgdGhpcy5yZW5hbWVSZWZTZXEgPSByZW5hbWVSZWZTZXFzXG4gIH1cblxuICBwdWJsaWMgYWJzdHJhY3QgYXN5bmMgbGluZUNvdW50KFxuICAgIHJlZk5hbWU6IHN0cmluZyxcbiAgICBhcmdzOiBPcHRpb25zLFxuICApOiBQcm9taXNlPG51bWJlcj5cblxuICBwcm90ZWN0ZWQgYWJzdHJhY3QgYXN5bmMgX3BhcnNlKFxuICAgIG9wdHM6IE9wdGlvbnMsXG4gICk6IFByb21pc2U8e1xuICAgIHJlZk5hbWVUb0lkOiB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9XG4gICAgcmVmSWRUb05hbWU6IHN0cmluZ1tdXG4gIH0+XG5cbiAgcHVibGljIGFzeW5jIGdldE1ldGFkYXRhKG9wdHM6IE9wdGlvbnMgPSB7fSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBjb25zdCB7IGluZGljZXMsIC4uLnJlc3QgfSA9IGF3YWl0IHRoaXMucGFyc2Uob3B0cylcbiAgICByZXR1cm4gcmVzdFxuICB9XG5cbiAgcHVibGljIGFic3RyYWN0IGFzeW5jIGJsb2Nrc0ZvclJhbmdlKFxuICAgIHJlZk5hbWU6IHN0cmluZyxcbiAgICBzdGFydDogbnVtYmVyLFxuICAgIGVuZDogbnVtYmVyLFxuICAgIG9wdHM6IE9wdGlvbnMsXG4gICk6IFByb21pc2U8Q2h1bmtbXT5cblxuICBfZmluZEZpcnN0RGF0YShcbiAgICBjdXJyZW50RmRsOiBWaXJ0dWFsT2Zmc2V0IHwgdW5kZWZpbmVkLFxuICAgIHZpcnR1YWxPZmZzZXQ6IFZpcnR1YWxPZmZzZXQsXG4gICkge1xuICAgIGlmIChjdXJyZW50RmRsKSB7XG4gICAgICByZXR1cm4gY3VycmVudEZkbC5jb21wYXJlVG8odmlydHVhbE9mZnNldCkgPiAwXG4gICAgICAgID8gdmlydHVhbE9mZnNldFxuICAgICAgICA6IGN1cnJlbnRGZGxcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZpcnR1YWxPZmZzZXRcbiAgICB9XG4gIH1cblxuICBhc3luYyBwYXJzZShvcHRzOiBPcHRpb25zID0ge30pIHtcbiAgICBpZiAoIXRoaXMuX3BhcnNlQ2FjaGUpXG4gICAgICB0aGlzLl9wYXJzZUNhY2hlID0gbmV3IEFib3J0YWJsZVByb21pc2VDYWNoZSh7XG4gICAgICAgIGNhY2hlOiBuZXcgUXVpY2tMUlUoeyBtYXhTaXplOiAxIH0pLFxuICAgICAgICBmaWxsOiAoKSA9PiB0aGlzLl9wYXJzZShvcHRzKSxcbiAgICAgIH0pXG4gICAgcmV0dXJuIHRoaXMuX3BhcnNlQ2FjaGUuZ2V0KCdpbmRleCcsIG51bGwsIG9wdHMuc2lnbmFsKVxuICB9XG5cbiAgYXN5bmMgaGFzUmVmU2VxKHNlcUlkOiBudW1iZXIsIG9wdHM6IE9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiAhISgoYXdhaXQgdGhpcy5wYXJzZShvcHRzKSkuaW5kaWNlc1tzZXFJZF0gfHwge30pLmJpbkluZGV4XG4gIH1cbn1cbiJdfQ==