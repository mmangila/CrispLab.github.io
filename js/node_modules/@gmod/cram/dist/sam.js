"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/slicedToArray"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _slice = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/slice"));

var _toArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/toArray"));

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

function parseHeaderText(text) {
  var lines = text.split(/\r?\n/);
  var data = [];
  (0, _forEach.default)(lines).call(lines, function (line) {
    var _line$split = line.split(/\t/),
        _line$split2 = (0, _toArray2.default)(_line$split),
        tag = _line$split2[0],
        fields = (0, _slice.default)(_line$split2).call(_line$split2, 1);

    var parsedFields = (0, _map.default)(fields).call(fields, function (f) {
      var _f$split = f.split(':', 2),
          _f$split2 = (0, _slicedToArray2.default)(_f$split, 2),
          fieldTag = _f$split2[0],
          value = _f$split2[1];

      return {
        tag: fieldTag,
        value: value
      };
    });
    if (tag) data.push({
      tag: tag.substr(1),
      data: parsedFields
    });
  });
  return data;
}

module.exports = {
  parseHeaderText: parseHeaderText
};