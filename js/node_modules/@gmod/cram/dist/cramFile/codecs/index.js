"use strict";

var _require = require('../../errors'),
    CramUnimplementedError = _require.CramUnimplementedError;

var HuffmanIntCodec = require('./huffman');

var ExternalCodec = require('./external');

var ByteArrayStopCodec = require('./byteArrayStop');

var ByteArrayLengthCodec = require('./byteArrayLength');

var BetaCodec = require('./beta');

var GammaCodec = require('./gamma');

var SubexpCodec = require('./subexp');

var codecClasses = {
  1: ExternalCodec,
  // 2: GolombCodec,
  3: HuffmanIntCodec,
  4: ByteArrayLengthCodec,
  5: ByteArrayStopCodec,
  6: BetaCodec,
  7: SubexpCodec,
  // 8: GolombRiceCodec,
  9: GammaCodec
};

function getCodecClassWithId(id) {
  return codecClasses[id];
}

function instantiateCodec(encodingData, dataType) {
  var CodecClass = getCodecClassWithId(dataType === 'ignore' ? 0 : encodingData.codecId);
  if (!CodecClass) throw new CramUnimplementedError("no codec implemented for codec ID ".concat(encodingData.codecId));
  return new CodecClass(encodingData.parameters, dataType, instantiateCodec);
}

module.exports = {
  getCodecClassWithId: getCodecClassWithId,
  instantiateCodec: instantiateCodec
};