"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _es6Promisify = require("es6-promisify");

// don't load fs native module if running in webpacked code
var fs = typeof __webpack_require__ !== 'function' ? require('fs') : null; // eslint-disable-line @typescript-eslint/camelcase

var fsOpen = fs && (0, _es6Promisify.promisify)(fs.open);
var fsRead = fs && (0, _es6Promisify.promisify)(fs.read);
var fsFStat = fs && (0, _es6Promisify.promisify)(fs.fstat);
var fsReadFile = fs && (0, _es6Promisify.promisify)(fs.readFile);

var LocalFile = /*#__PURE__*/function () {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  function LocalFile(source) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, LocalFile);
    (0, _defineProperty2.default)(this, "fd", void 0);
    (0, _defineProperty2.default)(this, "filename", void 0);
    this.filename = source;
  }

  (0, _createClass2.default)(LocalFile, [{
    key: "getFd",
    value: function getFd() {
      if (!this.fd) {
        this.fd = fsOpen(this.filename, 'r');
      }

      return this.fd;
    }
  }, {
    key: "read",
    value: function () {
      var _read = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(buffer) {
        var offset,
            length,
            position,
            fetchLength,
            ret,
            _args = arguments;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                offset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;
                length = _args.length > 2 ? _args[2] : undefined;
                position = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0;
                fetchLength = Math.min(buffer.length - offset, length);
                _context.t0 = fsRead;
                _context.next = 7;
                return this.getFd();

              case 7:
                _context.t1 = _context.sent;
                _context.t2 = buffer;
                _context.t3 = offset;
                _context.t4 = fetchLength;
                _context.t5 = position;
                _context.next = 14;
                return (0, _context.t0)(_context.t1, _context.t2, _context.t3, _context.t4, _context.t5);

              case 14:
                ret = _context.sent;
                return _context.abrupt("return", {
                  bytesRead: ret,
                  buffer: buffer
                });

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function read(_x) {
        return _read.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: "readFile",
    value: function () {
      var _readFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(options) {
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", fsReadFile(this.filename, options));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function readFile(_x2) {
        return _readFile.apply(this, arguments);
      }

      return readFile;
    }() // todo memoize

  }, {
    key: "stat",
    value: function () {
      var _stat = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.t0 = fsFStat;
                _context3.next = 3;
                return this.getFd();

              case 3:
                _context3.t1 = _context3.sent;
                return _context3.abrupt("return", (0, _context3.t0)(_context3.t1));

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function stat() {
        return _stat.apply(this, arguments);
      }

      return stat;
    }()
  }]);
  return LocalFile;
}();

exports.default = LocalFile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2NhbEZpbGUudHMiXSwibmFtZXMiOlsiZnMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicmVxdWlyZSIsImZzT3BlbiIsIm9wZW4iLCJmc1JlYWQiLCJyZWFkIiwiZnNGU3RhdCIsImZzdGF0IiwiZnNSZWFkRmlsZSIsInJlYWRGaWxlIiwiTG9jYWxGaWxlIiwic291cmNlIiwib3B0cyIsImZpbGVuYW1lIiwiZmQiLCJidWZmZXIiLCJvZmZzZXQiLCJsZW5ndGgiLCJwb3NpdGlvbiIsImZldGNoTGVuZ3RoIiwiTWF0aCIsIm1pbiIsImdldEZkIiwicmV0IiwiYnl0ZXNSZWFkIiwib3B0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUtBO0FBQ0EsSUFBTUEsRUFBRSxHQUFHLE9BQU9DLG1CQUFQLEtBQStCLFVBQS9CLEdBQTRDQyxPQUFPLENBQUMsSUFBRCxDQUFuRCxHQUE0RCxJQUF2RSxDLENBQTRFOztBQUU1RSxJQUFNQyxNQUFNLEdBQUdILEVBQUUsSUFBSSw2QkFBVUEsRUFBRSxDQUFDSSxJQUFiLENBQXJCO0FBQ0EsSUFBTUMsTUFBTSxHQUFHTCxFQUFFLElBQUksNkJBQVVBLEVBQUUsQ0FBQ00sSUFBYixDQUFyQjtBQUNBLElBQU1DLE9BQU8sR0FBR1AsRUFBRSxJQUFJLDZCQUFVQSxFQUFFLENBQUNRLEtBQWIsQ0FBdEI7QUFDQSxJQUFNQyxVQUFVLEdBQUdULEVBQUUsSUFBSSw2QkFBVUEsRUFBRSxDQUFDVSxRQUFiLENBQXpCOztJQUVxQkMsUztBQUluQjtBQUNBLHFCQUFtQkMsTUFBbkIsRUFBaUU7QUFBQSxRQUE5QkMsSUFBOEIsdUVBQUosRUFBSTtBQUFBO0FBQUE7QUFBQTtBQUMvRCxTQUFLQyxRQUFMLEdBQWdCRixNQUFoQjtBQUNEOzs7OzRCQUVvQjtBQUNuQixVQUFJLENBQUMsS0FBS0csRUFBVixFQUFjO0FBQ1osYUFBS0EsRUFBTCxHQUFVWixNQUFNLENBQUMsS0FBS1csUUFBTixFQUFnQixHQUFoQixDQUFoQjtBQUNEOztBQUNELGFBQU8sS0FBS0MsRUFBWjtBQUNEOzs7OzJHQUdDQyxNOzs7Ozs7Ozs7OztBQUNBQyxnQkFBQUEsTSwyREFBUyxDO0FBQ1RDLGdCQUFBQSxNO0FBQ0FDLGdCQUFBQSxRLDJEQUFXLEM7QUFFTEMsZ0JBQUFBLFcsR0FBY0MsSUFBSSxDQUFDQyxHQUFMLENBQVNOLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQkQsTUFBekIsRUFBaUNDLE1BQWpDLEM7OEJBQ0ZiLE07O3VCQUFhLEtBQUtrQixLQUFMLEU7Ozs7OEJBQWNQLE07OEJBQVFDLE07OEJBQVFHLFc7OEJBQWFELFE7Ozs7O0FBQXBFSyxnQkFBQUEsRztpREFDQztBQUFFQyxrQkFBQUEsU0FBUyxFQUFFRCxHQUFiO0FBQWtCUixrQkFBQUEsTUFBTSxFQUFOQTtBQUFsQixpQjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnSEFHYVUsTzs7Ozs7a0RBQ2JqQixVQUFVLENBQUMsS0FBS0ssUUFBTixFQUFnQlksT0FBaEIsQzs7Ozs7Ozs7Ozs7Ozs7O1FBRW5COzs7Ozs7Ozs7OytCQUVTbkIsTzs7dUJBQWMsS0FBS2dCLEtBQUwsRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ2VzNi1wcm9taXNpZnknXG5pbXBvcnQgeyBHZW5lcmljRmlsZWhhbmRsZSwgRmlsZWhhbmRsZU9wdGlvbnMgfSBmcm9tICcuL2ZpbGVoYW5kbGUnXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2NhbWVsY2FzZSxuby12YXJcbmRlY2xhcmUgdmFyIF9fd2VicGFja19yZXF1aXJlX186IGFueVxuXG4vLyBkb24ndCBsb2FkIGZzIG5hdGl2ZSBtb2R1bGUgaWYgcnVubmluZyBpbiB3ZWJwYWNrZWQgY29kZVxuY29uc3QgZnMgPSB0eXBlb2YgX193ZWJwYWNrX3JlcXVpcmVfXyAhPT0gJ2Z1bmN0aW9uJyA/IHJlcXVpcmUoJ2ZzJykgOiBudWxsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2NhbWVsY2FzZVxuXG5jb25zdCBmc09wZW4gPSBmcyAmJiBwcm9taXNpZnkoZnMub3BlbilcbmNvbnN0IGZzUmVhZCA9IGZzICYmIHByb21pc2lmeShmcy5yZWFkKVxuY29uc3QgZnNGU3RhdCA9IGZzICYmIHByb21pc2lmeShmcy5mc3RhdClcbmNvbnN0IGZzUmVhZEZpbGUgPSBmcyAmJiBwcm9taXNpZnkoZnMucmVhZEZpbGUpXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvY2FsRmlsZSBpbXBsZW1lbnRzIEdlbmVyaWNGaWxlaGFuZGxlIHtcbiAgcHJpdmF0ZSBmZD86IGFueVxuICBwcml2YXRlIGZpbGVuYW1lOiBzdHJpbmdcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcihzb3VyY2U6IHN0cmluZywgb3B0czogRmlsZWhhbmRsZU9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuZmlsZW5hbWUgPSBzb3VyY2VcbiAgfVxuXG4gIHByaXZhdGUgZ2V0RmQoKTogYW55IHtcbiAgICBpZiAoIXRoaXMuZmQpIHtcbiAgICAgIHRoaXMuZmQgPSBmc09wZW4odGhpcy5maWxlbmFtZSwgJ3InKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5mZFxuICB9XG5cbiAgcHVibGljIGFzeW5jIHJlYWQoXG4gICAgYnVmZmVyOiBCdWZmZXIsXG4gICAgb2Zmc2V0ID0gMCxcbiAgICBsZW5ndGg6IG51bWJlcixcbiAgICBwb3NpdGlvbiA9IDAsXG4gICk6IFByb21pc2U8eyBieXRlc1JlYWQ6IG51bWJlcjsgYnVmZmVyOiBCdWZmZXIgfT4ge1xuICAgIGNvbnN0IGZldGNoTGVuZ3RoID0gTWF0aC5taW4oYnVmZmVyLmxlbmd0aCAtIG9mZnNldCwgbGVuZ3RoKVxuICAgIGNvbnN0IHJldCA9IGF3YWl0IGZzUmVhZChhd2FpdCB0aGlzLmdldEZkKCksIGJ1ZmZlciwgb2Zmc2V0LCBmZXRjaExlbmd0aCwgcG9zaXRpb24pXG4gICAgcmV0dXJuIHsgYnl0ZXNSZWFkOiByZXQsIGJ1ZmZlciB9XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgcmVhZEZpbGUob3B0aW9ucz86IEZpbGVoYW5kbGVPcHRpb25zIHwgc3RyaW5nKTogUHJvbWlzZTxCdWZmZXIgfCBzdHJpbmc+IHtcbiAgICByZXR1cm4gZnNSZWFkRmlsZSh0aGlzLmZpbGVuYW1lLCBvcHRpb25zKVxuICB9XG4gIC8vIHRvZG8gbWVtb2l6ZVxuICBwdWJsaWMgYXN5bmMgc3RhdCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBmc0ZTdGF0KGF3YWl0IHRoaXMuZ2V0RmQoKSlcbiAgfVxufVxuIl19