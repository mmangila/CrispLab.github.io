"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  open: true,
  fromUrl: true,
  LocalFile: true,
  RemoteFile: true,
  BlobFile: true
};
exports.open = open;
exports.fromUrl = fromUrl;
Object.defineProperty(exports, "LocalFile", {
  enumerable: true,
  get: function get() {
    return _localFile.default;
  }
});
Object.defineProperty(exports, "RemoteFile", {
  enumerable: true,
  get: function get() {
    return _remoteFile.default;
  }
});
Object.defineProperty(exports, "BlobFile", {
  enumerable: true,
  get: function get() {
    return _blobFile.default;
  }
});

var _localFile = _interopRequireDefault(require("./localFile"));

var _remoteFile = _interopRequireDefault(require("./remoteFile"));

var _blobFile = _interopRequireDefault(require("./blobFile"));

var _filehandle = require("./filehandle");

Object.keys(_filehandle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _filehandle[key];
    }
  });
});

function fromUrl(source) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new _remoteFile.default(source, opts);
}

function open(maybeUrl, maybePath, maybeFilehandle) {
  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (maybeFilehandle !== undefined) {
    return maybeFilehandle;
  }

  if (maybeUrl !== undefined) {
    return fromUrl(maybeUrl, opts);
  }

  if (maybePath !== undefined) {
    return new _localFile.default(maybePath, opts);
  }

  throw new Error('no url, path, or filehandle provided, cannot open');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJmcm9tVXJsIiwic291cmNlIiwib3B0cyIsIlJlbW90ZUZpbGUiLCJvcGVuIiwibWF5YmVVcmwiLCJtYXliZVBhdGgiLCJtYXliZUZpbGVoYW5kbGUiLCJ1bmRlZmluZWQiLCJMb2NhbEZpbGUiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQSxTQUFTQSxPQUFULENBQWlCQyxNQUFqQixFQUFrRjtBQUFBLE1BQWpEQyxJQUFpRCx1RUFBdkIsRUFBdUI7QUFDaEYsU0FBTyxJQUFJQyxtQkFBSixDQUFlRixNQUFmLEVBQXVCQyxJQUF2QixDQUFQO0FBQ0Q7O0FBQ0QsU0FBU0UsSUFBVCxDQUNFQyxRQURGLEVBRUVDLFNBRkYsRUFHRUMsZUFIRixFQUtxQjtBQUFBLE1BRG5CTCxJQUNtQix1RUFETyxFQUNQOztBQUNuQixNQUFJSyxlQUFlLEtBQUtDLFNBQXhCLEVBQW1DO0FBQ2pDLFdBQU9ELGVBQVA7QUFDRDs7QUFDRCxNQUFJRixRQUFRLEtBQUtHLFNBQWpCLEVBQTRCO0FBQzFCLFdBQU9SLE9BQU8sQ0FBQ0ssUUFBRCxFQUFXSCxJQUFYLENBQWQ7QUFDRDs7QUFDRCxNQUFJSSxTQUFTLEtBQUtFLFNBQWxCLEVBQTZCO0FBQzNCLFdBQU8sSUFBSUMsa0JBQUosQ0FBY0gsU0FBZCxFQUF5QkosSUFBekIsQ0FBUDtBQUNEOztBQUNELFFBQU0sSUFBSVEsS0FBSixDQUFVLG1EQUFWLENBQU47QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2NhbEZpbGUgZnJvbSAnLi9sb2NhbEZpbGUnXG5pbXBvcnQgUmVtb3RlRmlsZSBmcm9tICcuL3JlbW90ZUZpbGUnXG5pbXBvcnQgQmxvYkZpbGUgZnJvbSAnLi9ibG9iRmlsZSdcbmltcG9ydCB7IEdlbmVyaWNGaWxlaGFuZGxlLCBGaWxlaGFuZGxlT3B0aW9ucyB9IGZyb20gJy4vZmlsZWhhbmRsZSdcbmV4cG9ydCAqIGZyb20gJy4vZmlsZWhhbmRsZSdcblxuZnVuY3Rpb24gZnJvbVVybChzb3VyY2U6IHN0cmluZywgb3B0czogRmlsZWhhbmRsZU9wdGlvbnMgPSB7fSk6IEdlbmVyaWNGaWxlaGFuZGxlIHtcbiAgcmV0dXJuIG5ldyBSZW1vdGVGaWxlKHNvdXJjZSwgb3B0cylcbn1cbmZ1bmN0aW9uIG9wZW4oXG4gIG1heWJlVXJsPzogc3RyaW5nLFxuICBtYXliZVBhdGg/OiBzdHJpbmcsXG4gIG1heWJlRmlsZWhhbmRsZT86IEdlbmVyaWNGaWxlaGFuZGxlLFxuICBvcHRzOiBGaWxlaGFuZGxlT3B0aW9ucyA9IHt9LFxuKTogR2VuZXJpY0ZpbGVoYW5kbGUge1xuICBpZiAobWF5YmVGaWxlaGFuZGxlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gbWF5YmVGaWxlaGFuZGxlXG4gIH1cbiAgaWYgKG1heWJlVXJsICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZnJvbVVybChtYXliZVVybCwgb3B0cylcbiAgfVxuICBpZiAobWF5YmVQYXRoICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gbmV3IExvY2FsRmlsZShtYXliZVBhdGgsIG9wdHMpXG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdubyB1cmwsIHBhdGgsIG9yIGZpbGVoYW5kbGUgcHJvdmlkZWQsIGNhbm5vdCBvcGVuJylcbn1cblxuZXhwb3J0IHsgb3BlbiwgZnJvbVVybCwgUmVtb3RlRmlsZSwgTG9jYWxGaWxlLCBCbG9iRmlsZSB9XG4iXX0=