/// <reference types="react" />
import ReactPropTypes from 'prop-types';
import { Color, ColorResult } from 'react-color';
export declare function ColorPicker(props: {
    color: Color;
    onChange: (color: ColorResult) => void;
}): JSX.Element;
export declare namespace ColorPicker {
    var propTypes: {
        color: ReactPropTypes.Validator<string>;
        onChange: ReactPropTypes.Validator<(...args: any[]) => any>;
    };
}
export declare const ColorSlot: {
    (props: {
        value: string;
        label: string;
        TextFieldProps: {
            helperText: string;
            fullWidth: boolean;
        };
        onChange: (arg: string) => void;
    }): JSX.Element;
    propTypes: {
        onChange: ReactPropTypes.Validator<(...args: any[]) => any>;
        label: ReactPropTypes.Requireable<string>;
        TextFieldProps: ReactPropTypes.Requireable<ReactPropTypes.InferProps<{}>>;
        value: ReactPropTypes.Requireable<string>;
    };
    defaultProps: {
        label: string;
        value: string;
        TextFieldProps: {};
    };
};
declare function ColorEditorSlot(props: {
    slot: {
        name: string;
        value: string;
        description: string;
        set: (arg: string) => void;
    };
}): JSX.Element;
declare namespace ColorEditorSlot {
    var propTypes: {
        slot: ReactPropTypes.Validator<ReactPropTypes.InferProps<{
            name: ReactPropTypes.Validator<string>;
            description: ReactPropTypes.Requireable<string>;
            value: ReactPropTypes.Validator<string>;
            set: ReactPropTypes.Validator<(...args: any[]) => any>;
        }>>;
    };
}
declare const _default: typeof ColorEditorSlot;
export default _default;
