{"version":3,"file":"plugin-config.cjs.production.min.js","sources":["../src/ConfigurationEditorWidget/model.js","../src/ConfigurationEditorWidget/index.js","../../../node_modules/regenerator-runtime/runtime.js","../src/FromConfigAdapter/FromConfigAdapter.ts","../src/FromConfigAdapter/FromConfigRegionsAdapter.ts","../src/FromConfigAdapter/FromConfigSequenceAdapter.ts","../src/FromConfigAdapter/configSchema.ts","../src/RefNameAliasAdapter/RefNameAliasAdapter.ts","../src/RefNameAliasAdapter/configSchema.ts","../src/ConfigurationEditorWidget/components/JsonEditor.js","../src/index.ts","../src/ConfigurationEditorWidget/components/CallbackEditor.js","../src/ConfigurationEditorWidget/components/ColorEditor.tsx","../src/ConfigurationEditorWidget/components/SlotEditor.js","../src/ConfigurationEditorWidget/components/TypeSelector.js","../src/ConfigurationEditorWidget/components/ConfigurationEditor.js"],"sourcesContent":["import { types } from 'mobx-state-tree'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default pluginManager =>\n  types\n    .model('ConfigurationEditorWidget', {\n      id: ElementId,\n      type: types.literal('ConfigurationEditorWidget'),\n      // If you add different types of targets, don't forget to account for that\n      // in the key of ./components/ConfigurationEditor.js\n      target: types.safeReference(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .actions(self => ({\n      setTarget(newTarget) {\n        self.target = newTarget\n      },\n    }))\n","import { observer } from 'mobx-react'\nimport { isStateTreeNode, getType } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema('ConfigurationEditorWidget', {})\nexport const HeadingComponent = observer(({ model }) => {\n  if (model && model.target) {\n    if (model.target.type) {\n      return `${model.target.type} settings`\n    }\n    if (isStateTreeNode(model.target)) {\n      const type = getType(model.target)\n      if (type && type.name) {\n        return `${type.name.replace('ConfigurationSchema', '')} settings`\n      }\n    }\n  }\n  return 'Settings'\n})\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { configSchema as FromConfigAdapterConfigSchema } from './configSchema'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\n\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n  protected features: Map<string, Feature[]>\n\n  constructor(\n    config: ConfigurationModel<typeof FromConfigAdapterConfigSchema>,\n  ) {\n    super(config)\n    const features = readConfObject(\n      config,\n      'features',\n    ) as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(features || [])\n  }\n\n  static makeFeatures(fdata: SimpleFeatureSerialized[]) {\n    const features = new Map<string, Feature[]>()\n    for (let i = 0; i < fdata.length; i += 1) {\n      if (fdata[i]) {\n        const f = this.makeFeature(fdata[i])\n        const refName = f.get('refName') as string\n        let bucket = features.get(refName)\n        if (!bucket) {\n          bucket = []\n          features.set(refName, bucket)\n        }\n\n        bucket.push(f)\n      }\n    }\n\n    // sort the features on each reference sequence by start coordinate\n    for (const refFeatures of features.values()) {\n      refFeatures.sort((a, b) => a.get('start') - b.get('start'))\n    }\n\n    return features\n  }\n\n  static makeFeature(data: SimpleFeatureSerialized): SimpleFeature {\n    return new SimpleFeature(data)\n  }\n\n  async getRefNames() {\n    const refNames: Set<string> = new Set()\n    for (const [refName, features] of this.features) {\n      // add the feature's primary refname\n      refNames.add(refName)\n\n      // also look in the features for mate or breakend specifications, and add\n      // the refName targets of those\n      features.forEach(feature => {\n        // get refNames of generic \"mate\" records\n        const mate = feature.get('mate')\n        if (mate && mate.refName) {\n          refNames.add(mate.refName)\n        }\n        // get refNames of VCF BND and TRA records\n        const svType = ((feature.get('INFO') || {}).SVTYPE || [])[0]\n        if (svType === 'BND') {\n          const breakendSpecification = (feature.get('ALT') || [])[0]\n          const matePosition = breakendSpecification.MatePosition.split(':')\n          refNames.add(matePosition[0])\n        } else if (svType === 'TRA') {\n          const chr2 = ((feature.get('INFO') || {}).CHR2 || [])[0]\n          refNames.add(chr2)\n        }\n      })\n    }\n    return Array.from(refNames)\n  }\n\n  async getRefNameAliases() {\n    return Array.from(this.features.values()).map(featureArray => ({\n      refName: featureArray[0].get('refName'),\n      aliases: featureArray[0].get('aliases'),\n    }))\n  }\n\n  getFeatures(region: NoAssemblyRegion) {\n    const { refName, start, end } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      const features = this.features.get(refName) || []\n      for (let i = 0; i < features.length; i += 1) {\n        const f = features[i]\n        if (f.get('end') > start && f.get('start') < end) {\n          observer.next(f)\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import {\n  BaseAdapter,\n  RegionsAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { configSchema as FromConfigAdapterConfigSchema } from './configSchema'\nimport FromConfigAdapter from './FromConfigAdapter'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\nexport default class FromConfigRegionsAdapter\n  extends BaseAdapter\n  implements RegionsAdapter {\n  private features: Map<string, Feature[]>\n\n  constructor(\n    config: ConfigurationModel<typeof FromConfigAdapterConfigSchema>,\n  ) {\n    super(config)\n    const features = readConfObject(\n      config,\n      'features',\n    ) as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(features || [])\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    // sort the regions by refName\n    regions.sort((a, b) => a.refName.localeCompare(b.refName))\n\n    return regions\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { toArray } from 'rxjs/operators'\nimport FromConfigAdapter from './FromConfigAdapter'\n\nexport default class FromSequenceConfigAdapter extends FromConfigAdapter {\n  /**\n   * Fetch features for a certain region\n   * @param region - Region\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: NoAssemblyRegion) {\n    // TODO: restore commented version below once TSDX supports Rollup v2\n    // xref: https://github.com/rollup/rollup/blob/master/CHANGELOG.md#bug-fixes-45\n    // return ObservableCreate<Feature>(async observer => {\n    //   const feats = await super.getFeatures(region).pipe(toArray()).toPromise()\n    const superGetFeatures = super.getFeatures\n    return ObservableCreate<Feature>(async observer => {\n      const feats = await superGetFeatures\n        .call(this, region)\n        .pipe(toArray())\n        .toPromise()\n      const feat = feats[0]\n      observer.next(\n        new SimpleFeature({\n          ...feat.toJSON(),\n          uniqueId: `${feat.id()}:${region.start}-${region.end}`,\n          end: region.end,\n          start: region.start,\n          seq: feat\n            .get('seq')\n            .slice(\n              Math.max(region.start - feat.get('start'), 0),\n              Math.max(region.end - feat.get('start'), 0),\n            ),\n        }),\n      )\n\n      observer.complete()\n    })\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    // sort the regions by refName\n    regions.sort((a, b) => a.refName.localeCompare(b.refName))\n\n    return regions\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the forseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const configSchema = ConfigurationSchema(\n  'FromConfigAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport const regionsConfigSchema = ConfigurationSchema(\n  'FromConfigRegionsAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport const sequenceConfigSchema = ConfigurationSchema(\n  'FromConfigSequenceAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n","import {\n  BaseRefNameAliasAdapter,\n  Alias,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { GenericFilehandle } from 'generic-filehandle'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport MyConfigAdapterSchema from './configSchema'\n\nexport default class RefNameAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter {\n  private location: GenericFilehandle\n\n  private promise: Promise<Alias[]>\n\n  constructor(config: ConfigurationModel<typeof MyConfigAdapterSchema>) {\n    super(config)\n    this.location = openLocation(readConfObject(config, 'location'))\n    this.promise = this.downloadResults()\n  }\n\n  private async downloadResults() {\n    const results = (await this.location.readFile('utf8')) as string\n    return results\n      .trim()\n      .split('\\n')\n      .map((row: string) => {\n        const [refName, ...aliases] = row.split('\\t')\n        return { refName, aliases }\n      })\n  }\n\n  getRefNameAliases() {\n    return this.promise\n  }\n\n  async freeResources() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'RefNameAliasAdapter',\n  {\n    location: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my/aliases.txt' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { useDebounce } from '@jbrowse/core/util'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { observer, PropTypes } from 'mobx-react'\nimport React, { useEffect, useState } from 'react'\nimport Editor from 'react-simple-code-editor'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport json from 'react-syntax-highlighter/dist/cjs/languages/hljs/json'\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark'\nimport a11yLight from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-light'\n\nSyntaxHighlighter.registerLanguage('json', json)\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n// Optimize by using system default fonts: https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles({\n  callbackEditor: {\n    fontFamily,\n    fontSize,\n    overflowX: 'auto',\n    marginTop: '16px',\n    borderBottom: '1px solid rgba(0,0,0,0.42)',\n  },\n  syntaxHighlighter: {\n    margin: 0,\n    fontFamily,\n    fontSize,\n  },\n  error: {\n    color: 'red',\n    fontSize: '0.8em',\n  },\n})\n\nfunction JsonEditor({ slot }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [contents, setContents] = useState(\n    JSON.stringify(slot.value, null, '  '),\n  )\n  const [error, setError] = useState()\n  const debouncedJson = useDebounce(contents, 400)\n\n  useEffect(() => {\n    try {\n      slot.set(JSON.parse(debouncedJson))\n      setError(undefined)\n    } catch (e) {\n      setError(e.message)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedJson])\n\n  return (\n    <>\n      {error ? <p className={classes.error}>{error}</p> : null}\n      <FormControl error={error}>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={contents}\n          onValueChange={setContents}\n          highlight={newCode => (\n            <SyntaxHighlighter\n              language=\"json\"\n              style={theme.palette.type === 'dark' ? a11yDark : a11yLight}\n              className={classes.syntaxHighlighter}\n              // override some inline style stuff that's higher specificity\n              // than className\n              customStyle={{ background: 'none', padding: 0 }}\n            >\n              {newCode}\n            </SyntaxHighlighter>\n          )}\n          padding={10}\n          style={{}}\n        />\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n    </>\n  )\n}\n\nJsonEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\n\nexport default observer(JsonEditor)\n","import { lazy } from 'react'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as ConfigurationEditorConfigSchema,\n  HeadingComponent as ConfigurationEditorHeadingComponent,\n  stateModelFactory as ConfigurationEditorStateModelFactory,\n} from './ConfigurationEditorWidget'\nimport {\n  AdapterClass as FromConfigAdapterClass,\n  RegionsAdapterClass as FromConfigRegionsAdapterClass,\n  SequenceAdapterClass as FromConfigSequenceAdapterClass,\n  configSchema as fromConfigAdapterConfigSchema,\n  regionsConfigSchema as fromConfigRegionsAdapterConfigSchema,\n  sequenceConfigSchema as fromConfigSequenceAdapterConfigSchema,\n} from './FromConfigAdapter'\nimport {\n  AdapterClass as RefNameAliasAdapterClass,\n  configSchema as refNameAliasAdapterConfigSchema,\n} from './RefNameAliasAdapter'\n\nconst ConfigurationEditorComponent = lazy(\n  () => import('./ConfigurationEditorWidget/components/ConfigurationEditor'),\n)\n\nexport default class extends Plugin {\n  name = 'ConfigurationPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigAdapter',\n          configSchema: fromConfigAdapterConfigSchema,\n          AdapterClass: FromConfigAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigRegionsAdapter',\n          configSchema: fromConfigRegionsAdapterConfigSchema,\n          AdapterClass: FromConfigRegionsAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigSequenceAdapter',\n          configSchema: fromConfigSequenceAdapterConfigSchema,\n          AdapterClass: FromConfigSequenceAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'RefNameAliasAdapter',\n          configSchema: refNameAliasAdapterConfigSchema,\n          AdapterClass: RefNameAliasAdapterClass,\n        }),\n    )\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'ConfigurationEditorWidget',\n        HeadingComponent: ConfigurationEditorHeadingComponent,\n        configSchema: ConfigurationEditorConfigSchema,\n        stateModel: ConfigurationEditorStateModelFactory(pluginManager),\n        ReactComponent: ConfigurationEditorComponent,\n      })\n    })\n  }\n}\n\nexport { default as JsonEditor } from './ConfigurationEditorWidget/components/JsonEditor'\n\nexport { ConfigurationEditorComponent as ConfigurationEditor }\n","import React, { useEffect, useState } from 'react'\nimport { useDebounce } from '@jbrowse/core/util'\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { getEnv } from 'mobx-state-tree'\nimport { observer, PropTypes } from 'mobx-react'\nimport Editor from 'react-simple-code-editor'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    marginTop: '16px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    fontFamily,\n    fontSize,\n  },\n}))\n\nfunction CallbackEditor({ slot }) {\n  const classes = useStyles()\n\n  const [code, setCode] = useState(slot.value)\n  const [error, setCodeError] = useState()\n  const debouncedCode = useDebounce(code, 400)\n\n  useEffect(() => {\n    try {\n      const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n        ? debouncedCode\n        : `jexl:${debouncedCode}`\n      stringToJexlExpression(\n        jexlDebouncedCode,\n        getEnv(slot).pluginManager?.jexl,\n      )\n      slot.set(jexlDebouncedCode) // slot.set `jexl:${debouncedCode}`\n      setCodeError(null)\n    } catch (e) {\n      setCodeError(e)\n    }\n  }, [debouncedCode, slot])\n\n  // if default value is a callback, will have to remove jexl:\n  // do this last\n  return (\n    <>\n      <FormControl>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={code.startsWith('jexl:') ? code.split('jexl:')[1] : code}\n          onValueChange={newCode => {\n            setCode(newCode)\n          }}\n          highlight={newCode => newCode}\n          padding={10}\n          style={{ background: error ? '#fdd' : undefined }}\n        />\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n      <Tooltip\n        title={\n          <div>\n            Callbacks are written in Jexl format. Click to learn more.\n            <br /> Names of available context items: {slot.contextVariable}\n          </div>\n        }\n        arrow\n      >\n        <IconButton\n          color=\"primary\"\n          onClick={() => {\n            const newWindow = window.open(\n              'https://github.com/TomFrost/Jexl',\n              '_blank',\n              'noopener,noreferrer',\n            )\n            if (newWindow) {\n              newWindow.opener = null\n            }\n          }}\n        >\n          <HelpIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\nCallbackEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\nexport default observer(CallbackEditor)\n","import { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ChromePicker, Color, ColorResult, RGBColor } from 'react-color'\nimport React, { useState } from 'react'\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return `rgb(${r},${g},${b},${a})`\n  }\n  return color\n}\nconst useStyles = makeStyles({\n  popover: {\n    position: 'absolute',\n    zIndex: 2,\n  },\n  cover: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n})\n\nexport function ColorPicker(props: {\n  color: Color\n  onChange: (color: ColorResult) => void\n}) {\n  const { color, onChange } = props\n  const classes = useStyles()\n  const [displayColorPicker, setDisplayColorPicker] = useState(true)\n\n  const handleClose = () => {\n    setDisplayColorPicker(false)\n  }\n  return (\n    <div>\n      {displayColorPicker ? (\n        <div className={classes.popover}>\n          <div\n            role=\"presentation\"\n            className={classes.cover}\n            onClick={handleClose}\n          />\n          <ChromePicker color={color} onChange={onChange} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nColorPicker.propTypes = {\n  color: ReactPropTypes.string.isRequired,\n  onChange: ReactPropTypes.func.isRequired,\n}\n\nexport const ColorSlot = (props: {\n  value: string\n  label: string\n  TextFieldProps: {\n    helperText: string\n    fullWidth: boolean\n  }\n  onChange: (arg: string) => void\n}) => {\n  const { value, label, TextFieldProps, onChange } = props\n  const [displayed, setDisplayed] = useState(false)\n\n  return (\n    <>\n      <TextField\n        value={value}\n        label={label}\n        InputProps={{\n          style: {\n            color: value,\n            borderRightWidth: '25px',\n            borderRightStyle: 'solid',\n            borderRightColor: value,\n          },\n        }}\n        onClick={() => setDisplayed(!displayed)}\n        onChange={event => {\n          onChange(event.target.value)\n        }}\n        {...TextFieldProps}\n      />\n      {displayed ? (\n        <ColorPicker\n          color={value}\n          onChange={(event: ColorResult) => {\n            onChange(serializeColor(event.rgb))\n          }}\n        />\n      ) : null}\n    </>\n  )\n}\nColorSlot.propTypes = {\n  onChange: ReactPropTypes.func.isRequired,\n  label: ReactPropTypes.string,\n  TextFieldProps: ReactPropTypes.shape({}),\n  value: ReactPropTypes.string,\n}\nColorSlot.defaultProps = {\n  label: '',\n  value: '#000',\n  TextFieldProps: {},\n}\n\nfunction ColorEditorSlot(props: {\n  slot: {\n    name: string\n    value: string\n    description: string\n    set: (arg: string) => void\n  }\n}) {\n  const { slot } = props\n  return (\n    <ColorSlot\n      label={slot.name}\n      value={slot.value}\n      onChange={(color: string) => {\n        slot.set(color)\n      }}\n      TextFieldProps={{\n        helperText: slot.description,\n        fullWidth: true,\n      }}\n    />\n  )\n}\nColorEditorSlot.propTypes = {\n  slot: ReactPropTypes.shape({\n    name: ReactPropTypes.string.isRequired,\n    description: ReactPropTypes.string,\n    value: ReactPropTypes.string.isRequired,\n    set: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\nexport default observer(ColorEditorSlot)\n","import { FileSelector } from '@jbrowse/core/ui'\nimport {\n  getPropertyType,\n  getSubType,\n  getUnionSubTypes,\n} from '@jbrowse/core/util/mst-reflection'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport { observer } from 'mobx-react'\nimport { getPropertyMembers } from 'mobx-state-tree'\nimport React, { useEffect, useState } from 'react'\nimport CallbackEditor from './CallbackEditor'\nimport ColorEditor from './ColorEditor'\nimport JsonEditor from './JsonEditor'\n\nconst StringEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    // error={filterError}\n    helperText={slot.description}\n    fullWidth\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\nconst TextEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    helperText={slot.description}\n    fullWidth\n    multiline\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (\n  <SvgIcon>\n    <path d=\"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" />\n  </SvgIcon>\n)\n\nconst StringArrayEditor = observer(({ slot }) => {\n  const [value, setValue] = useState('')\n  return (\n    <>\n      {slot.name ? <InputLabel>{slot.name}</InputLabel> : null}\n      <List disablePadding>\n        {slot.value.map((val, idx) => (\n          <ListItem key={idx} disableGutters>\n            <TextField\n              value={val}\n              onChange={evt => slot.setAtIndex(idx, evt.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={() => slot.removeAtIndex(idx)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </ListItem>\n        ))}\n        <ListItem disableGutters>\n          <TextField\n            value={value}\n            placeholder=\"add new\"\n            onChange={event => setValue(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton\n                    onClick={() => {\n                      slot.add(value)\n                      setValue('')\n                    }}\n                    disabled={value === ''}\n                    color=\"secondary\"\n                    data-testid={`stringArrayAdd-${slot.name}`}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </ListItem>\n      </List>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst useMapEditorStyles = makeStyles(theme => ({\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst StringArrayMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <StringArrayEditor\n              slot={{\n                value: val,\n                description: `Values associated with entry ${key}`,\n                setAtIndex: (idx, strValue) => {\n                  slot.setAtKeyIndex(key, idx, strValue)\n                },\n                removeAtIndex: idx => {\n                  slot.removeAtKeyIndex(key, idx)\n                },\n                add: strValue => {\n                  slot.addToKey(key, strValue)\n                },\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, [])\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <NumberEditor\n              slot={{\n                value: val,\n                set: numValue => slot.add(key, numValue),\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, 0)\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseFloat(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    } else {\n      slot.reset()\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst IntegerEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst booleanEditor = observer(({ slot }) => (\n  <FormControl>\n    <FormControlLabel\n      label={slot.name}\n      control={\n        <Checkbox\n          checked={slot.value}\n          onChange={evt => slot.set(evt.target.checked)}\n        />\n      }\n    />\n    <FormHelperText>{slot.description}</FormHelperText>\n  </FormControl>\n))\n\nconst stringEnumEditor = observer(({ slot, slotSchema }) => {\n  const p = getPropertyMembers(getSubType(slotSchema))\n  const choices = getUnionSubTypes(\n    getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1],\n  ).map(t => t.value)\n\n  return (\n    <TextField\n      value={slot.value}\n      label={slot.name}\n      select\n      // error={filterError}\n      helperText={slot.description}\n      fullWidth\n      onChange={evt => slot.set(evt.target.value)}\n    >\n      {choices.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst FileSelectorWrapper = observer(({ slot }) => {\n  return (\n    <FileSelector\n      location={slot.value}\n      setLocation={location => slot.set(location)}\n      name={slot.name}\n      description={slot.description}\n    />\n  )\n})\n\nconst valueComponents = {\n  string: StringEditor,\n  text: TextEditor,\n  fileLocation: FileSelectorWrapper,\n  stringArray: StringArrayEditor,\n  stringArrayMap: StringArrayMapEditor,\n  numberMap: NumberMapEditor,\n  number: NumberEditor,\n  integer: IntegerEditor,\n  color: ColorEditor,\n  stringEnum: stringEnumEditor,\n  boolean: booleanEditor,\n  frozen: JsonEditor,\n  configRelationships: JsonEditor,\n}\n\nexport const useSlotEditorStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    position: 'relative',\n    overflow: 'visible',\n  },\n  paperContent: {\n    flex: 'auto',\n    padding: theme.spacing(1),\n    overflow: 'auto',\n  },\n  slotModeSwitch: {\n    width: 24,\n    background: theme.palette.secondary.light,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nconst SlotEditor = observer(({ slot, slotSchema }) => {\n  const classes = useSlotEditorStyles()\n  const { type } = slot\n  let ValueComponent = slot.isCallback ? CallbackEditor : valueComponents[type]\n  if (!ValueComponent) {\n    console.warn(`no slot editor defined for ${type}, editing as string`)\n    ValueComponent = StringEditor\n  }\n  if (!(type in valueComponents)) {\n    console.warn(`SlotEditor needs to implement ${type}`)\n  }\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.paperContent}>\n        <ValueComponent slot={slot} slotSchema={slotSchema} />\n      </div>\n      <div className={classes.slotModeSwitch}>\n        {slot.contextVariable.length ? (\n          <IconButton\n            className={classes.slotModeIcon}\n            onClick={() =>\n              slot.isCallback ? slot.convertToValue() : slot.convertToCallback()\n            }\n            title={`convert to ${\n              slot.isCallback ? 'regular value' : 'callback'\n            }`}\n            color=\"secondary\"\n          >\n            {!slot.isCallback ? <RadioButtonUncheckedIcon /> : <SvgCheckbox />}\n          </IconButton>\n        ) : null}\n      </div>\n    </Paper>\n  )\n})\n\nexport default SlotEditor\n","import MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { useSlotEditorStyles } from './SlotEditor'\n\nconst TypeSelector = observer(\n  ({ typeNameChoices, slot, slotName, onChange }) => {\n    const classes = useSlotEditorStyles()\n    return (\n      <Paper className={classes.paper}>\n        <div className={classes.paperContent}>\n          <TextField\n            value={slot.type}\n            label=\"Type\"\n            select\n            // error={filterError}\n            helperText={`Type of ${slotName} to use`}\n            fullWidth\n            onChange={onChange}\n          >\n            {typeNameChoices.map(str => (\n              <MenuItem key={str} value={str}>\n                {str}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n      </Paper>\n    )\n  },\n)\n\nexport default TypeSelector\n","import {\n  readConfObject,\n  getTypeNamesFromExplicitlyTypedUnion,\n  isConfigurationSchemaType,\n  isConfigurationSlotType,\n} from '@jbrowse/core/configuration'\n\nimport { iterMap } from '@jbrowse/core/util'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { getMembers } from 'mobx-state-tree'\nimport { singular } from 'pluralize'\nimport React from 'react'\nimport SlotEditor from './SlotEditor'\nimport TypeSelector from './TypeSelector'\n\nconst useStyles = makeStyles(theme => ({\n  subSchemaContainer: {\n    marginLeft: theme.spacing(1),\n    borderLeft: `1px solid ${theme.palette.secondary.main}`,\n    paddingLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(1, 3, 1, 1),\n    background: theme.palette.background.default,\n    overflowX: 'hidden',\n  },\n}))\n\nconst Member = observer(props => {\n  const classes = useStyles()\n  const { slotName, slotSchema, schema, slot = schema[slotName] } = props\n  let typeSelector\n  if (isConfigurationSchemaType(slotSchema)) {\n    if (slot.length) {\n      return (\n        <>\n          {slot.map((subslot, slotIndex) => {\n            const key = `${singular(slotName)} ${slotIndex + 1}`\n            return <Member {...props} key={key} slot={subslot} slotName={key} />\n          })}\n        </>\n      )\n    }\n    // if this is an explicitly typed schema, make a type-selecting dropdown\n    // that can be used to change its type\n    const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema)\n    if (typeNameChoices.length) {\n      typeSelector = (\n        <TypeSelector\n          typeNameChoices={typeNameChoices}\n          slotName={slotName}\n          slot={slot}\n          onChange={evt => {\n            if (evt.target.value !== slot.type) {\n              schema.setSubschema(slotName, { type: evt.target.value })\n            }\n          }}\n        />\n      )\n    }\n    return (\n      <>\n        <FormLabel>{slotName}</FormLabel>\n        <div className={classes.subSchemaContainer}>\n          {typeSelector}\n          <FormGroup>\n            <Schema schema={slot} />\n          </FormGroup>\n        </div>\n      </>\n    )\n  }\n\n  if (isConfigurationSlotType(slotSchema)) {\n    // this is a regular config slot\n    return <SlotEditor key={slotName} slot={slot} slotSchema={slotSchema} />\n  }\n\n  return null\n})\n\nconst Schema = observer(({ schema }) => {\n  return iterMap(\n    Object.entries(getMembers(schema).properties),\n    ([slotName, slotSchema]) => (\n      <Member key={slotName} {...{ slotName, slotSchema, schema }} />\n    ),\n  )\n})\n\nconst ConfigurationEditor = observer(({ model }) => {\n  const classes = useStyles()\n  // key forces a re-render, otherwise the same field can end up being used\n  // for different tracks since only the backing model changes for example\n  // see pr #804\n  const key = model.target && readConfObject(model.target, 'trackId')\n  return (\n    <div className={classes.root} key={key} data-testid=\"configEditor\">\n      {!model.target ? 'no target set' : <Schema schema={model.target} />}\n    </div>\n  )\n})\n\nexport default ConfigurationEditor\n"],"names":["pluginManager","types","model","id","ElementId","type","literal","target","safeReference","pluggableConfigSchemaType","actions","self","setTarget","newTarget","configSchema","ConfigurationSchema","HeadingComponent","observer","isStateTreeNode","getType","name","replace","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","FromConfigAdapter","BaseFeatureDataAdapter","config","features","readConfObject","makeFeatures","refNames","Set","add","feature","mate","get","refName","svType","SVTYPE","matePosition","MatePosition","split","chr2","CHR2","Array","from","map","featureArray","aliases","region","start","end","ObservableCreate","_this2","f","fdata","Map","makeFeature","bucket","set","sort","a","b","data","SimpleFeature","FromConfigRegionsAdapter","BaseAdapter","regions","currentRegion","localeCompare","FromSequenceConfigAdapter","superGetFeatures","_this","pipe","toArray","toPromise","feat","toJSON","uniqueId","seq","Math","max","defaultValue","featureClass","explicitlyTyped","implicitIdentifier","regionsConfigSchema","sequenceConfigSchema","RefNameAliasAdapter","location","openLocation","promise","downloadResults","readFile","trim","row","uri","registerLanguage","json","fontFamily","useStyles","makeStyles","callbackEditor","fontSize","overflowX","marginTop","borderBottom","syntaxHighlighter","margin","color","JsonEditor","slot","classes","theme","useTheme","useState","JSON","stringify","contents","setContents","setError","debouncedJson","useDebounce","useEffect","parse","e","message","React","className","FormControl","InputLabel","shrink","htmlFor","Editor","onValueChange","highlight","newCode","SyntaxHighlighter","language","style","palette","a11yDark","a11yLight","customStyle","background","padding","FormHelperText","description","propTypes","PropTypes","objectOrObservableObject","isRequired","ConfigurationEditorComponent","lazy","Plugin","addAdapterType","AdapterType","fromConfigAdapterConfigSchema","AdapterClass","FromConfigAdapterClass","fromConfigRegionsAdapterConfigSchema","FromConfigRegionsAdapterClass","fromConfigSequenceAdapterConfigSchema","FromConfigSequenceAdapterClass","refNameAliasAdapterConfigSchema","RefNameAliasAdapterClass","addWidgetType","WidgetType","ConfigurationEditorHeadingComponent","ConfigurationEditorConfigSchema","stateModel","ConfigurationEditorStateModelFactory","ReactComponent","divider","CallbackEditor","code","setCode","setCodeError","debouncedCode","jexlDebouncedCode","startsWith","stringToJexlExpression","getEnv","_getEnv$pluginManager","jexl","Tooltip","title","contextVariable","arrow","IconButton","onClick","newWindow","window","open","opener","HelpIcon","popover","position","zIndex","cover","top","right","bottom","left","ColorPicker","props","onChange","setDisplayColorPicker","role","ChromePicker","ReactPropTypes","string","func","ColorSlot","label","TextFieldProps","displayed","setDisplayed","TextField","InputProps","borderRightWidth","borderRightStyle","borderRightColor","event","g","r","serializeColor","rgb","ColorEditorSlot","helperText","fullWidth","shape","defaultProps","StringEditor","evt","TextEditor","multiline","SvgCheckbox","SvgIcon","d","StringArrayEditor","setValue","List","disablePadding","val","idx","ListItem","disableGutters","setAtIndex","endAdornment","InputAdornment","removeAtIndex","DeleteIcon","placeholder","disabled","AddIcon","useMapEditorStyles","card","spacing","StringArrayMapEditor","Card","raised","CardHeader","action","remove","CardContent","strValue","setAtKeyIndex","removeAtKeyIndex","addToKey","disableTypography","NumberMapEditor","NumberEditor","numValue","setVal","num","parseFloat","Number","IntegerEditor","parseInt","booleanEditor","FormControlLabel","control","Checkbox","checked","stringEnumEditor","p","getPropertyMembers","getSubType","slotSchema","choices","getUnionSubTypes","getPropertyType","t","select","str","MenuItem","valueComponents","text","fileLocation","FileSelector","setLocation","stringArray","stringArrayMap","numberMap","number","integer","ColorEditor","stringEnum","frozen","configRelationships","useSlotEditorStyles","paper","display","marginBottom","overflow","paperContent","flex","slotModeSwitch","width","secondary","light","justifyContent","alignItems","SlotEditor","ValueComponent","isCallback","console","warn","Paper","slotModeIcon","convertToValue","convertToCallback","RadioButtonUncheckedIcon","TypeSelector","typeNameChoices","slotName","subSchemaContainer","marginLeft","borderLeft","main","paddingLeft","root","Member","typeSelector","schema","isConfigurationSchemaType","subslot","slotIndex","singular","getTypeNamesFromExplicitlyTypedUnion","setSubschema","FormLabel","FormGroup","Schema","isConfigurationSlotType","iterMap","entries","getMembers","properties"],"mappings":"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"}