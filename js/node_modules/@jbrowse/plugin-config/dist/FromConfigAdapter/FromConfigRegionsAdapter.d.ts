import { BaseAdapter, RegionsAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';
import { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema';
import { configSchema as FromConfigAdapterConfigSchema } from './configSchema';
/**
 * Adapter that just returns the features defined in its `features` configuration
 * key, like:
 *   `"features": [ { "refName": "ctgA", "start":1, "end":20 }, ... ]`
 */
export default class FromConfigRegionsAdapter extends BaseAdapter implements RegionsAdapter {
    private features;
    constructor(config: ConfigurationModel<typeof FromConfigAdapterConfigSchema>);
    /**
     * Get refName, start, and end for all features after collapsing any overlaps
     */
    getRegions(): Promise<{
        refName: string;
        start: any;
        end: any;
    }[]>;
    freeResources(): void;
}
