{"version":3,"file":"plugin-linear-genome-view.cjs.production.min.js","sources":["../src/BaseLinearDisplay/models/baseLinearDisplayConfigSchema.ts","../../../node_modules/regenerator-runtime/runtime.js","../src/BaseLinearDisplay/components/Block.tsx","../src/BaseLinearDisplay/components/LinearBlocks.tsx","../src/BaseLinearDisplay/components/BaseLinearDisplay.tsx","../src/BaseLinearDisplay/components/ServerSideRenderedBlockContent.tsx","../src/BaseLinearDisplay/models/serverSideRenderedBlock.ts","../src/BaseLinearDisplay/models/BaseLinearDisplayModel.tsx","../src/LinearBareDisplay/configSchema.ts","../src/LinearBareDisplay/model.ts","../src/LinearGenomeView/components/RefNameAutocomplete.tsx","../src/LinearGenomeView/util.ts","../src/LinearGenomeView/components/OverviewRubberBand.tsx","../src/LinearGenomeView/components/OverviewScaleBar.tsx","../src/LinearGenomeView/components/ZoomControls.tsx","../src/LinearGenomeView/components/Header.tsx","../src/LinearGenomeView/components/TrackLabel.tsx","../src/LinearGenomeView/components/TrackContainer.tsx","../src/LinearGenomeView/components/RubberBand.tsx","../src/LinearGenomeView/components/ScaleBar.tsx","../src/LinearGenomeView/components/VerticalGuides.tsx","../src/LinearGenomeView/components/CenterLine.tsx","../src/LinearGenomeView/components/TracksContainer.tsx","../src/LinearGenomeView/components/SearchResultsDialog.tsx","../src/LinearGenomeView/components/ImportForm.tsx","../src/LinearGenomeView/components/MiniControls.tsx","../src/LinearGenomeView/components/SequenceDialog.tsx","../src/LinearGenomeView/components/Ruler.tsx","../src/LinearGenomeView/components/LinearGenomeView.tsx","../src/LinearGenomeView/components/ExportSvgDialog.tsx","../src/LinearGenomeView/components/ReturnToImportFormDialog.tsx","../src/LinearGenomeView/index.tsx","../src/LinearBasicDisplay/model.ts","../src/LinearBasicDisplay/configSchema.ts","../src/index.ts","../src/LinearBasicDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const baseLinearDisplayConfigSchema = ConfigurationSchema(\n  'BaseLinearDisplay',\n  {\n    maxDisplayedBpPerPx: {\n      type: 'number',\n      description: 'maximum bpPerPx that is displayed in the view',\n      defaultValue: Number.MAX_VALUE,\n    },\n  },\n  { explicitIdentifier: 'displayId' },\n)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  contentBlock: {\n    position: 'relative',\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  elidedBlock: {\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    backgroundColor: '#999',\n    backgroundImage:\n      'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n  },\n  interRegionPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.text.primary,\n  },\n  boundaryPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.action.disabledBackground,\n  },\n}))\n\ninterface ContentBlockProps {\n  block: BaseBlock\n  children: React.ReactNode\n}\n\ninterface ElidedBlockProps {\n  width: number\n}\n\ninterface InterRegionPaddingBlockProps {\n  boundary: boolean\n  width: number\n  style?: React.CSSProperties\n}\n\nconst ContentBlock = observer(({ block, children }: ContentBlockProps) => {\n  const classes = useStyles()\n  return (\n    <div\n      style={{\n        width: `${block.widthPx}px`,\n      }}\n      className={classes.contentBlock}\n    >\n      {children}\n    </div>\n  )\n})\n\nfunction ElidedBlock({ width }: ElidedBlockProps) {\n  const classes = useStyles()\n  return <div className={classes.elidedBlock} style={{ width: `${width}px` }} />\n}\n\nfunction InterRegionPaddingBlock({\n  boundary,\n  width,\n  style = {},\n}: InterRegionPaddingBlockProps) {\n  const classes = useStyles()\n  return (\n    <div\n      style={{\n        ...style,\n        width: `${width}px`,\n      }}\n      className={\n        boundary\n          ? classes.boundaryPaddingBlock\n          : classes.interRegionPaddingBlock\n      }\n    />\n  )\n}\n\nexport { ContentBlock, ElidedBlock, InterRegionPaddingBlock }\n","import { makeStyles } from '@material-ui/core/styles'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observer, PropTypes } from 'mobx-react'\nimport React from 'react'\nimport {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from './Block'\n\nconst useStyles = makeStyles({\n  linearBlocks: {\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    position: 'absolute',\n    minHeight: '100%',\n    display: 'flex',\n  },\n  heightOverflowed: {\n    position: 'absolute',\n    color: 'rgb(77,77,77)',\n    borderBottom: '2px solid rgb(77,77,77)',\n    textShadow: 'white 0px 0px 1px',\n    whiteSpace: 'nowrap',\n    width: '100%',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    zIndex: 2000,\n    boxSizing: 'border-box',\n  },\n})\nconst RenderedBlocks = observer(\n  ({ model }: { model: BaseLinearDisplayModel }) => {\n    const classes = useStyles()\n    const { blockDefinitions, blockState } = model\n    return (\n      <>\n        {blockDefinitions.map(block => {\n          if (block instanceof ContentBlock) {\n            const state = blockState.get(block.key)\n\n            return (\n              <ContentBlockComponent\n                block={block}\n                key={`${model.id}-${block.key}`}\n              >\n                {state && state.ReactComponent ? (\n                  <state.ReactComponent model={state} />\n                ) : null}\n                {state && state.maxHeightReached ? (\n                  <div\n                    className={classes.heightOverflowed}\n                    style={{\n                      top: state.layout.getTotalHeight() - 16,\n                      pointerEvents: 'none',\n                      height: 16,\n                    }}\n                  >\n                    Max height reached\n                  </div>\n                ) : null}\n              </ContentBlockComponent>\n            )\n          }\n          if (block instanceof ElidedBlock) {\n            return (\n              <ElidedBlockComponent\n                key={`${model.id}-${block.key}`}\n                width={block.widthPx}\n              />\n            )\n          }\n          if (block instanceof InterRegionPaddingBlock) {\n            return (\n              <InterRegionPaddingBlockComponent\n                key={block.key}\n                width={block.widthPx}\n                style={{ background: 'none' }}\n                boundary={block.variant === 'boundary'}\n              />\n            )\n          }\n          throw new Error(`invalid block type ${typeof block}`)\n        })}\n      </>\n    )\n  },\n)\nfunction LinearBlocks({ model }: { model: BaseLinearDisplayModel }) {\n  const classes = useStyles()\n  const { blockDefinitions } = model\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const viewModel = getContainingView(model) as any\n  return (\n    <div\n      data-testid=\"Blockset\"\n      className={classes.linearBlocks}\n      style={{\n        left: blockDefinitions.offsetPx - viewModel.offsetPx,\n      }}\n    >\n      <RenderedBlocks model={model} />\n    </div>\n  )\n}\n\nLinearBlocks.propTypes = {\n  model: PropTypes.observableObject.isRequired,\n}\n\nexport { RenderedBlocks, useStyles }\nexport default observer(LinearBlocks)\n","import { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport React, { useState, useRef } from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport LinearBlocks from './LinearBlocks'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nconst useStyles = makeStyles({\n  display: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    width: '100%',\n    minHeight: '100%',\n  },\n})\nconst Tooltip = observer(\n  (props: { model: BaseLinearDisplayModel; mouseCoord: [number, number] }) => {\n    const { model, mouseCoord } = props\n    const { featureUnderMouse } = model\n    const mouseover = featureUnderMouse\n      ? getConf(model, 'mouseover', { feature: featureUnderMouse })\n      : undefined\n    return mouseover ? (\n      <MUITooltip title={mouseover} open placement=\"right\">\n        <div\n          style={{\n            position: 'absolute',\n            left: mouseCoord[0],\n            top: mouseCoord[1],\n          }}\n        >\n          {' '}\n        </div>\n      </MUITooltip>\n    ) : null\n  },\n)\n\ntype Coord = [number, number]\nconst BaseLinearDisplay = observer(\n  (props: { model: BaseLinearDisplayModel; children?: React.ReactNode }) => {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const [mouseCoord, setMouseCoord] = useState<Coord>([0, 0])\n    const [contextCoord, setContextCoord] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const { model, children } = props\n    const {\n      TooltipComponent,\n      DisplayMessageComponent,\n      contextMenuItems,\n      height,\n      setContextMenuFeature,\n    } = model\n\n    return (\n      <div\n        ref={ref}\n        data-testid={`display-${getConf(model, 'displayId')}`}\n        className={classes.display}\n        onContextMenu={event => {\n          event.preventDefault()\n          if (contextCoord) {\n            // There's already a context menu open, so close it\n            setContextCoord(undefined)\n          } else if (ref.current) {\n            setContextCoord([event.clientX, event.clientY])\n          }\n        }}\n        onMouseMove={event => {\n          if (ref.current) {\n            const rect = ref.current.getBoundingClientRect()\n            setMouseCoord([event.clientX - rect.left, event.clientY - rect.top])\n          }\n        }}\n        role=\"presentation\"\n      >\n        {DisplayMessageComponent ? (\n          <DisplayMessageComponent model={model} />\n        ) : (\n          <LinearBlocks {...props} />\n        )}\n        {children}\n        <TooltipComponent\n          model={model}\n          height={height}\n          mouseCoord={mouseCoord}\n        />\n\n        <Menu\n          open={Boolean(contextCoord) && Boolean(contextMenuItems.length)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setContextCoord(undefined)\n          }}\n          onClose={() => {\n            setContextCoord(undefined)\n            setContextMenuFeature(undefined)\n          }}\n          onExit={() => {\n            setContextCoord(undefined)\n            setContextMenuFeature(undefined)\n          }}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={\n            contextCoord\n              ? { top: contextCoord[1], left: contextCoord[0] }\n              : undefined\n          }\n          style={{ zIndex: theme.zIndex.tooltip }}\n          menuItems={contextMenuItems}\n          data-testid=\"base_linear_display_context_menu\"\n        />\n      </div>\n    )\n  },\n)\n\nexport default BaseLinearDisplay\nexport { Tooltip }\n","import React, { useEffect, useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport Button from '@material-ui/core/Button'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\nconst useStyles = makeStyles(theme => ({\n  loading: {\n    paddingLeft: '0.6em',\n    backgroundColor: theme.palette.action.disabledBackground,\n    backgroundImage:\n      'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n    height: '100%',\n    width: '100%',\n    pointerEvents: 'none',\n    textAlign: 'center',\n  },\n  blockMessage: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    padding: theme.spacing(2),\n    pointerEvents: 'none',\n    textAlign: 'center',\n  },\n  blockError: {\n    padding: theme.spacing(2),\n    width: '100%',\n    whiteSpace: 'normal',\n    color: theme.palette.error.main,\n    overflowY: 'auto',\n  },\n  blockReactNodeMessage: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  dots: {\n    '&::after': {\n      display: 'inline-block',\n      animation: '$ellipsis 1.5s infinite',\n      content: '\".\"',\n      width: '1em',\n      textAlign: 'left',\n    },\n  },\n  '@keyframes ellipsis': {\n    '0%': {\n      content: '\".\"',\n    },\n    '33%': {\n      content: '\"..\"',\n    },\n    '66%': {\n      content: '\"...\"',\n    },\n  },\n}))\n\nfunction Repeater({ children }: { children: React.ReactNode }) {\n  return (\n    <div style={{ display: 'flex' }}>\n      {children}\n      {children}\n    </div>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LoadingMessage = observer(({ model }: { model: any }) => {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const classes = useStyles()\n  useEffect(() => {\n    let killed = false\n    const timeout = setTimeout(() => {\n      if (!killed) {\n        setShown(true)\n      }\n    }, 300)\n    return () => {\n      clearTimeout(timeout)\n      killed = true\n    }\n  }, [])\n\n  const { status: blockStatus } = model\n  const { message: displayStatus } = getParent(model, 2)\n  const status = displayStatus || blockStatus\n  return (\n    <>\n      {shown ? (\n        <div className={classes.loading}>\n          <Typography className={classes.dots} variant=\"body2\">\n            {status ? `${status}` : 'Loading'}\n          </Typography>\n        </div>\n      ) : null}\n    </>\n  )\n})\n\nfunction BlockMessage({\n  messageContent,\n}: {\n  messageContent: string | React.ReactNode\n}) {\n  const classes = useStyles()\n\n  return React.isValidElement(messageContent) ? (\n    <div className={classes.blockReactNodeMessage}>{messageContent}</div>\n  ) : (\n    <Typography variant=\"body2\" className={classes.blockMessage}>\n      {messageContent}\n    </Typography>\n  )\n}\n\nfunction BlockError({\n  error,\n  reload,\n  displayHeight,\n}: {\n  error: Error\n  reload: () => void\n  displayHeight: number\n}) {\n  const classes = useStyles()\n  return (\n    <div className={classes.blockError} style={{ height: displayHeight }}>\n      {reload ? (\n        <Button\n          data-testid=\"reload_button\"\n          onClick={reload}\n          startIcon={<RefreshIcon />}\n        >\n          Reload\n        </Button>\n      ) : null}\n      <Typography color=\"error\" variant=\"body2\" display=\"inline\">\n        {`${error}`}\n      </Typography>\n    </div>\n  )\n}\n\nconst ServerSideRenderedBlockContent = observer(\n  ({\n    model,\n  }: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    model: any\n  }) => {\n    if (model.error) {\n      return (\n        <Repeater>\n          <BlockError\n            error={model.error}\n            reload={model.reload}\n            displayHeight={getParentRenderProps(model).displayModel.height}\n          />\n        </Repeater>\n      )\n    }\n    if (model.message) {\n      return (\n        <Repeater>\n          <BlockMessage messageContent={model.message} />\n        </Repeater>\n      )\n    }\n    if (!model.filled) {\n      return (\n        <Repeater>\n          <LoadingMessage model={model} />\n        </Repeater>\n      )\n    }\n    return model.reactElement\n  },\n)\n\nexport default ServerSideRenderedBlockContent\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types, getParent, isAlive, cast, Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport { AbstractDisplayModel } from '@jbrowse/core/util/types'\nimport React from 'react'\n\nimport {\n  assembleLocString,\n  makeAbortableReaction,\n  getSession,\n  getContainingDisplay,\n} from '@jbrowse/core/util'\nimport {\n  getTrackAssemblyNames,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\n\nimport ServerSideRenderedBlockContent from '../components/ServerSideRenderedBlockContent'\n\n// the MST state of a single server-side-rendered block in a display\nconst blockState = types\n  .model('BlockState', {\n    key: types.string,\n    region: Region,\n    isLeftEndOfDisplayedRegion: false,\n    isRightEndOfDisplayedRegion: false,\n  })\n  // NOTE: all this volatile stuff has to be filled in at once, so that it stays consistent\n  .volatile(() => ({\n    renderInProgress: undefined as AbortController | undefined,\n    filled: false,\n    reactElement: undefined as React.ReactElement | undefined,\n    features: undefined as Map<string, Feature> | undefined,\n    layout: undefined as any,\n    status: '',\n    error: undefined as Error | undefined,\n    message: undefined as string | undefined,\n    maxHeightReached: false,\n    ReactComponent: ServerSideRenderedBlockContent,\n    renderProps: undefined as any,\n  }))\n  .actions(self => {\n    let renderInProgress: undefined | AbortController\n    return {\n      afterAttach() {\n        const display = getContainingDisplay(self)\n        makeAbortableReaction(\n          self as any,\n          renderBlockData,\n          renderBlockEffect as any, // reaction doesn't expect async here\n          {\n            name: `${display.id}/${assembleLocString(self.region)} rendering`,\n            delay: display.renderDelay,\n            fireImmediately: true,\n          },\n          this.setLoading,\n          this.setRendered,\n          this.setError,\n        )\n      },\n      setStatus(message: string) {\n        self.status = message\n      },\n      setLoading(abortController: AbortController) {\n        if (renderInProgress !== undefined) {\n          if (!renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n        }\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = abortController\n      },\n      setMessage(messageText: string) {\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        self.filled = false\n        self.message = messageText\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = undefined\n      },\n      setRendered(\n        props:\n          | {\n              reactElement: React.ReactElement\n              features: Map<string, Feature>\n              layout: any\n              maxHeightReached: boolean\n              renderProps: any\n            }\n          | undefined,\n      ) {\n        if (!props) {\n          return\n        }\n        const {\n          reactElement,\n          features,\n          layout,\n          maxHeightReached,\n          renderProps,\n        } = props\n        self.filled = true\n        self.message = undefined\n        self.reactElement = reactElement\n        self.features = features\n        self.layout = layout\n        self.error = undefined\n        self.maxHeightReached = maxHeightReached\n        self.renderProps = renderProps\n        renderInProgress = undefined\n      },\n      setError(error: Error) {\n        console.error(error)\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        // the rendering failed for some reason\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.maxHeightReached = false\n        self.error = error\n        self.renderProps = undefined\n        renderInProgress = undefined\n      },\n      reload() {\n        self.renderInProgress = undefined\n        self.filled = false\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.message = undefined\n        self.maxHeightReached = false\n        self.ReactComponent = ServerSideRenderedBlockContent\n        self.renderProps = undefined\n        getParent(self, 2).reload()\n      },\n      beforeDestroy() {\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        const display = getContainingDisplay(self)\n        const { rpcManager } = getSession(self)\n        const { rendererType } = display\n        const { renderArgs } = renderBlockData(cast(self))\n        // renderArgs can be undefined if an error occured in this block\n        if (renderArgs) {\n          rendererType\n            .freeResourcesInClient(\n              rpcManager,\n              JSON.parse(JSON.stringify(renderArgs)),\n            )\n            .catch((e: Error) => {\n              // just console.error if it's something while it's being destroyed\n              console.warn('Error while destroying block', e)\n            })\n        }\n      },\n    }\n  })\n\nexport default blockState\nexport type BlockStateModel = typeof blockState\nexport type BlockModel = Instance<BlockStateModel>\n\n// calls the render worker to render the block content not using a flow for\n// this, because the flow doesn't work with autorun\nexport function renderBlockData(\n  self: Instance<BlockStateModel>,\n  optDisplay?: AbstractDisplayModel,\n) {\n  try {\n    const display = optDisplay || (getContainingDisplay(self) as any)\n    const { assemblyManager, rpcManager } = getSession(display)\n    const {\n      adapterConfig,\n      renderProps,\n      rendererType,\n      error: displayError,\n      parentTrack,\n    } = display\n    const assemblyNames = getTrackAssemblyNames(parentTrack)\n    const regionAsm = self.region.assemblyName\n    if (\n      !assemblyNames.includes(regionAsm) &&\n      !assemblyNames.find(name => assemblyManager.get(name)?.hasName(regionAsm))\n    ) {\n      throw new Error(\n        `region assembly (${regionAsm}) does not match track assemblies (${assemblyNames})`,\n      )\n    }\n\n    const { config } = renderProps\n    // This line is to trigger the mobx reaction when the config changes\n    // It won't trigger the reaction if it doesn't think we're accessing it\n    readConfObject(config)\n\n    const sessionId = getRpcSessionId(display)\n    const cannotBeRenderedReason = display.regionCannotBeRendered(self.region)\n\n    return {\n      rendererType,\n      rpcManager,\n      renderProps,\n      cannotBeRenderedReason,\n      displayError,\n      renderArgs: {\n        statusCallback: (message: string) => {\n          if (isAlive(self)) {\n            self.setStatus(message)\n          }\n        },\n        assemblyName: self.region.assemblyName,\n        regions: [self.region],\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId,\n        blockKey: self.key,\n        timeout: 1000000, // 10000,\n      },\n    }\n  } catch (e) {\n    return { displayError: e }\n  }\n}\n\ninterface RenderProps {\n  displayError: Error\n  rendererType: any\n  renderProps: { [key: string]: any }\n  rpcManager: { call: Function }\n  cannotBeRenderedReason: string\n  renderArgs: { [key: string]: any }\n}\n\ninterface ErrorProps {\n  displayError: string\n}\n\nasync function renderBlockEffect(\n  props: RenderProps | ErrorProps,\n  signal: AbortSignal,\n  self: Instance<BlockStateModel>,\n) {\n  const {\n    rendererType,\n    renderProps,\n    rpcManager,\n    renderArgs,\n    cannotBeRenderedReason,\n    displayError,\n  } = props as RenderProps\n  if (!isAlive(self)) {\n    return undefined\n  }\n\n  if (displayError) {\n    self.setError(displayError)\n    return undefined\n  }\n  if (cannotBeRenderedReason) {\n    self.setMessage(cannotBeRenderedReason)\n    return undefined\n  }\n\n  if (renderProps.notReady) {\n    return undefined\n  }\n\n  const {\n    reactElement,\n    features,\n    layout,\n    maxHeightReached,\n  } = await rendererType.renderInClient(rpcManager, {\n    ...renderArgs,\n    ...renderProps,\n    signal,\n  })\n  return {\n    reactElement,\n    features,\n    layout,\n    maxHeightReached,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any,react/no-danger */\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  getContainingView,\n  getSession,\n  isSelectionContainer,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { Region } from '@jbrowse/core/util/types'\nimport CompositeMap from '@jbrowse/core/util/compositeMap'\nimport { Feature, isFeature } from '@jbrowse/core/util/simpleFeature'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport { autorun } from 'mobx'\nimport { addDisposer, Instance, isAlive, types, getEnv } from 'mobx-state-tree'\nimport React from 'react'\nimport { Tooltip } from '../components/BaseLinearDisplay'\nimport BlockState, { renderBlockData } from './serverSideRenderedBlock'\n\nimport { LinearGenomeViewModel, ExportSvgOptions } from '../../LinearGenomeView'\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\ntype LayoutRecord = [number, number, number, number]\n\nconst minDisplayHeight = 20\nconst defaultDisplayHeight = 100\nexport const BaseLinearDisplay = types\n  .compose(\n    'BaseLinearDisplay',\n    BaseDisplay,\n    types.model({\n      height: types.optional(\n        types.refinement(\n          'displayHeight',\n          types.number,\n          n => n >= minDisplayHeight,\n        ),\n        defaultDisplayHeight,\n      ),\n      blockState: types.map(BlockState),\n      userBpPerPxLimit: types.maybe(types.number),\n    }),\n  )\n  .volatile(() => ({\n    message: '',\n    featureIdUnderMouse: undefined as undefined | string,\n    contextMenuFeature: undefined as undefined | Feature,\n    additionalContextMenuItemCallbacks: [] as Function[],\n    scrollTop: 0,\n  }))\n  .views(self => ({\n    get blockType(): 'staticBlocks' | 'dynamicBlocks' {\n      return 'staticBlocks'\n    },\n    get blockDefinitions() {\n      const { blockType } = this\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (!view.initialized) {\n        throw new Error('view not initialized yet')\n      }\n      return view[blockType]\n    },\n  }))\n  .views(self => ({\n    /**\n     * set limit to config amount, or user amount if they force load,\n     */\n    get maxViewBpPerPx() {\n      return self.userBpPerPxLimit || getConf(self, 'maxDisplayedBpPerPx')\n    },\n\n    /**\n     * how many milliseconds to wait for the display to\n     * \"settle\" before re-rendering a block\n     */\n    get renderDelay() {\n      return 50\n    },\n\n    get TooltipComponent(): React.FC<any> {\n      return (Tooltip as unknown) as React.FC\n    },\n\n    /**\n     * returns a string feature ID if the globally-selected object\n     * is probably a feature\n     */\n    get selectedFeatureId() {\n      if (isAlive(self)) {\n        const session = getSession(self)\n        const { selection } = session\n        // does it quack like a feature?\n        if (isFeature(selection)) {\n          return selection.id()\n        }\n      }\n      return undefined\n    },\n    /**\n     * if a display-level message should be displayed instead of the blocks,\n     * make this return a react component\n     */\n    get DisplayMessageComponent() {\n      return undefined as undefined | React.FC<any>\n    },\n  }))\n  .views(self => {\n    return {\n      /**\n       * a CompositeMap of `featureId -> feature obj` that\n       * just looks in all the block data for that feature\n       */\n      get features() {\n        const featureMaps = []\n        for (const block of self.blockState.values()) {\n          if (block && block.features) {\n            featureMaps.push(block.features)\n          }\n        }\n        return new CompositeMap<string, Feature>(featureMaps)\n      },\n\n      get featureUnderMouse() {\n        return self.featureIdUnderMouse\n          ? this.features.get(self.featureIdUnderMouse)\n          : undefined\n      },\n\n      /**\n       * returns per-base block layouts as the data structure\n       * `Map<blockKey, Map<featureId, LayoutRecord>>`\n       *\n       * this per-block is needed to avoid cross-contamination of\n       * layouts across blocks especially when building the rtree\n       */\n      get blockLayoutFeatures() {\n        const layoutMaps = new Map<string, Map<string, LayoutRecord>>()\n        for (const block of self.blockState.values()) {\n          if (block && block.layout && block.layout.rectangles) {\n            layoutMaps.set(block.key, block.layout.getRectangles())\n          }\n        }\n        return layoutMaps\n      },\n\n      getFeatureOverlapping(blockKey: string, x: number, y: number) {\n        return self.blockState.get(blockKey)?.layout?.getByCoord(x, y)\n      },\n\n      getFeatureByID(id: string) {\n        let ret\n        self.blockState.forEach(block => {\n          const val = block?.layout?.getByID(id)\n          if (val) {\n            ret = val\n          }\n        })\n        return ret\n      },\n    }\n  })\n  .actions(self => ({\n    afterAttach() {\n      // watch the parent's blocks to update our block state when they change\n      const blockWatchDisposer = autorun(() => {\n        // create any blocks that we need to create\n        const blocksPresent: { [key: string]: boolean } = {}\n        const view = getContainingView(self) as LinearGenomeViewModel\n        if (view.initialized) {\n          self.blockDefinitions.contentBlocks.forEach(block => {\n            blocksPresent[block.key] = true\n            if (!self.blockState.has(block.key)) {\n              this.addBlock(block.key, block)\n            }\n          })\n          // delete any blocks we need go delete\n          self.blockState.forEach((_, key) => {\n            if (!blocksPresent[key]) {\n              this.deleteBlock(key)\n            }\n          })\n        }\n      })\n\n      addDisposer(self, blockWatchDisposer)\n    },\n    setHeight(displayHeight: number) {\n      if (displayHeight > minDisplayHeight) {\n        self.height = displayHeight\n      } else {\n        self.height = minDisplayHeight\n      }\n      return self.height\n    },\n    resizeHeight(distance: number) {\n      const oldHeight = self.height\n      const newHeight = this.setHeight(self.height + distance)\n      return newHeight - oldHeight\n    },\n    setScrollTop(scrollTop: number) {\n      self.scrollTop = scrollTop\n    },\n    // sets the new bpPerPxLimit if user chooses to force load\n    setUserBpPerPxLimit(limit: number) {\n      self.userBpPerPxLimit = limit\n    },\n    // base display reload does nothing, see specialized displays for details\n    setMessage(message: string) {\n      self.message = message\n    },\n    addBlock(key: string, block: BaseBlock) {\n      self.blockState.set(\n        key,\n        BlockState.create({\n          key,\n          region: block.toRegion(),\n        }),\n      )\n    },\n    deleteBlock(key: string) {\n      self.blockState.delete(key)\n    },\n    selectFeature(feature: Feature) {\n      const session = getSession(self)\n      if (isSessionModelWithWidgets(session)) {\n        const featureWidget = session.addWidget(\n          'BaseFeatureWidget',\n          'baseFeature',\n          { featureData: feature.toJSON(), view: getContainingView(self) },\n        )\n        session.showWidget(featureWidget)\n      }\n      if (isSelectionContainer(session)) {\n        session.setSelection(feature)\n      }\n    },\n    clearFeatureSelection() {\n      const session = getSession(self)\n      session.clearSelection()\n    },\n    setFeatureIdUnderMouse(feature: string | undefined) {\n      self.featureIdUnderMouse = feature\n    },\n    reload() {\n      const temp = JSON.parse(JSON.stringify(self.blockState))\n      Object.keys(temp).forEach(blockState => {\n        temp[blockState].key += '-reload'\n      })\n      self.blockState = temp\n    },\n    addAdditionalContextMenuItemCallback(callback: Function) {\n      self.additionalContextMenuItemCallbacks.push(callback)\n    },\n    setContextMenuFeature(feature?: Feature) {\n      self.contextMenuFeature = feature\n    },\n  }))\n  .views(self => ({\n    regionCannotBeRenderedText(_region: Region) {\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (view && view.bpPerPx > self.maxViewBpPerPx) {\n        return 'Zoom in to see features'\n      }\n      return ''\n    },\n\n    /**\n     * @param region -\n     * @returns falsy if the region is fine to try rendering. Otherwise,\n     *  return a react node + string of text.\n     *  string of text describes why it cannot be rendered\n     *  react node allows user to force load at current setting\n     */\n    regionCannotBeRendered(_region: Region) {\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (view && view.bpPerPx > self.maxViewBpPerPx) {\n        return (\n          <>\n            <Typography component=\"span\" variant=\"body2\">\n              Zoom in to see features or{' '}\n            </Typography>\n            <Button\n              data-testid=\"reload_button\"\n              onClick={() => {\n                self.setUserBpPerPxLimit(view.bpPerPx)\n                self.reload()\n              }}\n              variant=\"outlined\"\n            >\n              Force Load\n            </Button>\n            <Typography component=\"span\" variant=\"body2\">\n              (force load may be slow)\n            </Typography>\n          </>\n        )\n      }\n      return undefined\n    },\n\n    get trackMenuItems(): MenuItem[] {\n      return []\n    },\n    // distinct set of display items that are particular to this display type.\n    // for base, there are none\n    //\n    // note: this attribute is helpful when composing together multiple\n    // subdisplays so that you don't repeat the \"about this track\" from each\n    // child display\n    get composedTrackMenuItems(): MenuItem[] {\n      return []\n    },\n    get contextMenuItems() {\n      const { pluginManager } = getEnv(self)\n      const contextMenuItems = self.contextMenuFeature\n        ? [\n            {\n              label: 'Open feature details',\n              icon: MenuOpenIcon,\n              onClick: () => {\n                if (self.contextMenuFeature) {\n                  self.selectFeature(self.contextMenuFeature)\n                }\n              },\n            },\n          ]\n        : []\n\n      self.additionalContextMenuItemCallbacks.forEach(callback => {\n        const menuItems = callback(self.contextMenuFeature, self, pluginManager)\n        contextMenuItems.push(...menuItems)\n      })\n      return contextMenuItems\n    },\n    get composedRenderProps() {\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n        onFeatureClick(_: unknown, featureId: string | undefined) {\n          const f = featureId || self.featureIdUnderMouse\n          if (!f) {\n            self.clearFeatureSelection()\n          } else {\n            const feature = self.features.get(f)\n            self.selectFeature(feature as Feature)\n          }\n        },\n        onClick() {\n          self.clearFeatureSelection()\n        },\n        // similar to click but opens a menu with further options\n        onFeatureContextMenu(_: unknown, featureId: string | undefined) {\n          const f = featureId || self.featureIdUnderMouse\n          if (!f) {\n            self.clearFeatureSelection()\n          } else {\n            // feature id under mouse passed to context menu\n            self.setContextMenuFeature(self.features.get(f))\n          }\n        },\n\n        onMouseMove(_: unknown, featureId: string | undefined) {\n          self.setFeatureIdUnderMouse(featureId)\n        },\n\n        onMouseLeave(_: unknown) {\n          self.setFeatureIdUnderMouse(undefined)\n        },\n\n        onContextMenu() {\n          self.setContextMenuFeature(undefined)\n          self.clearFeatureSelection()\n        },\n      }\n    },\n    get renderProps() {\n      return this.composedRenderProps\n    },\n  }))\n  .actions(self => ({\n    async renderSvg(opts: ExportSvgOptions & { overrideHeight: number }) {\n      const { height, id } = self\n      const { overrideHeight } = opts\n      const view = getContainingView(self) as LinearGenomeViewModel\n      const {\n        offsetPx: viewOffsetPx,\n        roundedDynamicBlocks: dynamicBlocks,\n        width,\n      } = view\n\n      const renderings = await Promise.all(\n        dynamicBlocks.map(block => {\n          const blockState = BlockState.create({\n            key: block.key,\n            region: block,\n          })\n\n          // regionCannotBeRendered can return jsx so look for plaintext\n          // version, or just get the default if none available\n          const cannotBeRenderedReason =\n            self.regionCannotBeRenderedText(block) ||\n            self.regionCannotBeRendered(block)\n\n          if (cannotBeRenderedReason) {\n            return {\n              reactElement: (\n                <>\n                  <rect x={0} y={0} width={width} height={20} fill=\"#aaa\" />\n                  <text x={0} y={15}>\n                    {cannotBeRenderedReason}\n                  </text>\n                </>\n              ),\n            }\n          }\n\n          const {\n            rpcManager,\n            renderArgs,\n            renderProps,\n            rendererType,\n          } = renderBlockData(blockState, self)\n\n          return rendererType.renderInClient(rpcManager, {\n            ...renderArgs,\n            ...renderProps,\n            exportSVG: opts,\n          })\n        }),\n      )\n\n      return (\n        <>\n          {renderings.map((rendering, index) => {\n            const { offsetPx } = dynamicBlocks[index]\n            const offset = offsetPx - viewOffsetPx\n            // stabalize clipid under test for snapshot\n            const clipid = `clip-${\n              typeof jest === 'undefined' ? id : 'jest'\n            }-${index}`\n            return (\n              <React.Fragment key={`frag-${index}`}>\n                <defs>\n                  <clipPath id={clipid}>\n                    <rect\n                      x={0}\n                      y={0}\n                      width={width}\n                      height={overrideHeight || height}\n                    />\n                  </clipPath>\n                </defs>\n                <g transform={`translate(${offset} 0)`}>\n                  <g clipPath={`url(#${clipid})`}>\n                    {React.isValidElement(rendering.reactElement) ? (\n                      rendering.reactElement\n                    ) : (\n                      <g dangerouslySetInnerHTML={{ __html: rendering.html }} />\n                    )}\n                  </g>\n                </g>\n              </React.Fragment>\n            )\n          })}\n        </>\n      )\n    },\n  }))\n  .postProcessSnapshot(self => {\n    const { blockState, ...rest } = self\n    return rest\n  })\n\nexport type BaseLinearDisplayStateModel = typeof BaseLinearDisplay\nexport type BaseLinearDisplayModel = Instance<BaseLinearDisplayStateModel>\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBareDisplay',\n    { renderer: pluginManager.pluggableConfigSchemaType('renderer') },\n    {\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBareDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearBareDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => ({\n      get renderProps() {\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          config: self.configuration.renderer,\n        }\n      },\n\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n}\n","/**\n * Based on:\n *  https://material-ui.com/components/autocomplete/#Virtualize.tsx\n * Asynchronous Requests for autocomplete:\n *  https://material-ui.com/components/autocomplete/\n */\nimport React, { useMemo, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\n\n// jbrowse core\nimport { Region } from '@jbrowse/core/util/types'\nimport { getSession, useDebounce } from '@jbrowse/core/util' // useDebounce\nimport BaseResult, {\n  RefSequenceResult,\n} from '@jbrowse/core/TextSearch/BaseResults'\n// material ui\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField, { TextFieldProps as TFP } from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { InputAdornment } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete'\n// other\nimport { LinearGenomeViewModel } from '..'\n\n/**\n *  Option interface used to format results to display in dropdown\n *  of the materila ui interface\n */\nexport interface Option {\n  group: string\n  result: BaseResult\n}\n\n// filters for options to display in dropdown\nconst filter = createFilterOptions<Option>({\n  trim: true,\n  matchFrom: 'start',\n  ignoreCase: true,\n  limit: 101,\n})\nconst helperSearchText = `Search for features or navigate to a location using syntax \"chr1:1-100\" or \"chr1:1..100\"`\nconst useStyles = makeStyles(() => ({\n  customWidth: {\n    maxWidth: 150,\n  },\n}))\n\nasync function fetchResults(\n  self: LinearGenomeViewModel,\n  query: string,\n  assemblyName: string,\n) {\n  const session = getSession(self)\n  const { pluginManager } = getEnv(session)\n  const { rankSearchResults } = self\n  const { textSearchManager } = pluginManager.rootModel\n  const searchScope = self.searchScope(assemblyName)\n  const args = {\n    queryString: query,\n    searchType: 'prefix',\n  }\n  const searchResults =\n    (await textSearchManager?.search(args, searchScope, rankSearchResults)) ||\n    []\n  return searchResults\n}\nfunction RefNameAutocomplete({\n  model,\n  onSelect,\n  assemblyName,\n  style,\n  value,\n  TextFieldProps = {},\n}: {\n  model: LinearGenomeViewModel\n  onSelect: (region: BaseResult) => void\n  assemblyName?: string\n  value?: string\n  style?: React.CSSProperties\n  TextFieldProps?: TFP\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const [open, setOpen] = useState(false)\n  const [, setError] = useState<Error>()\n  const [currentSearch, setCurrentSearch] = useState('')\n  const debouncedSearch = useDebounce(currentSearch, 350)\n  const [searchOptions, setSearchOptions] = useState<Option[]>([])\n  const { assemblyManager } = session\n  const { coarseVisibleLocStrings } = model\n  const assembly = assemblyName && assemblyManager.get(assemblyName)\n  const regions: Region[] = useMemo(() => {\n    return (assembly && assembly.regions) || []\n  }, [assembly])\n  // default options for dropdown\n  const limitOption: Array<Option> = [\n    {\n      group: 'reference sequence',\n      result: new BaseResult({\n        refName: '',\n        label: '',\n        renderingComponent: (\n          <Tooltip\n            title={'Displaying first 100 refNames. Search for more results'}\n          >\n            <Typography noWrap>{'more results...'}</Typography>\n          </Tooltip>\n        ),\n      }),\n    },\n  ]\n  let options: Array<Option> = useMemo(() => {\n    const defaultOptions = regions.map(option => {\n      const defaultOption: Option = {\n        group: 'reference sequence',\n        result: new RefSequenceResult({\n          refName: option.refName,\n          label: option.refName,\n          matchedAttribute: 'refName',\n        }),\n      }\n      return defaultOption\n    })\n    return defaultOptions\n  }, [regions])\n\n  options =\n    options.length > 100 ? options.slice(0, 100).concat(limitOption) : options\n  useEffect(() => {\n    let active = true\n\n    ;(async () => {\n      try {\n        let results: BaseResult[] = []\n        if (debouncedSearch && debouncedSearch !== '' && assemblyName) {\n          const searchResults = await fetchResults(\n            model,\n            debouncedSearch,\n            assemblyName,\n          )\n          results = results.concat(searchResults)\n        }\n        if (results.length > 0 && active) {\n          const adapterResults: Option[] = results.map(result => {\n            const newOption: Option = {\n              group: 'text search results',\n              result,\n            }\n            return newOption\n          })\n          setSearchOptions(adapterResults)\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [assemblyName, debouncedSearch, model])\n\n  function onChange(selectedOption: Option | string) {\n    if (selectedOption && assemblyName) {\n      if (typeof selectedOption === 'string') {\n        // handles string inputs on keyPress enter\n        const newResult = new BaseResult({\n          label: selectedOption,\n        })\n        onSelect(newResult)\n      } else {\n        const { result } = selectedOption\n        onSelect(result)\n      }\n    }\n  }\n\n  return (\n    <Autocomplete\n      id={`refNameAutocomplete-${model.id}`}\n      data-testid=\"autocomplete\"\n      freeSolo\n      disableListWrap\n      disableClearable\n      includeInputInList\n      clearOnBlur\n      selectOnFocus\n      disabled={!assemblyName}\n      style={style}\n      value={coarseVisibleLocStrings || value || ''}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => {\n        setOpen(false)\n        setCurrentSearch('')\n        setSearchOptions([])\n      }}\n      options={searchOptions.length === 0 ? options : searchOptions}\n      groupBy={option => String(option.group)}\n      filterOptions={(possibleOptions, params) => {\n        return filter(possibleOptions, params)\n      }}\n      ListboxProps={{ style: { maxHeight: 250 } }}\n      onChange={(_, selectedOption) => onChange(selectedOption)}\n      renderInput={params => {\n        const { helperText, InputProps = {} } = TextFieldProps\n        const TextFieldInputProps = {\n          ...params.InputProps,\n          ...InputProps,\n          endAdornment: (\n            <>\n              {regions.length === 0 && searchOptions.length === 0 ? (\n                <CircularProgress color=\"inherit\" size={20} />\n              ) : (\n                <Tooltip\n                  title={helperSearchText}\n                  leaveDelay={300}\n                  placement=\"top\"\n                  classes={{ tooltip: classes.customWidth }}\n                >\n                  <InputAdornment position=\"end\" style={{ marginRight: 7 }}>\n                    <SearchIcon />\n                  </InputAdornment>\n                </Tooltip>\n              )}\n              {params.InputProps.endAdornment}\n            </>\n          ),\n        }\n        return (\n          <TextField\n            {...params}\n            {...TextFieldProps}\n            helperText={helperText}\n            value={coarseVisibleLocStrings || value || ''}\n            InputProps={TextFieldInputProps}\n            placeholder=\"Search for location\"\n            onChange={e => {\n              setCurrentSearch(e.target.value)\n            }}\n          />\n        )\n      }}\n      renderOption={(option, { inputValue }) => {\n        const { result } = option\n        const rendering = result.getLabel()\n        // if renderingComponent is provided render that\n        const component = result.getRenderingComponent()\n        if (component) {\n          if (React.isValidElement(component)) {\n            return component\n          }\n        }\n        if (currentSearch !== '' && inputValue.length <= rendering.length) {\n          return (\n            <Typography noWrap>\n              <b>{rendering.slice(0, inputValue.length)}</b>\n              {rendering.slice(inputValue.length)}\n            </Typography>\n          )\n        }\n        return <Typography noWrap>{rendering}</Typography>\n      }}\n      getOptionLabel={option => {\n        // needed for filtering options and value\n        return (\n          (typeof option === 'string' ? option : option.result.getLabel()) || ''\n        )\n      }}\n    />\n  )\n}\n\nexport default observer(RefNameAutocomplete)\n","/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  start: number,\n  end: number,\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n\n  let minBase = start\n  let maxBase = end\n  if (minBase === null || maxBase === null) {\n    return []\n  }\n\n  if (bpPerPx < 0) {\n    ;[minBase, maxBase] = [maxBase, minBase]\n  }\n\n  // add 20px additional on the right and left to allow us to draw the ends\n  // of labels that lie a little outside our region\n  minBase -= Math.abs(20 * bpPerPx) - 1\n  maxBase += Math.abs(20 * bpPerPx) + 1\n\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  let index = 0\n  const ticks = []\n  for (\n    let base = Math.ceil(minBase / iterPitch) * iterPitch;\n    base < maxBase;\n    base += iterPitch\n  ) {\n    if (emitMinor && base % (gridPitch.majorPitch * 2)) {\n      ticks.push({ type: 'minor', base: base - 1, index })\n      index += 1\n    } else if (emitMajor && !(base % (gridPitch.majorPitch * 2))) {\n      ticks.push({ type: 'major', base: base - 1, index })\n      index += 1\n    }\n  }\n  return ticks\n}\n","import Popover from '@material-ui/core/Popover'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport { stringify } from '@jbrowse/core/util'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport ReactPropTypes from 'prop-types'\nimport React, { useRef, useEffect, useState } from 'react'\nimport { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { LinearGenomeViewStateModel, HEADER_OVERVIEW_HEIGHT } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => {\n  const background = theme.palette.tertiary\n    ? fade(theme.palette.tertiary.main, 0.7)\n    : fade(theme.palette.primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: theme.palette.tertiary\n        ? theme.palette.tertiary.contrastText\n        : theme.palette.primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n  }\n})\n\nfunction OverviewRubberBand({\n  model,\n  overview,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n  const [guideX, setGuideX] = useState<number | undefined>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const classes = useStyles()\n  const mouseDragging = startX !== undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp() {\n      if (\n        controlsRef.current &&\n        startX !== undefined &&\n        currentX !== undefined\n      ) {\n        if (Math.abs(currentX - startX) > 3) {\n          model.zoomToDisplayedRegions(\n            overview.pxToBp(startX),\n            overview.pxToBp(currentX),\n          )\n        }\n      }\n      /* handling clicking and centering at a specific Bp */\n      if (\n        controlsRef.current &&\n        startX !== undefined &&\n        currentX === undefined\n      ) {\n        const clickedAt = overview.pxToBp(startX)\n        model.centerAt(\n          Math.round(clickedAt.coord),\n          clickedAt.refName,\n          clickedAt.index,\n        )\n      }\n      setStartX(undefined)\n      setCurrentX(undefined)\n\n      if (startX !== undefined) {\n        setGuideX(undefined)\n      }\n    }\n\n    function globalKeyDown(event: KeyboardEvent) {\n      if (event.key === 'Escape') {\n        setStartX(undefined)\n        setCurrentX(undefined)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      window.addEventListener('keydown', globalKeyDown, true)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n        window.removeEventListener('keydown', globalKeyDown, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, currentX, startX, model, overview])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    if (controlsRef.current) {\n      setStartX(\n        event.clientX - controlsRef.current.getBoundingClientRect().left,\n      )\n    }\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    if (controlsRef.current) {\n      setGuideX(\n        event.clientX - controlsRef.current.getBoundingClientRect().left,\n      )\n    }\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n  }\n\n  if (startX === undefined) {\n    return (\n      <div style={{ position: 'relative' }}>\n        {guideX !== undefined ? (\n          <Tooltip\n            open={!mouseDragging}\n            placement=\"top\"\n            title={stringify(overview.pxToBp(guideX))}\n            arrow\n          >\n            <div\n              className={classes.guide}\n              style={{\n                left: guideX,\n              }}\n            />\n          </Tooltip>\n        ) : null}\n        <div\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </div>\n    )\n  }\n\n  let left = startX || 0\n  let width = 0\n  if (startX !== undefined && currentX !== undefined) {\n    left = currentX < startX ? currentX : startX\n    width = currentX - startX\n  }\n  // calculate the start and end bp of drag\n  let leftBpOffset\n  let rightBpOffset\n  if (startX) {\n    leftBpOffset = overview.pxToBp(startX)\n    rightBpOffset = overview.pxToBp(startX + width)\n    if (currentX && currentX < startX) {\n      ;[leftBpOffset, rightBpOffset] = [rightBpOffset, leftBpOffset]\n    }\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>\n              {leftBpOffset ? stringify(leftBpOffset) : ''}\n            </Typography>\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>\n              {rightBpOffset ? stringify(rightBpOffset) : ''}\n            </Typography>\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{\n          left,\n          width: Math.abs(width),\n          height: HEADER_OVERVIEW_HEIGHT,\n        }}\n      />\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n    </div>\n  )\n}\n\nOverviewRubberBand.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  overview: MobxPropTypes.objectOrObservableObject.isRequired,\n  ControlComponent: ReactPropTypes.node,\n}\n\nOverviewRubberBand.defaultProps = {\n  ControlComponent: <div />,\n}\n\nexport default observer(OverviewRubberBand)\n","// import { Region } from '@jbrowse/core/util/types'\n// import { Region as MSTRegion } from '@jbrowse/core/util/types/mst'\nimport Base1DView, { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { ContentBlock } from '@jbrowse/core/util/blockTypes'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport clsx from 'clsx'\nimport { Typography } from '@material-ui/core'\nimport {\n  LinearGenomeViewStateModel,\n  HEADER_BAR_HEIGHT,\n  HEADER_OVERVIEW_HEIGHT,\n} from '..'\nimport { chooseGridPitch } from '../util'\nimport OverviewRubberBand from './OverviewRubberBand'\n\nconst useStyles = makeStyles(theme => {\n  const scaleBarColor = theme.palette.tertiary\n    ? theme.palette.tertiary.light\n    : theme.palette.primary.light\n  return {\n    scaleBar: {\n      width: '100%',\n      height: HEADER_OVERVIEW_HEIGHT,\n      overflow: 'hidden',\n    },\n    scaleBarContig: {\n      backgroundColor: theme.palette.background.default,\n      position: 'absolute',\n      top: 0,\n      height: HEADER_OVERVIEW_HEIGHT,\n      border: '1px solid',\n      borderBottomColor: 'black',\n    },\n    scaleBarContigForward: {\n      backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M-.1 0L6 4.5L-.1 9' fill='none' stroke='%23ddd'/%3E%3C/svg%3E\")`,\n      backgroundRepeat: 'repeat',\n    },\n    scaleBarContigReverse: {\n      backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M6 0L0 4.5L6 9' fill='none' stroke='%23ddd'/%3E%3C/svg%3E\")`,\n      backgroundRepeat: 'repeat',\n    },\n    scaleBarRegionIncompleteLeft: {\n      width: 10,\n      height: 17.5,\n      background: `linear-gradient(-225deg,black 3px, transparent 1px),\n      linear-gradient(45deg, black 3px, transparent 1px)`,\n      backgroundRepeat: 'repeat-y',\n      backgroundSize: '10px 8px',\n      borderTopLeftRadius: '2px',\n      borderBottomLeftRadius: '2px',\n      float: 'left',\n    },\n    scaleBarRegionIncompleteRight: {\n      width: 10,\n      height: 17.5,\n      background: `linear-gradient(225deg, black 3px, transparent 1px),\n      linear-gradient(-45deg, black 3px, transparent 1px)`,\n      backgroundRepeat: 'repeat-y',\n      backgroundSize: '10px 8px',\n      borderTopRightRadius: '2px',\n      borderBottomRightRadius: '2px',\n      float: 'right',\n    },\n    scaleBarRefName: {\n      position: 'absolute',\n      fontWeight: 'bold',\n      lineHeight: 'normal',\n      pointerEvents: 'none',\n      left: 5,\n    },\n    scaleBarLabel: {\n      height: HEADER_OVERVIEW_HEIGHT,\n      width: 1,\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      pointerEvents: 'none',\n    },\n    scaleBarVisibleRegion: {\n      background: fade(scaleBarColor, 0.3),\n      position: 'absolute',\n      height: HEADER_OVERVIEW_HEIGHT,\n      pointerEvents: 'none',\n      top: -1,\n      zIndex: 100,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: fade(scaleBarColor, 0.8),\n      boxSizing: 'content-box',\n    },\n    overview: {\n      height: HEADER_BAR_HEIGHT,\n      position: 'relative',\n    },\n    overviewSvg: { position: 'absolute' },\n  }\n})\n\nconst wholeSeqSpacer = 2\nconst Polygon = observer(\n  ({\n    model,\n    overview,\n  }: {\n    model: LGV\n    overview: Instance<Base1DViewModel>\n  }) => {\n    const theme = useTheme()\n    const classes = useStyles()\n    const {\n      offsetPx,\n      dynamicBlocks: { contentBlocks, totalWidthPxWithoutBorders },\n    } = model\n\n    const polygonColor = theme.palette.tertiary\n      ? theme.palette.tertiary.light\n      : theme.palette.primary.light\n\n    if (!contentBlocks.length) {\n      return null\n    }\n    const firstBlock = contentBlocks[0]\n    const lastBlock = contentBlocks[contentBlocks.length - 1]\n    const topLeft = overview.bpToPx({\n      refName: firstBlock.refName,\n      coord: firstBlock.reversed ? firstBlock.end : firstBlock.start,\n      regionNumber: firstBlock.regionNumber,\n    })\n    const topRight = overview.bpToPx({\n      refName: lastBlock.refName,\n      coord: lastBlock.reversed ? lastBlock.start : lastBlock.end,\n      regionNumber: lastBlock.regionNumber,\n    })\n\n    const startPx = Math.max(0, -offsetPx)\n    const endPx =\n      startPx +\n      totalWidthPxWithoutBorders +\n      (contentBlocks.length * model.interRegionPaddingWidth) / 2\n\n    const points = [\n      [startPx, HEADER_BAR_HEIGHT],\n      [endPx, HEADER_BAR_HEIGHT],\n      [topRight, 0],\n      [topLeft, 0],\n    ]\n\n    return (\n      <svg\n        height={HEADER_BAR_HEIGHT}\n        width=\"100%\"\n        className={classes.overviewSvg}\n      >\n        {points && (\n          <polygon\n            points={points.toString()}\n            fill={fade(polygonColor, 0.3)}\n            stroke={fade(polygonColor, 0.8)}\n          />\n        )}\n      </svg>\n    )\n  },\n)\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst ScaleBar = observer(\n  ({\n    model,\n    scale,\n    overview,\n  }: {\n    model: LGV\n    overview: Base1DViewModel\n    scale: number\n  }) => {\n    const classes = useStyles()\n    const { dynamicBlocks: visibleRegions } = model\n    const { assemblyManager } = getSession(model)\n    const gridPitch = chooseGridPitch(scale, 120, 15)\n    const { dynamicBlocks: overviewVisibleRegions } = overview\n\n    if (!visibleRegions.contentBlocks.length) {\n      return null\n    }\n    const firstBlock = visibleRegions.contentBlocks[0]\n    const firstOverviewPx =\n      overview.bpToPx({\n        refName: firstBlock.refName,\n        regionNumber: firstBlock.regionNumber,\n        coord: firstBlock.reversed ? firstBlock.end : firstBlock.start,\n      }) || 0\n\n    const lastBlock =\n      visibleRegions.contentBlocks[visibleRegions.contentBlocks.length - 1]\n    const lastOverviewPx =\n      overview.bpToPx({\n        refName: lastBlock.refName,\n        coord: lastBlock.reversed ? lastBlock.start : lastBlock.end,\n        regionNumber: lastBlock.regionNumber,\n      }) || 0\n\n    return (\n      <div className={classes.scaleBar}>\n        <div\n          className={classes.scaleBarVisibleRegion}\n          style={{\n            width: lastOverviewPx - firstOverviewPx,\n            left: firstOverviewPx,\n          }}\n        />\n        {/* this is the entire scale bar */}\n        {overviewVisibleRegions.map((seq, idx) => {\n          const assembly = assemblyManager.get(seq.assemblyName)\n          let refNameColor: string | undefined\n          if (assembly) {\n            refNameColor = assembly.getRefNameColor(seq.refName)\n          }\n          const regionLength = seq.end - seq.start\n          const tickLabels = []\n          for (\n            let index = 0;\n            index < Math.floor(regionLength / gridPitch.majorPitch);\n            index++\n          ) {\n            const offsetLabel = (index + 1) * gridPitch.majorPitch\n            tickLabels.push(\n              seq.reversed ? seq.end - offsetLabel : seq.start + offsetLabel,\n            )\n          }\n\n          return !(seq instanceof ContentBlock) ? (\n            <div\n              key={`${JSON.stringify(seq)}-${idx}`}\n              className={classes.scaleBarContig}\n              style={{\n                width: seq.widthPx,\n                left: seq.offsetPx,\n                backgroundColor: '#999',\n                backgroundImage:\n                  'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n              }}\n            />\n          ) : (\n            <div\n              key={`${JSON.stringify(seq)}-${idx}`}\n              className={clsx(\n                classes.scaleBarContig,\n                seq.reversed\n                  ? classes.scaleBarContigReverse\n                  : classes.scaleBarContigForward,\n              )}\n              style={{\n                left: seq.offsetPx,\n                width: seq.widthPx,\n                borderColor: refNameColor,\n              }}\n            >\n              {/* name of sequence */}\n              <Typography\n                style={{ color: refNameColor }}\n                className={classes.scaleBarRefName}\n              >\n                {seq.refName}\n              </Typography>\n\n              {/* the number labels drawn in overview scale bar*/}\n              {tickLabels.map((tickLabel, labelIdx) => (\n                <Typography\n                  key={`${JSON.stringify(seq)}-${tickLabel}-${labelIdx}`}\n                  className={classes.scaleBarLabel}\n                  variant=\"body2\"\n                  style={{\n                    left: ((labelIdx + 1) * gridPitch.majorPitch) / scale,\n                    pointerEvents: 'none',\n                    color: refNameColor,\n                  }}\n                >\n                  {tickLabel.toLocaleString('en-US')}\n                </Typography>\n              ))}\n            </div>\n          )\n        })}\n      </div>\n    )\n  },\n)\n\nfunction OverviewScaleBar({\n  model,\n  children,\n}: {\n  model: LGV\n  children: React.ReactNode\n}) {\n  const classes = useStyles()\n  const { width, displayedRegions } = model\n\n  const overview = Base1DView.create({\n    displayedRegions: JSON.parse(JSON.stringify(displayedRegions)),\n    interRegionPaddingWidth: 0,\n    minimumBlockWidth: model.minimumBlockWidth,\n  })\n  overview.setVolatileWidth(width)\n  overview.showAllRegions()\n\n  const scale =\n    model.totalBp / (width - (displayedRegions.length - 1) * wholeSeqSpacer)\n\n  return !displayedRegions.length ? (\n    <>\n      <div className={classes.scaleBar}>\n        <LinearProgress\n          variant=\"indeterminate\"\n          style={{ marginTop: 4, width: '100%' }}\n        />\n      </div>\n      <div>{children}</div>\n    </>\n  ) : (\n    <div>\n      <OverviewRubberBand\n        model={model}\n        overview={overview}\n        ControlComponent={\n          <ScaleBar model={model} overview={overview} scale={scale} />\n        }\n      />\n      <div className={classes.overview}>\n        <Polygon model={model} overview={overview} />\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(OverviewScaleBar)\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slider from '@material-ui/core/Slider'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  slider: {\n    width: 70,\n  },\n})\n\nfunction ZoomControls({ model }: { model: LinearGenomeViewModel }) {\n  const classes = useStyles()\n  const { maxBpPerPx, minBpPerPx, bpPerPx, scaleFactor } = model\n  const [value, setValue] = useState(-Math.log2(bpPerPx) * 100)\n  useEffect(() => {\n    setValue(-Math.log2(bpPerPx) * 100)\n  }, [setValue, bpPerPx])\n  return (\n    <div className={classes.container}>\n      <IconButton\n        data-testid=\"zoom_out\"\n        onClick={() => {\n          model.zoom(bpPerPx * 2)\n        }}\n        disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <Slider\n        className={classes.slider}\n        value={value}\n        min={-Math.log2(maxBpPerPx) * 100}\n        max={-Math.log2(minBpPerPx) * 100}\n        onChange={(_, val) => setValue(val as number)}\n        onChangeCommitted={() => model.zoomTo(2 ** (-value / 100))}\n        disabled={scaleFactor !== 1}\n      />\n      <IconButton\n        data-testid=\"zoom_in\"\n        onClick={() => {\n          model.zoom(model.bpPerPx / 2)\n        }}\n        disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default observer(ZoomControls)\n","import { getSession } from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Typography from '@material-ui/core/Typography'\nimport { observer } from 'mobx-react'\nimport { Instance, getEnv } from 'mobx-state-tree'\nimport React from 'react'\n\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport { LinearGenomeViewStateModel, HEADER_BAR_HEIGHT } from '..'\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport OverviewScaleBar from './OverviewScaleBar'\nimport ZoomControls from './ZoomControls'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst WIDGET_HEIGHT = 32\nconst SPACING = 7\n\nconst useStyles = makeStyles(theme => ({\n  headerBar: {\n    height: HEADER_BAR_HEIGHT,\n    display: 'flex',\n  },\n  headerForm: {\n    flexWrap: 'nowrap',\n    marginRight: 7,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  input: {},\n  headerRefName: {\n    minWidth: 100,\n  },\n  panButton: {\n    background: fade(theme.palette.background.paper, 0.8),\n    height: WIDGET_HEIGHT,\n    margin: SPACING,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 5,\n  },\n  toggleButton: {\n    height: 44,\n    border: 'none',\n    margin: theme.spacing(0.5),\n  },\n  buttonSpacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Controls = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  return (\n    <Button\n      onClick={model.activateTrackSelector}\n      className={classes.toggleButton}\n      title=\"Open track selector\"\n      value=\"track_select\"\n      color=\"secondary\"\n    >\n      <TrackSelectorIcon className={classes.buttonSpacer} />\n    </Button>\n  )\n})\n\nfunction PanControls({ model }: { model: LGV }) {\n  const classes = useStyles()\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(-0.9)}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(0.9)}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </>\n  )\n}\n\nconst RegionWidth = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const { coarseTotalBp } = model\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.bp}>\n      {`${Math.round(coarseTotalBp).toLocaleString('en-US')} bp`}\n    </Typography>\n  )\n})\n\nconst LinearGenomeViewHeader = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const { pluginManager } = getEnv(session)\n  const { textSearchManager } = pluginManager.rootModel\n  const {\n    coarseDynamicBlocks: contentBlocks,\n    displayedRegions,\n    rankSearchResults,\n  } = model\n  const { assemblyName, refName } = contentBlocks[0] || { refName: '' }\n  const assembly = assemblyName && assemblyManager.get(assemblyName)\n  const regions = (assembly && assembly.regions) || []\n  const searchScope = model.searchScope(assemblyName)\n  async function setDisplayedRegion(result: BaseResult) {\n    if (result) {\n      const newRegionValue = result.getLocation()\n      // need to fix finding region\n      const newRegion = regions.find(\n        region => newRegionValue === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        const results =\n          (await textSearchManager?.search(\n            {\n              queryString: newRegionValue.toLocaleLowerCase(),\n              searchType: 'exact',\n            },\n            searchScope,\n            rankSearchResults,\n          )) || []\n        // distinguishes between locstrings and search strings\n        if (results.length > 0) {\n          model.setSearchResults(results, newRegionValue.toLocaleLowerCase())\n        } else {\n          try {\n            newRegionValue !== '' && model.navToLocString(newRegionValue)\n          } catch (e) {\n            if (\n              `${e}` === `Error: Unknown reference sequence \"${newRegionValue}\"`\n            ) {\n              model.setSearchResults(\n                results,\n                newRegionValue.toLocaleLowerCase(),\n              )\n            } else {\n              console.warn(e)\n              session.notify(`${e}`, 'warning')\n            }\n          }\n        }\n      }\n    }\n  }\n\n  const controls = (\n    <div className={classes.headerBar}>\n      <Controls model={model} />\n      <div className={classes.spacer} />\n      <FormGroup row className={classes.headerForm}>\n        <PanControls model={model} />\n        <RefNameAutocomplete\n          onSelect={setDisplayedRegion}\n          assemblyName={assemblyName}\n          value={displayedRegions.length > 1 ? '' : refName}\n          model={model}\n          TextFieldProps={{\n            variant: 'outlined',\n            className: classes.headerRefName,\n            style: { margin: SPACING, minWidth: '175px' },\n            InputProps: {\n              style: {\n                padding: 0,\n                height: WIDGET_HEIGHT,\n                background: fade(theme.palette.background.paper, 0.8),\n              },\n            },\n          }}\n        />\n      </FormGroup>\n      <RegionWidth model={model} />\n      <ZoomControls model={model} />\n      <div className={classes.spacer} />\n    </div>\n  )\n\n  if (model.hideHeaderOverview) {\n    return controls\n  }\n\n  return <OverviewScaleBar model={model}>{controls}</OverviewScaleBar>\n})\n\nexport default LinearGenomeViewHeader\n","import { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { getSession, getContainingView } from '@jbrowse/core/util'\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport Typography from '@material-ui/core/Typography'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport DragIcon from '@material-ui/icons/DragIndicator'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: fade(theme.palette.background.paper, 0.8),\n    '&:hover': {\n      background: theme.palette.background.paper,\n    },\n    transition: theme.transitions.create(['background'], {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  trackName: {\n    margin: '0 auto',\n    width: '90%',\n    fontSize: '0.8rem',\n    pointerEvents: 'none',\n  },\n  dragHandle: {\n    cursor: 'grab',\n    color: '#135560',\n  },\n  dragHandleIcon: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n}))\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst TrackLabel = React.forwardRef(\n  (props: { track: BaseTrackModel; className?: string }, ref) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const { track, className } = props\n    const view = getContainingView(track) as LGV\n    const session = getSession(track)\n    const trackConf = track.configuration\n    const trackId = getConf(track, 'trackId')\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget)\n    }\n\n    const handleClose = () => {\n      setAnchorEl(null)\n    }\n\n    const onDragStart = (event: React.DragEvent<HTMLSpanElement>) => {\n      const target = event.target as HTMLElement\n      if (target.parentNode) {\n        event.dataTransfer.setDragImage(\n          target.parentNode as HTMLElement,\n          20,\n          20,\n        )\n        view.setDraggingTrackId(track.id)\n      }\n    }\n\n    const onDragEnd = () => {\n      view.setDraggingTrackId(undefined)\n    }\n\n    let trackName = getConf(track, 'name')\n    if (getConf(track, 'type') === 'ReferenceSequenceTrack') {\n      trackName = 'Reference Sequence'\n      session.assemblies.forEach(assembly => {\n        if (assembly.sequence === trackConf) {\n          trackName = `Reference Sequence (${readConfObject(assembly, 'name')})`\n        }\n      })\n    }\n\n    function handleMenuItemClick(_: unknown, callback: Function) {\n      callback()\n      handleClose()\n    }\n\n    return (\n      <>\n        <Paper ref={ref} className={clsx(className, classes.root)}>\n          <span\n            draggable\n            className={classes.dragHandle}\n            onDragStart={onDragStart}\n            onDragEnd={onDragEnd}\n            data-testid={`dragHandle-${view.id}-${trackId}`}\n          >\n            <DragIcon className={classes.dragHandleIcon} />\n          </span>\n          <IconButton\n            onClick={() => view.hideTrack(trackId)}\n            className={classes.iconButton}\n            title=\"close this track\"\n            color=\"secondary\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            variant=\"body1\"\n            component=\"span\"\n            className={classes.trackName}\n          >\n            {trackName}\n          </Typography>\n          <IconButton\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            className={classes.iconButton}\n            color=\"secondary\"\n            data-testid=\"track_menu_icon\"\n            disabled={!track.trackMenuItems.length}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </Paper>\n        <Menu\n          anchorEl={anchorEl}\n          onMenuItemClick={handleMenuItemClick}\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          menuItems={[\n            ...(session.getTrackActionMenuItems\n              ? session.getTrackActionMenuItems(trackConf)\n              : []),\n            ...track.trackMenuItems,\n          ].sort((a, b) => (b.priority || 0) - (a.priority || 0))}\n        />\n      </>\n    )\n  },\n)\n\nexport default observer(TrackLabel)\n","import React, { useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { useDebouncedCallback, getContainingView } from '@jbrowse/core/util'\nimport clsx from 'clsx'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { LinearGenomeViewModel, RESIZE_HANDLE_HEIGHT } from '..'\nimport TrackLabel from './TrackLabel'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  resizeHandle: {\n    height: RESIZE_HANDLE_HEIGHT,\n    boxSizing: 'border-box',\n    position: 'relative',\n    zIndex: 2,\n  },\n  overlay: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 3,\n    borderRadius: theme.shape.borderRadius,\n  },\n  renderingComponentContainer: {\n    position: 'absolute',\n    // -1 offset because of the 1px border of the Paper\n    left: -1,\n    height: '100%',\n    width: '100%',\n  },\n  trackLabel: {\n    zIndex: 3,\n    margin: theme.spacing(1),\n  },\n  trackLabelInline: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  trackLabelOverlap: {\n    position: 'absolute',\n  },\n  trackRenderingContainer: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    background: 'none',\n    zIndex: 2,\n    boxSizing: 'content-box',\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nfunction TrackContainer(props: {\n  model: LinearGenomeViewModel\n  track: BaseTrackModel\n}) {\n  const classes = useStyles()\n  const { model, track } = props\n  const display = track.displays[0]\n  const { horizontalScroll, draggingTrackId, moveTrack } = model\n  const { height } = display\n  const view = getContainingView(display) as LGV\n  const trackId = getConf(track, 'trackId')\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (ref.current) {\n      model.trackRefs[trackId] = ref.current\n    }\n    return () => {\n      delete model.trackRefs[trackId]\n    }\n  }, [model.trackRefs, trackId])\n  function onDragEnter() {\n    if (\n      draggingTrackId !== undefined &&\n      isAlive(display) &&\n      draggingTrackId !== display.id\n    ) {\n      moveTrack(draggingTrackId, track.id)\n    }\n  }\n  const debouncedOnDragEnter = useDebouncedCallback(onDragEnter, 100)\n  const { RenderingComponent, DisplayBlurb } = display\n  const dimmed = draggingTrackId !== undefined && draggingTrackId !== display.id\n\n  return (\n    <div className={classes.root}>\n      {view.trackLabels !== 'hidden' ? (\n        <TrackLabel\n          track={track}\n          className={clsx(\n            classes.trackLabel,\n            view.trackLabels === 'overlapping'\n              ? classes.trackLabelOverlap\n              : classes.trackLabelInline,\n          )}\n        />\n      ) : null}\n\n      <Paper\n        variant=\"outlined\"\n        className={classes.trackRenderingContainer}\n        style={{ height }}\n        onScroll={event => {\n          const target = event.target as HTMLDivElement\n          display.setScrollTop(target.scrollTop)\n        }}\n        onDragEnter={debouncedOnDragEnter}\n        data-testid={`trackRenderingContainer-${view.id}-${trackId}`}\n        role=\"presentation\"\n      >\n        <div\n          ref={ref}\n          className={classes.renderingComponentContainer}\n          style={{ transform: `scaleX(${model.scaleFactor})` }}\n        >\n          <RenderingComponent\n            model={display}\n            blockState={{}}\n            onHorizontalScroll={horizontalScroll}\n          />\n        </div>\n\n        {DisplayBlurb ? (\n          <div\n            style={{\n              position: 'absolute',\n              left: 0,\n              top: display.height - 20,\n            }}\n          >\n            {' '}\n            <DisplayBlurb model={display} />\n          </div>\n        ) : null}\n      </Paper>\n      <div\n        className={classes.overlay}\n        style={{\n          height: display.height,\n          background: dimmed ? 'rgba(0, 0, 0, 0.4)' : undefined,\n        }}\n        onDragEnter={debouncedOnDragEnter}\n      />\n      <ResizeHandle\n        onDrag={display.resizeHeight}\n        className={classes.resizeHandle}\n      />\n    </div>\n  )\n}\n\nexport default observer(TrackContainer)\n","import React, { useRef, useEffect, useState } from 'react'\nimport ReactPropTypes from 'prop-types'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n// material ui\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport { Menu } from '@jbrowse/core/ui'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Popover from '@material-ui/core/Popover'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn'\n\nimport { stringify } from '@jbrowse/core/util'\nimport { LinearGenomeViewStateModel } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => {\n  const background = theme.palette.tertiary\n    ? fade(theme.palette.tertiary.main, 0.7)\n    : fade(theme.palette.primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: theme.palette.tertiary\n        ? theme.palette.tertiary.contrastText\n        : theme.palette.primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LGV; coordX: number }) => {\n    const classes = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={stringify(model.pxToBp(coordX))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction RubberBand({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number | undefined>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const classes = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX, model.bpPerPx])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.setOffsets(undefined, undefined)\n  }\n\n  function zoomToRegion() {\n    if (startX === undefined || anchorPosition === undefined) {\n      return\n    }\n    let leftPx = startX\n    let rightPx = anchorPosition.offsetX\n    if (rightPx < leftPx) {\n      ;[leftPx, rightPx] = [rightPx, leftPx]\n    }\n    const leftOffset = model.pxToBp(leftPx)\n    const rightOffset = model.pxToBp(rightPx)\n    model.moveTo(leftOffset, rightOffset)\n  }\n\n  function getSequence() {\n    if (startX === undefined || anchorPosition === undefined) {\n      return\n    }\n    let leftPx = startX\n    let rightPx = anchorPosition.offsetX\n    // handles clicking and draging to the left\n    if (rightPx < leftPx) {\n      ;[leftPx, rightPx] = [rightPx, leftPx]\n    }\n    const leftOffset = model.pxToBp(leftPx)\n    const rightOffset = model.pxToBp(rightPx)\n    model.setOffsets(leftOffset, rightOffset)\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  const menuItems = [\n    {\n      label: 'Zoom to region',\n      icon: ZoomInIcon,\n      onClick: () => {\n        zoomToRegion()\n        handleClose()\n      },\n    },\n    {\n      label: 'Get sequence',\n      disabled:\n        currentX !== undefined &&\n        startX !== undefined &&\n        Math.abs(currentX - startX) * model.bpPerPx > 500_000_000,\n      icon: MenuOpenIcon,\n      onClick: () => {\n        getSequence()\n        handleClose()\n      },\n    },\n  ]\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberBand_controls\"\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const leftBpOffset = model.pxToBp(left)\n  const rightBpOffset = model.pxToBp(left + width)\n  const numOfBpSelected = Math.ceil(width * model.bpPerPx)\n  return (\n    <>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(leftBpOffset)}</Typography>\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(rightBpOffset)}</Typography>\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberBandText}>\n          {numOfBpSelected.toLocaleString('en-US')} bp\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={menuItems}\n        />\n      ) : null}\n    </>\n  )\n}\n\nRubberBand.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  ControlComponent: ReactPropTypes.node,\n}\n\nRubberBand.defaultProps = {\n  ControlComponent: <div />,\n}\n\nexport default observer(RubberBand)\n","import {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\nimport { makeTicks } from '../util'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  scaleBarContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scaleBarZoomContainer: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  scaleBar: {\n    position: 'absolute',\n    display: 'flex',\n    pointerEvents: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n    zIndex: 1,\n    background: theme.palette.background.paper,\n    lineHeight: 'normal',\n    pointerEvents: 'none',\n  },\n  tick: {\n    position: 'absolute',\n    width: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n  refLabel: {\n    fontSize: '11px',\n    position: 'absolute',\n    left: '2px',\n    top: '-1px',\n    fontWeight: 'bold',\n    lineHeight: 'normal',\n    zIndex: 1,\n    pointerEvents: 'none',\n    background: theme.palette.background.paper,\n  },\n}))\n\nconst RenderedRefNameLabels = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n\n  // find the block that needs pinning to the left side for context\n  let lastLeftBlock = 0\n  model.staticBlocks.forEach((block, i) => {\n    if (block.offsetPx - model.offsetPx < 0) {\n      lastLeftBlock = i\n    }\n  })\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        return block instanceof ContentBlock &&\n          (block.isLeftEndOfDisplayedRegion || index === lastLeftBlock) ? (\n          <Typography\n            key={`refLabel-${block.key}-${index}`}\n            style={{\n              left:\n                index === lastLeftBlock\n                  ? Math.max(0, -model.offsetPx)\n                  : block.offsetPx - model.offsetPx - 1,\n              paddingLeft: index === lastLeftBlock ? 0 : 1,\n            }}\n            className={classes.refLabel}\n            data-testid={`refLabel-${block.refName}`}\n          >\n            {block.refName}\n          </Typography>\n        ) : null\n      })}\n    </>\n  )\n})\n\nconst RenderedScaleBarLabels = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(\n            block.start,\n            block.end,\n            model.bpPerPx,\n            true,\n            false,\n          )\n\n          return (\n            <ContentBlockComponent key={`${block.key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                if (tick.type === 'major') {\n                  const x =\n                    (block.reversed\n                      ? block.end - tick.base\n                      : tick.base - block.start) / model.bpPerPx\n                  const baseNumber = (tick.base + 1).toLocaleString('en-US')\n                  return (\n                    <div\n                      key={tick.base}\n                      className={classes.tick}\n                      style={{ left: x }}\n                    >\n                      {baseNumber ? (\n                        <Typography className={classes.majorTickLabel}>\n                          {baseNumber}\n                        </Typography>\n                      ) : null}\n                    </div>\n                  )\n                }\n                return null\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={block.key} width={block.widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              style={{ background: 'none' }}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\n\nconst ScaleBar = React.forwardRef(\n  (\n    {\n      model,\n      style,\n      className,\n      ...other\n    }: { model: LGV; style?: React.CSSProperties; className?: string },\n    ref,\n  ) => {\n    const classes = useStyles()\n\n    const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n    return (\n      <Paper\n        data-resizer=\"true\" // used to avoid click-and-drag scrolls on trackscontainer\n        className={clsx(classes.scaleBarContainer, className)}\n        variant=\"outlined\"\n        ref={ref}\n        style={style}\n        {...other}\n      >\n        <div\n          className={classes.scaleBarZoomContainer}\n          style={{\n            transform:\n              model.scaleFactor !== 1\n                ? `scaleX(${model.scaleFactor})`\n                : undefined,\n          }}\n        >\n          <div\n            className={classes.scaleBar}\n            style={{\n              left: offsetLeft - 1,\n              width: model.staticBlocks.totalWidthPx,\n              ...style,\n            }}\n          >\n            <RenderedScaleBarLabels model={model} />\n          </div>\n        </div>\n        <RenderedRefNameLabels model={model} />\n      </Paper>\n    )\n  },\n)\n\nexport default observer(ScaleBar)\n","import {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\n\nimport { makeTicks } from '../util'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  verticalGuidesZoomContainer: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n  },\n  verticalGuidesContainer: {\n    position: 'absolute',\n    height: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n    display: 'flex',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    width: 1,\n  },\n  majorTick: {\n    background: theme.palette.text.hint,\n  },\n  minorTick: {\n    background: theme.palette.divider,\n  },\n}))\nconst RenderedVerticalGuides = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(block.start, block.end, model.bpPerPx)\n          return (\n            <ContentBlockComponent key={`${block.key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                const x =\n                  (block.reversed\n                    ? block.end - tick.base\n                    : tick.base - block.start) / model.bpPerPx\n                return (\n                  <div\n                    key={tick.base}\n                    className={clsx(\n                      classes.tick,\n                      tick.type === 'major' || tick.type === 'labeledMajor'\n                        ? classes.majorTick\n                        : classes.minorTick,\n                    )}\n                    style={{ left: x }}\n                  />\n                )\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={block.key} width={block.widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\nfunction VerticalGuides({ model }: { model: LGV }) {\n  const classes = useStyles()\n  // find the block that needs pinning to the left side for context\n  const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n  return (\n    <div\n      className={classes.verticalGuidesZoomContainer}\n      style={{\n        transform:\n          model.scaleFactor !== 1 ? `scaleX(${model.scaleFactor})` : undefined,\n      }}\n    >\n      <div\n        className={classes.verticalGuidesContainer}\n        style={{\n          left: offsetLeft,\n          width: model.staticBlocks.totalWidthPx,\n        }}\n      >\n        <RenderedVerticalGuides model={model} />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(VerticalGuides)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport React, { useRef } from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { LinearGenomeViewStateModel } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(() => ({\n  centerLineContainer: {\n    background: 'transparent',\n    height: '100%',\n    zIndex: 5, // above the track but under menu\n    position: 'absolute',\n    border: '1px black dashed',\n    borderTop: 'none',\n    borderBottom: 'none',\n    pointerEvents: 'none',\n  },\n  centerLineText: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n}))\n\nfunction CenterLine({ model }: { model: LGV }) {\n  const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const classes = useStyles()\n  const startingPosition = width / 2\n\n  return tracks.length ? (\n    <div\n      data-testid=\"centerline_container\"\n      className={classes.centerLineContainer}\n      role=\"presentation\"\n      ref={ref}\n      style={{\n        left: `${startingPosition}px`,\n        width: Math.max(1 / bpPerPx, 1),\n      }}\n    >\n      {centerLineInfo && (\n        <div\n          // text that indicates what bp is center, positioned\n          // at the bottom right of the center line\n          data-testid=\"centerline_text\"\n          className={classes.centerLineText}\n          role=\"presentation\"\n          style={{\n            left: Math.max(1 / bpPerPx, 1) + 5,\n            top: trackHeights,\n          }}\n        >\n          {/* change bp to refName */}\n          {centerLineInfo.refName}:{' '}\n          {Math.max(Math.round(centerLineInfo.offset) + 1, 0)}\n        </div>\n      )}\n    </div>\n  ) : null\n}\n\nCenterLine.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n}\n\nexport default observer(CenterLine)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React, { useEffect, useRef, useState } from 'react'\nimport normalizeWheel from 'normalize-wheel'\n\nimport {\n  LinearGenomeViewStateModel,\n  RESIZE_HANDLE_HEIGHT,\n  SCALE_BAR_HEIGHT,\n} from '..'\nimport RubberBand from './RubberBand'\nimport ScaleBar from './ScaleBar'\nimport VerticalGuides from './VerticalGuides'\nimport CenterLine from './CenterLine'\n\nconst useStyles = makeStyles(theme => ({\n  tracksContainer: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    overflow: 'hidden',\n  },\n  spacer: {\n    position: 'relative',\n    height: RESIZE_HANDLE_HEIGHT,\n  },\n}))\n\ntype LGV = Instance<LinearGenomeViewStateModel>\ntype Timer = ReturnType<typeof setTimeout>\n\nfunction TracksContainer({\n  children,\n  model,\n}: {\n  children: React.ReactNode\n  model: LGV\n}) {\n  const classes = useStyles()\n  // refs are to store these variables to avoid repeated rerenders associated\n  // with useState/setState\n  const delta = useRef(0)\n  const scheduled = useRef(false)\n  const timeout = useRef<Timer>()\n  const ref = useRef<HTMLDivElement>(null)\n  const prevX = useRef<number>(0)\n\n  const [mouseDragging, setMouseDragging] = useState(false)\n\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const currX = event.clientX\n      const distance = currX - prevX.current\n      if (distance) {\n        // use rAF to make it so multiple event handlers aren't fired per-frame\n        // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(-distance)\n            scheduled.current = false\n            prevX.current = event.clientX\n          })\n        }\n      }\n    }\n\n    function globalMouseUp() {\n      prevX.current = 0\n      if (mouseDragging) {\n        setMouseDragging(false)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n    }\n    return cleanup\n  }, [model, mouseDragging, prevX])\n\n  function mouseDown(event: React.MouseEvent) {\n    // check if clicking a draggable element or a resize handle\n    const target = event.target as HTMLElement\n    if (target.draggable || target.dataset.resizer) {\n      return\n    }\n\n    // otherwise do click and drag scroll\n    if (event.button === 0) {\n      prevX.current = event.clientX\n      setMouseDragging(true)\n    }\n  }\n\n  // this local mouseup is used in addition to the global because sometimes\n  // the global add/remove are not called in time, resulting in issue #533\n  function mouseUp(event: React.MouseEvent) {\n    event.preventDefault()\n    setMouseDragging(false)\n  }\n\n  function mouseLeave(event: React.MouseEvent) {\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    const curr = ref.current\n    // if ctrl is held down, zoom in with y-scroll\n    // else scroll horizontally with x-scroll\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      if (origEvent.ctrlKey === true) {\n        origEvent.preventDefault()\n        delta.current += event.pixelY / 500\n        model.setScaleFactor(\n          delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n        )\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          model.setScaleFactor(1)\n          model.zoomTo(\n            delta.current > 0\n              ? model.bpPerPx * (1 + delta.current)\n              : model.bpPerPx / (1 - delta.current),\n          )\n          delta.current = 0\n        }, 300)\n      } else {\n        // this is needed to stop the event from triggering \"back button\n        // action\" on MacOSX etc.  but is a heuristic to avoid preventing the\n        // inner-track scroll behavior\n        if (Math.abs(event.pixelX) > Math.abs(2 * event.pixelY)) {\n          origEvent.preventDefault()\n        }\n        delta.current += event.pixelX\n        if (!scheduled.current) {\n          // use rAF to make it so multiple event handlers aren't fired per-frame\n          // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(delta.current)\n            delta.current = 0\n            scheduled.current = false\n          })\n        }\n      }\n    }\n    if (curr) {\n      curr.addEventListener('wheel', onWheel)\n      return () => {\n        curr.removeEventListener('wheel', onWheel)\n      }\n    }\n    return () => {}\n  }, [model])\n\n  return (\n    <div\n      ref={ref}\n      role=\"presentation\"\n      className={classes.tracksContainer}\n      onMouseDown={mouseDown}\n      onMouseUp={mouseUp}\n      onMouseLeave={mouseLeave}\n    >\n      <VerticalGuides model={model} />\n      {model.showCenterLine ? <CenterLine model={model} /> : null}\n\n      <RubberBand\n        model={model}\n        ControlComponent={\n          <ScaleBar\n            model={model}\n            style={{ height: SCALE_BAR_HEIGHT, boxSizing: 'border-box' }}\n          />\n        }\n      />\n      <div className={classes.spacer} />\n      {children}\n    </div>\n  )\n}\n\nexport default observer(TracksContainer)\n","import React from 'react'\nimport { getEnv, resolveIdentifier, getRoot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Paper,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { LinearGenomeViewModel } from '../..'\n\nexport const useStyles = makeStyles(theme => ({\n  dialogContent: {\n    width: '80em',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function SearchResultsDialog({\n  model,\n  optAssemblyName,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  optAssemblyName?: string\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const { assemblyManager } = session\n  let assemblyName = optAssemblyName\n  if (model.displayedRegions.length > 0) {\n    assemblyName = model.displayedRegions[0]?.assemblyName\n  }\n  if (!assemblyName) {\n    throw new Error(`Assembly name not found`)\n  }\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const assemblyRegions = assembly.regions\n\n  function handleClick(location: string) {\n    try {\n      const newRegion = assemblyRegions.find(\n        region => location === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        model.navToLocString(location, assemblyName)\n      }\n    } catch (e) {\n      console.warn(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  function handleShowTrack(trackId: string) {\n    const trackConfigSchema = pluginManager.pluggableConfigSchemaType('track')\n    const configuration = resolveIdentifier(\n      trackConfigSchema,\n      getRoot(model),\n      trackId,\n    )\n    // check if we have any tracks with that configuration\n    const shownTracks = model.tracks.filter(\n      t => t.configuration === configuration,\n    )\n    if (shownTracks.length === 0) {\n      model.showTrack(trackId)\n    }\n  }\n\n  function getTrackName(trackId: string | undefined) {\n    if (trackId) {\n      const trackConfigSchema = pluginManager.pluggableConfigSchemaType('track')\n      const configuration = resolveIdentifier(\n        trackConfigSchema,\n        getRoot(model),\n        trackId,\n      )\n      if (configuration) {\n        return configuration.name?.value\n      }\n    }\n    return ''\n  }\n\n  return (\n    <Dialog open maxWidth=\"xl\" onClose={handleClose}>\n      <DialogTitle id=\"search-results-dialog\">\n        Search Results\n        {handleClose ? (\n          <IconButton\n            data-testid=\"close-resultsDialog\"\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n      <DialogContent>\n        {model.searchResults?.length === 0 ||\n        model.searchResults === undefined ? (\n          <Typography>\n            {`No results found for `}\n            <b>{model.searchQuery}</b>\n          </Typography>\n        ) : (\n          <>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {`Showing results for `}\n              <b>{model.searchQuery}</b>\n            </DialogContentText>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell align=\"right\">Location</TableCell>\n                    <TableCell align=\"right\">Track</TableCell>\n                    <TableCell align=\"right\" />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {model.searchResults.map((result: BaseResult, index) => (\n                    <TableRow key={`${result.getLabel()}-${index}`}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {result.getLabel()}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {result.getLocation()}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {getTrackName(result.getTrackId()) || 'N/A'}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          onClick={() => {\n                            handleClick(result.getLocation())\n                            handleClose()\n                          }}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Go to location\n                        </Button>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          onClick={() => {\n                            handleClick(result.getLocation())\n                            const resultTrackId = result.getTrackId()\n                            if (resultTrackId) {\n                              handleShowTrack(resultTrackId)\n                            }\n                            handleClose()\n                          }}\n                          disabled={!getTrackName(result.getTrackId())}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Show Track\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        )}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n// material ui\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\n// other\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport SearchResultsDialog from './SearchResultsDialog'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(2),\n  },\n  importFormEntry: {\n    minWidth: 180,\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nconst ImportForm = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const { pluginManager } = getEnv(session)\n  const { textSearchManager } = pluginManager.rootModel\n  const { rankSearchResults } = model\n  const [selectedAssemblyIdx, setSelectedAssemblyIdx] = useState(0)\n  const [selectedRegion, setSelectedRegion] = useState<string | undefined>(\n    undefined,\n  )\n  const [assemblyRegions, setAssemblyRegions] = useState<Region[]>([])\n  const error = !assemblyNames.length ? 'No configured assemblies' : ''\n  const hasError = Boolean(error)\n  const assemblyName = assemblyNames[selectedAssemblyIdx]\n  const displayName = assemblyName && !error ? selectedAssemblyIdx : ''\n  const searchScope = model.searchScope(assemblyName)\n  useEffect(() => {\n    let done = false\n    ;(async () => {\n      if (assemblyName) {\n        const assembly = await assemblyManager.waitForAssembly(assemblyName)\n        if (assembly && assembly.regions) {\n          const regions = assembly.regions\n          if (!done && regions) {\n            setSelectedRegion(regions[0].refName)\n            setAssemblyRegions(regions)\n          }\n        }\n      }\n    })()\n    return () => {\n      done = true\n    }\n  }, [assemblyManager, assemblyName])\n\n  function setSelectedValue(selectedOption: BaseResult) {\n    setSelectedRegion(selectedOption.getLocation())\n  }\n\n  async function handleSelectedRegion(input: string) {\n    const newRegion = assemblyRegions.find(r => selectedRegion === r.refName)\n    if (newRegion) {\n      model.setDisplayedRegions([newRegion])\n      // we use showAllRegions after setDisplayedRegions to make the entire\n      // region visible, xref #1703\n      model.showAllRegions()\n    } else {\n      const results =\n        (await textSearchManager?.search(\n          {\n            queryString: input.toLocaleLowerCase(),\n            searchType: 'exact',\n          },\n          searchScope,\n          rankSearchResults,\n        )) || []\n      if (results.length > 0) {\n        model.setSearchResults(results, input.toLocaleLowerCase())\n      } else {\n        try {\n          input && model.navToLocString(input, assemblyName)\n        } catch (e) {\n          if (`${e}` === `Error: Unknown reference sequence \"${input}\"`) {\n            model.setSearchResults(results, input.toLocaleLowerCase())\n          } else {\n            console.warn(e)\n            session.notify(`${e}`, 'warning')\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      {model.isSearchDialogDisplayed ? (\n        <SearchResultsDialog\n          model={model}\n          optAssemblyName={assemblyName}\n          handleClose={() => {\n            model.setSearchResults(undefined, undefined)\n          }}\n        />\n      ) : null}\n      <Container className={classes.importFormContainer}>\n        <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TextField\n              select\n              variant=\"outlined\"\n              value={displayName}\n              onChange={event => {\n                setSelectedAssemblyIdx(Number(event.target.value))\n              }}\n              label=\"Assembly\"\n              helperText={error || 'Select assembly to view'}\n              error={hasError}\n              disabled={hasError}\n              margin=\"normal\"\n              className={classes.importFormEntry}\n            >\n              {assemblyNames.map((name, idx) => (\n                <MenuItem key={name} value={idx}>\n                  {name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            {assemblyName ? (\n              selectedRegion !== undefined && model.volatileWidth ? (\n                <RefNameAutocomplete\n                  model={model}\n                  assemblyName={\n                    error ? undefined : assemblyNames[selectedAssemblyIdx]\n                  }\n                  value={selectedRegion}\n                  onSelect={option => {\n                    setSelectedValue(option)\n                  }}\n                  TextFieldProps={{\n                    margin: 'normal',\n                    variant: 'outlined',\n                    className: classes.importFormEntry,\n                    helperText: 'Enter a sequence or locstring',\n                    onBlur: event => {\n                      if ((event.target as HTMLInputElement).value !== '') {\n                        setSelectedRegion(\n                          (event.target as HTMLInputElement).value,\n                        )\n                      }\n                    },\n                    onKeyPress: event => {\n                      const inputValue = (event.target as HTMLInputElement)\n                        .value\n                      // maybe check regular expression here to see if it's a locstring\n                      // try defaulting exact matches to first exact match\n                      if (event.key === 'Enter') {\n                        handleSelectedRegion(inputValue)\n                      }\n                    },\n                  }}\n                />\n              ) : (\n                <CircularProgress\n                  role=\"progressbar\"\n                  color=\"inherit\"\n                  size={20}\n                  disableShrink\n                />\n              )\n            ) : null}\n          </Grid>\n          <Grid item>\n            <Button\n              disabled={!selectedRegion}\n              className={classes.button}\n              onClick={() => {\n                if (selectedRegion) {\n                  handleSelectedRegion(selectedRegion)\n                }\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Open\n            </Button>\n            <Button\n              disabled={!selectedRegion}\n              className={classes.button}\n              onClick={() => {\n                model.showAllRegionsInAssembly(assemblyName)\n              }}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Show all regions in assembly\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n})\n\nexport default ImportForm\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport Paper from '@material-ui/core/Paper'\nimport Menu from '@jbrowse/core/ui/Menu'\nimport { LinearGenomeViewModel } from '..'\n\nconst MiniControls = observer((props: { model: LinearGenomeViewModel }) => {\n  const { model } = props\n  const { bpPerPx, maxBpPerPx, minBpPerPx, scaleFactor } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLElement>()\n\n  return (\n    <>\n      <Paper style={{ background: '#aaa7' }}>\n        <IconButton\n          color=\"secondary\"\n          onClick={event => {\n            setAnchorEl(event.currentTarget)\n          }}\n        >\n          <ArrowDown />\n        </IconButton>\n\n        <IconButton\n          data-testid=\"zoom_out\"\n          onClick={() => {\n            model.zoom(bpPerPx * 2)\n          }}\n          disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n          color=\"secondary\"\n        >\n          <ZoomOut />\n        </IconButton>\n        <IconButton\n          data-testid=\"zoom_in\"\n          onClick={() => {\n            model.zoom(model.bpPerPx / 2)\n          }}\n          disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n          color=\"secondary\"\n        >\n          <ZoomIn />\n        </IconButton>\n      </Paper>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setAnchorEl(undefined)\n        }}\n        onClose={() => {\n          setAnchorEl(undefined)\n        }}\n        menuItems={model.menuItems}\n      />\n    </>\n  )\n})\n\nexport default MiniControls\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { saveAs } from 'file-saver'\nimport { Region } from '@jbrowse/core/util/types'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport copy from 'copy-to-clipboard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Container,\n  Typography,\n  Divider,\n  IconButton,\n  TextField,\n} from '@material-ui/core'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport CloseIcon from '@material-ui/icons/Close'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { getSession } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { formatSeqFasta, SeqChunk } from '@jbrowse/core/util/formatFastaStrings'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  loadingMessage: {\n    padding: theme.spacing(5),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  dialogContent: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n}))\n\n/**\n * Fetches and returns a list features for a given list of regions\n * @param selectedRegions - Region[]\n * @returns Features[]\n */\nasync function fetchSequence(\n  self: LinearGenomeViewModel,\n  selectedRegions: Region[],\n) {\n  const session = getSession(self)\n  const assemblyName =\n    self.leftOffset?.assemblyName || self.rightOffset?.assemblyName || ''\n  const { rpcManager, assemblyManager } = session\n  const assemblyConfig = assemblyManager.get(assemblyName)?.configuration\n\n  // assembly configuration\n  const adapterConfig = readConfObject(assemblyConfig, ['sequence', 'adapter'])\n\n  const sessionId = 'getSequence'\n  const chunks = (await Promise.all(\n    selectedRegions.map(region =>\n      rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig,\n        region,\n        sessionId,\n      }),\n    ),\n  )) as Feature[][]\n\n  // assumes that we get whole sequence in a single getFeatures call\n  return chunks.map(chunk => chunk[0])\n}\n\nfunction SequenceDialog({\n  model,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const [error, setError] = useState<Error>()\n  const [sequence, setSequence] = useState('')\n  const loading = Boolean(!sequence) || Boolean(error)\n  const { leftOffset, rightOffset } = model\n\n  // avoid infinite looping of useEffect\n  // random note: the current selected region can't be a computed because it\n  // uses action on base1dview even though it's on the ephemeral base1dview\n  const regionsSelected = useMemo(\n    () => model.getSelectedRegions(leftOffset, rightOffset),\n    [model, leftOffset, rightOffset],\n  )\n\n  useEffect(() => {\n    let active = true\n\n    function formatSequence(seqChunks: Feature[]) {\n      const sequenceChunks: SeqChunk[] = []\n      const incompleteSeqErrs: string[] = []\n      seqChunks.forEach((chunk: Feature) => {\n        const chunkSeq = chunk.get('seq')\n        const chunkRefName = chunk.get('refName')\n        const chunkStart = chunk.get('start') + 1\n        const chunkEnd = chunk.get('end')\n        const chunkLocstring = `${chunkRefName}:${chunkStart}-${chunkEnd}`\n        if (chunkSeq) {\n          sequenceChunks.push({ header: chunkLocstring, seq: chunkSeq })\n          if (chunkSeq.length !== chunkEnd - chunkStart + 1) {\n            incompleteSeqErrs.push(\n              `${chunkLocstring} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(\n                chunkEnd - chunkStart\n              ).toLocaleString()}`,\n            )\n          }\n        }\n      })\n      if (incompleteSeqErrs.length > 0) {\n        session.notify(\n          `Unable to retrieve complete reference sequence from regions:${incompleteSeqErrs.join()}`,\n        )\n      }\n      setSequence(formatSeqFasta(sequenceChunks))\n    }\n\n    ;(async () => {\n      try {\n        if (regionsSelected.length > 0) {\n          const chunks = await fetchSequence(model, regionsSelected)\n          if (active) {\n            formatSequence(chunks)\n          }\n        } else {\n          throw new Error('Selected region is out of bounds')\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [model, session, regionsSelected, setSequence])\n\n  const sequenceTooLarge = sequence.length > 1_000_000\n\n  return (\n    <Dialog\n      data-testid=\"sequence-dialog\"\n      maxWidth=\"xl\"\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            data-testid=\"close-seqDialog\"\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n              model.setOffsets(undefined, undefined)\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n        {loading && !error ? (\n          <Container>\n            Retrieving reference sequence...\n            <CircularProgress\n              style={{\n                marginLeft: 10,\n              }}\n              size={20}\n              disableShrink\n            />\n          </Container>\n        ) : null}\n        {sequence !== undefined ? (\n          <TextField\n            data-testid=\"rubberband-sequence\"\n            variant=\"outlined\"\n            multiline\n            rows={3}\n            rowsMax={5}\n            disabled={sequenceTooLarge}\n            className={classes.dialogContent}\n            fullWidth\n            value={\n              sequenceTooLarge\n                ? 'Reference sequence too large to display, use the download FASTA button'\n                : sequence\n            }\n            InputProps={{\n              readOnly: true,\n              classes: {\n                input: classes.textAreaFont,\n              },\n            }}\n          />\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            copy(sequence || '')\n            session.notify('Copied to clipboard', 'success')\n          }}\n          disabled={loading || sequenceTooLarge}\n          color=\"primary\"\n          startIcon={<ContentCopyIcon />}\n        >\n          Copy to clipboard\n        </Button>\n        <Button\n          onClick={() => {\n            const seqFastaFile = new Blob([sequence || ''], {\n              type: 'text/x-fasta;charset=utf-8',\n            })\n            saveAs(seqFastaFile, 'jbrowse_ref_seq.fa')\n          }}\n          disabled={loading}\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n        >\n          Download FASTA\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n            model.setOffsets(undefined, undefined)\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SequenceDialog)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\nimport { makeTicks } from '../util'\n\nfunction mathPower(num: number): string {\n  if (num < 999) {\n    return String(num)\n  }\n  return `${mathPower(~~(num / 1000))},${`00${~~(num % 1000)}`.substr(-3, 3)}`\n}\n\nconst useStyles = makeStyles((/* theme */) => ({\n  majorTickLabel: {\n    fontSize: '11px',\n    // fill: theme.palette.text.primary,\n  },\n  majorTick: {\n    stroke: '#555',\n    // stroke: theme.palette.text.secondary,\n  },\n  minorTick: {\n    stroke: '#999',\n    // stroke: theme.palette.text.hint,\n  },\n}))\n\nfunction Ruler({\n  start,\n  end,\n  bpPerPx,\n  reversed,\n  major,\n  minor,\n}: {\n  start: number\n  end: number\n  bpPerPx: number\n  reversed?: boolean\n  major: boolean\n  minor: boolean\n}) {\n  const classes = useStyles()\n  const ticks = makeTicks(start, end, bpPerPx, major, minor)\n  return (\n    <>\n      {ticks.map(tick => {\n        const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n        return (\n          <line\n            key={tick.base}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={tick.type === 'major' ? '#555' : '#999'}\n            className={\n              tick.type === 'major' ? classes.majorTick : classes.minorTick\n            }\n            data-bp={tick.base}\n          />\n        )\n      })}\n      {ticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n          return (\n            <text\n              x={x - 3}\n              y={7 + 11}\n              key={`label-${tick.base}`}\n              style={{ fontSize: '11px' }}\n              className={classes.majorTickLabel}\n            >\n              {mathPower(tick.base + 1)}\n            </text>\n          )\n        })}\n    </>\n  )\n}\n\nRuler.propTypes = {\n  start: ReactPropTypes.number.isRequired,\n  end: ReactPropTypes.number.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  reversed: ReactPropTypes.bool,\n  major: ReactPropTypes.bool,\n  minor: ReactPropTypes.bool,\n}\n\nRuler.defaultProps = {\n  reversed: false,\n  major: true,\n  minor: true,\n}\n\nexport default observer(Ruler)\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\n\n// material ui things\nimport { Button, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// misc\nimport { when } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getParent, Instance } from 'mobx-state-tree'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\n// locals\nimport { LinearGenomeViewStateModel, ExportSvgOptions } from '..'\nimport Header from './Header'\nimport TrackContainer from './TrackContainer'\nimport TracksContainer from './TracksContainer'\nimport ImportForm from './ImportForm'\nimport MiniControls from './MiniControls'\nimport SequenceDialog from './SequenceDialog'\nimport SearchResultsDialog from './SearchResultsDialog'\nimport Ruler from './Ruler'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  errorMessage: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  spacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst LinearGenomeView = observer(({ model }: { model: LGV }) => {\n  const { tracks, error, hideHeader, initialized, hasDisplayedRegions } = model\n  const classes = useStyles()\n\n  if (!initialized) {\n    return null\n  }\n  if (!hasDisplayedRegions) {\n    return <ImportForm model={model} />\n  }\n  return (\n    <div style={{ position: 'relative' }}>\n      {model.isSeqDialogDisplayed ? (\n        <SequenceDialog\n          model={model}\n          handleClose={() => {\n            model.setOffsets(undefined, undefined)\n          }}\n        />\n      ) : null}\n      {model.isSearchDialogDisplayed ? (\n        <SearchResultsDialog\n          model={model}\n          handleClose={() => {\n            model.setSearchResults(undefined, undefined)\n          }}\n        />\n      ) : null}\n      {!hideHeader ? (\n        <Header model={model} />\n      ) : (\n        <div\n          style={{\n            position: 'absolute',\n            right: 0,\n            zIndex: 1001,\n          }}\n        >\n          <MiniControls model={model} />\n        </div>\n      )}\n      {error ? (\n        <Paper variant=\"outlined\" className={classes.errorMessage}>\n          <Typography color=\"error\">{error.message}</Typography>\n        </Paper>\n      ) : (\n        <>\n          <TracksContainer model={model}>\n            {!tracks.length ? (\n              <Paper variant=\"outlined\" className={classes.errorMessage}>\n                <Typography>No tracks active.</Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={model.activateTrackSelector}\n                  style={{ zIndex: 1000 }}\n                >\n                  <TrackSelectorIcon className={classes.spacer} />\n                  Open track selector\n                </Button>\n              </Paper>\n            ) : (\n              tracks.map(track => (\n                <TrackContainer key={track.id} model={model} track={track} />\n              ))\n            )}\n          </TracksContainer>\n        </>\n      )}\n    </div>\n  )\n})\n\nexport default LinearGenomeView\n\nfunction ScaleBar({ model, fontSize }: { model: LGV; fontSize: number }) {\n  const {\n    offsetPx,\n    dynamicBlocks: { totalWidthPxWithoutBorders: totalWidthPx, totalBp },\n  } = model\n  let displayBp\n  if (Math.floor(totalBp / 1000000) > 0) {\n    displayBp = `${parseFloat((totalBp / 1000000).toPrecision(3))}Mbp`\n  } else if (Math.floor(totalBp / 1000) > 0) {\n    displayBp = `${parseFloat((totalBp / 1000).toPrecision(3))}Kbp`\n  } else {\n    displayBp = `${Math.floor(totalBp)}bp`\n  }\n  const x0 = Math.max(-offsetPx, 0)\n  const x1 = x0 + totalWidthPx\n  return (\n    <>\n      <line x1={x0} x2={x1} y1={10} y2={10} stroke=\"black\" />\n      <line x1={x0} x2={x0} y1={5} y2={15} stroke=\"black\" />\n      <line x1={x1} x2={x1} y1={5} y2={15} stroke=\"black\" />\n      <text\n        x={x0 + (x1 - x0) / 2}\n        y={fontSize * 2}\n        textAnchor=\"middle\"\n        fontSize={fontSize}\n      >\n        {displayBp}\n      </text>\n    </>\n  )\n}\n\nfunction SVGRuler({\n  model,\n  fontSize,\n  width,\n}: {\n  model: LGV\n  fontSize: number\n  width: number\n}) {\n  const {\n    dynamicBlocks: { contentBlocks },\n    offsetPx: viewOffsetPx,\n    bpPerPx,\n  } = model\n  const renderRuler = contentBlocks.length < 5\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clip-ruler\">\n          <rect x={0} y={0} width={width} height={20} />\n        </clipPath>\n      </defs>\n      {contentBlocks.map(block => {\n        const offsetLeft = block.offsetPx - viewOffsetPx\n        return (\n          <g key={`${block.key}`} transform={`translate(${offsetLeft} 0)`}>\n            <text x={offsetLeft / bpPerPx} y={fontSize} fontSize={fontSize}>\n              {block.refName}\n            </text>\n            {renderRuler ? (\n              <g transform=\"translate(0 20)\" clipPath=\"url(#clip-ruler)\">\n                <Ruler\n                  start={block.start}\n                  end={block.end}\n                  bpPerPx={bpPerPx}\n                  reversed={block.reversed}\n                />\n              </g>\n            ) : (\n              <line\n                strokeWidth={1}\n                stroke=\"black\"\n                x1={block.start / bpPerPx}\n                x2={block.end / bpPerPx}\n                y1={20}\n                y2={20}\n              />\n            )}\n          </g>\n        )\n      })}\n    </>\n  )\n}\n\nconst fontSize = 15\nconst rulerHeight = 50\nconst textHeight = fontSize + 5\nconst paddingHeight = 20\nconst headerHeight = textHeight + 20\n\nconst totalHeight = (tracks: { displays: { height: number }[] }[]) => {\n  return tracks.reduce((accum, track) => {\n    const display = track.displays[0]\n    return accum + display.height + paddingHeight + textHeight\n  }, 0)\n}\n\n// SVG component, ruler and assembly name\nconst SVGHeader = ({ model }: { model: LGV }) => {\n  const { width, assemblyNames } = model\n  const assemblyName = assemblyNames.length > 1 ? '' : assemblyNames[0]\n  return (\n    <g id=\"header\">\n      <text x={0} y={fontSize} fontSize={fontSize}>\n        {assemblyName}\n      </text>\n      <g transform={`translate(0 ${fontSize})`}>\n        <ScaleBar model={model} fontSize={fontSize} />\n      </g>\n      <g transform={`translate(0 ${rulerHeight})`}>\n        <SVGRuler model={model} fontSize={fontSize} width={width} />\n      </g>\n    </g>\n  )\n}\n\n// SVG component, region separator\nconst SVGRegionSeparators = ({ model }: { model: LGV }) => {\n  const { dynamicBlocks, tracks } = model\n  const initialOffset = headerHeight + rulerHeight + 20\n  const height = totalHeight(tracks)\n\n  return (\n    <>\n      {dynamicBlocks.contentBlocks.slice(1).map(block => (\n        <line\n          key={block.key}\n          x1={block.offsetPx - model.offsetPx}\n          x2={block.offsetPx - model.offsetPx}\n          y1={initialOffset}\n          y2={height}\n          stroke=\"black\"\n          strokeOpacity={0.3}\n        />\n      ))}\n    </>\n  )\n}\n\n// SVG component, tracks\nfunction SVGTracks({\n  displayResults,\n  model,\n  offset,\n}: {\n  displayResults: {\n    track: {\n      configuration: AnyConfigurationModel\n      displays: { height: number }[]\n    }\n    result: string\n  }[]\n  model: LGV\n  offset: number\n}) {\n  return (\n    <>\n      {displayResults.map(({ track, result }) => {\n        const current = offset\n        const trackName =\n          getConf(track, 'name') ||\n          `Reference sequence (${readConfObject(\n            getParent(track.configuration),\n            'name',\n          )})`\n        const display = track.displays[0]\n        offset += display.height + paddingHeight + textHeight\n        return (\n          <g\n            key={track.configuration.trackId}\n            transform={`translate(0 ${current})`}\n          >\n            <text fontSize={fontSize} x={Math.max(-model.offsetPx, 0)}>\n              {trackName}\n            </text>\n            <g transform={`translate(0 ${textHeight})`}>{result}</g>\n          </g>\n        )\n      })}\n    </>\n  )\n}\n\n// render LGV to SVG\nexport async function renderToSvg(model: LGV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const { width, tracks } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight + 20\n  const height = totalHeight(tracks) + offset\n  const displayResults = await Promise.all(\n    tracks.map(async track => {\n      const display = track.displays[0]\n      await when(() => (display.ready !== undefined ? display.ready : true))\n      const result = await display.renderSvg(opts)\n      return { track, result }\n    }),\n  )\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox={[0, 0, width + shift * 2, height].toString()}\n    >\n      {/* background white */}\n      <rect width={width + shift * 2} height={height} fill=\"white\" />\n\n      <g stroke=\"none\" transform={`translate(${shift} ${fontSize})`}>\n        <SVGHeader model={model} />\n        <SVGTracks\n          model={model}\n          displayResults={displayResults}\n          offset={offset}\n        />\n        <SVGRegionSeparators model={model} />\n      </g>\n    </svg>,\n  )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n  Typography,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { LinearGenomeViewModel as LGV } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function ExportSvgDlg({\n  model,\n  handleClose,\n}: {\n  model: LGV\n  handleClose: () => void\n}) {\n  const [rasterizeLayers, setRasterizeLayers] = useState(\n    typeof OffscreenCanvas !== 'undefined',\n  )\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<Error>()\n  const classes = useStyles()\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Export SVG\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        {error ? (\n          <div style={{ color: 'red' }}>{`${error}`}</div>\n        ) : loading ? (\n          <div>\n            <CircularProgress size={20} style={{ marginRight: 20 }} />\n            <Typography display=\"inline\">Creating SVG</Typography>\n          </div>\n        ) : null}\n\n        {typeof OffscreenCanvas !== 'undefined' ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rasterizeLayers}\n                onChange={() => setRasterizeLayers(val => !val)}\n              />\n            }\n            label=\"Rasterize canvas based tracks? File may be much larger if this is turned off\"\n          />\n        ) : (\n          <Typography>\n            Note: rasterizing layers not yet supported in this browser, so SVG\n            size may be large\n          </Typography>\n        )}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={async () => {\n            setLoading(true)\n            setError(undefined)\n            try {\n              await model.exportSvg({ rasterizeLayers })\n              handleClose()\n            } catch (e) {\n              setError(e)\n            } finally {\n              setLoading(false)\n            }\n          }}\n        >\n          Submit\n        </Button>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction ReturnToImportFormDialog({\n  model,\n  handleClose,\n}: {\n  model: { clearView: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose}>\n      <DialogTitle>\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        <Typography>\n          Are you sure you want to return to the import form? This will lose\n          your current view\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.clearView()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"secondary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ReturnToImportFormDialog)\n","import { getConf } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { Region } from '@jbrowse/core/util/types'\nimport { ElementId, Region as MUIRegion } from '@jbrowse/core/util/types/mst'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  assembleLocString,\n  clamp,\n  findLastIndex,\n  getContainingView,\n  getSession,\n  isViewContainer,\n  parseLocString,\n  springAnimate,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { BlockSet, BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport calculateStaticBlocks from '@jbrowse/core/util/calculateStaticBlocks'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\n// misc\nimport { transaction, autorun } from 'mobx'\nimport {\n  getSnapshot,\n  types,\n  cast,\n  Instance,\n  getRoot,\n  resolveIdentifier,\n  addDisposer,\n} from 'mobx-state-tree'\n\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport SyncAltIcon from '@material-ui/icons/SyncAlt'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport LabelIcon from '@material-ui/icons/Label'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport clone from 'clone'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { saveAs } from 'file-saver'\nimport { renderToSvg } from './components/LinearGenomeView'\nimport ExportSvgDlg from './components/ExportSvgDialog'\nimport ReturnToImportFormDlg from './components/ReturnToImportFormDialog'\n\nexport { default as ReactComponent } from './components/LinearGenomeView'\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n  coord?: number\n  reversed?: boolean\n  assemblyName?: string\n  oob?: boolean\n}\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n}\n\nfunction calculateVisibleLocStrings(contentBlocks: BaseBlock[]) {\n  if (!contentBlocks.length) {\n    return ''\n  }\n  const isSingleAssemblyName = contentBlocks.every(\n    block => block.assemblyName === contentBlocks[0].assemblyName,\n  )\n  const locs = contentBlocks.map(block =>\n    assembleLocString({\n      ...block,\n      start: Math.round(block.start),\n      end: Math.round(block.end),\n      assemblyName: isSingleAssemblyName ? undefined : block.assemblyName,\n    }),\n  )\n  return locs.join(';')\n}\n\nexport interface NavLocation {\n  refName: string\n  start?: number\n  end?: number\n  assemblyName?: string\n}\n\nexport const HEADER_BAR_HEIGHT = 48\nexport const HEADER_OVERVIEW_HEIGHT = 20\nexport const SCALE_BAR_HEIGHT = 17\nexport const RESIZE_HANDLE_HEIGHT = 3\nexport const INTER_REGION_PADDING_WIDTH = 2\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('LinearGenomeView', {\n        id: ElementId,\n        type: types.literal('LinearGenomeView'),\n        offsetPx: 0,\n        bpPerPx: 1,\n        displayedRegions: types.array(MUIRegion),\n\n        // we use an array for the tracks because the tracks are displayed in a\n        // specific order that we need to keep.\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n        hideHeader: false,\n        hideHeaderOverview: false,\n        trackSelectorType: types.optional(\n          types.enumeration(['hierarchical']),\n          'hierarchical',\n        ),\n        trackLabels: 'overlapping' as 'overlapping' | 'hidden' | 'offset',\n        showCenterLine: false,\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      minimumBlockWidth: 3,\n      draggingTrackId: undefined as undefined | string,\n      error: undefined as undefined | Error,\n\n      // array of callbacks to run after the next set of the displayedRegions,\n      // which is basically like an onLoad\n      afterDisplayedRegionsSetCallbacks: [] as Function[],\n      scaleFactor: 1,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      trackRefs: {} as { [key: string]: any },\n      coarseDynamicBlocks: [] as BaseBlock[],\n      coarseTotalBp: 0,\n      leftOffset: undefined as undefined | BpOffset,\n      rightOffset: undefined as undefined | BpOffset,\n      searchResults: undefined as undefined | BaseResult[],\n      searchQuery: undefined as undefined | string,\n    }))\n    .views(self => ({\n      get width(): number {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'width undefined, make sure to check for model.initialized',\n          )\n        }\n        return self.volatileWidth\n      },\n    }))\n    .views(self => ({\n      get initialized() {\n        const { assemblyManager } = getSession(self)\n\n        // if the assemblyManager is tracking a given assembly name, wait for\n        // it to be loaded. this is done by looking in the assemblyManager's\n        // assembly list, and then waiting on it's initialized state which is\n        // updated later\n        const assembliesInitialized = this.assemblyNames.every(assemblyName => {\n          if (\n            assemblyManager.assemblyList\n              ?.map(asm => asm.name)\n              .includes(assemblyName)\n          ) {\n            return (assemblyManager.get(assemblyName) || {}).initialized\n          }\n          return true\n        })\n\n        return self.volatileWidth !== undefined && assembliesInitialized\n      },\n      get hasDisplayedRegions() {\n        return self.displayedRegions.length > 0\n      },\n      get isSeqDialogDisplayed() {\n        return self.leftOffset && self.rightOffset\n      },\n      get isSearchDialogDisplayed() {\n        return self.searchResults !== undefined\n      },\n      get scaleBarHeight() {\n        return SCALE_BAR_HEIGHT + RESIZE_HANDLE_HEIGHT\n      },\n      get headerHeight() {\n        if (self.hideHeader) {\n          return 0\n        }\n        if (self.hideHeaderOverview) {\n          return HEADER_BAR_HEIGHT\n        }\n        return HEADER_BAR_HEIGHT + HEADER_OVERVIEW_HEIGHT\n      },\n      get trackHeights() {\n        return self.tracks\n          .map(t => t.displays[0].height)\n          .reduce((a, b) => a + b, 0)\n      },\n\n      get trackHeightsWithResizeHandles() {\n        return this.trackHeights + self.tracks.length * RESIZE_HANDLE_HEIGHT\n      },\n      get height() {\n        return (\n          this.trackHeightsWithResizeHandles +\n          this.headerHeight +\n          this.scaleBarHeight\n        )\n      },\n      get interRegionPaddingWidth() {\n        return INTER_REGION_PADDING_WIDTH\n      },\n      get totalBp() {\n        let totalbp = 0\n        self.displayedRegions.forEach(region => {\n          totalbp += region.end - region.start\n        })\n        return totalbp\n      },\n\n      get maxBpPerPx() {\n        return this.totalBp / (self.width * 0.9)\n      },\n\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      get maxOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const leftPadding = 10\n        return this.displayedRegionsTotalPx - leftPadding\n      },\n\n      get minOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const rightPadding = 30\n        return -self.width + rightPadding\n      },\n\n      get displayedRegionsTotalPx() {\n        return this.totalBp / self.bpPerPx\n      },\n\n      get renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          bpPerPx: self.bpPerPx,\n          highResolutionScaling: getConf(\n            getSession(self),\n            'highResolutionScaling',\n          ),\n        }\n      },\n      get assemblyNames() {\n        return [\n          ...new Set(self.displayedRegions.map(region => region.assemblyName)),\n        ]\n      },\n      searchScope(assemblyName: string) {\n        return {\n          assemblyName,\n          includeAggregateIndexes: true,\n          tracks: self.tracks,\n        }\n      },\n\n      /**\n       * @param refName - refName of the displayedRegion\n       * @param coord - coordinate at the displayed Region\n       * @param regionNumber - optional param used as identifier when\n       * there are multiple displayedRegions with the same refName\n       * @returns offsetPx of the displayed region that it lands in\n       */\n      bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      }: {\n        refName: string\n        coord: number\n        regionNumber?: number\n      }) {\n        let offsetBp = 0\n\n        const interRegionPaddingBp = this.interRegionPaddingWidth * self.bpPerPx\n        const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n        const index = self.displayedRegions.findIndex((region, idx) => {\n          const len = region.end - region.start\n          if (\n            refName === region.refName &&\n            coord >= region.start &&\n            coord <= region.end\n          ) {\n            if (regionNumber ? regionNumber === idx : true) {\n              offsetBp += region.reversed\n                ? region.end - coord\n                : coord - region.start\n              return true\n            }\n          }\n\n          // add the interRegionPaddingWidth if the boundary is in the screen\n          // e.g. offset>=0 && offset<width\n          if (\n            len > minimumBlockBp &&\n            offsetBp / self.bpPerPx >= 0 &&\n            offsetBp / self.bpPerPx < self.width\n          ) {\n            offsetBp += len + interRegionPaddingBp\n          } else {\n            offsetBp += len\n          }\n          return false\n        })\n        const foundRegion = self.displayedRegions[index]\n        if (foundRegion) {\n          return {\n            index,\n            offsetPx: Math.round(offsetBp / self.bpPerPx),\n          }\n        }\n\n        return undefined\n      },\n      /**\n       *\n       * @param px - px in the view area, return value is the displayed regions\n       * @returns BpOffset of the displayed region that it lands in\n       */\n      pxToBp(px: number) {\n        let bpSoFar = 0\n        const bp = (self.offsetPx + px) * self.bpPerPx\n        const n = self.displayedRegions.length\n        if (bp < 0) {\n          const region = self.displayedRegions[0]\n          const offset = bp\n          return {\n            ...getSnapshot(region),\n            oob: true,\n            coord: region.reversed\n              ? Math.floor(region.end - offset) + 1\n              : Math.floor(region.start + offset) + 1,\n            offset,\n            index: 0,\n          }\n        }\n\n        const interRegionPaddingBp = this.interRegionPaddingWidth * self.bpPerPx\n        const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n\n        for (let index = 0; index < self.displayedRegions.length; index += 1) {\n          const region = self.displayedRegions[index]\n          const len = region.end - region.start\n          const offset = bp - bpSoFar\n          if (len + bpSoFar > bp && bpSoFar <= bp) {\n            return {\n              ...getSnapshot(region),\n              oob: false,\n              offset,\n              coord: region.reversed\n                ? Math.floor(region.end - offset) + 1\n                : Math.floor(region.start + offset) + 1,\n              index,\n            }\n          }\n\n          // add the interRegionPaddingWidth if the boundary is in the screen\n          // e.g. offset>0 && offset<width\n          if (\n            region.end - region.start > minimumBlockBp &&\n            offset / self.bpPerPx > 0 &&\n            offset / self.bpPerPx < self.width\n          ) {\n            bpSoFar += len + interRegionPaddingBp\n          } else {\n            bpSoFar += len\n          }\n        }\n\n        if (bp >= bpSoFar) {\n          const region = self.displayedRegions[n - 1]\n          const len = region.end - region.start\n          const offset = bp - bpSoFar + len\n          return {\n            ...getSnapshot(region),\n            oob: true,\n            offset,\n            coord: region.reversed\n              ? Math.floor(region.end - offset) + 1\n              : Math.floor(region.start + offset) + 1,\n            index: n - 1,\n          }\n        }\n        return {\n          coord: 0,\n          index: 0,\n          refName: '',\n          oob: true,\n          assemblyName: '',\n          offset: 0,\n          start: 0,\n          end: 0,\n          reversed: false,\n        }\n      },\n\n      getTrack(id: string) {\n        return self.tracks.find(t => t.configuration.trackId === id)\n      },\n\n      rankSearchResults(results: BaseResult[]) {\n        // order of rank\n        const openTrackIds = self.tracks.map(\n          track => track.configuration.trackId,\n        )\n        results.forEach(result => {\n          if (openTrackIds !== []) {\n            if (openTrackIds.includes(result.trackId)) {\n              result.updateScore(result.getScore() + 1)\n            }\n          }\n        })\n        return results\n      },\n\n      // modifies view menu action onClick to apply to all tracks of same type\n      rewriteOnClicks(trackType: string, viewMenuActions: MenuItem[]) {\n        viewMenuActions.forEach((action: MenuItem) => {\n          // go to lowest level menu\n          if ('subMenu' in action) {\n            this.rewriteOnClicks(trackType, action.subMenu)\n          }\n          if ('onClick' in action) {\n            const holdOnClick = action.onClick\n            action.onClick = (...args: unknown[]) => {\n              self.tracks.forEach(track => {\n                if (track.type === trackType) {\n                  holdOnClick.apply(track, [track, ...args])\n                }\n              })\n            }\n          }\n        })\n      },\n\n      get trackTypeActions() {\n        const allActions: Map<string, MenuItem[]> = new Map()\n        self.tracks.forEach(track => {\n          const trackInMap = allActions.get(track.type)\n          if (!trackInMap) {\n            const viewMenuActions = clone(track.viewMenuActions)\n            this.rewriteOnClicks(track.type, viewMenuActions)\n            allActions.set(track.type, viewMenuActions)\n          }\n        })\n\n        return allActions\n      },\n\n      get centerLineInfo() {\n        return self.displayedRegions.length\n          ? this.pxToBp(self.width / 2)\n          : undefined\n      },\n    }))\n    .actions(self => ({\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n      },\n      setError(error: Error | undefined) {\n        self.error = error\n      },\n\n      toggleHeader() {\n        self.hideHeader = !self.hideHeader\n      },\n\n      toggleHeaderOverview() {\n        self.hideHeaderOverview = !self.hideHeaderOverview\n      },\n\n      scrollTo(offsetPx: number) {\n        const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n        self.offsetPx = newOffsetPx\n        return newOffsetPx\n      },\n\n      zoomTo(bpPerPx: number) {\n        const newBpPerPx = clamp(bpPerPx, self.minBpPerPx, self.maxBpPerPx)\n        if (newBpPerPx === self.bpPerPx) {\n          return newBpPerPx\n        }\n        const oldBpPerPx = self.bpPerPx\n        self.bpPerPx = newBpPerPx\n\n        if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n          console.warn('zoomTo bpPerPx rounding error')\n          return oldBpPerPx\n        }\n\n        // tweak the offset so that the center of the view remains at the same coordinate\n        const viewWidth = self.width\n        this.scrollTo(\n          Math.round(\n            ((self.offsetPx + viewWidth / 2) * oldBpPerPx) / newBpPerPx -\n              viewWidth / 2,\n          ),\n        )\n        return newBpPerPx\n      },\n\n      setOffsets(left: undefined | BpOffset, right: undefined | BpOffset) {\n        // sets offsets used in the get sequence dialog\n        self.leftOffset = left\n        self.rightOffset = right\n      },\n\n      setSearchResults(\n        results: BaseResult[] | undefined,\n        query: string | undefined,\n      ) {\n        self.searchResults = results\n        self.searchQuery = query\n      },\n\n      setNewView(bpPerPx: number, offsetPx: number) {\n        this.zoomTo(bpPerPx)\n        this.scrollTo(offsetPx)\n      },\n\n      horizontallyFlip() {\n        self.displayedRegions = cast(\n          self.displayedRegions\n            .slice()\n            .reverse()\n            .map(region => ({ ...region, reversed: !region.reversed })),\n        )\n        this.scrollTo(self.totalBp / self.bpPerPx - self.offsetPx - self.width)\n      },\n\n      showTrack(\n        trackId: string,\n        initialSnapshot = {},\n        displayInitialSnapshot = {},\n      ) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        const trackType = pluginManager.getTrackType(configuration.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${configuration.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = viewType.displayTypes.map(\n          displayType => displayType.name,\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n          displays: [\n            {\n              type: displayConf.type,\n              configuration: displayConf,\n              ...displayInitialSnapshot,\n            },\n          ],\n        })\n        self.tracks.push(track)\n        return track\n      },\n\n      hideTrack(trackId: string) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        // if we have any tracks with that configuration, turn them off\n        const shownTracks = self.tracks.filter(\n          t => t.configuration === configuration,\n        )\n        transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n        return shownTracks.length\n      },\n    }))\n    .actions(self => ({\n      moveTrack(movingTrackId: string, targetTrackId: string) {\n        const oldIndex = self.tracks.findIndex(\n          track => track.id === movingTrackId,\n        )\n        if (oldIndex === -1) {\n          throw new Error(`Track ID ${movingTrackId} not found`)\n        }\n        const newIndex = self.tracks.findIndex(\n          track => track.id === targetTrackId,\n        )\n        if (newIndex === -1) {\n          throw new Error(`Track ID ${targetTrackId} not found`)\n        }\n        const track = getSnapshot(self.tracks[oldIndex])\n        self.tracks.splice(oldIndex, 1)\n        self.tracks.splice(newIndex, 0, track)\n      },\n\n      closeView() {\n        const parent = getContainingView(self)\n        if (parent) {\n          // I am embedded in a some other view\n          if (isViewContainer(parent)) {\n            parent.removeView(self)\n          }\n        } else {\n          // I am part of a session\n          getSession(self).removeView(self)\n        }\n      },\n\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = self.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          self.showTrack(trackId)\n        }\n      },\n\n      setTrackLabels(setting: 'overlapping' | 'offset' | 'hidden') {\n        self.trackLabels = setting\n      },\n\n      toggleCenterLine() {\n        self.showCenterLine = !self.showCenterLine\n      },\n\n      setDisplayedRegions(regions: Region[]) {\n        self.displayedRegions = cast(regions)\n        self.zoomTo(self.bpPerPx)\n      },\n\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n      navToLocString(locString: string, optAssemblyName?: string) {\n        const { assemblyManager } = getSession(self)\n        const { isValidRefName } = assemblyManager\n        const locStrings = locString.split(';')\n        if (self.displayedRegions.length > 1) {\n          const locations = locStrings.map(ls =>\n            parseLocString(ls, isValidRefName),\n          )\n          this.navToMultiple(locations)\n          return\n        }\n        let assemblyName = optAssemblyName\n        let defaultRefName = ''\n        if (self.displayedRegions.length !== 0) {\n          // defaults\n          assemblyName = self.displayedRegions[0].assemblyName\n          defaultRefName = self.displayedRegions[0].refName\n        }\n        let assembly = assemblyName && assemblyManager.get(assemblyName)\n        if (!assembly) {\n          throw new Error(`Could not find assembly ${assemblyName}`)\n        }\n        let { regions } = assembly\n        if (!regions) {\n          throw new Error(`Regions for assembly ${assemblyName} not yet loaded`)\n        }\n        if (locStrings.length > 1) {\n          throw new Error(\n            'Navigating to multiple locations is not allowed when viewing a whole chromosome',\n          )\n        }\n        const parsedLocString = parseLocString(locStrings[0], refName =>\n          isValidRefName(refName, assemblyName),\n        )\n        let changedAssembly = false\n        if (\n          parsedLocString.assemblyName &&\n          parsedLocString.assemblyName !== assemblyName\n        ) {\n          const newAssembly = assemblyManager.get(parsedLocString.assemblyName)\n          if (!newAssembly) {\n            throw new Error(\n              `Could not find assembly ${parsedLocString.assemblyName}`,\n            )\n          }\n          assembly = newAssembly\n          changedAssembly = true\n          const newRegions = newAssembly.regions\n          if (!newRegions) {\n            throw new Error(\n              `Regions for assembly ${parsedLocString.assemblyName} not yet loaded`,\n            )\n          }\n          regions = newRegions\n        }\n        const canonicalRefName = assembly.getCanonicalRefName(\n          parsedLocString.refName,\n        )\n\n        if (!canonicalRefName) {\n          throw new Error(\n            `Could not find refName ${parsedLocString.refName} in ${assembly.name}`,\n          )\n        }\n        if (changedAssembly || canonicalRefName !== defaultRefName) {\n          const newDisplayedRegion = regions.find(\n            region => region.refName === canonicalRefName,\n          )\n          if (newDisplayedRegion) {\n            this.setDisplayedRegions([newDisplayedRegion])\n          } else {\n            throw new Error(\n              `Could not find refName ${parsedLocString.refName} in ${assembly.name}`,\n            )\n          }\n        }\n        const displayedRegion = regions.find(\n          region => region.refName === canonicalRefName,\n        )\n        if (displayedRegion) {\n          const start = clamp(\n            parsedLocString?.start ?? 0,\n            0,\n            displayedRegion.end,\n          )\n          const end = clamp(\n            parsedLocString?.end ?? displayedRegion.end,\n            0,\n            displayedRegion.end,\n          )\n\n          this.navTo({\n            ...parsedLocString,\n            start,\n            end,\n          })\n        }\n      },\n\n      /**\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Can handle if there are multiple displayedRegions\n       * from same refName. Only navigates to a location if it is entirely\n       * within a displayedRegion. Navigates to the first matching location\n       * encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param location - a proposed location to navigate to\n       */\n      navTo(query: NavLocation) {\n        this.navToMultiple([query])\n      },\n\n      navToMultiple(locations: NavLocation[]) {\n        const firstLocation = locations[0]\n        let { refName } = firstLocation\n        const {\n          start,\n          end,\n          assemblyName = self.assemblyNames[0],\n        } = firstLocation\n\n        if (start !== undefined && end !== undefined && start > end) {\n          throw new Error(`start \"${start + 1}\" is greater than end \"${end}\"`)\n        }\n        const session = getSession(self)\n        const { assemblyManager } = session\n        const assembly = assemblyManager.get(assemblyName)\n        if (assembly) {\n          const canonicalRefName = assembly.getCanonicalRefName(refName)\n          if (canonicalRefName) {\n            refName = canonicalRefName\n          }\n        }\n        let s = start\n        let e = end\n        let refNameMatched = false\n        const predicate = (r: Region) => {\n          if (refName === r.refName) {\n            refNameMatched = true\n            if (s === undefined) {\n              s = r.start\n            }\n            if (e === undefined) {\n              e = r.end\n            }\n            if (s >= r.start && s <= r.end && e <= r.end && e >= r.start) {\n              return true\n            }\n            s = start\n            e = end\n          }\n          return false\n        }\n\n        const lastIndex = findLastIndex(self.displayedRegions, predicate)\n        let index\n        while (index !== lastIndex) {\n          try {\n            const previousIndex: number | undefined = index\n            index = self.displayedRegions\n              .slice(previousIndex === undefined ? 0 : previousIndex + 1)\n              .findIndex(predicate)\n            if (previousIndex !== undefined) {\n              index += previousIndex + 1\n            }\n            if (!refNameMatched) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\"`,\n              )\n            }\n            if (s === undefined) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\" that contained an end position ${e}`,\n              )\n            }\n            if (e === undefined) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\" that contained a start position ${\n                  s + 1\n                }`,\n              )\n            }\n            if (index === -1) {\n              throw new Error(\n                `could not find a region that completely contained \"${assembleLocString(\n                  firstLocation,\n                )}\"`,\n              )\n            }\n            if (locations.length === 1) {\n              const f = self.displayedRegions[index]\n              this.moveTo(\n                { index, offset: f.reversed ? f.end - e : s - f.start },\n                { index, offset: f.reversed ? f.end - s : e - f.start },\n              )\n              return\n            }\n            let locationIndex = 0\n            let locationStart = 0\n            let locationEnd = 0\n            for (\n              locationIndex;\n              locationIndex < locations.length;\n              locationIndex++\n            ) {\n              const location = locations[locationIndex]\n              const region = self.displayedRegions[index + locationIndex]\n              locationStart = location.start || region.start\n              locationEnd = location.end || region.end\n              if (location.refName !== region.refName) {\n                throw new Error(\n                  `Entered location ${assembleLocString(\n                    location,\n                  )} does not match with displayed regions`,\n                )\n              }\n              if (locationIndex > 0) {\n                // does it reach the left side?\n                const matchesLeft = region.reversed\n                  ? locationEnd === region.end\n                  : locationStart === region.start\n                if (!matchesLeft) {\n                  throw new Error(\n                    `${\n                      region.reversed ? 'End' : 'Start'\n                    } of region ${assembleLocString(\n                      location,\n                    )} should be ${(region.reversed\n                      ? region.end\n                      : region.start + 1\n                    ).toLocaleString('en-US')}, but it is not`,\n                  )\n                }\n              }\n              const isLast = locationIndex === locations.length - 1\n              if (!isLast) {\n                // does it reach the right side?\n                const matchesRight = region.reversed\n                  ? locationStart === region.start\n                  : locationEnd === region.end\n                if (!matchesRight) {\n                  throw new Error(\n                    `${\n                      region.reversed ? 'Start' : 'End'\n                    } of region ${assembleLocString(\n                      location,\n                    )} should be ${(region.reversed\n                      ? region.start + 1\n                      : region.end\n                    ).toLocaleString('en-US')}, but it is not`,\n                  )\n                }\n              }\n            }\n            locationIndex -= 1\n            const startDisplayedRegion = self.displayedRegions[index]\n            const endDisplayedRegion =\n              self.displayedRegions[index + locationIndex]\n            this.moveTo(\n              {\n                index,\n                offset: startDisplayedRegion.reversed\n                  ? startDisplayedRegion.end - e\n                  : s - startDisplayedRegion.start,\n              },\n              {\n                index: index + locationIndex,\n                offset: endDisplayedRegion.reversed\n                  ? endDisplayedRegion.end - locationStart\n                  : locationEnd - endDisplayedRegion.start,\n              },\n            )\n            return\n          } catch (error) {\n            if (index === lastIndex) {\n              throw error\n            }\n          }\n        }\n      },\n\n      /**\n       * Navigate to a location based on user clicking and dragging on the\n       * overview scale bar to select a region to zoom into.\n       * Can handle if there are multiple displayedRegions from same refName.\n       * Only navigates to a location if it is entirely within a displayedRegion.\n       *\n       * @param leftPx- `object as {start, end, index, offset}`, offset = start of user drag\n       * @param rightPx- `object as {start, end, index, offset}`, offset = end of user drag\n       */\n      zoomToDisplayedRegions(leftPx: BpOffset, rightPx: BpOffset) {\n        if (leftPx === undefined || rightPx === undefined) {\n          return\n        }\n\n        const singleRefSeq =\n          leftPx.refName === rightPx.refName && leftPx.index === rightPx.index\n        // zooming into one displayed Region\n        if (\n          (singleRefSeq && rightPx.offset < leftPx.offset) ||\n          leftPx.index > rightPx.index\n        ) {\n          ;[leftPx, rightPx] = [rightPx, leftPx]\n        }\n        const startOffset = {\n          start: leftPx.start,\n          end: leftPx.end,\n          index: leftPx.index,\n          offset: leftPx.offset,\n        }\n        const endOffset = {\n          start: rightPx.start,\n          end: rightPx.end,\n          index: rightPx.index,\n          offset: rightPx.offset,\n        }\n        if (startOffset && endOffset) {\n          this.moveTo(startOffset, endOffset)\n        } else {\n          const session = getSession(self)\n          session.notify('No regions found to navigate to', 'warning')\n        }\n      },\n      /**\n       * Helper method for the fetchSequence.\n       * Retrieves the corresponding regions that were selected by the rubberband\n       *\n       * @param leftOffset - `object as {start, end, index, offset}`, offset = start of user drag\n       * @param rightOffset - `object as {start, end, index, offset}`, offset = end of user drag\n       * @returns array of Region[]\n       */\n      getSelectedRegions(\n        leftOffset: BpOffset | undefined,\n        rightOffset: BpOffset | undefined,\n      ) {\n        const simView = Base1DView.create({\n          ...getSnapshot(self),\n          interRegionPaddingWidth: self.interRegionPaddingWidth,\n        })\n\n        simView.setVolatileWidth(self.width)\n        simView.zoomToDisplayedRegions(leftOffset, rightOffset)\n\n        return simView.dynamicBlocks.contentBlocks.map(region => {\n          return {\n            ...region,\n            start: Math.floor(region.start),\n            end: Math.ceil(region.end),\n          }\n        })\n      },\n\n      // schedule something to be run after the next time displayedRegions is set\n      afterDisplayedRegionsSet(cb: Function) {\n        self.afterDisplayedRegionsSetCallbacks.push(cb)\n      },\n      /**\n       * offset is the base-pair-offset in the displayed region, index is the index of the\n       * displayed region in the linear genome view\n       *\n       * @param start - object as `{start, end, offset, index}`\n       * @param end - object as `{start, end, offset, index}`\n       */\n      moveTo(start: BpOffset, end: BpOffset) {\n        // find locations in the modellist\n        let bpSoFar = 0\n\n        if (start.index === end.index) {\n          bpSoFar += end.offset - start.offset\n        } else {\n          const s = self.displayedRegions[start.index]\n          bpSoFar += s.end - s.start - start.offset\n          if (end.index - start.index >= 2) {\n            for (let i = start.index + 1; i < end.index; i += 1) {\n              bpSoFar +=\n                self.displayedRegions[i].end - self.displayedRegions[i].start\n            }\n          }\n          bpSoFar += end.offset\n        }\n        const targetBpPerPx =\n          bpSoFar /\n          (self.width -\n            self.interRegionPaddingWidth * (end.index - start.index))\n        const newBpPerPx = self.zoomTo(targetBpPerPx)\n        // If our target bpPerPx was smaller than the allowed minBpPerPx, adjust\n        // the scroll so the requested range is in the middle of the screen\n        let extraBp = 0\n        if (targetBpPerPx < newBpPerPx) {\n          extraBp = ((newBpPerPx - targetBpPerPx) * self.width) / 2\n        }\n\n        let bpToStart = -extraBp\n        for (let i = 0; i < self.displayedRegions.length; i += 1) {\n          const region = self.displayedRegions[i]\n          if (start.index === i) {\n            bpToStart += start.offset\n            break\n          } else {\n            bpToStart += region.end - region.start\n          }\n        }\n        self.scrollTo(\n          Math.round(bpToStart / self.bpPerPx) +\n            self.interRegionPaddingWidth * start.index,\n        )\n      },\n\n      horizontalScroll(distance: number) {\n        const oldOffsetPx = self.offsetPx\n        // newOffsetPx is the actual offset after the scroll is clamped\n        const newOffsetPx = self.scrollTo(self.offsetPx + distance)\n        return newOffsetPx - oldOffsetPx\n      },\n\n      /**\n       * scrolls the view to center on the given bp. if that is not in any\n       * of the displayed regions, does nothing\n       * @param bp - basepair at which you want to center the view\n       * @param refName - refName of the displayedRegion you are centering at\n       * @param regionIndex - index of the displayedRegion\n       */\n      centerAt(bp: number, refName: string, regionIndex: number) {\n        const centerPx = self.bpToPx({\n          refName,\n          coord: bp,\n          regionNumber: regionIndex,\n        })\n        if (centerPx) {\n          self.scrollTo(Math.round(centerPx.offsetPx - self.width / 2))\n        }\n      },\n\n      center() {\n        const centerBp = self.totalBp / 2\n        self.scrollTo(Math.round(centerBp / self.bpPerPx - self.width / 2))\n      },\n\n      showAllRegions() {\n        self.zoomTo(self.maxBpPerPx)\n        this.center()\n      },\n\n      showAllRegionsInAssembly(assemblyName?: string) {\n        const session = getSession(self)\n        const { assemblyManager } = session\n        if (!assemblyName) {\n          const assemblyNames = [\n            ...new Set(\n              self.displayedRegions.map(region => region.assemblyName),\n            ),\n          ]\n          if (assemblyNames.length > 1) {\n            session.notify(\n              `Can't perform this with multiple assemblies currently`,\n            )\n            return\n          }\n\n          ;[assemblyName] = assemblyNames\n        }\n        const assembly = assemblyManager.get(assemblyName)\n        if (assembly) {\n          const { regions } = assembly\n          if (regions) {\n            this.setDisplayedRegions(regions)\n            self.zoomTo(self.maxBpPerPx)\n            this.center()\n          }\n        }\n      },\n\n      setDraggingTrackId(idx?: string) {\n        self.draggingTrackId = idx\n      },\n\n      setScaleFactor(factor: number) {\n        self.scaleFactor = factor\n      },\n    }))\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      function slide(viewWidths: number) {\n        const [animate, cancelAnimation] = springAnimate(\n          self.offsetPx,\n          self.offsetPx + self.width * viewWidths,\n          self.scrollTo,\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { slide }\n    })\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      function zoom(targetBpPerPx: number) {\n        self.zoomTo(self.bpPerPx)\n        if (\n          // already zoomed all the way in\n          (targetBpPerPx < self.bpPerPx && self.bpPerPx === self.minBpPerPx) ||\n          // already zoomed all the way out\n          (targetBpPerPx > self.bpPerPx && self.bpPerPx === self.maxBpPerPx)\n        ) {\n          return\n        }\n        const factor = self.bpPerPx / targetBpPerPx\n        const [animate, cancelAnimation] = springAnimate(\n          1,\n          factor,\n          self.setScaleFactor,\n          () => {\n            self.zoomTo(targetBpPerPx)\n            self.setScaleFactor(1)\n          },\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { zoom }\n    })\n    .views(self => {\n      let currentlyCalculatedStaticBlocks: BlockSet | undefined\n      let stringifiedCurrentlyCalculatedStaticBlocks = ''\n      return {\n        get menuItems(): MenuItem[] {\n          const menuItems: MenuItem[] = [\n            {\n              label: 'Return to import form',\n              onClick: () => {\n                getSession(self).setDialogComponent(ReturnToImportFormDlg, {\n                  model: self,\n                })\n              },\n              icon: FolderOpenIcon,\n            },\n            {\n              label: 'Export SVG',\n              onClick: () => {\n                getSession(self).setDialogComponent(ExportSvgDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Open track selector',\n              onClick: self.activateTrackSelector,\n              icon: TrackSelectorIcon,\n            },\n            {\n              label: 'Horizontally flip',\n              icon: SyncAltIcon,\n              onClick: self.horizontallyFlip,\n            },\n            {\n              label: 'Show all regions in assembly',\n              icon: VisibilityIcon,\n              onClick: self.showAllRegionsInAssembly,\n            },\n            {\n              label: 'Show center line',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showCenterLine,\n              onClick: self.toggleCenterLine,\n            },\n            { type: 'divider' },\n            {\n              label: 'Show header',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: !self.hideHeader,\n              onClick: self.toggleHeader,\n            },\n            {\n              label: 'Show header overview',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: !self.hideHeaderOverview,\n              onClick: self.toggleHeaderOverview,\n              disabled: self.hideHeader,\n            },\n            {\n              label: 'Track labels',\n              icon: LabelIcon,\n              subMenu: [\n                {\n                  label: 'Overlapping',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'overlapping',\n                  onClick: () => self.setTrackLabels('overlapping'),\n                },\n                {\n                  label: 'Offset',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'offset',\n                  onClick: () => self.setTrackLabels('offset'),\n                },\n                {\n                  label: 'Hidden',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'hidden',\n                  onClick: () => self.setTrackLabels('hidden'),\n                },\n              ],\n            },\n          ]\n\n          // add track's view level menu options\n          for (const [key, value] of self.trackTypeActions.entries()) {\n            if (value.length) {\n              menuItems.push(\n                { type: 'divider' },\n                { type: 'subHeader', label: key },\n              )\n              value.forEach(action => {\n                menuItems.push(action)\n              })\n            }\n          }\n\n          return menuItems\n        },\n\n        get staticBlocks() {\n          const ret = calculateStaticBlocks(self)\n          const sret = JSON.stringify(ret)\n          if (stringifiedCurrentlyCalculatedStaticBlocks !== sret) {\n            currentlyCalculatedStaticBlocks = ret\n            stringifiedCurrentlyCalculatedStaticBlocks = sret\n          }\n          return currentlyCalculatedStaticBlocks as BlockSet\n        },\n\n        get dynamicBlocks() {\n          return calculateDynamicBlocks(self)\n        },\n\n        get roundedDynamicBlocks() {\n          return this.dynamicBlocks.contentBlocks.map(block => {\n            return {\n              ...block,\n              start: Math.floor(block.start),\n              end: Math.ceil(block.end),\n            }\n          })\n        },\n        get visibleLocStrings() {\n          return calculateVisibleLocStrings(this.dynamicBlocks.contentBlocks)\n        },\n        get coarseVisibleLocStrings() {\n          return calculateVisibleLocStrings(self.coarseDynamicBlocks)\n        },\n      }\n    })\n    .actions(self => ({\n      // this \"clears the view\" and makes the view return to the import form\n      clearView() {\n        self.setDisplayedRegions([])\n        self.tracks.clear()\n        // it is necessary to run these after setting displayed regions empty\n        // or else model.offsetPx gets set to Infinity and breaks\n        // mobx-state-tree snapshot\n        self.scrollTo(0)\n        self.zoomTo(10)\n      },\n      setCoarseDynamicBlocks(blocks: BlockSet) {\n        self.coarseDynamicBlocks = blocks.contentBlocks\n        self.coarseTotalBp = blocks.totalBp\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.initialized) {\n                this.setCoarseDynamicBlocks(self.dynamicBlocks)\n              }\n            },\n            { delay: 150 },\n          ),\n        )\n      },\n    }))\n    .actions(self => ({\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const html = await renderToSvg(self as any, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, 'image.svg')\n      },\n    }))\n}\n\nexport { renderToSvg }\nexport type LinearGenomeViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearGenomeViewModel = Instance<LinearGenomeViewStateModel>\n","import { lazy } from 'react'\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport { types, getEnv, Instance } from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\n\nconst stateModelFactory = (configSchema: AnyConfigurationSchemaType) =>\n  types\n    .compose(\n      'LinearBasicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearBasicDisplay'),\n        trackShowLabels: types.maybe(types.boolean),\n        trackDisplayMode: types.maybe(types.string),\n        trackMaxHeight: types.maybe(types.number),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n\n      get showLabels() {\n        const showLabels = getConf(self, ['renderer', 'showLabels'])\n        return self.trackShowLabels !== undefined\n          ? self.trackShowLabels\n          : showLabels\n      },\n\n      get maxHeight() {\n        const maxHeight = getConf(self, ['renderer', 'maxHeight'])\n        return self.trackMaxHeight !== undefined\n          ? self.trackMaxHeight\n          : maxHeight\n      },\n\n      get displayMode() {\n        const displayMode = getConf(self, ['renderer', 'displayMode'])\n        return self.trackDisplayMode !== undefined\n          ? self.trackDisplayMode\n          : displayMode\n      },\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            showLabels: this.showLabels,\n            displayMode: this.displayMode,\n            maxHeight: this.maxHeight,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n\n    .actions(self => ({\n      toggleShowLabels() {\n        self.trackShowLabels = !self.showLabels\n      },\n      setDisplayMode(val: string) {\n        self.trackDisplayMode = val\n      },\n      setMaxHeight(val: number) {\n        self.trackMaxHeight = val\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get renderProps() {\n          const config = self.rendererConfig\n\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            config,\n          }\n        },\n        get trackMenuItems(): MenuItem[] {\n          const displayModes = [\n            'compact',\n            'reducedRepresentation',\n            'normal',\n            'collapse',\n          ]\n          return [\n            ...trackMenuItems,\n            {\n              label: 'Show labels',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showLabels,\n              onClick: () => {\n                self.toggleShowLabels()\n              },\n            },\n            {\n              label: 'Display mode',\n              icon: VisibilityIcon,\n              subMenu: displayModes.map(val => ({\n                label: val,\n                onClick: () => {\n                  self.setDisplayMode(val)\n                },\n              })),\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMaxHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n          ]\n        },\n      }\n    })\n\nexport type FeatureTrackStateModel = ReturnType<typeof stateModelFactory>\nexport type FeatureTrackModel = Instance<FeatureTrackStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nexport default function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBasicDisplay',\n    {\n      mouseover: {\n        type: 'string',\n        description: 'what to display in a given mouseover',\n        defaultValue: `jexl:get(feature,'name')`,\n\n        contextVariable: ['feature'],\n      },\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n      // overrides base\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 1000,\n      },\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport LineStyleIcon from '@material-ui/icons/LineStyle'\nimport {\n  BaseLinearDisplay,\n  BaseLinearDisplayComponent,\n  baseLinearDisplayConfigSchema,\n  BlockModel,\n} from './BaseLinearDisplay'\nimport {\n  configSchemaFactory as linearBareDisplayConfigSchemaFactory,\n  stateModelFactory as LinearBareDisplayStateModelFactory,\n} from './LinearBareDisplay'\nimport {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n  stateModelFactory as linearGenomeViewStateModelFactory,\n  renderToSvg,\n} from './LinearGenomeView'\n\nimport {\n  configSchema as linearBasicDisplayConfigSchemaFactory,\n  modelFactory as linearBasicDisplayModelFactory,\n} from './LinearBasicDisplay'\n\nexport default class LinearGenomeViewPlugin extends Plugin {\n  name = 'LinearGenomeViewPlugin'\n\n  exports = {\n    BaseLinearDisplayComponent,\n    BaseLinearDisplay,\n    baseLinearDisplayConfigSchema,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'FeatureTrack',\n        {},\n        {\n          baseConfiguration: createBaseTrackConfig(pluginManager),\n          explicitIdentifier: 'trackId',\n        },\n      )\n      return new TrackType({\n        name: 'FeatureTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'FeatureTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'BasicTrack',\n        {},\n        {\n          baseConfiguration: createBaseTrackConfig(pluginManager),\n          explicitIdentifier: 'trackId',\n        },\n      )\n      return new TrackType({\n        name: 'BasicTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'BasicTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearBareDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearBareDisplay',\n        configSchema,\n        stateModel: LinearBareDisplayStateModelFactory(configSchema),\n        trackType: 'BasicTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearBasicDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearBasicDisplay',\n        configSchema,\n        stateModel: linearBasicDisplayModelFactory(configSchema),\n        trackType: 'FeatureTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n\n    pluginManager.addViewType(\n      () =>\n        new ViewType({\n          name: 'LinearGenomeView',\n          stateModel: linearGenomeViewStateModelFactory(pluginManager),\n          ReactComponent: lazy(\n            () => import('./LinearGenomeView/components/LinearGenomeView'),\n          ),\n        }),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Linear genome view',\n        icon: LineStyleIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearGenomeView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  BaseLinearDisplayComponent,\n  BaseLinearDisplay,\n  baseLinearDisplayConfigSchema,\n  linearBareDisplayConfigSchemaFactory,\n  linearBasicDisplayConfigSchemaFactory,\n  linearBasicDisplayModelFactory,\n  renderToSvg,\n}\n\nexport type { LinearGenomeViewModel, LinearGenomeViewStateModel, BlockModel }\n\nexport type { BaseLinearDisplayModel } from './BaseLinearDisplay'\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.root}>\n          <Typography>Set max height for the track</Typography>\n          <TextField\n            value={max}\n            onChange={event => {\n              setMax(event.target.value)\n            }}\n            placeholder=\"Enter max score\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["baseLinearDisplayConfigSchema","ConfigurationSchema","maxDisplayedBpPerPx","type","description","defaultValue","Number","MAX_VALUE","explicitIdentifier","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","useStyles","makeStyles","theme","contentBlock","position","minHeight","boxSizing","whiteSpace","overflow","elidedBlock","backgroundColor","backgroundImage","interRegionPaddingBlock","palette","text","primary","boundaryPaddingBlock","action","disabledBackground","ContentBlock","observer","block","children","classes","React","style","width","widthPx","className","ElidedBlock","InterRegionPaddingBlock","boundary","linearBlocks","textAlign","display","heightOverflowed","color","borderBottom","textShadow","fontWeight","zIndex","RenderedBlocks","model","blockState","blockDefinitions","map","get","ContentBlockComponent","id","ReactComponent","maxHeightReached","top","layout","getTotalHeight","pointerEvents","height","ElidedBlockComponent","InterRegionPaddingBlockComponent","background","variant","LinearBlocks","viewModel","getContainingView","left","offsetPx","propTypes","PropTypes","observableObject","isRequired","Tooltip","props","mouseCoord","featureUnderMouse","mouseover","getConf","feature","MUITooltip","title","open","placement","BaseLinearDisplay","useTheme","useState","setMouseCoord","contextCoord","setContextCoord","ref","useRef","TooltipComponent","DisplayMessageComponent","contextMenuItems","setContextMenuFeature","onContextMenu","event","preventDefault","current","clientX","clientY","onMouseMove","rect","getBoundingClientRect","role","Menu","Boolean","onMenuItemClick","_","callback","onClose","onExit","anchorReference","anchorPosition","tooltip","menuItems","loading","paddingLeft","blockMessage","padding","spacing","blockError","main","overflowY","blockReactNodeMessage","dots","animation","content","Repeater","LoadingMessage","shown","setShown","useEffect","killed","timeout","setTimeout","clearTimeout","blockStatus","status","getParent","message","Typography","BlockMessage","messageContent","isValidElement","BlockError","reload","displayHeight","Button","onClick","startIcon","RefreshIcon","ServerSideRenderedBlockContent","getParentRenderProps","displayModel","filled","reactElement","types","string","region","Region","isLeftEndOfDisplayedRegion","isRightEndOfDisplayedRegion","renderInProgress","features","renderProps","actions","afterAttach","getContainingDisplay","makeAbortableReaction","renderBlockData","renderBlockEffect","assembleLocString","delay","renderDelay","fireImmediately","setLoading","setRendered","setError","setStatus","abortController","signal","aborted","abort","setMessage","messageText","console","beforeDestroy","rpcManager","getSession","rendererType","renderArgs","cast","freeResourcesInClient","JSON","parse","stringify","e","warn","optDisplay","assemblyManager","adapterConfig","displayError","assemblyNames","getTrackAssemblyNames","parentTrack","regionAsm","assemblyName","includes","find","_assemblyManager$get","hasName","readConfObject","config","sessionId","getRpcSessionId","cannotBeRenderedReason","regionCannotBeRendered","statusCallback","isAlive","regions","blockKey","notReady","renderInClient","compose","BaseDisplay","optional","refinement","number","n","BlockState","userBpPerPxLimit","maybe","featureIdUnderMouse","contextMenuFeature","additionalContextMenuItemCallbacks","scrollTop","views","blockType","view","initialized","selection","isFeature","featureMaps","CompositeMap","layoutMaps","Map","rectangles","set","getRectangles","getFeatureOverlapping","x","y","_self$blockState$get","_self$blockState$get$","getByCoord","getFeatureByID","ret","val","_block$layout","getByID","blockWatchDisposer","autorun","blocksPresent","contentBlocks","has","_this","addBlock","deleteBlock","addDisposer","setHeight","resizeHeight","distance","oldHeight","setScrollTop","setUserBpPerPxLimit","limit","toRegion","selectFeature","session","isSessionModelWithWidgets","featureWidget","addWidget","featureData","toJSON","showWidget","isSelectionContainer","setSelection","clearFeatureSelection","clearSelection","setFeatureIdUnderMouse","temp","addAdditionalContextMenuItemCallback","regionCannotBeRenderedText","_region","bpPerPx","maxViewBpPerPx","component","pluginManager","getEnv","label","icon","MenuOpenIcon","rpcDriverName","onFeatureClick","featureId","f","onFeatureContextMenu","onMouseLeave","composedRenderProps","renderSvg","opts","overrideHeight","viewOffsetPx","dynamicBlocks","roundedDynamicBlocks","all","fill","exportSVG","rendering","index","offset","clipid","jest","Fragment","transform","clipPath","dangerouslySetInnerHTML","__html","html","postProcessSnapshot","configSchemaFactory","renderer","pluggableConfigSchemaType","baseConfiguration","explicitlyTyped","stateModelFactory","configSchema","literal","configuration","ConfigurationReference","filter","createFilterOptions","trim","matchFrom","ignoreCase","customWidth","maxWidth","fetchResults","query","rankSearchResults","textSearchManager","rootModel","searchScope","args","queryString","searchType","search","RefNameAutocomplete","onSelect","TextFieldProps","setOpen","currentSearch","setCurrentSearch","debouncedSearch","useDebounce","searchOptions","setSearchOptions","coarseVisibleLocStrings","assembly","useMemo","limitOption","group","BaseResult","refName","renderingComponent","noWrap","options","option","RefSequenceResult","matchedAttribute","concat","active","results","adapterResults","Autocomplete","freeSolo","disableListWrap","disableClearable","includeInputInList","clearOnBlur","selectOnFocus","disabled","onOpen","groupBy","String","filterOptions","possibleOptions","params","ListboxProps","maxHeight","onChange","selectedOption","newResult","renderInput","helperText","InputProps","TextFieldInputProps","endAdornment","CircularProgress","size","leaveDelay","InputAdornment","marginRight","SearchIcon","TextField","placeholder","target","renderOption","inputValue","getLabel","getRenderingComponent","getOptionLabel","chooseGridPitch","scale","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","Math","abs","majorMagnitude","parseInt","toExponential","split","majorPitch","majorPitchPx","max","minorPitch","makeTicks","start","end","emitMajor","emitMinor","gridPitch","minBase","maxBase","iterPitch","ticks","base","ceil","rubberBand","fade","tertiary","rubberBandControl","cursor","rubberBandText","contrastText","popover","mouseEvents","paper","paddingRight","guide","OverviewRubberBand","overview","ControlComponent","startX","setStartX","currentX","setCurrentX","guideX","setGuideX","controlsRef","rubberBandRef","mouseDragging","mouseDown","stopPropagation","mouseMove","mouseOut","globalMouseMove","relativeX","globalMouseUp","zoomToDisplayedRegions","pxToBp","clickedAt","centerAt","round","coord","globalKeyDown","window","addEventListener","removeEventListener","arrow","onMouseDown","onMouseOut","leftBpOffset","rightBpOffset","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","HEADER_OVERVIEW_HEIGHT","MobxPropTypes","objectOrObservableObject","ReactPropTypes","node","defaultProps","scaleBarColor","light","scaleBar","scaleBarContig","border","borderBottomColor","scaleBarContigForward","backgroundRepeat","scaleBarContigReverse","scaleBarRegionIncompleteLeft","backgroundSize","borderTopLeftRadius","borderBottomLeftRadius","scaleBarRegionIncompleteRight","borderTopRightRadius","borderBottomRightRadius","scaleBarRefName","lineHeight","scaleBarLabel","justifyContent","scaleBarVisibleRegion","borderWidth","borderStyle","borderColor","HEADER_BAR_HEIGHT","overviewSvg","Polygon","totalWidthPxWithoutBorders","polygonColor","firstBlock","lastBlock","topLeft","bpToPx","reversed","regionNumber","topRight","startPx","points","interRegionPaddingWidth","stroke","ScaleBar","visibleRegions","overviewVisibleRegions","firstOverviewPx","lastOverviewPx","seq","idx","refNameColor","getRefNameColor","regionLength","tickLabels","floor","offsetLabel","clsx","tickLabel","labelIdx","toLocaleString","OverviewScaleBar","displayedRegions","Base1DView","minimumBlockWidth","setVolatileWidth","showAllRegions","totalBp","LinearProgress","marginTop","container","flexDirection","alignItems","slider","ZoomControls","maxBpPerPx","minBpPerPx","scaleFactor","log2","setValue","IconButton","zoom","ZoomOut","Slider","min","onChangeCommitted","zoomTo","ZoomIn","headerBar","headerForm","flexWrap","spacer","flexGrow","input","headerRefName","minWidth","panButton","margin","bp","marginLeft","toggleButton","buttonSpacer","Controls","activateTrackSelector","TrackSelectorIcon","PanControls","slide","ArrowBackIcon","ArrowForwardIcon","RegionWidth","coarseTotalBp","LinearGenomeViewHeader","coarseDynamicBlocks","newRegionValue","getLocation","newRegion","setDisplayedRegions","toLocaleLowerCase","setSearchResults","navToLocString","notify","controls","FormGroup","row","hideHeaderOverview","root","transition","transitions","duration","shortest","trackName","fontSize","dragHandle","dragHandleIcon","verticalAlign","iconButton","forwardRef","setAnchorEl","track","trackConf","trackId","handleClose","assemblies","sequence","Paper","draggable","onDragStart","parentNode","dataTransfer","setDragImage","setDraggingTrackId","onDragEnd","DragIcon","hideTrack","CloseIcon","currentTarget","trackMenuItems","MoreVertIcon","getTrackActionMenuItems","sort","a","b","priority","resizeHandle","RESIZE_HANDLE_HEIGHT","overlay","borderRadius","shape","renderingComponentContainer","trackLabel","trackLabelInline","trackLabelOverlap","trackRenderingContainer","overflowX","TrackContainer","displays","horizontalScroll","draggingTrackId","moveTrack","trackRefs","debouncedOnDragEnter","useDebouncedCallback","RenderingComponent","DisplayBlurb","dimmed","trackLabels","TrackLabel","onScroll","onDragEnter","onHorizontalScroll","ResizeHandle","onDrag","VerticalGuide","coordX","RubberBand","setAnchorPosition","setOffsets","offsetX","ZoomInIcon","leftPx","rightPx","leftOffset","rightOffset","moveTo","zoomToRegion","getSequence","right","numOfBpSelected","scaleBarContainer","scaleBarZoomContainer","majorTickLabel","tick","refLabel","RenderedRefNameLabels","lastLeftBlock","staticBlocks","RenderedScaleBarLabels","baseNumber","other","offsetLeft","totalWidthPx","verticalGuidesZoomContainer","verticalGuidesContainer","majorTick","hint","minorTick","divider","RenderedVerticalGuides","VerticalGuides","centerLineContainer","borderTop","centerLineText","CenterLine","centerLineInfo","trackHeights","tracks","tracksContainer","TracksContainer","delta","scheduled","prevX","setMouseDragging","cleanup","requestAnimationFrame","curr","onWheel","origEvent","normalizeWheel","ctrlKey","pixelY","setScaleFactor","pixelX","dataset","resizer","button","onMouseUp","showCenterLine","SCALE_BAR_HEIGHT","dialogContent","closeButton","grey","SearchResultsDialog","optAssemblyName","_model$displayedRegio","assemblyRegions","handleClick","location","getTrackName","trackConfigSchema","resolveIdentifier","getRoot","_configuration$name","Dialog","DialogTitle","Divider","DialogContent","searchResults","searchQuery","DialogContentText","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","getTrackId","resultTrackId","t","showTrack","handleShowTrack","DialogActions","importFormContainer","importFormEntry","ImportForm","selectedAssemblyIdx","setSelectedAssemblyIdx","selectedRegion","setSelectedRegion","setAssemblyRegions","hasError","handleSelectedRegion","r","waitForAssembly","isSearchDialogDisplayed","Container","Grid","justify","item","select","MenuItem","volatileWidth","onBlur","onKeyPress","disableShrink","showAllRegionsInAssembly","MiniControls","ArrowDown","loadingMessage","textAreaFont","fontFamily","fetchSequence","selectedRegions","_self$rightOffset","assemblyConfig","chunk","SequenceDialog","setSequence","regionsSelected","getSelectedRegions","formatSequence","seqChunks","sequenceChunks","incompleteSeqErrs","chunkSeq","chunkRefName","chunkStart","chunkEnd","chunkLocstring","header","join","formatSeqFasta","chunks","sequenceTooLarge","multiline","rows","rowsMax","fullWidth","readOnly","copy","ContentCopyIcon","seqFastaFile","Blob","saveAs","GetAppIcon","autoFocus","Ruler","major","minor","x1","x2","y1","y2","strokeWidth","mathPower","num","substr","bool","errorMessage","paddingTop","paddingBottom","displayBp","parseFloat","toPrecision","x0","textAnchor","SVGRuler","renderRuler","totalHeight","reduce","accum","SVGHeader","SVGRegionSeparators","headerHeight","strokeOpacity","SVGTracks","displayResults","renderToSvg","when","shift","ready","renderToStaticMarkup","xmlns","xmlnsXlink","viewBox","hideHeader","hasDisplayedRegions","isSeqDialogDisplayed","Header","ExportSvgDlg","OffscreenCanvas","rasterizeLayers","setRasterizeLayers","FormControlLabel","control","Checkbox","checked","exportSvg","ReturnToImportFormDialog","clearView","calculateVisibleLocStrings","isSingleAssemblyName","every","BaseViewModel","ElementId","array","MUIRegion","pluggableMstType","trackSelectorType","enumeration","afterDisplayedRegionsSetCallbacks","assembliesInitialized","assemblyList","_assemblyManager$asse","asm","trackHeightsWithResizeHandles","scaleBarHeight","totalbp","displayedRegionsTotalPx","highResolutionScaling","Set","includeAggregateIndexes","offsetBp","interRegionPaddingBp","minimumBlockBp","findIndex","len","px","bpSoFar","getSnapshot","oob","getTrack","openTrackIds","updateScore","getScore","rewriteOnClicks","trackType","viewMenuActions","subMenu","holdOnClick","apply","allActions","clone","_this2","setWidth","newWidth","toggleHeader","toggleHeaderOverview","scrollTo","newOffsetPx","clamp","minOffset","maxOffset","newBpPerPx","oldBpPerPx","viewWidth","setNewView","horizontallyFlip","initialSnapshot","displayInitialSnapshot","getTrackType","viewType","getViewType","supportedDisplays","displayTypes","displayType","displayConf","d","stateModel","shownTracks","transaction","remove","movingTrackId","targetTrackId","oldIndex","newIndex","splice","closeView","parent","isViewContainer","removeView","toggleTrack","setTrackLabels","setting","toggleCenterLine","selector","locString","isValidRefName","locStrings","locations","ls","parseLocString","navToMultiple","defaultRefName","parsedLocString","changedAssembly","newAssembly","newRegions","canonicalRefName","getCanonicalRefName","newDisplayedRegion","displayedRegion","navTo","firstLocation","s","refNameMatched","predicate","lastIndex","findLastIndex","previousIndex","locationIndex","locationStart","locationEnd","startDisplayedRegion","endDisplayedRegion","startOffset","endOffset","simView","afterDisplayedRegionsSet","cb","targetBpPerPx","extraBp","bpToStart","oldOffsetPx","regionIndex","centerPx","center","factor","cancelLastAnimation","viewWidths","springAnimate","animate","cancelAnimation","currentlyCalculatedStaticBlocks","stringifiedCurrentlyCalculatedStaticBlocks","setDialogComponent","ReturnToImportFormDlg","FolderOpenIcon","SyncAltIcon","VisibilityIcon","LabelIcon","trackTypeActions","entries","calculateStaticBlocks","sret","calculateDynamicBlocks","clear","setCoarseDynamicBlocks","blocks","_this3","blob","SetMaxHeightDlg","lazy","trackShowLabels","trackDisplayMode","trackMaxHeight","showLabels","displayMode","configBlob","toggleShowLabels","setDisplayMode","setMaxHeight","rendererConfig","contextVariable","LinearGenomeViewPlugin","Plugin","BaseLinearDisplayComponent","addTrackType","createBaseTrackConfig","TrackType","createBaseTrackModel","addDisplayType","linearBareDisplayConfigSchemaFactory","DisplayType","LinearBareDisplayStateModelFactory","linearBasicDisplayConfigSchemaFactory","linearBasicDisplayModelFactory","addViewType","ViewType","linearGenomeViewStateModelFactory","isAbstractMenuManager","appendToSubMenu","LineStyleIcon","addView","field","setMax"],"mappings":"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"}