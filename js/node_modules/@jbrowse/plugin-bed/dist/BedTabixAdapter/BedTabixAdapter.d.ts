import { BaseFeatureDataAdapter, BaseOptions } from '@jbrowse/core/data_adapters/BaseAdapter';
import { Region } from '@jbrowse/core/util/types';
import { Feature } from '@jbrowse/core/util/simpleFeature';
import { TabixIndexedFile } from '@gmod/tabix';
import { Instance } from 'mobx-state-tree';
import MyConfigSchema from './configSchema';
export default class BedTabixAdapter extends BaseFeatureDataAdapter {
    private parser;
    protected bed: TabixIndexedFile;
    protected columnNames: string[];
    protected scoreColumn: string;
    static capabilities: string[];
    constructor(config: Instance<typeof MyConfigSchema>);
    getRefNames(opts?: BaseOptions): Promise<any>;
    getHeader(): Promise<string>;
    defaultParser(fields: string[], line: string): {
        [k: string]: string;
    };
    getNames(): Promise<string[] | null>;
    getFeatures(query: Region, opts?: BaseOptions): import("rxjs").Observable<Feature>;
    freeResources(): void;
}
