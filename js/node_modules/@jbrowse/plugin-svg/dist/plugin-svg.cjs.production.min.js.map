{"version":3,"file":"plugin-svg.cjs.production.min.js","sources":["../src/SvgFeatureRenderer/components/FeatureLabel.tsx","../src/SvgFeatureRenderer/components/FeatureGlyph.js","../src/SvgFeatureRenderer/components/SvgOverlay.tsx","../src/SvgFeatureRenderer/components/Box.js","../src/SvgFeatureRenderer/components/Chevron.js","../src/SvgFeatureRenderer/components/Segments.js","../src/SvgFeatureRenderer/components/ProcessedTranscript.js","../src/SvgFeatureRenderer/components/Subfeatures.js","../src/SvgFeatureRenderer/components/util.ts","../src/SvgFeatureRenderer/components/SvgFeatureRendering.js","../src/SvgFeatureRenderer/configSchema.ts","../src/index.ts"],"sourcesContent":["import React from 'react'\nimport { measureText } from '@jbrowse/core/util'\n\nexport default function Label(props: {\n  text: string\n  x: number\n  y: number\n  color?: string\n  fontHeight?: number\n  featureWidth?: number\n  allowedWidthExpansion?: number\n  reversed?: boolean\n  fontWidthScaleFactor?: number\n}) {\n  const {\n    text,\n    x,\n    y,\n    color = 'black',\n    fontHeight = 13,\n    featureWidth = 0,\n    reversed,\n    allowedWidthExpansion,\n    fontWidthScaleFactor = 0.6,\n  } = props\n\n  const fontWidth = fontHeight * fontWidthScaleFactor\n  const totalWidth =\n    featureWidth && allowedWidthExpansion\n      ? featureWidth + allowedWidthExpansion\n      : Infinity\n\n  const measuredTextWidth = measureText(text, fontHeight)\n\n  return (\n    <text\n      x={reversed ? x + featureWidth - measuredTextWidth : x}\n      y={y + fontHeight}\n      style={{ fontSize: fontHeight, fill: color, cursor: 'default' }}\n    >\n      {measuredTextWidth > totalWidth\n        ? `${text.slice(0, totalWidth / fontWidth)}...`\n        : text}\n    </text>\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport FeatureLabel from './FeatureLabel'\n\nfunction FeatureGlyph(props) {\n  const {\n    feature,\n    rootLayout,\n    selected,\n    config,\n    name,\n    shouldShowName,\n    description,\n    shouldShowDescription,\n    fontHeight,\n    allowedWidthExpansion,\n    reversed,\n  } = props\n\n  const featureLayout = rootLayout.getSubRecord(String(feature.id()))\n  const { GlyphComponent } = featureLayout.data\n\n  const glyphComponents = [\n    <GlyphComponent\n      key={`glyph-${feature.id()}`}\n      {...props}\n      feature={feature}\n      featureLayout={featureLayout}\n      selected={selected}\n    />,\n  ]\n\n  if (shouldShowName) {\n    glyphComponents.push(\n      <FeatureLabel\n        key={`glyph-name-${feature.id()}`}\n        text={name}\n        x={rootLayout.getSubRecord('nameLabel').absolute.left}\n        y={rootLayout.getSubRecord('nameLabel').absolute.top}\n        color={readConfObject(config, ['labels', 'nameColor'], { feature })}\n        fontHeight={fontHeight}\n        reversed={reversed}\n        featureWidth={featureLayout.width}\n        allowedWidthExpansion={allowedWidthExpansion}\n      />,\n    )\n  }\n\n  if (shouldShowDescription) {\n    glyphComponents.push(\n      <FeatureLabel\n        key={`glyph-description-${feature.id()}`}\n        text={description}\n        x={rootLayout.getSubRecord('descriptionLabel').absolute.left}\n        y={rootLayout.getSubRecord('descriptionLabel').absolute.top}\n        color={readConfObject(config, ['labels', 'descriptionColor'], {\n          feature,\n        })}\n        fontHeight={fontHeight}\n        featureWidth={featureLayout.width}\n        reversed={reversed}\n        allowedWidthExpansion={allowedWidthExpansion}\n      />,\n    )\n  }\n\n  return <g>{glyphComponents}</g>\n}\n\nFeatureGlyph.propTypes = {\n  feature: PropTypes.shape({\n    id: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n  }).isRequired,\n  layout: PropTypes.shape({\n    addRect: PropTypes.func.isRequired,\n    getTotalHeight: PropTypes.func.isRequired,\n  }).isRequired,\n  rootLayout: PropTypes.shape({\n    addChild: PropTypes.func.isRequired,\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: PropTypes.number.isRequired,\n  reversed: PropTypes.bool,\n  selected: PropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  name: PropTypes.string,\n  shouldShowName: PropTypes.bool,\n  description: PropTypes.string,\n  shouldShowDescription: PropTypes.bool,\n  fontHeight: PropTypes.number,\n  allowedWidthExpansion: PropTypes.number,\n  movedDuringLastMouseDown: PropTypes.bool.isRequired,\n}\n\nFeatureGlyph.defaultProps = {\n  reversed: false,\n  selected: false,\n  name: '',\n  shouldShowName: false,\n  description: '',\n  shouldShowDescription: false,\n  fontHeight: undefined,\n  allowedWidthExpansion: undefined,\n}\n\nexport default observer(FeatureGlyph)\n","import { bpSpanPx } from '@jbrowse/core/util'\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature'\nimport { Region } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport React from 'react'\n\ntype LayoutRecord = [number, number, number, number]\ninterface SvgOverlayProps {\n  region: Region\n  displayModel: {\n    blockLayoutFeatures: Map<string, Map<string, LayoutRecord>>\n    selectedFeatureId?: string\n    featureIdUnderMouse?: string\n    contextMenuFeature?: SimpleFeature\n  }\n  bpPerPx: number\n  blockKey: string\n  movedDuringLastMouseDown: boolean\n  onFeatureMouseDown?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseEnter?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOut?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOver?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseUp?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseLeave?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseMove?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  // synthesized from mouseup and mousedown\n  onFeatureClick?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureContextMenu?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n}\n\ninterface OverlayRectProps extends React.SVGProps<SVGRectElement> {\n  rect?: LayoutRecord\n  region: Region\n  bpPerPx: number\n}\n\nfunction OverlayRect({\n  rect,\n  region,\n  bpPerPx,\n  ...rectProps\n}: OverlayRectProps) {\n  if (!rect) {\n    return null\n  }\n  const [leftBp, topPx, rightBp, bottomPx] = rect\n  const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n  const rectTop = Math.round(topPx)\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const rectHeight = Math.round(bottomPx - topPx)\n  const width = rightPx - leftPx\n\n  if (leftPx + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(leftPx, 0)\n  const diff = leftWithinBlock - leftPx\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      x={leftWithinBlock - 2}\n      y={rectTop - 2}\n      width={widthWithinBlock + 4}\n      height={rectHeight + 4}\n      {...rectProps}\n    />\n  )\n}\n\nfunction SvgOverlay({\n  displayModel: {\n    blockLayoutFeatures,\n    selectedFeatureId,\n    featureIdUnderMouse,\n    contextMenuFeature,\n  },\n  blockKey,\n  region,\n  bpPerPx,\n  movedDuringLastMouseDown,\n  ...handlers\n}: SvgOverlayProps) {\n  const blockLayout = blockLayoutFeatures?.get(blockKey)\n  if (!blockLayout) {\n    return null\n  }\n  const mouseoverFeatureId = featureIdUnderMouse || contextMenuFeature?.id()\n\n  function onFeatureMouseDown(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseDown: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseEnter(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseEnter: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOut(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOut: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOver(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOver: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseUp(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseUp: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseLeave(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseLeave: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseMove(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseMove: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureClick(event: React.MouseEvent<SVGRectElement, MouseEvent>) {\n    if (movedDuringLastMouseDown) {\n      return undefined\n    }\n    const { onFeatureClick: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    event.stopPropagation()\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureContextMenu(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureContextMenu: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  return (\n    <>\n      {mouseoverFeatureId ? (\n        <OverlayRect\n          rect={blockLayout.get(mouseoverFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          fill=\"#000\"\n          fillOpacity=\"0.2\"\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onContextMenu={onFeatureContextMenu}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n          data-testid={mouseoverFeatureId}\n        />\n      ) : null}\n      {selectedFeatureId ? (\n        <OverlayRect\n          rect={blockLayout.get(selectedFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          stroke=\"#00b8ff\"\n          fill=\"none\"\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(SvgOverlay)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\n\nfunction Box(props) {\n  const { feature, region, config, featureLayout, selected, bpPerPx } = props\n  const screenWidth = (region.end - region.start) / bpPerPx\n\n  const color1 = readConfObject(config, 'color1', { feature })\n  let emphasizedColor1\n  try {\n    emphasizedColor1 = emphasize(color1, 0.3)\n  } catch (error) {\n    emphasizedColor1 = color1\n  }\n  const color2 = readConfObject(config, 'color2', { feature })\n\n  const { left, top, width, height } = featureLayout.absolute\n\n  if (left + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      data-testid={`box-${feature.id()}`}\n      x={leftWithinBlock}\n      y={top}\n      width={widthWithinBlock}\n      height={height}\n      fill={selected ? emphasizedColor1 : color1}\n      stroke={selected ? color2 : undefined}\n    />\n  )\n}\n\nBox.propTypes = {\n  feature: ReactPropTypes.shape({\n    get: ReactPropTypes.func.isRequired,\n    id: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  featureLayout: ReactPropTypes.shape({\n    absolute: ReactPropTypes.shape({\n      top: ReactPropTypes.number.isRequired,\n      left: ReactPropTypes.number.isRequired,\n      width: ReactPropTypes.number.isRequired,\n      height: ReactPropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  selected: ReactPropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\n\nBox.defaultProps = {\n  selected: false,\n}\n\nexport default observer(Box)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\nimport { isUTR } from './util'\n\nconst utrHeightFraction = 0.65\n\nfunction Chevron(props) {\n  const {\n    feature,\n    bpPerPx,\n    region,\n    config,\n    featureLayout,\n    selected,\n    reversed,\n  } = props\n\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const width = Math.max(featureLayout.absolute.width, 1)\n  const { left } = featureLayout.absolute\n  let { top, height } = featureLayout.absolute\n  if (isUTR(feature)) {\n    top += ((1 - utrHeightFraction) / 2) * height\n    height *= utrHeightFraction\n  }\n\n  const strand = feature.get('strand')\n  const direction = strand * (reversed ? -1 : 1)\n  const color = isUTR(feature)\n    ? readConfObject(config, 'color3', { feature })\n    : readConfObject(config, 'color1', { feature })\n  let emphasizedColor\n  try {\n    emphasizedColor = emphasize(color, 0.3)\n  } catch (error) {\n    emphasizedColor = color\n  }\n  const color2 = readConfObject(config, 'color2', { feature })\n\n  if (left + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <>\n      <rect\n        data-testid={feature.id()}\n        stroke={selected ? color2 : undefined}\n        fill={selected ? emphasizedColor : color}\n        x={leftWithinBlock}\n        y={top}\n        width={widthWithinBlock}\n        height={height}\n      />\n      {direction < 0 && diff === 0 ? (\n        <polygon\n          stroke={selected ? color2 : undefined}\n          fill={selected ? emphasizedColor : color}\n          points={[\n            [left, top],\n            [left - height / 2, top + height / 2],\n            [left, top + height],\n          ]}\n        />\n      ) : null}\n      {direction > 0 && leftWithinBlock + widthWithinBlock < screenWidth ? (\n        <polygon\n          stroke={selected ? color2 : undefined}\n          fill={selected ? emphasizedColor : color}\n          points={[\n            [leftWithinBlock + widthWithinBlock, top],\n            [leftWithinBlock + widthWithinBlock + height / 2, top + height / 2],\n            [leftWithinBlock + widthWithinBlock, top + height],\n          ]}\n        />\n      ) : null}\n    </>\n  )\n}\n\nChevron.propTypes = {\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  featureLayout: ReactPropTypes.shape({\n    absolute: ReactPropTypes.shape({\n      top: ReactPropTypes.number.isRequired,\n      left: ReactPropTypes.number.isRequired,\n      width: ReactPropTypes.number.isRequired,\n      height: ReactPropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  selected: ReactPropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  reversed: ReactPropTypes.bool,\n}\n\nChevron.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nexport default observer(Chevron)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nfunction Segments(props) {\n  const {\n    feature,\n    featureLayout,\n    selected,\n    config,\n    reversed,\n    // some subfeatures may be computed e.g. makeUTRs,\n    // so these are passed as a prop\n    // eslint-disable-next-line react/prop-types\n    subfeatures: subfeaturesProp,\n  } = props\n\n  const subfeatures = subfeaturesProp || feature.get('subfeatures')\n  const color2 = readConfObject(config, 'color2', { feature })\n  let emphasizedColor2\n  try {\n    emphasizedColor2 = emphasize(color2, 0.3)\n  } catch (error) {\n    emphasizedColor2 = color2\n  }\n  const { left, top, width, height } = featureLayout.absolute\n  const points = [\n    [left, top + height / 2],\n    [left + width, top + height / 2],\n  ]\n  const strand = feature.get('strand')\n  if (strand) {\n    points.push(\n      [left + width - height / 4, top + height / 4],\n      [left + width - height / 4, top + 3 * (height / 4)],\n      [left + width, top + height / 2],\n    )\n  }\n\n  return (\n    <>\n      <polyline\n        data-testid={feature.id()}\n        transform={\n          strand && ((!reversed && strand < 0) || (reversed && strand > 0))\n            ? `rotate(180,${left + width / 2},${top + height / 2})`\n            : undefined\n        }\n        points={points}\n        stroke={selected ? emphasizedColor2 : color2}\n      />\n      {\n        // eslint-disable-next-line react/prop-types\n        subfeatures.map(subfeature => {\n          const subfeatureId = String(subfeature.id())\n          const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n          // This subfeature got filtered out\n          if (!subfeatureLayout) {\n            return null\n          }\n          const { GlyphComponent } = subfeatureLayout.data\n          return (\n            <GlyphComponent\n              key={`glyph-${subfeatureId}`}\n              {...props}\n              feature={subfeature}\n              featureLayout={subfeatureLayout}\n              selected={selected}\n            />\n          )\n        })\n      }\n    </>\n  )\n}\n\nSegments.propTypes = {\n  feature: PropTypes.shape({\n    id: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n  }).isRequired,\n  featureLayout: PropTypes.shape({\n    absolute: PropTypes.shape({\n      top: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    }),\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  selected: PropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  reversed: PropTypes.bool,\n}\n\nSegments.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nexport default observer(Segments)\n","import { observer } from 'mobx-react'\nimport React from 'react'\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport Segments from './Segments'\nimport { layOutFeature, layOutSubfeatures } from './util'\n\nfunction ProcessedTranscript(props) {\n  // eslint-disable-next-line react/prop-types\n  const { feature, config } = props\n  const subfeatures = getSubparts(feature, config)\n\n  // we manually compute some subfeatures, so pass these separately\n  return <Segments {...props} subfeatures={subfeatures} />\n}\n\n// make a function that will filter features features according to the\n// subParts conf var\nfunction makeSubpartsFilter(confKey = 'subParts', config) {\n  let filter = readConfObject(config, confKey)\n\n  if (typeof filter == 'string') {\n    // convert to array\n    filter = filter.split(/\\s*,\\s*/)\n  }\n\n  if (Array.isArray(filter)) {\n    const typeNames = filter.map(typeName => typeName.toLowerCase())\n    return feature => {\n      return typeNames.includes(feature.get('type').toLowerCase())\n    }\n  }\n  if (typeof filter === 'function') {\n    return filter\n  }\n  return () => true\n}\n\nfunction filterSubpart(feature, config) {\n  return makeSubpartsFilter('subParts', config)(feature)\n}\n\nfunction isUTR(feature) {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n\nfunction makeUTRs(parent, subs) {\n  // based on Lincoln's UTR-making code in Bio::Graphics::Glyph::processed_transcript\n  const subparts = [...subs]\n\n  let codeStart = Infinity\n  let codeEnd = -Infinity\n\n  let haveLeftUTR\n  let haveRightUTR\n\n  // gather exons, find coding start and end, and look for UTRs\n  const exons = []\n  for (let i = 0; i < subparts.length; i++) {\n    const type = subparts[i].get('type')\n    if (/^cds/i.test(type)) {\n      if (codeStart > subparts[i].get('start')) {\n        codeStart = subparts[i].get('start')\n      }\n      if (codeEnd < subparts[i].get('end')) {\n        codeEnd = subparts[i].get('end')\n      }\n    } else if (/exon/i.test(type)) {\n      exons.push(subparts[i])\n    } else if (isUTR(subparts[i])) {\n      haveLeftUTR = subparts[i].get('start') === parent.get('start')\n      haveRightUTR = subparts[i].get('end') === parent.get('end')\n    }\n  }\n\n  // bail if we don't have exons and CDS\n  if (!(exons.length && codeStart < Infinity && codeEnd > -Infinity)) {\n    return subparts\n  }\n\n  // make sure the exons are sorted by coord\n  exons.sort((a, b) => a.get('start') - b.get('start'))\n\n  const strand = parent.get('strand')\n\n  // make the left-hand UTRs\n  let start\n  let end\n  if (!haveLeftUTR) {\n    for (let i = 0; i < exons.length; i++) {\n      start = exons[i].get('start')\n      if (start >= codeStart) {\n        break\n      }\n      end = codeStart > exons[i].get('end') ? exons[i].get('end') : codeStart\n      const type = strand >= 0 ? 'five_prime_UTR' : 'three_prime_UTR'\n      subparts.unshift(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  // make the right-hand UTRs\n  if (!haveRightUTR) {\n    for (let i = exons.length - 1; i >= 0; i--) {\n      end = exons[i].get('end')\n      if (end <= codeEnd) {\n        break\n      }\n\n      start = codeEnd < exons[i].get('start') ? exons[i].get('start') : codeEnd\n      const type = strand >= 0 ? 'three_prime_UTR' : 'five_prime_UTR'\n      subparts.push(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  return subparts\n}\n\nfunction getSubparts(f, config) {\n  let c = f.get('subfeatures')\n  if (!c || !c.length) {\n    return []\n  }\n  const hasUTRs = !!c.find(child => isUTR(child))\n  const isTranscript = ['mRNA', 'transcript'].includes(f.get('type'))\n  const impliedUTRs = !hasUTRs && isTranscript\n\n  // if we think we should use impliedUTRs, or it is specifically in the\n  // config, then makeUTRs\n  if (impliedUTRs || readConfObject(config, 'impliedUTRs')) {\n    c = makeUTRs(f, c)\n  }\n\n  return c.filter(element => filterSubpart(element, config))\n}\n\nProcessedTranscript.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  const subfeatures = getSubparts(feature, config)\n  layOutSubfeatures({\n    layout: subLayout,\n    subfeatures,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  return subLayout\n}\n\nexport default observer(ProcessedTranscript)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { chooseGlyphComponent, layOut, layOutFeature } from './util'\n\nfunction Subfeatures(props) {\n  const { feature, featureLayout, selected } = props\n\n  return (\n    <>\n      {feature.get('subfeatures').map(subfeature => {\n        const subfeatureId = String(subfeature.id())\n        const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n        const { GlyphComponent } = subfeatureLayout.data\n        return (\n          <GlyphComponent\n            key={`glyph-${subfeatureId}`}\n            {...props}\n            feature={subfeature}\n            featureLayout={subfeatureLayout}\n            selected={selected}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nSubfeatures.propTypes = {\n  feature: PropTypes.shape({ get: PropTypes.func.isRequired }).isRequired,\n  featureLayout: PropTypes.shape({\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  selected: PropTypes.bool,\n  reversed: PropTypes.bool,\n}\n\nSubfeatures.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nSubfeatures.layOut = ({ layout, feature, bpPerPx, reversed, config }) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  const displayMode = readConfObject(config, 'displayMode')\n  if (displayMode !== 'reducedRepresentation') {\n    const subfeatures = feature.get('subfeatures') || []\n    let topOffset = 0\n    subfeatures.forEach(subfeature => {\n      const SubfeatureGlyphComponent = chooseGlyphComponent(subfeature)\n      const subfeatureHeight = readConfObject(config, 'height', {\n        feature: subfeature,\n      })\n\n      const subSubLayout = (SubfeatureGlyphComponent.layOut || layOut)({\n        layout: subLayout,\n        feature: subfeature,\n        bpPerPx,\n        reversed,\n        config,\n      })\n      subSubLayout.move(0, topOffset)\n      topOffset +=\n        displayMode === 'collapse'\n          ? 0\n          : (displayMode === 'compact'\n              ? subfeatureHeight / 3\n              : subfeatureHeight) + 2\n    })\n  }\n  return subLayout\n}\n\nexport default observer(Subfeatures)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport Box from './Box'\nimport Chevron from './Chevron'\nimport ProcessedTranscript from './ProcessedTranscript'\nimport Segments from './Segments'\nimport Subfeatures from './Subfeatures'\n\ninterface Glyph extends React.FunctionComponent {\n  layOut?: Function\n}\n\nexport function chooseGlyphComponent(feature: Feature): Glyph {\n  const type = feature.get('type')\n  const strand = feature.get('strand')\n  const subfeatures: Feature[] = feature.get('subfeatures')\n\n  if (subfeatures) {\n    const hasSubSub = subfeatures.find(subfeature => {\n      return !!subfeature.get('subfeatures')\n    })\n    if (hasSubSub) {\n      return Subfeatures\n    }\n    const transcriptTypes = ['mRNA', 'transcript']\n    if (\n      transcriptTypes.includes(type) &&\n      subfeatures.find(f => f.get('type') === 'CDS')\n    ) {\n      return ProcessedTranscript\n    }\n    return Segments\n  }\n  return [1, -1].includes(strand) ? Chevron : Box\n}\n\ninterface BaseLayOutArgs {\n  layout: SceneGraph\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n}\n\ninterface FeatureLayOutArgs extends BaseLayOutArgs {\n  feature: Feature\n}\n\ninterface SubfeatureLayOutArgs extends BaseLayOutArgs {\n  subfeatures: Feature[]\n}\n\nexport function layOut({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n}: FeatureLayOutArgs): SceneGraph {\n  const displayMode = readConfObject(config, 'displayMode')\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  if (displayMode !== 'reducedRepresentation') {\n    layOutSubfeatures({\n      layout: subLayout,\n      subfeatures: feature.get('subfeatures') || [],\n      bpPerPx,\n      reversed,\n      config,\n    })\n  }\n  return subLayout\n}\n\nexport function layOutFeature(args: FeatureLayOutArgs): SceneGraph {\n  const { layout, feature, bpPerPx, reversed, config } = args\n  const displayMode = readConfObject(config, 'displayMode')\n  const GlyphComponent =\n    displayMode === 'reducedRepresentation'\n      ? Chevron\n      : chooseGlyphComponent(feature)\n  const parentFeature = feature.parent()\n  let x = 0\n  if (parentFeature) {\n    x = reversed\n      ? (parentFeature.get('end') - feature.get('end')) / bpPerPx\n      : (feature.get('start') - parentFeature.get('start')) / bpPerPx\n  }\n  const height = readConfObject(config, 'height', { feature })\n  const width = (feature.get('end') - feature.get('start')) / bpPerPx\n  const layoutParent = layout.parent\n  const top = layoutParent ? layoutParent.top : 0\n  const subLayout = layout.addChild(\n    String(feature.id()),\n    x,\n    displayMode === 'collapse' ? 0 : top,\n    width,\n    displayMode === 'compact' ? height / 2 : height,\n    { GlyphComponent },\n  )\n  return subLayout\n}\n\nexport function layOutSubfeatures(args: SubfeatureLayOutArgs): void {\n  const { layout: subLayout, subfeatures, bpPerPx, reversed, config } = args\n  subfeatures.forEach(subfeature => {\n    const SubfeatureGlyphComponent = chooseGlyphComponent(subfeature)\n    ;(SubfeatureGlyphComponent.layOut || layOut)({\n      layout: subLayout,\n      feature: subfeature,\n      bpPerPx,\n      reversed,\n      config,\n    })\n  })\n}\n\nexport function isUTR(feature: Feature): boolean {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { bpToPx, measureText } from '@jbrowse/core/util'\nimport SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport FeatureGlyph from './FeatureGlyph'\nimport SvgOverlay from './SvgOverlay'\nimport { chooseGlyphComponent, layOut } from './util'\n\nconst renderingStyle = {\n  position: 'relative',\n}\n\nconst padding = 2\n\nfunction RenderedFeatureGlyph(props) {\n  const { feature, bpPerPx, region, config, displayMode, layout } = props\n  const { reversed } = region\n  const start = feature.get(reversed ? 'end' : 'start')\n  const startPx = bpToPx(start, region, bpPerPx)\n  const labelsAllowed = displayMode !== 'compact' && displayMode !== 'collapsed'\n\n  const rootLayout = new SceneGraph('root', 0, 0, 0, 0)\n  const GlyphComponent = chooseGlyphComponent(feature)\n  const featureLayout = (GlyphComponent.layOut || layOut)({\n    layout: rootLayout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  let shouldShowName\n  let shouldShowDescription\n  let name\n  let description\n  let fontHeight\n  let expansion\n  if (labelsAllowed) {\n    const showLabels = readConfObject(config, 'showLabels')\n    fontHeight = readConfObject(config, ['labels', 'fontSize'], { feature })\n    expansion = readConfObject(config, 'maxFeatureGlyphExpansion') || 0\n    name = readConfObject(config, ['labels', 'name'], { feature }) || ''\n    shouldShowName = /\\S/.test(name) && showLabels\n\n    description =\n      readConfObject(config, ['labels', 'description'], { feature }) || ''\n    shouldShowDescription = /\\S/.test(description) && showLabels\n    const textVerticalPadding = 2\n\n    let nameWidth = 0\n    if (shouldShowName) {\n      nameWidth =\n        Math.round(\n          Math.min(measureText(name, fontHeight), rootLayout.width + expansion),\n        ) + padding\n      rootLayout.addChild(\n        'nameLabel',\n        0,\n        featureLayout.bottom + textVerticalPadding,\n        nameWidth,\n        fontHeight,\n      )\n    }\n\n    let descriptionWidth = 0\n    if (shouldShowDescription) {\n      const aboveLayout = shouldShowName\n        ? rootLayout.getSubRecord('nameLabel')\n        : featureLayout\n      descriptionWidth =\n        Math.round(\n          Math.min(\n            measureText(description, fontHeight),\n            rootLayout.width + expansion,\n          ),\n        ) + padding\n      rootLayout.addChild(\n        'descriptionLabel',\n        0,\n        aboveLayout.bottom + textVerticalPadding,\n        descriptionWidth,\n        fontHeight,\n      )\n    }\n  }\n\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start'),\n    feature.get('start') + rootLayout.width * bpPerPx,\n    rootLayout.height,\n  )\n  if (topPx === null) {\n    return null\n  }\n  rootLayout.move(startPx, topPx)\n\n  return (\n    <FeatureGlyph\n      key={`svg-feature-${feature.id()}`}\n      feature={feature}\n      layout={layout}\n      rootLayout={rootLayout}\n      bpPerPx={bpPerPx}\n      config={config}\n      name={String(name)}\n      shouldShowName={shouldShowName}\n      description={String(description)}\n      shouldShowDescription={shouldShowDescription}\n      fontHeight={fontHeight}\n      allowedWidthExpansion={expansion}\n      reversed={region.reversed}\n      {...props}\n    />\n  )\n}\n\nRenderedFeatureGlyph.propTypes = {\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n\n  displayMode: ReactPropTypes.string.isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\n\nconst RenderedFeatures = observer(props => {\n  const { features } = props\n  const featuresRendered = []\n  for (const feature of features.values()) {\n    featuresRendered.push(\n      <RenderedFeatureGlyph key={feature.id()} feature={feature} {...props} />,\n    )\n  }\n  return <>{featuresRendered}</>\n})\nRenderedFeatures.propTypes = {\n  features: ReactPropTypes.oneOfType([\n    ReactPropTypes.instanceOf(Map),\n    ReactPropTypes.arrayOf(ReactPropTypes.shape()),\n  ]),\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\n\nRenderedFeatures.defaultProps = {\n  features: [],\n}\n\nfunction SvgFeatureRendering(props) {\n  const {\n    layout,\n    blockKey,\n    regions,\n    bpPerPx,\n    features,\n    config,\n    displayModel,\n    exportSVG,\n  } = props\n  const [region] = regions || []\n  const width = (region.end - region.start) / bpPerPx\n  const displayMode = readConfObject(config, 'displayMode')\n\n  const ref = useRef()\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] = useState(\n    false,\n  )\n  const [height, setHeight] = useState(0)\n  const {\n    onMouseOut,\n    onMouseDown,\n    onMouseLeave,\n    onMouseEnter,\n    onMouseOver,\n    onMouseMove,\n    onMouseUp,\n    onClick,\n  } = props\n\n  const mouseDown = useCallback(\n    event => {\n      setMouseIsDown(true)\n      setMovedDuringLastMouseDown(false)\n      const handler = onMouseDown\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseDown],\n  )\n\n  const mouseUp = useCallback(\n    event => {\n      setMouseIsDown(false)\n      const handler = onMouseUp\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseUp],\n  )\n\n  const mouseEnter = useCallback(\n    event => {\n      const handler = onMouseEnter\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseEnter],\n  )\n\n  const mouseLeave = useCallback(\n    event => {\n      const handler = onMouseLeave\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseLeave],\n  )\n\n  const mouseOver = useCallback(\n    event => {\n      const handler = onMouseOver\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseOver],\n  )\n\n  const mouseOut = useCallback(\n    event => {\n      const handler = onMouseOut\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseOut],\n  )\n\n  const mouseMove = useCallback(\n    event => {\n      if (mouseIsDown) {\n        setMovedDuringLastMouseDown(true)\n      }\n      let offsetX = 0\n      let offsetY = 0\n      if (ref.current) {\n        offsetX = ref.current.getBoundingClientRect().left\n        offsetY = ref.current.getBoundingClientRect().top\n      }\n      offsetX = event.clientX - offsetX\n      offsetY = event.clientY - offsetY\n      const px = region.reversed ? width - offsetX : offsetX\n      const clientBp = region.start + bpPerPx * px\n\n      const featureIdCurrentlyUnderMouse = displayModel.getFeatureOverlapping(\n        blockKey,\n        clientBp,\n        offsetY,\n      )\n\n      if (onMouseMove) {\n        onMouseMove(event, featureIdCurrentlyUnderMouse)\n      }\n    },\n    [\n      blockKey,\n      bpPerPx,\n      mouseIsDown,\n      onMouseMove,\n      region.reversed,\n      region.start,\n      displayModel,\n      width,\n    ],\n  )\n\n  const click = useCallback(\n    event => {\n      // don't select a feature if we are clicking and dragging\n      if (movedDuringLastMouseDown) {\n        return\n      }\n      if (onClick) {\n        onClick(event)\n      }\n    },\n    [movedDuringLastMouseDown, onClick],\n  )\n\n  useEffect(() => {\n    setHeight(layout.getTotalHeight())\n  }, [layout])\n\n  if (exportSVG) {\n    return (\n      <RenderedFeatures\n        features={features}\n        displayMode={displayMode}\n        {...props}\n        region={region}\n      />\n    )\n  }\n  return (\n    <div style={renderingStyle}>\n      <svg\n        ref={ref}\n        className=\"SvgFeatureRendering\"\n        width={`${width}px`}\n        height={`${height}px`}\n        onMouseDown={mouseDown}\n        onMouseUp={mouseUp}\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}\n        onMouseOver={mouseOver}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n        onFocus={mouseEnter}\n        onBlur={mouseLeave}\n        onClick={click}\n        style={{ display: 'block' }}\n      >\n        <RenderedFeatures\n          features={features}\n          displayMode={displayMode}\n          {...props}\n          region={region}\n          movedDuringLastMouseDown={movedDuringLastMouseDown}\n        />\n        <SvgOverlay {...props} region={region} />\n      </svg>\n    </div>\n  )\n}\n\nSvgFeatureRendering.propTypes = {\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n\n  regions: ReactPropTypes.arrayOf(CommonPropTypes.Region).isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  features: ReactPropTypes.oneOfType([\n    ReactPropTypes.instanceOf(Map),\n    ReactPropTypes.arrayOf(ReactPropTypes.shape()),\n  ]),\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  displayModel: ReactPropTypes.shape({\n    configuration: ReactPropTypes.shape({}),\n    getFeatureOverlapping: ReactPropTypes.func,\n    selectedFeatureId: ReactPropTypes.string,\n    featureIdUnderMouse: ReactPropTypes.string,\n  }),\n\n  onMouseDown: ReactPropTypes.func,\n  onMouseUp: ReactPropTypes.func,\n  onMouseEnter: ReactPropTypes.func,\n  onMouseLeave: ReactPropTypes.func,\n  onMouseOver: ReactPropTypes.func,\n  onMouseOut: ReactPropTypes.func,\n  onMouseMove: ReactPropTypes.func,\n  onClick: ReactPropTypes.func,\n  onContextMenu: ReactPropTypes.func,\n  onFeatureClick: ReactPropTypes.func,\n  onFeatureContextMenu: ReactPropTypes.func,\n  blockKey: ReactPropTypes.string,\n  exportSVG: ReactPropTypes.shape({}),\n}\n\nSvgFeatureRendering.defaultProps = {\n  displayModel: {},\n  exportSVG: undefined,\n\n  features: new Map(),\n  blockKey: undefined,\n\n  onMouseDown: undefined,\n  onMouseUp: undefined,\n  onMouseEnter: undefined,\n  onMouseLeave: undefined,\n  onMouseOver: undefined,\n  onMouseOut: undefined,\n  onMouseMove: undefined,\n  onClick: undefined,\n  onContextMenu: undefined,\n  onFeatureClick: undefined,\n  onFeatureContextMenu: undefined,\n}\n\nexport default observer(SvgFeatureRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'SvgFeatureRenderer',\n  {\n    color1: {\n      type: 'color',\n      description: 'the main color of each feature',\n      defaultValue: 'goldenrod',\n      contextVariable: ['feature'],\n    },\n    color2: {\n      type: 'color',\n      description:\n        'the secondary color of each feature, used for connecting lines, etc',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    color3: {\n      type: 'color',\n      description:\n        'the tertiary color of each feature, often used for contrasting fills, like on UTRs',\n      defaultValue: '#357089',\n      contextVariable: ['feature'],\n    },\n    height: {\n      type: 'number',\n      description: 'height in pixels of the main body of each feature',\n      defaultValue: 10,\n      contextVariable: ['feature'],\n    },\n    showLabels: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    labels: ConfigurationSchema('SvgFeatureLabels', {\n      name: {\n        type: 'string',\n        description:\n          'the primary name of the feature to show, if space is available',\n        defaultValue: `jexl:get(feature,'name') || get(feature,'id')`,\n        contextVariable: ['feature'],\n      },\n      nameColor: {\n        type: 'color',\n        description: 'the color of the name label, if shown',\n        defaultValue: 'black',\n        contextVariable: ['feature'],\n      },\n      description: {\n        type: 'string',\n        description: 'the text description to show, if space is available',\n        defaultValue: `jexl:get(feature,'note') || get(feature,'description')`,\n        contextVariable: ['feature'],\n      },\n      descriptionColor: {\n        type: 'color',\n        description: 'the color of the description, if shown',\n        defaultValue: 'blue',\n        contextVariable: ['feature'],\n      },\n      fontSize: {\n        type: 'number',\n        description:\n          'height in pixels of the text to use for names and descriptions',\n        defaultValue: 13,\n        contextVariable: ['feature'],\n      },\n    }),\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'reducedRepresentation',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    maxFeatureGlyphExpansion: {\n      type: 'number',\n      description:\n        \"maximum number of pixels on each side of a feature's bounding coordinates that a glyph is allowed to use\",\n      defaultValue: 500,\n    },\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a svg rendering',\n      defaultValue: 600,\n    },\n    subParts: {\n      type: 'string',\n      description: 'subparts for a glyph',\n      defaultValue: 'CDS,UTR,five_prime_UTR,three_prime_UTR',\n    },\n    impliedUTRs: {\n      type: 'boolean',\n      description: 'imply UTR from the exon and CDS differences',\n      defaultValue: false,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as svgFeatureRendererConfigSchema,\n  ReactComponent as SvgFeatureRendererReactComponent,\n} from './SvgFeatureRenderer'\n\nclass SvgFeatureRenderer extends BoxRendererType {\n  supportsSVG = true\n}\n\nexport default class SVGPlugin extends Plugin {\n  name = 'SVGPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new SvgFeatureRenderer({\n          name: 'SvgFeatureRenderer',\n          ReactComponent: SvgFeatureRendererReactComponent,\n          configSchema: svgFeatureRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n  }\n}\n\nexport { svgFeatureRendererConfigSchema, SvgFeatureRendererReactComponent }\n"],"names":["Label","props","text","x","y","color","fontHeight","featureWidth","reversed","allowedWidthExpansion","fontWidthScaleFactor","fontWidth","totalWidth","Infinity","measuredTextWidth","measureText","React","style","fontSize","fill","cursor","slice","FeatureGlyph","feature","rootLayout","selected","config","name","shouldShowName","description","shouldShowDescription","featureLayout","getSubRecord","String","id","glyphComponents","data","GlyphComponent","key","push","FeatureLabel","absolute","left","top","readConfObject","width","propTypes","PropTypes","shape","func","isRequired","get","layout","addRect","getTotalHeight","addChild","region","CommonPropTypes","Region","bpPerPx","number","bool","ConfigSchema","string","movedDuringLastMouseDown","defaultProps","undefined","observer","OverlayRect","rect","rectProps","topPx","bottomPx","bpSpanPx","leftPx","rightPx","rectTop","Math","round","screenWidth","end","start","rectHeight","leftWithinBlock","max","widthWithinBlock","min","height","SvgOverlay","displayModel","blockLayoutFeatures","selectedFeatureId","featureIdUnderMouse","contextMenuFeature","blockKey","handlers","blockLayout","mouseoverFeatureId","onFeatureMouseOut","event","handler","onFeatureMouseOver","fillOpacity","onMouseDown","onFeatureMouseDown","onMouseEnter","onFeatureMouseEnter","onMouseOut","onMouseOver","onMouseUp","onFeatureMouseUp","onMouseLeave","onFeatureMouseLeave","onMouseMove","onFeatureMouseMove","onClick","onFeatureClick","stopPropagation","onContextMenu","onFeatureContextMenu","onFocus","onBlur","stroke","Box","emphasizedColor1","color1","emphasize","error","color2","ReactPropTypes","Chevron","isUTR","emphasizedColor","direction","diff","points","Segments","emphasizedColor2","subfeatures","strand","transform","map","subfeature","subfeatureId","subfeatureLayout","ProcessedTranscript","getSubparts","test","f","c","length","hasUTRs","find","child","isTranscript","includes","parent","subs","haveLeftUTR","haveRightUTR","subparts","codeStart","codeEnd","exons","i","type","sort","a","b","unshift","SimpleFeature","makeUTRs","filter","element","confKey","split","Array","isArray","typeNames","typeName","toLowerCase","makeSubpartsFilter","filterSubpart","layOut","subLayout","layOutFeature","layOutSubfeatures","Subfeatures","displayMode","topOffset","forEach","SubfeatureGlyphComponent","chooseGlyphComponent","subfeatureHeight","move","args","parentFeature","layoutParent","renderingStyle","position","RenderedFeatureGlyph","expansion","startPx","bpToPx","labelsAllowed","SceneGraph","showLabels","nameWidth","bottom","descriptionWidth","aboveLayout","RenderedFeatures","featuresRendered","features","values","SvgFeatureRendering","exportSVG","regions","ref","useRef","useState","mouseIsDown","setMouseIsDown","setMovedDuringLastMouseDown","setHeight","mouseDown","useCallback","mouseUp","mouseEnter","mouseLeave","mouseOver","mouseOut","mouseMove","offsetX","offsetY","current","getBoundingClientRect","clientX","featureIdCurrentlyUnderMouse","getFeatureOverlapping","clientY","click","useEffect","className","display","oneOfType","instanceOf","Map","arrayOf","configuration","ConfigurationSchema","defaultValue","contextVariable","color3","labels","nameColor","descriptionColor","model","types","enumeration","maxFeatureGlyphExpansion","maxHeight","subParts","impliedUTRs","explicitlyTyped","SvgFeatureRenderer","BoxRendererType","SVGPlugin","Plugin","pluginManager","addRendererType","ReactComponent","SvgFeatureRendererReactComponent","configSchema","svgFeatureRendererConfigSchema"],"mappings":"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"}