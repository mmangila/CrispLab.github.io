import SimpleFeature from '@jbrowse/core/util/simpleFeature';
import { Region } from '@jbrowse/core/util/types';
import React from 'react';
declare type LayoutRecord = [number, number, number, number];
interface SvgOverlayProps {
    region: Region;
    displayModel: {
        blockLayoutFeatures: Map<string, Map<string, LayoutRecord>>;
        selectedFeatureId?: string;
        featureIdUnderMouse?: string;
        contextMenuFeature?: SimpleFeature;
    };
    bpPerPx: number;
    blockKey: string;
    movedDuringLastMouseDown: boolean;
    onFeatureMouseDown?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureMouseEnter?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureMouseOut?(event: React.MouseEvent<SVGRectElement, MouseEvent> | React.FocusEvent<SVGRectElement>, featureId: string): {};
    onFeatureMouseOver?(event: React.MouseEvent<SVGRectElement, MouseEvent> | React.FocusEvent<SVGRectElement>, featureId: string): {};
    onFeatureMouseUp?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureMouseLeave?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureMouseMove?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureClick?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
    onFeatureContextMenu?(event: React.MouseEvent<SVGRectElement, MouseEvent>, featureId: string): {};
}
declare function SvgOverlay({ displayModel: { blockLayoutFeatures, selectedFeatureId, featureIdUnderMouse, contextMenuFeature, }, blockKey, region, bpPerPx, movedDuringLastMouseDown, ...handlers }: SvgOverlayProps): JSX.Element | null;
declare const _default: typeof SvgOverlay;
export default _default;
