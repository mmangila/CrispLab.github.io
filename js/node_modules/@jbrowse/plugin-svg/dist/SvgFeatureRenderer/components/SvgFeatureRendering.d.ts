declare function _default(props: any): JSX.Element;
declare namespace _default {
    export namespace propTypes {
        export const layout: ReactPropTypes.Validator<ReactPropTypes.InferProps<{
            addRect: ReactPropTypes.Validator<(...args: any[]) => any>;
            getTotalHeight: ReactPropTypes.Validator<(...args: any[]) => any>;
        }>>;
        export const regions: ReactPropTypes.Validator<(ReactPropTypes.InferProps<{
            refName: ReactPropTypes.Validator<string>;
            start: ReactPropTypes.Validator<number>;
            end: ReactPropTypes.Validator<number>;
        }> | null | undefined)[]>;
        export const bpPerPx: ReactPropTypes.Validator<number>;
        export const features: ReactPropTypes.Requireable<Map<unknown, unknown> | (ReactPropTypes.InferProps<ReactPropTypes.ValidationMap<any>> | null | undefined)[]>;
        export const config: ReactPropTypes.Validator<any>;
        export const displayModel: ReactPropTypes.Requireable<ReactPropTypes.InferProps<{
            configuration: ReactPropTypes.Requireable<ReactPropTypes.InferProps<{}>>;
            getFeatureOverlapping: ReactPropTypes.Requireable<(...args: any[]) => any>;
            selectedFeatureId: ReactPropTypes.Requireable<string>;
            featureIdUnderMouse: ReactPropTypes.Requireable<string>;
        }>>;
        export const onMouseDown: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseUp: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseEnter: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseLeave: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseOver: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseOut: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onMouseMove: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onClick: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onContextMenu: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onFeatureClick: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const onFeatureContextMenu: ReactPropTypes.Requireable<(...args: any[]) => any>;
        export const blockKey: ReactPropTypes.Requireable<string>;
        export const exportSVG: ReactPropTypes.Requireable<ReactPropTypes.InferProps<{}>>;
    }
    export namespace defaultProps {
        const displayModel_1: {};
        export { displayModel_1 as displayModel };
        const exportSVG_1: undefined;
        export { exportSVG_1 as exportSVG };
        const features_1: Map<any, any>;
        export { features_1 as features };
        const blockKey_1: undefined;
        export { blockKey_1 as blockKey };
        const onMouseDown_1: undefined;
        export { onMouseDown_1 as onMouseDown };
        const onMouseUp_1: undefined;
        export { onMouseUp_1 as onMouseUp };
        const onMouseEnter_1: undefined;
        export { onMouseEnter_1 as onMouseEnter };
        const onMouseLeave_1: undefined;
        export { onMouseLeave_1 as onMouseLeave };
        const onMouseOver_1: undefined;
        export { onMouseOver_1 as onMouseOver };
        const onMouseOut_1: undefined;
        export { onMouseOut_1 as onMouseOut };
        const onMouseMove_1: undefined;
        export { onMouseMove_1 as onMouseMove };
        const onClick_1: undefined;
        export { onClick_1 as onClick };
        const onContextMenu_1: undefined;
        export { onContextMenu_1 as onContextMenu };
        const onFeatureClick_1: undefined;
        export { onFeatureClick_1 as onFeatureClick };
        const onFeatureContextMenu_1: undefined;
        export { onFeatureContextMenu_1 as onFeatureContextMenu };
    }
}
export default _default;
import ReactPropTypes from "prop-types";
