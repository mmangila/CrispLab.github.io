"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _fs = _interopRequireDefault(require("fs"));

var _SequenceFeatureDetails = require("./SequenceFeatureDetails");

var _DLGAP = _interopRequireDefault(require("./test_data/DLGAP3.json"));

var _NCDN = _interopRequireDefault(require("./test_data/NCDN.json"));

test('test using the sequence feature panel', function () {
  // produced from uniprot
  // https://www.uniprot.org/uniprot/O95886.fasta
  var pep = readFasta('./test_data/DLGAP3_pep.fa'); // produced with samtools faidx
  // 'https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz'
  // 1:35331037..35395251

  var dna = readFasta('./test_data/DLGAP3_dna.fa'); // http://localhost:3000/?config=test_data%2Fconfig_demo.json&session=share-zMPjiv36k0&password=ddxCy

  var feature = _DLGAP.default;

  var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SequenceFeatureDetails.SequencePanel, {
    sequence: {
      seq: dna
    },
    mode: "protein",
    feature: feature.subfeatures[0]
  })),
      getByTestId = _render.getByTestId;

  var element = getByTestId('sequence_panel'); // http://m.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=ENSG00000116544;r=1:34865436-34929650
  // with stop codon on the end

  expect(element.textContent).toEqual("".concat(pep, "*"));
});

var readFasta = function readFasta(filename) {
  return _fs.default.readFileSync(require.resolve(filename), 'utf8').split('\n').slice(1).join('');
};

test('NCDN collapsed intron', function () {
  // samtools faidx 'https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz' 1:36,023,400-36,032,380 > out.fa
  var dna = readFasta('./test_data/NCDN_dna.fa'); // http://localhost:3000/?config=test_data%2Fconfig_demo.json&session=share-zMPjiv36k0&password=ddxCy

  var feature = _NCDN.default;

  var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SequenceFeatureDetails.SequencePanel, {
    sequence: {
      seq: dna
    },
    mode: "gene_collapsed_intron",
    feature: feature.subfeatures[0]
  })),
      getByTestId = _render2.getByTestId;

  var element = getByTestId('sequence_panel'); // UTR

  expect(element.children[0].textContent).toEqual('AGTGGGCAACGCGGCGTGAGCAGCGGCCCGAGGCTCCCGGAGCATCGCGCTGGGAGAAGACTTCGCCGCTCGGGGCCGCAGCCTGGTGAGCTCAGCCCCCTTCGGGCCCTCCCCTGCATCCCAGCCGGGGCCTCTCCGAGCCGGCGCTGATCGATGCCGACACACCCCGGGGACCCTATCGCGACTCCATCGCGCCATATCGCGACACCATCGTGCCCTGTCGAGACTCCATTTTGTCACAGCCCTTTTCAATATATATCTTTTTTTTTTTTAATTTGCCCTGTCATCTTTGGGGGCTGTCTCCCATGTCGTGATTTTGACGTGATCTCTCCGTGACATCACCGCGCCATCGTGAAGTGTGATCTCATCGCCGCCCTGTCGTGACTTCATCA'); // first CDS

  expect(element.children[2].textContent).toEqual('ATGTCGTGTTGTGACCTGGCTGCGGCGGGACAG'); // spliced intron

  expect(element.children[3].textContent).toEqual('GTGGTGACCG...GTGTTCACAG');
});
test('NCDN updownstream', function () {
  // produced from uniprot
  // https://www.uniprot.org/uniprot/O95886.fasta
  var upstream = readFasta('./test_data/NCDN_upstream_dna.fa'); // samtools faidx 'https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz' 1:36,023,400-36,032,380 > out.fa

  var seq = readFasta('./test_data/NCDN_dna.fa'); // http://localhost:3000/?config=test_data%2Fconfig_demo.json&session=share-zMPjiv36k0&password=ddxCy

  var feature = _NCDN.default;

  var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SequenceFeatureDetails.SequencePanel, {
    sequence: {
      seq: seq,
      upstream: upstream
    },
    mode: "gene_updownstream",
    feature: feature.subfeatures[0]
  })),
      getByTestId = _render3.getByTestId;

  var element = getByTestId('sequence_panel');
  expect(element.children[0].textContent).toEqual('CTCACCCGGAGGAGGAGGAGGAAGAGGAAGAAGGTAGTGCGGGCTCCCCACCCGGACAGCTACCTCTCGCCTCAGCCTCCCTGGACAGCGACGGCGGCCGGAAACACCGCCTCCTCCCACCTCCCCGGGACCGACCCGGAAACACACTCTCCATGCTAACCAAGCCCTCCCGCCCCTCCCCCGGGAAGGGCAATGCCGGCCGCGAGACCAAGGGGGAGGAGGGGCAGTGCTGGGCGGGTAAAACTACGCACAAGCGAAGGAATCTGGGCCCCCAGCCTCTCGCCGCCCGCTCTCCAGAGGCAGTCTGCACCTTGCCTCCTTCGCTCGAGCCCCAGCCCCCAGACTCGGGCAATACCCACAAGCAAGATGGCGGCAACGGCGGCACCCCCTACTGCTTAGCACCCTGACTTGCCATTGGCCAGAGCCCGGAGTGAAGCAGCCGCGGATTCGTCAAGAGCGGTGCGGGGGTGGGGGTGGAGCTGCAGCAGCCTGGAGCCAGG');
  expect(element.children[1].textContent).toEqual('AGTGGGCAACGCGGCGTGAGCAGCGGCCCGAGGCTCCCGGAGCATCGCGCTGGGAGAAGACTTCGCCGCTCGGGGCCGCAGCCTGGTGAGCTCAGCCCCCTTCGGGCCCTCCCCTGCATCCCAGCCGGGGCCTCTCCGAGCCGGCGCTGATCGATGCCGACACACCCCGGGGACCCTATCGCGACTCCATCGCGCCATATCGCGACACCATCGTGCCCTGTCGAGACTCCATTTTGTCACAGCCCTTTTCAATATATATCTTTTTTTTTTTTAATTTGCCCTGTCATCTTTGGGGGCTGTCTCCCATGTCGTGATTTTGACGTGATCTCTCCGTGACATCACCGCGCCATCGTGAAGTGTGATCTCATCGCCGCCCTGTCGTGACTTCATCA'); // 3rd is a blank element, so go to 4th, not strictly needed for 3rd to be
  // blank but helps test

  expect(element.children[3].textContent).toEqual('ATGTCGTGTTGTGACCTGGCTGCGGCGGGACAG');
});
test('single exon cDNA should not have duplicate sequences', function () {
  var seq = readFasta('./test_data/volvox.fa');

  var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SequenceFeatureDetails.SequencePanel, {
    sequence: {
      seq: seq
    },
    mode: "cdna",
    feature: {
      start: 1200,
      end: 1500,
      type: 'mRNA',
      subfeatures: [{
        start: 1200,
        end: 1500,
        type: 'exon'
      }, {
        start: 1200,
        end: 1500,
        type: 'CDS'
      }]
    }
  })),
      getByTestId = _render4.getByTestId;

  var element = getByTestId('sequence_panel');
  expect(element.children[0].textContent).toEqual('atgtcacctcgggtactgcctctattacagaggtatcttaatggcgcatccagccttgtggctgggtctacgtacgcgtgggcaccatacgtatgttggcaggaaaggtcaatcatgcttgtttcctcgtcgcagaaacgttcacactattggctcgcgggatcgaacgggcctgattatttttccagctcctgcgttcctatcacgccaactgtcgctaataaaatgttatatagagataacccattgctatgcaaggatggagaaaccgcttcacaacaccctagaattacttcagca');
});