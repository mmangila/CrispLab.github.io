"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _PluggableElementBase2 = _interopRequireDefault(require("./PluggableElementBase"));

var _tracks = require("../util/tracks");

var _remoteAbortSignals = require("../rpc/remoteAbortSignals");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var RpcMethodType = /*#__PURE__*/function (_PluggableElementBase) {
  (0, _inherits2.default)(RpcMethodType, _PluggableElementBase);

  var _super = _createSuper(RpcMethodType);

  function RpcMethodType(pluginManager) {
    var _this;

    (0, _classCallCheck2.default)(this, RpcMethodType);
    _this = _super.call(this, {
      name: ''
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "pluginManager", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "name", 'UNKNOWN');
    _this.pluginManager = pluginManager;
    return _this;
  }

  (0, _createClass2.default)(RpcMethodType, [{
    key: "serializeArguments",
    value: function () {
      var _serializeArguments = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(args, _rpcDriverClassName) {
        var blobMap;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                blobMap = (0, _tracks.getBlobMap)();
                return _context.abrupt("return", _objectSpread(_objectSpread({}, args), {}, {
                  blobMap: blobMap
                }));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function serializeArguments(_x, _x2) {
        return _serializeArguments.apply(this, arguments);
      }

      return serializeArguments;
    }()
  }, {
    key: "deserializeArguments",
    value: function () {
      var _deserializeArguments = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(serializedArgs, _rpcDriverClassName) {
        var signal;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (serializedArgs.blobMap) {
                  (0, _tracks.setBlobMap)(serializedArgs.blobMap);
                }

                signal = serializedArgs.signal;

                if (!(signal && (0, _remoteAbortSignals.isRemoteAbortSignal)(signal))) {
                  _context2.next = 4;
                  break;
                }

                return _context2.abrupt("return", _objectSpread(_objectSpread({}, serializedArgs), {}, {
                  signal: (0, _remoteAbortSignals.deserializeAbortSignal)(signal)
                }));

              case 4:
                return _context2.abrupt("return", _objectSpread(_objectSpread({}, serializedArgs), {}, {
                  signal: undefined
                }));

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function deserializeArguments(_x3, _x4) {
        return _deserializeArguments.apply(this, arguments);
      }

      return deserializeArguments;
    }()
  }, {
    key: "serializeReturn",
    value: function () {
      var _serializeReturn = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(originalReturn, _args, _rpcDriverClassName) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", originalReturn);

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function serializeReturn(_x5, _x6, _x7) {
        return _serializeReturn.apply(this, arguments);
      }

      return serializeReturn;
    }()
  }, {
    key: "deserializeReturn",
    value: function () {
      var _deserializeReturn = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(serializedReturn, _args, _rpcDriverClassName) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", serializedReturn);

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function deserializeReturn(_x8, _x9, _x10) {
        return _deserializeReturn.apply(this, arguments);
      }

      return deserializeReturn;
    }()
  }]);
  return RpcMethodType;
}(_PluggableElementBase2.default);

exports.default = RpcMethodType;