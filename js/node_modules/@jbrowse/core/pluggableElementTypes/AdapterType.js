"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _PluggableElementBase2 = _interopRequireDefault(require("./PluggableElementBase"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var AdapterType = /*#__PURE__*/function (_PluggableElementBase) {
  (0, _inherits2.default)(AdapterType, _PluggableElementBase);

  var _super = _createSuper(AdapterType);

  function AdapterType(stuff) {
    var _this;

    (0, _classCallCheck2.default)(this, AdapterType);
    _this = _super.call(this, stuff);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "AdapterClass", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAdapterClass", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "configSchema", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "adapterCapabilities", void 0);

    if ('AdapterClass' in stuff) {
      _this.AdapterClass = stuff.AdapterClass;
    } else if ('getAdapterClass' in stuff) {
      _this.getAdapterClass = stuff.getAdapterClass;
    } else {
      throw new Error("no AdapterClass or getAdapterClass is defined for adapter type ".concat(_this.name));
    }

    _this.configSchema = stuff.configSchema;
    _this.adapterCapabilities = stuff.adapterCapabilities || [];
    return _this;
  }

  return AdapterType;
}(_PluggableElementBase2.default);

exports.default = AdapterType;