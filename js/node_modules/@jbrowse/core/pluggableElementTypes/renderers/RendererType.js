"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _mstReflection = require("../../util/mst-reflection");

var _PluggableElementBase2 = _interopRequireDefault(require("../PluggableElementBase"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var RendererType = /*#__PURE__*/function (_PluggableElementBase) {
  (0, _inherits2.default)(RendererType, _PluggableElementBase);

  var _super = _createSuper(RendererType);

  function RendererType(stuff) {
    var _this;

    (0, _classCallCheck2.default)(this, RendererType);
    _this = _super.call(this, stuff);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "ReactComponent", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "configSchema", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "pluginManager", void 0);
    _this.ReactComponent = stuff.ReactComponent;
    _this.configSchema = stuff.configSchema;
    _this.pluginManager = stuff.pluginManager;

    if (!_this.ReactComponent) {
      throw new Error("no ReactComponent defined for renderer ".concat(_this.name));
    }

    if (!(0, _mstReflection.getDefaultValue)(_this.configSchema).type) {
      throw new Error("".concat(_this.name, " config schema ").concat(_this.configSchema.name, " is not explicitlyTyped"));
    }

    if (!_this.pluginManager) {
      throw new Error("no plugin manager defined for renderer ".concat(_this.name));
    }

    return _this;
  }

  (0, _createClass2.default)(RendererType, [{
    key: "render",
    value: function () {
      var _render = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(props) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", {
                  reactElement: /*#__PURE__*/_react.default.createElement(this.ReactComponent, props, null)
                });

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function render(_x) {
        return _render.apply(this, arguments);
      }

      return render;
    }()
    /**
     * frees resources associated with the given range, session, etc.
     * optionally returns the number of data items deleted
     */

  }, {
    key: "freeResources",
    value: function freeResources() {
      return 0;
    }
  }]);
  return RendererType;
}(_PluggableElementBase2.default);

exports.default = RendererType;