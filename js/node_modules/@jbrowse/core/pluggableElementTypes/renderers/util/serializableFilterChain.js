"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _jexlStrings = require("../../../util/jexlStrings");

var SerializableFilterChain = /*#__PURE__*/function () {
  function SerializableFilterChain(_ref) {
    var _ref$filters = _ref.filters,
        filters = _ref$filters === void 0 ? [] : _ref$filters;
    (0, _classCallCheck2.default)(this, SerializableFilterChain);
    (0, _defineProperty2.default)(this, "filterChain", void 0);
    this.filterChain = filters.map(function (inputFilter) {
      if (typeof inputFilter === 'string') {
        var expr = (0, _jexlStrings.stringToJexlExpression)(inputFilter);
        return {
          expr: expr,
          string: inputFilter
        };
      }

      throw new Error("invalid inputFilter string \"".concat(inputFilter, "\""));
    });
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any


  (0, _createClass2.default)(SerializableFilterChain, [{
    key: "passes",
    value: function passes() {
      for (var i = 0; i < this.filterChain.length; i += 1) {
        if ( // @ts-ignore
        !this.filterChain[i].expr.evalSync({
          feature: arguments.length <= 0 ? undefined : arguments[0]
        })) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        filters: this.filterChain.map(function (f) {
          return f.string;
        })
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON(json) {
      return new SerializableFilterChain(json);
    }
  }]);
  return SerializableFilterChain;
}();

exports.default = SerializableFilterChain;