/// <reference types="node" />
import { GenericFilehandle, FilehandleOptions } from 'generic-filehandle';
declare global {
    interface Window {
        electron?: import('electron').AllElectron;
    }
}
declare type PathLike = import('fs').PathLike;
declare type Stats = import('fs').Stats;
export default class ElectronLocalFile implements GenericFilehandle {
    private filename;
    private fd?;
    private ipcRenderer;
    constructor(source: PathLike);
    private getFd;
    read(buffer: Buffer, offset: number | undefined, length: number, position?: number): Promise<{
        buffer: Buffer;
        bytesRead: number;
    }>;
    readFile(_?: FilehandleOptions): Promise<Buffer | string>;
    stat(): Promise<Stats>;
}
export {};
