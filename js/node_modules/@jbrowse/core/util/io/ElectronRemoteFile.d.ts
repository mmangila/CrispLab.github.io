/// <reference types="node" />
import { Fetcher, FilehandleOptions, GenericFilehandle, PolyfilledResponse, Stats } from 'generic-filehandle';
declare global {
    interface Window {
        electron?: import('electron').AllElectron;
    }
}
export default class ElectronRemoteFile implements GenericFilehandle {
    protected url: string;
    protected _stat?: Stats;
    protected fetch?: Fetcher;
    protected baseOverrides: any;
    private nodeFetchFallback;
    private ipcRenderer;
    constructor(source: string, opts?: FilehandleOptions);
    private getBufferFromResponse;
    private nodeFetch;
    protected getFetch(opts: FilehandleOptions): Promise<PolyfilledResponse>;
    protected headFetch(): Promise<PolyfilledResponse>;
    read(buffer: Buffer, offset: number | undefined, length: number, position?: number, opts?: FilehandleOptions): Promise<{
        bytesRead: number;
        buffer: Buffer;
    }>;
    readFile(options?: FilehandleOptions | string): Promise<Buffer | string>;
    stat(): Promise<Stats>;
}
