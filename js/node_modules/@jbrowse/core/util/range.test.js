"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _range = require("./range");

describe('insersection2', function () {
  var testCases = [{
    in: [1, 3, 5, 10],
    out: []
  }, {
    in: [1, 1, 2, 2],
    out: []
  }, {
    in: [1, 2, 1, 2],
    out: [1, 2]
  }, {
    in: [1, 3, 2, 4],
    out: [2, 3]
  }, {
    in: [2, 4, 1, 3],
    out: [2, 3]
  }, {
    in: [2, 4, 1, 4],
    out: [2, 4]
  }, {
    in: [1, 4, 2, 4],
    out: [2, 4]
  }, {
    in: [1, 3, 1, 4],
    out: [1, 3]
  }, {
    in: [1, 4, 1, 3],
    out: [1, 3]
  }, {
    in: [2, 3, 1, 2],
    out: []
  }, {
    in: [1, 2, 2, 3],
    out: []
  }, {
    in: [1, 1, 1, 1],
    out: []
  }, {
    in: [1, 1, 1, 2],
    out: []
  }, {
    in: [1, 2, 1, 1],
    out: []
  }, {
    in: [1, 3, 2, 2],
    out: []
  }, {
    in: [2, 2, 1, 3],
    out: []
  }];
  testCases.forEach(function (testcase) {
    test("intersection2(".concat(testcase.in, ") -> ").concat(testcase.out), function () {
      expect(_range.intersection2.apply(void 0, (0, _toConsumableArray2.default)(testcase.in))).toEqual(testcase.out);
    });
  });
});