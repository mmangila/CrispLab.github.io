import { Observable } from 'rxjs';
import { NoAssemblyRegion } from './types';
import { Feature } from './simpleFeature';
export interface UnrectifiedFeatureStats {
    scoreMin: number;
    scoreMax: number;
    scoreSum: number;
    scoreSumSquares: number;
    featureCount: number;
    basesCovered: number;
}
export interface FeatureStats extends UnrectifiedFeatureStats {
    scoreMean: number;
    scoreStdDev: number;
    featureDensity: number;
}
export declare function calcStdFromSums(sum: number, sumSquares: number, n: number, population?: boolean): number;
export declare function rectifyStats(s: UnrectifiedFeatureStats): FeatureStats;
export declare function calcPerBaseStats(region: NoAssemblyRegion, features: Feature[]): number[];
export declare function scoresToStats(region: NoAssemblyRegion, features: Observable<Feature>): Promise<FeatureStats>;
export declare function blankStats(): FeatureStats;
