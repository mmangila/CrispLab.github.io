"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _MultiLayout2 = _interopRequireDefault(require("./MultiLayout"));

var _PrecomputedLayout = _interopRequireDefault(require("./PrecomputedLayout"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ThrowingLayout = function ThrowingLayout() {
  (0, _classCallCheck2.default)(this, ThrowingLayout);
  throw new Error('invalid layout name');
};

var PrecomputedMultiLayout = /*#__PURE__*/function (_MultiLayout) {
  (0, _inherits2.default)(PrecomputedMultiLayout, _MultiLayout);

  var _super = _createSuper(PrecomputedMultiLayout);

  function PrecomputedMultiLayout(json) {
    var _this;

    (0, _classCallCheck2.default)(this, PrecomputedMultiLayout);
    // use ThrowingLayout because there is not supposed to be any creation
    // of new layouts in a precomputed layout
    _this = _super.call(this, ThrowingLayout);
    Object.entries(json).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          layoutName = _ref2[0],
          sublayoutJson = _ref2[1];

      _this.subLayouts.set(layoutName, new _PrecomputedLayout.default(sublayoutJson));
    });
    return _this;
  }

  return PrecomputedMultiLayout;
}(_MultiLayout2.default);

exports.default = PrecomputedMultiLayout;