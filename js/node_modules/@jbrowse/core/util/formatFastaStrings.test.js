"use strict";

var _formatFastaStrings = require("./formatFastaStrings");

describe('formatting seqChunks and strings into Fasta format', function () {
  var small = 'cattgttgcg';
  var medium = 'cattgttgcggagttgaacaACGGCATTAGGAACACTTCCGTCTCtcacttttatacgattatgattggttctttagcct';
  var large = 'cattgttgcggagttgaacaACGGCATTAGGAACACTTCCGTCTCtcacttttatacgattatgattggttctttagcctt';
  it('sequence length is less than 80 characters', function () {
    var formattedSmallFasta = (0, _formatFastaStrings.formatFastaLines)(small);
    expect(formattedSmallFasta).toMatchSnapshot();
  });
  it('sequence length is 80 characters', function () {
    var formattedMediumFasta = (0, _formatFastaStrings.formatFastaLines)(medium);
    expect(formattedMediumFasta).toMatchSnapshot();
  });
  it('sequence length is more than 80 characters', function () {
    var formattedLargeFasta = (0, _formatFastaStrings.formatFastaLines)(large);
    expect(formattedLargeFasta).toMatchSnapshot();
  });
  it('formats headers and sequence', function () {
    var chunks = [{
      header: 'ctgA:1-10',
      seq: small
    }, {
      header: 'ctgB:1-81',
      seq: large
    }];
    var formattedFastaFile = (0, _formatFastaStrings.formatSeqFasta)(chunks);
    /*
    >ctgA:1-10
    cattgttgcg
    >ctgB:1-81
    cattgttgcggagttgaacaACGGCATTAGGAACACTTCCGTCTCtcacttttatacgattatgattggttctttagcct
    t
    */

    expect(formattedFastaFile).toMatchSnapshot();
  });
});