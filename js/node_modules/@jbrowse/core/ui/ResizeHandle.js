"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _styles = require("@material-ui/core/styles");

var _clsx = _interopRequireDefault(require("clsx"));

var _react = _interopRequireWildcard(require("react"));

var useStyles = (0, _styles.makeStyles)({
  horizontalHandle: {
    cursor: 'row-resize',
    width: '100%'
  },
  verticalHandle: {
    cursor: 'col-resize',
    height: '100%'
  },
  flexbox_verticalHandle: {
    cursor: 'col-resize',
    alignSelf: 'stretch' // the height: 100% is actually unable to function inside flexbox

  },
  flexbox_horizontalHandle: {
    cursor: 'row-resize',
    alignSelf: 'stretch' // similar to above

  }
});

function ResizeHandle(_ref) {
  var onDrag = _ref.onDrag,
      _ref$vertical = _ref.vertical,
      vertical = _ref$vertical === void 0 ? false : _ref$vertical,
      _ref$flexbox = _ref.flexbox,
      flexbox = _ref$flexbox === void 0 ? false : _ref$flexbox,
      originalClassName = _ref.className,
      props = (0, _objectWithoutProperties2.default)(_ref, ["onDrag", "vertical", "flexbox", "className"]);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      mouseDragging = _useState2[0],
      setMouseDragging = _useState2[1];

  var prevPos = (0, _react.useRef)(0);
  var classes = useStyles();
  (0, _react.useEffect)(function () {
    function mouseMove(event) {
      event.preventDefault();
      var pos = event[vertical ? 'clientX' : 'clientY'];
      var distance = pos - prevPos.current;

      if (distance) {
        var actualDistance = onDrag(distance);
        prevPos.current += actualDistance;
      }
    }

    function mouseUp() {
      setMouseDragging(false);
    }

    if (mouseDragging) {
      window.addEventListener('mousemove', mouseMove, true);
      window.addEventListener('mouseup', mouseUp, true);
      return function () {
        window.removeEventListener('mousemove', mouseMove, true);
        window.removeEventListener('mouseup', mouseUp, true);
      };
    }

    return function () {};
  }, [mouseDragging, onDrag, vertical]);
  var className;

  if (flexbox) {
    if (vertical) {
      className = classes.flexbox_verticalHandle;
    } else {
      className = classes.flexbox_horizontalHandle;
    }
  } else if (vertical) {
    className = classes.verticalHandle;
  } else {
    className = classes.horizontalHandle;
  }

  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    "data-resizer": "true",
    onMouseDown: function onMouseDown(event) {
      event.preventDefault();
      var pos = event[vertical ? 'clientX' : 'clientY'];
      prevPos.current = pos;
      setMouseDragging(true);
    },
    role: "presentation",
    className: (0, _clsx.default)(className, originalClassName)
  }, props));
}

var _default = ResizeHandle;
exports.default = _default;