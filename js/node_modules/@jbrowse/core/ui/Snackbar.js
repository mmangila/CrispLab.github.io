"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Snackbar = _interopRequireDefault(require("@material-ui/core/Snackbar"));

var _Close = _interopRequireDefault(require("@material-ui/icons/Close"));

var _Alert = _interopRequireDefault(require("@material-ui/lab/Alert"));

var _mobxReact = require("mobx-react");

var _react = _interopRequireWildcard(require("react"));

function MessageSnackbar(_ref) {
  var session = _ref.session;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      snackbarMessage = _useState4[0],
      setSnackbarMessage = _useState4[1];

  var popSnackbarMessage = session.popSnackbarMessage,
      snackbarMessages = session.snackbarMessages;
  var latestMessage = snackbarMessages.length ? snackbarMessages[snackbarMessages.length - 1] : null;
  (0, _react.useEffect)(function () {
    var timeoutId;

    if (snackbarMessage) {
      if (!latestMessage) {
        setSnackbarMessage(undefined);
      } else if (snackbarMessage[0] !== latestMessage[0]) {
        setOpen(false);
        timeoutId = setTimeout(function () {
          setSnackbarMessage(latestMessage);
          setOpen(true);
        }, 100);
      }
    } else if (latestMessage) {
      setSnackbarMessage(latestMessage);
      setOpen(true);
    }

    return function () {
      clearTimeout(timeoutId);
    };
  }, [latestMessage, snackbarMessage]);

  var handleClose = function handleClose(_event, reason) {
    if (reason === 'clickaway') {
      return;
    }

    popSnackbarMessage();
    setOpen(false);
  };

  var _ref2 = snackbarMessage || [],
      _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
      message = _ref3[0],
      level = _ref3[1];

  return /*#__PURE__*/_react.default.createElement(_Snackbar.default, {
    open: open && !!message,
    onClose: handleClose,
    action: /*#__PURE__*/_react.default.createElement(_IconButton.default, {
      "aria-label": "close",
      color: "inherit",
      onClick: handleClose
    }, /*#__PURE__*/_react.default.createElement(_Close.default, null))
  }, /*#__PURE__*/_react.default.createElement(_Alert.default, {
    onClose: handleClose,
    severity: level || 'warning'
  }, message));
}

var _default = (0, _mobxReact.observer)(MessageSnackbar);

exports.default = _default;