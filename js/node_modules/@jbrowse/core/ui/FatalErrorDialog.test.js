"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

require("@testing-library/jest-dom/extend-expect");

var _react = require("@testing-library/react");

var _react2 = _interopRequireDefault(require("react"));

var _FatalErrorDialog = _interopRequireDefault(require("./FatalErrorDialog"));

afterEach(_react.cleanup);
test('open fatal error dialog in web', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  var _render, findByTestId, getByText;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          console.error = jest.fn();
          _render = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_FatalErrorDialog.default, {
            resetButtonText: "Reset Session",
            onFactoryReset: function onFactoryReset() {
              return /*#__PURE__*/_react2.default.createElement("div", null, "Placeholder for actual factory reset func");
            }
          })), findByTestId = _render.findByTestId, getByText = _render.getByText;
          expect(getByText('Reset Session')).toBeTruthy();
          _context.t0 = _react.fireEvent;
          _context.next = 6;
          return findByTestId('fatal-error');

        case 6:
          _context.t1 = _context.sent;

          _context.t0.click.call(_context.t0, _context.t1);

          expect(getByText('Are you sure you want to reset? This will restore the default configuration.')).toBeTruthy();

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));
test('open fatal error dialog in desktop', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
  var _render2, findByTestId, getByText;

  return regeneratorRuntime.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          console.error = jest.fn();
          _render2 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_FatalErrorDialog.default, {
            onFactoryReset: function onFactoryReset() {
              return /*#__PURE__*/_react2.default.createElement("div", null, "Placeholder for actual factory reset func");
            }
          })), findByTestId = _render2.findByTestId, getByText = _render2.getByText;
          expect(getByText('Factory Reset')).toBeTruthy();
          _context2.t0 = _react.fireEvent;
          _context2.next = 6;
          return findByTestId('fatal-error');

        case 6:
          _context2.t1 = _context2.sent;

          _context2.t0.click.call(_context2.t0, _context2.t1);

          expect(getByText('Are you sure you want to reset? This will restore the default configuration.')).toBeTruthy();

        case 9:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2);
})));