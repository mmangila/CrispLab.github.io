"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _mobxReact = require("mobx-react");

var _configuration = require("../configuration");

var useStyles = (0, _styles.makeStyles)({
  hoverLabel: {
    border: '1px solid black',
    position: 'absolute',
    background: '#fffa',
    pointerEvents: 'none',
    zIndex: 10000
  }
});

var Tooltip = function Tooltip(_ref) {
  var offsetX = _ref.offsetX,
      offsetY = _ref.offsetY,
      configuration = _ref.configuration,
      feature = _ref.feature,
      _ref$timeout = _ref.timeout,
      timeout = _ref$timeout === void 0 ? 300 : _ref$timeout;
  var classes = useStyles();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      shown = _useState2[0],
      setShown = _useState2[1];

  (0, _react.useEffect)(function () {
    // only show the loading message after short timeout to prevent excessive
    // flickering
    var handle = setTimeout(function () {
      return setShown(true);
    }, timeout);
    return function () {
      return clearTimeout(handle);
    };
  });

  if (feature && shown) {
    var text = (0, _configuration.readConfObject)(configuration, 'mouseover', {
      feature: feature
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.hoverLabel,
      style: {
        left: offsetX,
        top: offsetY
      }
    }, text);
  }

  return null;
};

var _default = (0, _mobxReact.observer)(Tooltip);

exports.default = _default;