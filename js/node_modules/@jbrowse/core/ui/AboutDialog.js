"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AboutDialog;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _core = require("@material-ui/core");

var _Close = _interopRequireDefault(require("@material-ui/icons/Close"));

var _configuration = require("../configuration");

var _util = require("../util");

var _BaseFeatureDetail = require("../BaseFeatureWidget/BaseFeatureDetail");

var useStyles = (0, _core.makeStyles)(function (theme) {
  return {
    closeButton: {
      position: 'absolute',
      right: theme.spacing(1),
      top: theme.spacing(1),
      color: theme.palette.grey[500]
    }
  };
});

function AboutDialog(_ref) {
  var config = _ref.config,
      handleClose = _ref.handleClose;
  var classes = useStyles();

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      info = _useState2[0],
      setInfo = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  var session = (0, _util.getSession)(config);
  var rpcManager = session.rpcManager;
  var conf = (0, _configuration.readConfObject)(config);
  (0, _react.useEffect)(function () {
    var aborter = new AbortController();
    var signal = aborter.signal;
    var cancelled = false;
    (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var adapterConfig, result;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              adapterConfig = (0, _configuration.readConfObject)(config, 'adapter');
              _context.next = 4;
              return rpcManager.call(config.trackId, 'CoreGetInfo', {
                adapterConfig: adapterConfig,
                signal: signal
              });

            case 4:
              result = _context.sent;

              if (!cancelled) {
                setInfo(result);
              }

              _context.next = 11;
              break;

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](0);

              if (!cancelled) {
                console.error(_context.t0);
                setError(_context.t0);
              }

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 8]]);
    }))();
    return function () {
      aborter.abort();
      cancelled = true;
    };
  }, [config, rpcManager]);
  var trackName = (0, _configuration.readConfObject)(config, 'name');

  if ((0, _configuration.readConfObject)(config, 'type') === 'ReferenceSequenceTrack') {
    trackName = 'Reference Sequence';
    session.assemblies.forEach(function (assembly) {
      if (assembly.sequence === config.configuration) {
        trackName = "Reference Sequence (".concat((0, _configuration.readConfObject)(assembly, 'name'), ")");
      }
    });
  }

  var details = typeof info === 'string' ? {
    header: "<pre>".concat(info.replace(/</g, '&lt;').replace(/>/g, '&gt;'), "</pre>")
  } : info || {};
  return /*#__PURE__*/_react.default.createElement(_core.Dialog, {
    open: true,
    onClose: handleClose
  }, /*#__PURE__*/_react.default.createElement(_core.DialogTitle, null, trackName, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
    className: classes.closeButton,
    onClick: function onClick() {
      return handleClose();
    }
  }, /*#__PURE__*/_react.default.createElement(_Close.default, null))), /*#__PURE__*/_react.default.createElement(_core.DialogContent, null, /*#__PURE__*/_react.default.createElement(_BaseFeatureDetail.BaseCard, {
    title: "Configuration"
  }, /*#__PURE__*/_react.default.createElement(_BaseFeatureDetail.Attributes, {
    attributes: conf,
    omit: ['displays', 'baseUri', 'refNames']
  })), info !== null ? /*#__PURE__*/_react.default.createElement(_BaseFeatureDetail.BaseCard, {
    title: "File info"
  }, error ? /*#__PURE__*/_react.default.createElement(_core.Typography, {
    color: "error"
  }, "".concat(error)) : !info ? 'Loading file data...' : /*#__PURE__*/_react.default.createElement(_BaseFeatureDetail.Attributes, {
    attributes: details
  })) : null));
}