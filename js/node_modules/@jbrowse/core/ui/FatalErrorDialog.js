"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

var _Dialog = _interopRequireDefault(require("@material-ui/core/Dialog"));

var _DialogActions = _interopRequireDefault(require("@material-ui/core/DialogActions"));

var _DialogContent = _interopRequireDefault(require("@material-ui/core/DialogContent"));

var _DialogTitle = _interopRequireDefault(require("@material-ui/core/DialogTitle"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _FactoryResetDialog = _interopRequireDefault(require("./FactoryResetDialog"));

var ResetComponent = function ResetComponent(_ref) {
  var onFactoryReset = _ref.onFactoryReset,
      resetButtonText = _ref.resetButtonText;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      dialogOpen = _useState2[0],
      setDialogOpen = _useState2[1];

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Button.default, {
    "data-testid": "fatal-error",
    color: "primary",
    variant: "contained",
    onClick: function onClick() {
      return setDialogOpen(true);
    }
  }, resetButtonText), /*#__PURE__*/_react.default.createElement(_FactoryResetDialog.default, {
    onClose: function onClose() {
      return setDialogOpen(false);
    },
    open: dialogOpen,
    onFactoryReset: onFactoryReset
  }));
};

ResetComponent.propTypes = {
  onFactoryReset: _propTypes.default.func.isRequired,
  resetButtonText: _propTypes.default.string.isRequired
};

var FatalErrorDialog = function FatalErrorDialog(_ref2) {
  var componentStack = _ref2.componentStack,
      error = _ref2.error,
      onFactoryReset = _ref2.onFactoryReset,
      resetButtonText = _ref2.resetButtonText;
  return /*#__PURE__*/_react.default.createElement(_Dialog.default, {
    open: true
  }, /*#__PURE__*/_react.default.createElement(_DialogTitle.default, {
    style: {
      backgroundColor: '#e88'
    }
  }, "Fatal error"), /*#__PURE__*/_react.default.createElement(_DialogContent.default, null, /*#__PURE__*/_react.default.createElement("pre", null, error.toString(), componentStack)), /*#__PURE__*/_react.default.createElement(_DialogActions.default, null, /*#__PURE__*/_react.default.createElement(_Button.default, {
    color: "secondary",
    variant: "contained",
    onClick: function onClick() {
      return window.location.reload();
    }
  }, "Refresh"), /*#__PURE__*/_react.default.createElement(ResetComponent, {
    onFactoryReset: onFactoryReset,
    resetButtonText: resetButtonText
  })));
};

FatalErrorDialog.propTypes = {
  componentStack: _propTypes.default.string,
  error: _propTypes.default.shape({}),
  onFactoryReset: _propTypes.default.func.isRequired,
  resetButtonText: _propTypes.default.string
};
FatalErrorDialog.defaultProps = {
  error: {
    message: 'No error message provided'
  },
  componentStack: '',
  resetButtonText: 'Factory Reset'
};
var _default = FatalErrorDialog;
exports.default = _default;