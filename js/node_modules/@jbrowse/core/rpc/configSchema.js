"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mobxStateTree = require("mobx-state-tree");

var _configuration = require("../configuration");

var MainThreadRpcDriverConfigSchema = (0, _configuration.ConfigurationSchema)('MainThreadRpcDriver', {}, {
  explicitlyTyped: true
});
var WebWorkerRpcDriverConfigSchema = (0, _configuration.ConfigurationSchema)('WebWorkerRpcDriver', {}, {
  explicitlyTyped: true
});
var ElectronRpcDriverConfigSchema = (0, _configuration.ConfigurationSchema)('ElectronRpcDriver', {}, {
  explicitlyTyped: true
});

var _default = (0, _configuration.ConfigurationSchema)('RpcOptions', {
  defaultDriver: {
    type: 'string',
    description: 'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',
    defaultValue: 'MainThreadRpcDriver'
  },
  drivers: _mobxStateTree.types.optional(_mobxStateTree.types.map(_mobxStateTree.types.union(MainThreadRpcDriverConfigSchema, WebWorkerRpcDriverConfigSchema, ElectronRpcDriverConfigSchema)), {
    MainThreadRpcDriver: {
      type: 'MainThreadRpcDriver'
    }
  })
}, {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  actions: function actions(self) {
    return {
      addDriverConfig: function addDriverConfig(configName, configSnapshot) {
        self.drivers.set(configName, configSnapshot);
      }
    };
  }
});

exports.default = _default;