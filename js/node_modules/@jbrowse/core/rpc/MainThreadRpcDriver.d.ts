import BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver';
import PluginManager from '../PluginManager';
declare class DummyHandle {
    destroy(): void;
    call(_functionName: string, _filteredArgs?: {}, _options?: {}): Promise<unknown>;
}
/**
 * Stub RPC driver class that runs RPC functions in-band in the main thread.
 *
 * @param rpcFuncs - object containing runnable rpc functions
 */
export default class MainThreadRpcDriver extends BaseRpcDriver {
    name: string;
    makeWorker: () => DummyHandle;
    constructor(args: RpcDriverConstructorArgs);
    call(pluginManager: PluginManager, sessionId: string, functionName: string, args: {}): Promise<unknown>;
}
export {};
