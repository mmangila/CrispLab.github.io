/// <reference types="react" />
import TextSearchAdapterType from '../pluggableElementTypes/TextSearchAdapterType';
import { SearchType } from '../data_adapters/BaseAdapter';
export interface BaseResultArgs {
    label: string;
    renderingComponent?: JSX.Element;
    matchedAttribute?: string;
    matchedObject?: object;
    textSearchAdapter?: TextSearchAdapterType;
    relevance?: SearchType;
    locString?: string;
    refName?: string;
    trackId?: string;
    score?: number;
}
export default class BaseResult {
    label: string;
    renderingComponent?: JSX.Element;
    matchedAttribute?: string;
    matchedObject?: object;
    textSearchAdapter?: TextSearchAdapterType;
    relevance?: SearchType;
    trackId?: string;
    score: number;
    constructor(args: BaseResultArgs);
    getLabel(): string;
    getLocation(): string;
    getRenderingComponent(): JSX.Element | undefined;
    getTrackId(): string | undefined;
    getScore(): number;
    updateScore(newScore: number): number;
}
/**
 * Future types of results
 * e.g: reference sequence results, track results,
 * feature results
 */
export declare class LocStringResult extends BaseResult {
    locString: string;
    constructor(args: BaseResultArgs);
    getLocation(): string;
}
export declare class RefSequenceResult extends BaseResult {
    refName: string;
    constructor(args: BaseResultArgs);
    getLocation(): string;
}
