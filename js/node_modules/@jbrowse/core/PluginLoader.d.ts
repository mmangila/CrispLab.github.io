/// <reference types="node" />
import { PluginConstructor } from './Plugin';
export declare const PluginSourceConfigurationSchema: import("./configuration/configurationSchema").AnyConfigurationSchemaType;
export interface PluginDefinition {
    name?: string;
    url: string;
}
export interface PluginRecord {
    plugin: PluginConstructor;
    definition: PluginDefinition;
}
export default class PluginLoader {
    definitions: PluginDefinition[];
    constructor(pluginDefinitions?: PluginDefinition[]);
    loadScript(scriptUrl: string): Promise<void>;
    loadPlugin(definition: PluginDefinition): Promise<PluginConstructor>;
    installGlobalReExports(target: WindowOrWorkerGlobalScope | NodeJS.Global): void;
    load(): Promise<PluginRecord[]>;
}
