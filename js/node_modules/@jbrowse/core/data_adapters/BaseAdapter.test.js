"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _operators = require("rxjs/operators");

var _BaseAdapter = require("./BaseAdapter");

var _rxjs = require("../util/rxjs");

var _simpleFeature = _interopRequireDefault(require("../util/simpleFeature"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

describe('base data adapter', function () {
  it('properly propagates errors in feature fetching', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
    var Adapter, adapter, features, featuresArray;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            Adapter = /*#__PURE__*/function (_BaseFeatureDataAdapt) {
              (0, _inherits2.default)(Adapter, _BaseFeatureDataAdapt);

              var _super = _createSuper(Adapter);

              function Adapter() {
                (0, _classCallCheck2.default)(this, Adapter);
                return _super.apply(this, arguments);
              }

              (0, _createClass2.default)(Adapter, [{
                key: "getRefNames",
                value: function () {
                  var _getRefNames = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            return _context.abrupt("return", ['ctgA', 'ctgB']);

                          case 1:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  }));

                  function getRefNames() {
                    return _getRefNames.apply(this, arguments);
                  }

                  return getRefNames;
                }()
              }, {
                key: "getFeatures",
                value: function getFeatures(_region) {
                  return (0, _rxjs.ObservableCreate)(function () {
                    return Promise.reject(new Error('something blew up'));
                  });
                }
              }, {
                key: "freeResources",
                value: function freeResources() {}
              }]);
              return Adapter;
            }(_BaseAdapter.BaseFeatureDataAdapter);

            adapter = new Adapter();
            features = adapter.getFeatures({
              assemblyName: 'volvox',
              refName: 'ctgA',
              start: 0,
              end: 20000
            });
            featuresArray = features.pipe((0, _operators.toArray)()).toPromise();
            expect(featuresArray).rejects.toThrow(/something blew up/);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('retrieves features', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
    var Adapter, adapter, features, featuresArray, features2, featuresArray2;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            Adapter = /*#__PURE__*/function (_BaseFeatureDataAdapt2) {
              (0, _inherits2.default)(Adapter, _BaseFeatureDataAdapt2);

              var _super2 = _createSuper(Adapter);

              function Adapter() {
                (0, _classCallCheck2.default)(this, Adapter);
                return _super2.apply(this, arguments);
              }

              (0, _createClass2.default)(Adapter, [{
                key: "getRefNames",
                value: function () {
                  var _getRefNames2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                    return regeneratorRuntime.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            return _context3.abrupt("return", ['ctgA', 'ctgB']);

                          case 1:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  }));

                  function getRefNames() {
                    return _getRefNames2.apply(this, arguments);
                  }

                  return getRefNames;
                }()
              }, {
                key: "getFeatures",
                value: function getFeatures(region) {
                  return (0, _rxjs.ObservableCreate)(function (observer) {
                    if (region.refName === 'ctgA') {
                      observer.next(new _simpleFeature.default({
                        uniqueId: 'testFeature',
                        start: 100,
                        end: 200
                      }));
                    }

                    observer.complete();
                  });
                }
              }, {
                key: "freeResources",
                value: function freeResources() {}
              }]);
              return Adapter;
            }(_BaseAdapter.BaseFeatureDataAdapter);

            adapter = new Adapter();
            features = adapter.getFeatures({
              assemblyName: 'volvox',
              refName: 'ctgA',
              start: 0,
              end: 20000
            });
            _context4.next = 5;
            return features.pipe((0, _operators.toArray)()).toPromise();

          case 5:
            featuresArray = _context4.sent;
            expect(featuresArray).toMatchInlineSnapshot("\n      Array [\n        Object {\n          \"end\": 200,\n          \"start\": 100,\n          \"uniqueId\": \"testFeature\",\n        },\n      ]\n    ");
            features2 = adapter.getFeatures({
              assemblyName: 'volvox',
              refName: 'ctgC',
              start: 0,
              end: 20000
            });
            _context4.next = 10;
            return features2.pipe((0, _operators.toArray)()).toPromise();

          case 10:
            featuresArray2 = _context4.sent;
            expect(featuresArray2).toMatchInlineSnapshot('Array []');

          case 12:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
});