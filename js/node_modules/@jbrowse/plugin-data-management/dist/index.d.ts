/// <reference types="react" />
import Plugin from '@jbrowse/core/Plugin';
import PluginManager from '@jbrowse/core/PluginManager';
declare const SetDefaultSession: import("react").LazyExoticComponent<({ rootModel, open, onClose, currentDefault, }: {
    rootModel: any;
    open: boolean;
    onClose: Function;
    currentDefault: string;
}) => JSX.Element>;
declare const AssemblyManager: import("react").LazyExoticComponent<({ rootModel, open, onClose, }: {
    rootModel: any;
    open: boolean;
    onClose: (arg: boolean) => void;
}) => JSX.Element>;
export default class extends Plugin {
    name: string;
    exports: {
        AssemblyManager: import("react").LazyExoticComponent<({ rootModel, open, onClose, }: {
            rootModel: any;
            open: boolean;
            onClose: (arg: boolean) => void;
        }) => JSX.Element>;
        SetDefaultSession: import("react").LazyExoticComponent<({ rootModel, open, onClose, currentDefault, }: {
            rootModel: any;
            open: boolean;
            onClose: Function;
            currentDefault: string;
        }) => JSX.Element>;
    };
    install(pluginManager: PluginManager): void;
    configure(pluginManager: PluginManager): void;
}
export { AssemblyManager, SetDefaultSession };
