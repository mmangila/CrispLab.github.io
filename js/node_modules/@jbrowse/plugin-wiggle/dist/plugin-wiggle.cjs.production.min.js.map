{"version":3,"file":"plugin-wiggle.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/WiggleBaseRenderer.tsx","../src/WiggleRendering.tsx","../src/BigWigAdapter/configSchema.ts","../src/BigWigAdapter/BigWigAdapter.ts","../src/util.ts","../src/configSchema.ts","../src/DensityRenderer/index.ts","../src/LinearWiggleDisplay/components/Tooltip.tsx","../src/LinearWiggleDisplay/components/WiggleDisplayComponent.tsx","../src/LinearWiggleDisplay/models/model.tsx","../src/XYPlotRenderer/XYPlotRenderer.ts","../src/XYPlotRenderer/index.ts","../src/LinePlotRenderer/LinePlotRenderer.js","../src/LinePlotRenderer/index.js","../src/WiggleRPC/rpcMethods.ts","../src/index.ts","../src/LinearWiggleDisplay/models/configSchema.ts","../src/LinearWiggleDisplay/components/SetMinMaxDialog.tsx","../src/LinearWiggleDisplay/components/SetColorDialog.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\nimport FeatureRendererType, {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsSerialized,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { ThemeOptions } from '@material-ui/core'\nimport { ScaleOpts } from './util'\n\nexport interface RenderArgs extends FeatureRenderArgs {\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n  displayCrossHatches: boolean\n  ticks: { values: number[] }\n  theme: ThemeOptions\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n}\n\nexport type {\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n}\n\nexport default abstract class WiggleBaseRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { height, regions, bpPerPx } = renderProps\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    const res = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      (ctx: CanvasRenderingContext2D) =>\n        this.draw(ctx, {\n          ...renderProps,\n          features,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features,\n      height,\n      width,\n    }\n  }\n\n  /*\n   * draw features to context given props, to be used by derived renderer\n   * classes\n   */\n  abstract draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserialized,\n  ): void\n}\n","import { observer } from 'mobx-react'\nimport React, { useRef } from 'react'\n\nimport { Region } from '@jbrowse/core/util/types'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\n\nfunction WiggleRendering(props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  onMouseLeave: Function\n  onMouseMove: Function\n  onFeatureClick: Function\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    onMouseLeave = () => {},\n    onMouseMove = () => {},\n    onFeatureClick = () => {},\n  } = props\n  const [region] = regions\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number) {\n    // calculates feature under mouse\n    let offset = 0\n    if (ref.current) {\n      offset = ref.current.getBoundingClientRect().left\n    }\n    const offsetX = eventClientX - offset\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n    let featureUnderMouse\n    for (const feature of features.values()) {\n      if (clientBp <= feature.get('end') && clientBp >= feature.get('start')) {\n        featureUnderMouse = feature\n        break\n      }\n    }\n    return featureUnderMouse\n  }\n  return (\n    <div\n      ref={ref}\n      data-testid=\"wiggle-rendering-test\"\n      onMouseMove={event => {\n        const featureUnderMouse = getFeatureUnderMouse(event.clientX)\n        onMouseMove(\n          event,\n          featureUnderMouse ? featureUnderMouse.id() : undefined,\n        )\n      }}\n      onClick={event => {\n        const featureUnderMouse = getFeatureUnderMouse(event.clientX)\n        onFeatureClick(\n          event,\n          featureUnderMouse ? featureUnderMouse.id() : undefined,\n        )\n      }}\n      onMouseLeave={event => onMouseLeave(event)}\n      role=\"presentation\"\n      className=\"WiggleRendering\"\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n}\n\nexport default observer(WiggleRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'BigWigAdapter',\n  {\n    bigWigLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bw' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { BigWig, Feature as BBIFeature } from '@gmod/bbi'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { map, mergeAll } from 'rxjs/operators'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport { rectifyStats, UnrectifiedFeatureStats } from '@jbrowse/core/util/stats'\n\nimport configSchema from './configSchema'\n\ninterface WiggleOptions extends BaseOptions {\n  resolution?: number\n}\n\nexport default class BigWigAdapter extends BaseFeatureDataAdapter {\n  private bigwig: BigWig\n\n  public static capabilities = [\n    'hasResolution',\n    'hasLocalStats',\n    'hasGlobalStats',\n  ]\n\n  public constructor(config: Instance<typeof configSchema>) {\n    super(config)\n    this.bigwig = new BigWig({\n      filehandle: openLocation(readConfObject(config, 'bigWigLocation')),\n    })\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    statusCallback('Downloading bigwig header')\n    const result = await this.bigwig.getHeader(opts)\n    statusCallback('')\n    return result\n  }\n\n  public async getRefNames(opts?: BaseOptions) {\n    const header = await this.setup(opts)\n    return Object.keys(header.refsByName)\n  }\n\n  public async refIdToName(refId: number) {\n    const h = await this.setup()\n    return (h.refsByNumber[refId] || { name: undefined }).name\n  }\n\n  public async getGlobalStats(opts?: BaseOptions) {\n    const header = await this.setup(opts)\n    return rectifyStats(header.totalSummary as UnrectifiedFeatureStats)\n  }\n\n  public getFeatures(region: NoAssemblyRegion, opts: WiggleOptions = {}) {\n    const { refName, start, end } = region\n    const {\n      bpPerPx = 0,\n      signal,\n      resolution = 1,\n      statusCallback = () => {},\n    } = opts\n    return ObservableCreate<Feature>(async observer => {\n      statusCallback('Downloading bigwig data')\n      const ob = await this.bigwig.getFeatureStream(refName, start, end, {\n        ...opts,\n        basesPerSpan: bpPerPx / resolution,\n      })\n      ob.pipe(\n        mergeAll(),\n        map((record: BBIFeature) => {\n          return new SimpleFeature({\n            id: `${refName}:${record.start}-${record.end}`,\n            data: { ...record, refName },\n          })\n        }),\n      ).subscribe(observer)\n    }, signal)\n  }\n\n  public freeResources(): void {}\n}\nconst adapterCapabilities = BigWigAdapter.capabilities\nexport { adapterCapabilities }\n","import { scaleLinear, scaleLog, scaleQuantize } from 'd3-scale'\n\nexport interface ScaleOpts {\n  domain: number[]\n  range: number[]\n  scaleType: string\n  pivotValue?: number\n  inverted: boolean\n}\n/**\n * produces a d3-scale from arguments. applies a \"nice domain\" adjustment\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - range [min,max]\n *   - bounds [min,max]\n *   - scaleType (linear or log)\n *   - pivotValue (number)\n *   - inverted (boolean)\n */\nexport function getScale({\n  domain = [],\n  range = [],\n  scaleType,\n  pivotValue,\n  inverted,\n}: ScaleOpts) {\n  let scale\n  const [min, max] = domain\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (scaleType === 'linear') {\n    scale = scaleLinear()\n  } else if (scaleType === 'log') {\n    scale = scaleLog()\n    scale.base(2)\n  } else if (scaleType === 'quantize') {\n    scale = scaleQuantize()\n  } else {\n    throw new Error('undefined scaleType')\n  }\n  scale.domain(pivotValue !== undefined ? [min, pivotValue, max] : [min, max])\n  // console.log('before', scale.domain())\n  scale.nice()\n\n  const [rangeMin, rangeMax] = range\n  if (rangeMin === undefined || rangeMax === undefined) {\n    throw new Error('invalid range')\n  }\n  scale.range(inverted ? range.slice().reverse() : range)\n\n  // console.log('after', scale.domain())\n  return scale\n}\n/**\n * gets the origin for drawing the graph. for linear this is 0, for log this is arbitrarily set to log(1)==0\n *\n * @param scaleType -\n */\nexport function getOrigin(scaleType: string /* , pivot, stats */) {\n  // if (pivot) {\n  //   if (pivot === 'mean') {\n  //     return stats.scoreMean || 0\n  //   }\n  //   if (pivot === 'zero') {\n  //     return 0\n  //   }\n  //   return parseFloat()\n  // }\n  // if (scaleType === 'z_score') {\n  //   return stats.scoreMean || 0\n  // }\n  if (scaleType === 'log') {\n    return 1\n  }\n  return 0\n}\n\n/**\n * produces a \"nice\" domain that actually rounds down to 0 for the min\n * or 0 to the max depending on if all values are positive or negative\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - bounds [min,max]\n *   - mean\n *   - stddev\n *   - scaleType (linear or log)\n */\nexport function getNiceDomain({\n  scaleType,\n  domain,\n  bounds,\n}: {\n  scaleType: string\n  domain: number[]\n  bounds: number[]\n}) {\n  const [minScore, maxScore] = bounds\n  let [min, max] = domain\n\n  if (scaleType === 'linear') {\n    if (max < 0) {\n      max = 0\n    }\n    if (min > 0) {\n      min = 0\n    }\n  }\n  if (scaleType === 'log') {\n    // if the min is 0, assume that it's just something\n    // with no read coverage and that we should ignore it in calculations\n    // if it's greater than 1 pin to 1 for the full range also\n    // otherwise, we may see bigwigs with fractional values\n    if (min === 0 || min > 1) {\n      min = 1\n    }\n  }\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (minScore !== undefined && minScore !== Number.MIN_VALUE) {\n    min = minScore\n  }\n  if (maxScore !== undefined && maxScore !== Number.MAX_VALUE) {\n    max = maxScore\n  }\n  const getScaleType = (type: string) => {\n    if (type === 'linear') {\n      return scaleLinear()\n    }\n    if (type === 'log') {\n      const scale = scaleLog()\n      scale.base(2)\n      return scale\n    }\n    if (type === 'quantize') {\n      return scaleQuantize()\n    }\n    throw new Error(`undefined scaleType ${type}`)\n  }\n  const scale = getScaleType(scaleType)\n\n  scale.domain([min, max])\n  scale.nice()\n  return scale.domain() as [number, number]\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'WiggleRenderer',\n  {\n    color: {\n      type: 'color',\n      description: 'the color of track, overrides posColor and negColor',\n      defaultValue: '#f0f',\n    },\n    posColor: {\n      type: 'color',\n      description: 'the color to use when the score is positive',\n      defaultValue: 'blue',\n    },\n    negColor: {\n      type: 'color',\n      description: 'the color to use when the score is negative',\n      defaultValue: 'red',\n    },\n    highlightColor: {\n      type: 'color',\n      description: 'the color of highlights over the wiggle track',\n      defaultValue: 'rgba(255,255,0,0.5)',\n    },\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    renderType: {\n      type: 'stringEnum',\n      model: types.enumeration('Rendering type', ['xyplot', 'density', 'line']),\n      description: 'The type of rendering for wiggle data to use',\n      defaultValue: 'xyplot',\n    },\n    filled: {\n      type: 'boolean',\n      description: 'fill in histogram',\n      defaultValue: true,\n    },\n    bicolorPivot: {\n      type: 'stringEnum',\n      model: types.enumeration('Scale type', [\n        'numeric',\n        'mean',\n        'z_score',\n        'none',\n      ]),\n      description: 'type of bicolor pivot',\n      defaultValue: 'numeric',\n    },\n    bicolorPivotValue: {\n      type: 'number',\n      defaultValue: 0,\n      description: 'value to use for bicolor pivot',\n    },\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import {\n  readConfObject,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getScale } from '../util'\n\nimport ConfigSchema from '../configSchema'\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\n\nexport { default as ReactComponent } from '../WiggleRendering'\n\nexport default class DensityRenderer extends WiggleBaseRenderer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { features, regions, bpPerPx, scaleOpts, height, config } = props\n    const [region] = regions\n    const pivot = readConfObject(config, 'bicolorPivot')\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n    let colorCallback\n    let colorScale: ReturnType<typeof getScale>\n    if (readConfObject(config, 'color') === '#f0f') {\n      // default color, use posColor/negColor instead\n      colorScale =\n        pivot !== 'none'\n          ? getScale({\n              ...scaleOpts,\n              pivotValue,\n              range: [negColor, 'white', posColor],\n            })\n          : getScale({ ...scaleOpts, range: ['white', posColor] })\n      colorCallback = (feature: Feature) => colorScale(feature.get('score'))\n    } else {\n      colorCallback = (feature: Feature) =>\n        readConfObject(config, 'color', { feature })\n    }\n\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + 0.3 // fudge factor for subpixel rendering\n      ctx.fillStyle = colorCallback(feature)\n      ctx.fillRect(leftPx, 0, w, height)\n    }\n  }\n}\nexport const configSchema = ConfigurationSchema(\n  'DensityRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { YSCALEBAR_LABEL_OFFSET } from '../models/model'\n\nconst toP = (s = 0) => parseFloat(s.toPrecision(6))\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    fontSize: '0.8em',\n\n    // important to have a zIndex directly on the popper itself\n    // @material-ui/Tooltip uses popper and has similar thing\n    zIndex: theme.zIndex.tooltip,\n\n    // needed to avoid rapid mouseLeave/mouseEnter on popper\n    pointerEvents: 'none',\n  },\n\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: 0,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n}))\n\nfunction TooltipContents(props: { feature: Feature }) {\n  const { feature } = props\n  const ref = feature.get('refName')\n  const displayRef = `${ref ? `${ref}:` : ''}`\n  const start = (feature.get('start') + 1).toLocaleString('en-US')\n  const end = feature.get('end').toLocaleString('en-US')\n  const coord = start === end ? start : `${start}..${end}`\n  const loc = `${displayRef}${coord}`\n\n  return feature.get('summary') !== undefined ? (\n    <div>\n      {loc}\n      <br />\n      Max: {toP(feature.get('maxScore'))}\n      <br />\n      Avg: {toP(feature.get('score'))}\n      <br />\n      Min: {toP(feature.get('minScore'))}\n    </div>\n  ) : (\n    <div>\n      {loc}\n      <br />\n      {`${toP(feature.get('score'))}`}\n    </div>\n  )\n}\n\ntype Coord = [number, number]\nconst Tooltip = observer(\n  ({\n    model,\n    height,\n    mouseCoord,\n  }: {\n    model: any\n    height: number\n    mouseCoord: Coord\n  }) => {\n    const { featureUnderMouse } = model\n    const classes = useStyles()\n\n    return featureUnderMouse ? (\n      <>\n        <MUITooltip\n          placement=\"right-start\"\n          className={classes.popper}\n          open\n          title={<TooltipContents feature={featureUnderMouse} />}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              left: mouseCoord[0],\n              top: 5,\n            }}\n          >\n            {' '}\n          </div>\n        </MUITooltip>\n        <div\n          className={classes.hoverVertical}\n          style={{\n            left: mouseCoord[0],\n            height: height - YSCALEBAR_LABEL_OFFSET * 2,\n          }}\n        />\n      </>\n    ) : null\n  },\n)\n\nexport default Tooltip\n","import { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { Axis, LEFT, RIGHT } from 'react-d3-axis'\nimport { WiggleDisplayModel } from '../models/model'\n\nexport const YScaleBar = observer(\n  ({\n    model,\n    orientation,\n  }: {\n    model: WiggleDisplayModel\n    orientation?: string\n  }) => {\n    const { ticks } = model\n\n    return (\n      <Axis\n        {...ticks}\n        format={(n: number) => n}\n        style={{ orient: orientation === 'left' ? LEFT : RIGHT }}\n      />\n    )\n  },\n)\n\nconst LinearWiggleDisplay = observer((props: { model: WiggleDisplayModel }) => {\n  const { model } = props\n  const { ready, stats, height, needsScalebar } = model\n  return (\n    <div>\n      <BaseLinearDisplayComponent {...props} />\n      {ready && stats && needsScalebar ? (\n        <svg\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 300,\n            pointerEvents: 'none',\n            height,\n            width: 50,\n          }}\n        >\n          <YScaleBar model={model} />\n        </svg>\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearWiggleDisplay\n","import React, { lazy } from 'react'\nimport {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport {\n  isAbortException,\n  getSession,\n  getContainingView,\n  isSelectionContainer,\n} from '@jbrowse/core/util'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\nimport {\n  BaseLinearDisplay,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { autorun, observable, when } from 'mobx'\nimport { addDisposer, isAlive, types, getEnv, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\nimport { FeatureStats } from '@jbrowse/core/util/stats'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { axisPropsFromTickScale } from 'react-d3-axis'\nimport { getNiceDomain, getScale } from '../../util'\n\nimport Tooltip from '../components/Tooltip'\nimport { YScaleBar } from '../components/WiggleDisplayComponent'\n\nconst SetMinMaxDlg = lazy(() => import('../components/SetMinMaxDialog'))\nconst SetColorDlg = lazy(() => import('../components/SetColorDialog'))\n\n// fudge factor for making all labels on the YScalebar visible\nexport const YSCALEBAR_LABEL_OFFSET = 5\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'XYPlotRenderer'],\n  ['density', 'DensityRenderer'],\n  ['line', 'LinePlotRenderer'],\n])\n\nfunction logb(x: number, y: number) {\n  return Math.log(y) / Math.log(x)\n}\nfunction round(v: number, b = 1.5) {\n  return (v >= 0 ? 1 : -1) * Math.pow(b, 1 + Math.floor(logb(b, Math.abs(v))))\n}\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) =>\n  types\n    .compose(\n      'LinearWiggleDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearWiggleDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        selectedRendering: types.optional(types.string, ''),\n        resolution: types.optional(types.number, 1),\n        fill: types.maybe(types.boolean),\n        color: types.maybe(types.string),\n        summaryScoreMode: types.maybe(types.string),\n        rendererTypeNameState: types.maybe(types.string),\n        scale: types.maybe(types.string),\n        autoscale: types.maybe(types.string),\n        displayCrossHatches: types.maybe(types.boolean),\n        constraints: types.optional(\n          types.model({\n            max: types.maybe(types.number),\n            min: types.maybe(types.number),\n          }),\n          {},\n        ),\n      }),\n    )\n    .volatile(() => ({\n      ready: false,\n      message: undefined as undefined | string,\n      stats: observable({ scoreMin: 0, scoreMax: 50 }),\n      statsFetchInProgress: undefined as undefined | AbortController,\n    }))\n    .actions(self => ({\n      updateStats(stats: { scoreMin: number; scoreMax: number }) {\n        self.stats.scoreMin = stats.scoreMin\n        self.stats.scoreMax = stats.scoreMax\n        self.ready = true\n      },\n      setColor(color: string) {\n        self.color = color\n      },\n\n      setLoading(aborter: AbortController) {\n        const { statsFetchInProgress: statsFetch } = self\n        if (statsFetch !== undefined && !statsFetch.signal.aborted) {\n          statsFetch.abort()\n        }\n        self.statsFetchInProgress = aborter\n      },\n\n      // this overrides the BaseLinearDisplayModel to avoid popping up a\n      // feature detail display, but still sets the feature selection on the\n      // model so listeners can detect a click\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n      setResolution(res: number) {\n        self.resolution = res\n      },\n\n      setFill(fill: boolean) {\n        self.fill = fill\n      },\n\n      toggleLogScale() {\n        if (self.scale !== 'log') {\n          self.scale = 'log'\n        } else {\n          self.scale = 'linear'\n        }\n      },\n\n      setScaleType(scale?: string) {\n        self.scale = scale\n      },\n\n      setSummaryScoreMode(val: string) {\n        self.summaryScoreMode = val\n      },\n\n      setAutoscale(val: string) {\n        self.autoscale = val\n      },\n\n      setMaxScore(val?: number) {\n        self.constraints.max = val\n      },\n\n      setRendererType(val: string) {\n        self.rendererTypeNameState = val\n      },\n\n      setMinScore(val?: number) {\n        self.constraints.min = val\n      },\n\n      toggleCrossHatches() {\n        self.displayCrossHatches = !self.displayCrossHatches\n      },\n\n      setCrossHatches(cross: boolean) {\n        self.displayCrossHatches = cross\n      },\n    }))\n    .views(self => ({\n      get TooltipComponent(): React.FC {\n        return (Tooltip as unknown) as React.FC\n      },\n\n      get adapterTypeName() {\n        return self.adapterConfig.type\n      },\n\n      get rendererTypeName() {\n        const viewName =\n          self.rendererTypeNameState || getConf(self, 'defaultRendering')\n        const rendererType = rendererTypes.get(viewName)\n        if (!rendererType) {\n          throw new Error(`unknown alignments view name ${viewName}`)\n        }\n        return rendererType\n      },\n\n      // subclasses can define these, as snpcoverage track does\n      get filters() {\n        return undefined\n      },\n\n      get scaleType() {\n        return self.scale || getConf(self, 'scaleType')\n      },\n      get filled() {\n        return typeof self.fill !== 'undefined'\n          ? self.fill\n          : readConfObject(this.rendererConfig, 'filled')\n      },\n\n      get maxScore() {\n        const { max } = self.constraints\n        return max !== undefined ? max : getConf(self, 'maxScore')\n      },\n\n      get minScore() {\n        const { min } = self.constraints\n        return min !== undefined ? min : getConf(self, 'minScore')\n      },\n\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', this.rendererTypeName]) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            filled: self.fill,\n            scaleType: this.scaleType,\n            displayCrossHatches: self.displayCrossHatches,\n            summaryScoreMode: self.summaryScoreMode,\n            color: self.color,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => {\n      let oldDomain: [number, number] = [0, 0]\n      return {\n        get summaryScoreModeSetting() {\n          return (\n            self.summaryScoreMode ||\n            readConfObject(self.rendererConfig, 'summaryScoreMode')\n          )\n        },\n        get domain() {\n          const { stats, scaleType, minScore, maxScore } = self\n\n          const ret = getNiceDomain({\n            domain: [stats.scoreMin, stats.scoreMax],\n            bounds: [minScore, maxScore],\n            scaleType,\n          })\n          const headroom = getConf(self, 'headroom') || 0\n\n          // avoid weird scalebar if log value and empty region displayed\n          if (scaleType === 'log' && ret[1] === Number.MIN_VALUE) {\n            return [0, Number.MIN_VALUE]\n          }\n\n          // heuristic to just give some extra headroom on bigwig scores if no\n          // maxScore/minScore specified (they have MAX_VALUE/MIN_VALUE if so)\n          if (maxScore === Number.MAX_VALUE && ret[1] > 1.0) {\n            ret[1] = round(ret[1] + headroom)\n          }\n          if (minScore === Number.MIN_VALUE && ret[0] < -1.0) {\n            ret[0] = round(ret[0] - headroom)\n          }\n\n          // avoid returning a new object if it matches the old value\n          if (JSON.stringify(oldDomain) !== JSON.stringify(ret)) {\n            oldDomain = ret\n          }\n\n          return oldDomain\n        },\n\n        get needsScalebar() {\n          return (\n            self.rendererTypeName === 'XYPlotRenderer' ||\n            self.rendererTypeName === 'LinePlotRenderer'\n          )\n        },\n        get scaleOpts() {\n          return {\n            domain: this.domain,\n            stats: self.stats,\n            autoscaleType: this.autoscaleType,\n            scaleType: self.scaleType,\n            inverted: getConf(self, 'inverted'),\n          }\n        },\n\n        get canHaveFill() {\n          return self.rendererTypeName === 'XYPlotRenderer'\n        },\n\n        get autoscaleType() {\n          return self.autoscale || getConf(self, 'autoscale')\n        },\n\n        get displayCrossHatchesSetting() {\n          return (\n            self.displayCrossHatches ||\n            readConfObject(self.rendererConfig, 'displayCrossHatches')\n          )\n        },\n      }\n    })\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get ticks() {\n          const { scaleType, domain, height } = self\n          const range = [\n            height - YSCALEBAR_LABEL_OFFSET,\n            YSCALEBAR_LABEL_OFFSET,\n          ]\n          const scale = getScale({\n            scaleType,\n            domain,\n            range,\n            inverted: getConf(self, 'inverted'),\n          })\n          const ticks = height < 50 ? 2 : 4\n          return axisPropsFromTickScale(scale, ticks)\n        },\n        get renderProps() {\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            notReady: !self.ready,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.rendererConfig,\n            scaleOpts: self.scaleOpts,\n            resolution: self.resolution,\n            height: self.height,\n            ticks: this.ticks,\n            displayCrossHatches: self.displayCrossHatches,\n            filters: self.filters,\n          }\n        },\n\n        get adapterCapabilities() {\n          const { adapterCapabilities } = pluginManager.getAdapterType(\n            self.adapterTypeName,\n          )\n          return adapterCapabilities\n        },\n\n        get hasResolution() {\n          return this.adapterCapabilities.includes('hasResolution')\n        },\n\n        get hasGlobalStats() {\n          return this.adapterCapabilities.includes('hasGlobalStats')\n        },\n\n        get composedTrackMenuItems() {\n          return [\n            ...(this.hasResolution\n              ? [\n                  {\n                    label: 'Resolution',\n                    subMenu: [\n                      {\n                        label: 'Finer resolution',\n                        onClick: () => {\n                          self.setResolution(self.resolution * 5)\n                        },\n                      },\n                      {\n                        label: 'Coarser resolution',\n                        onClick: () => {\n                          self.setResolution(self.resolution / 5)\n                        },\n                      },\n                    ],\n                  },\n                  {\n                    label: 'Summary score mode',\n                    subMenu: ['min', 'max', 'avg', 'whiskers'].map(elt => {\n                      return {\n                        label: elt,\n                        onClick: () => self.setSummaryScoreMode(elt),\n                      }\n                    }),\n                  },\n                ]\n              : []),\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: self.filled\n                      ? 'Turn off histogram fill'\n                      : 'Turn on histogram fill',\n                    onClick: () => {\n                      self.setFill(!self.filled)\n                    },\n                  },\n                ]\n              : []),\n            {\n              label:\n                self.scaleType === 'log' ? 'Set linear scale' : 'Set log scale',\n              onClick: () => {\n                self.toggleLogScale()\n              },\n            },\n            {\n              type: 'checkbox',\n              label: 'Draw cross hatches',\n              checked: self.displayCrossHatchesSetting,\n              onClick: () => {\n                self.toggleCrossHatches()\n              },\n            },\n\n            ...(Object.keys(getConf(self, 'renderers') || {}).length > 1\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: [...rendererTypes.keys()].map(key => ({\n                      label: key,\n                      onClick: () => self.setRendererType(key),\n                    })),\n                  },\n                ]\n              : []),\n            {\n              label: 'Autoscale type',\n              subMenu: [\n                ['local', 'Local'],\n                ...(this.hasGlobalStats\n                  ? [\n                      ['global', 'Global'],\n                      ['globalsd', 'Global ± 3σ'],\n                    ]\n                  : []),\n                ['localsd', 'Local ± 3σ'],\n              ].map(([val, label]) => {\n                return {\n                  label,\n                  onClick() {\n                    self.setAutoscale(val)\n                  },\n                }\n              }),\n            },\n            {\n              label: 'Set min/max score',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMinMaxDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set color',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetColorDlg, {\n                  model: self,\n                })\n              },\n            },\n          ]\n        },\n\n        get trackMenuItems() {\n          return [...trackMenuItems, ...this.composedTrackMenuItems]\n        },\n      }\n    })\n    .actions(self => {\n      const superReload = self.reload\n      const superRenderSvg = self.renderSvg\n\n      type ExportSvgOpts = Parameters<typeof superRenderSvg>[0]\n\n      async function getStats(opts: {\n        headers?: Record<string, string>\n        signal?: AbortSignal\n        filters?: string[]\n      }): Promise<FeatureStats> {\n        const { rpcManager } = getSession(self)\n        const nd = getConf(self, 'numStdDev') || 3\n        const { adapterConfig, autoscaleType } = self\n        const sessionId = getRpcSessionId(self)\n        const params = {\n          sessionId,\n          adapterConfig,\n          statusCallback: (message: string) => {\n            if (isAlive(self)) {\n              self.setMessage(message)\n            }\n          },\n          ...opts,\n        }\n        if (autoscaleType === 'global' || autoscaleType === 'globalsd') {\n          const results: FeatureStats = (await rpcManager.call(\n            sessionId,\n            'WiggleGetGlobalStats',\n            params,\n          )) as FeatureStats\n          const { scoreMin, scoreMean, scoreStdDev } = results\n          // globalsd uses heuristic to avoid unnecessary scoreMin<0\n          // if the scoreMin is never less than 0\n          // helps with most coverage bigwigs just being >0\n          return autoscaleType === 'globalsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n                scoreMax: scoreMean + nd * scoreStdDev,\n              }\n            : results\n        }\n        if (autoscaleType === 'local' || autoscaleType === 'localsd') {\n          const { dynamicBlocks, bpPerPx } = getContainingView(self) as LGV\n          const results = (await rpcManager.call(\n            sessionId,\n            'WiggleGetMultiRegionStats',\n            {\n              ...params,\n              assemblyName: getTrackAssemblyNames(self.parentTrack)[0],\n              regions: JSON.parse(\n                JSON.stringify(\n                  dynamicBlocks.contentBlocks.map(region => {\n                    const { start, end } = region\n                    return {\n                      ...region,\n                      start: Math.floor(start),\n                      end: Math.ceil(end),\n                    }\n                  }),\n                ),\n              ),\n              bpPerPx,\n            },\n          )) as FeatureStats\n          const { scoreMin, scoreMean, scoreStdDev } = results\n\n          // localsd uses heuristic to avoid unnecessary scoreMin<0\n          // if the scoreMin is never less than 0\n          // helps with most coverage bigwigs just being >0\n          return autoscaleType === 'localsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n                scoreMax: scoreMean + nd * scoreStdDev,\n              }\n            : results\n        }\n        if (autoscaleType === 'zscale') {\n          return rpcManager.call(\n            sessionId,\n            'WiggleGetGlobalStats',\n            params,\n          ) as Promise<FeatureStats>\n        }\n        throw new Error(`invalid autoscaleType '${autoscaleType}'`)\n      }\n      return {\n        // re-runs stats and refresh whole display on reload\n        async reload() {\n          self.setError()\n          const aborter = new AbortController()\n          const stats = await getStats({\n            signal: aborter.signal,\n            filters: self.filters,\n          })\n          if (isAlive(self)) {\n            self.updateStats(stats)\n            superReload()\n          }\n        },\n        afterAttach() {\n          addDisposer(\n            self,\n            autorun(\n              async () => {\n                try {\n                  const aborter = new AbortController()\n                  const view = getContainingView(self) as LGV\n                  self.setLoading(aborter)\n\n                  if (!view.initialized) {\n                    return\n                  }\n\n                  if (view.bpPerPx > self.maxViewBpPerPx) {\n                    return\n                  }\n\n                  const stats = await getStats({\n                    signal: aborter.signal,\n                    filters: self.filters,\n                  })\n\n                  if (isAlive(self)) {\n                    self.updateStats(stats)\n                  }\n                } catch (e) {\n                  if (!isAbortException(e) && isAlive(self)) {\n                    self.setError(e)\n                  }\n                }\n              },\n              { delay: 1000 },\n            ),\n          )\n        },\n        async renderSvg(opts: ExportSvgOpts) {\n          await when(() => self.ready && !!self.regionCannotBeRenderedText)\n          const { needsScalebar, stats } = self\n          const { offsetPx } = getContainingView(self) as LGV\n          return (\n            <>\n              <g id=\"snpcov\">{await superRenderSvg(opts)}</g>\n              {needsScalebar && stats ? (\n                <g transform={`translate(${Math.max(-offsetPx, 0)})`}>\n                  <YScaleBar\n                    model={self as WiggleDisplayModel}\n                    orientation=\"left\"\n                  />\n                </g>\n              ) : null}\n            </>\n          )\n        },\n      }\n    })\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport Color from 'color'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getOrigin, getScale } from '../util'\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../LinearWiggleDisplay/models/model'\n\nexport default class XYPlotRenderer extends WiggleBaseRenderer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      bpPerPx,\n      regions,\n      scaleOpts,\n      height: unadjustedHeight,\n      config,\n      ticks: { values },\n      displayCrossHatches,\n    } = props\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const offset = YSCALEBAR_LABEL_OFFSET\n    const height = unadjustedHeight - offset * 2\n\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n    const filled = readConfObject(config, 'filled')\n    const clipColor = readConfObject(config, 'clipColor')\n    const highlightColor = readConfObject(config, 'highlightColor')\n    const summaryScoreMode = readConfObject(config, 'summaryScoreMode')\n    const scale = getScale({ ...scaleOpts, range: [0, height] })\n    const originY = getOrigin(scaleOpts.scaleType)\n    const [niceMin, niceMax] = scale.domain()\n\n    const toY = (n: number) => height - scale(n) + offset\n    const toHeight = (n: number) => toY(originY) - toY(n)\n\n    const colorCallback =\n      readConfObject(config, 'color') === '#f0f'\n        ? (_: Feature, score: number) =>\n            score < pivotValue ? negColor : posColor\n        : (feature: Feature, _score: number) =>\n            readConfObject(config, 'color', { feature })\n\n    ctx.strokeStyle = 'grey'\n    ctx.moveTo(0, toY(0))\n    ctx.lineTo(width, toY(0))\n    ctx.stroke()\n\n    const crossingOrigin = niceMin < pivotValue && niceMax > pivotValue\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      let score = feature.get('score')\n      const maxr = feature.get('maxScore')\n      const minr = feature.get('minScore')\n\n      const lowClipping = score < niceMin\n      const highClipping = score > niceMax\n      const w = rightPx - leftPx + 0.4 // fudge factor for subpixel rendering\n\n      const summary = feature.get('summary')\n\n      if (summaryScoreMode === 'max') {\n        score = summary ? maxr : score\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      } else if (summaryScoreMode === 'min') {\n        score = summary ? minr : score\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      } else if (summaryScoreMode === 'whiskers') {\n        const c = colorCallback(feature, score)\n        if (summary) {\n          ctx.fillStyle = crossingOrigin\n            ? colorCallback(feature, maxr)\n            : Color(c).lighten(0.6).toString()\n          ctx.fillRect(\n            leftPx,\n            toY(maxr),\n            w,\n            filled ? toHeight(maxr) - toHeight(score) : 1,\n          )\n        }\n\n        // normal\n        ctx.fillStyle =\n          crossingOrigin && summary\n            ? Color(colorCallback(feature, maxr)).mix(\n                Color(colorCallback(feature, minr)),\n              )\n            : c\n        ctx.fillRect(\n          leftPx,\n          toY(score),\n          w,\n          filled ? toHeight(score) - (summary ? toHeight(minr) : 0) : 1,\n        )\n\n        // min\n        if (summary) {\n          ctx.fillStyle = crossingOrigin\n            ? colorCallback(feature, minr)\n            : Color(c).darken(0.6).toString()\n          ctx.fillRect(leftPx, toY(minr), w, filled ? toHeight(minr) : 1)\n        }\n      } else {\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      }\n\n      if (highClipping) {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, 0, w, 4)\n      } else if (lowClipping && scaleOpts.scaleType !== 'log') {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, unadjustedHeight - 4, w, 4)\n      }\n      if (feature.get('highlighted')) {\n        ctx.fillStyle = highlightColor\n        ctx.fillRect(leftPx, 0, w, height)\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from '../configSchema'\n\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default } from './XYPlotRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'XYPlotRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { getScale } from '../util'\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../LinearWiggleDisplay/models/model'\n\nexport default class LinePlotRenderer extends WiggleBaseRenderer {\n  draw(ctx, props) {\n    const {\n      features,\n      regions,\n      bpPerPx,\n      scaleOpts,\n      height: unadjustedHeight,\n      ticks: { values },\n      displayCrossHatches,\n      config,\n    } = props\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n    const offset = YSCALEBAR_LABEL_OFFSET\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const height = unadjustedHeight - offset * 2\n    const clipColor = readConfObject(config, 'clipColor')\n    const highlightColor = readConfObject(config, 'highlightColor')\n    const scale = getScale({ ...scaleOpts, range: [0, height] })\n    const [niceMin, niceMax] = scale.domain()\n    const toY = rawscore => height - scale(rawscore) + offset\n    const colorCallback =\n      readConfObject(config, 'color') === '#f0f'\n        ? () => 'grey'\n        : feature => readConfObject(config, 'color', { feature })\n\n    ctx.strokeStyle = 'grey'\n    ctx.moveTo(0, toY(0))\n    ctx.lineTo(width, toY(0))\n    ctx.stroke()\n\n    let lastVal\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const score = feature.get('score')\n      const lowClipping = score < niceMin\n      const highClipping = score > niceMax\n      const w = rightPx - leftPx + 0.3 // fudge factor for subpixel rendering\n\n      const c = colorCallback(feature)\n\n      ctx.strokeStyle = c\n      ctx.beginPath()\n      if (!region.reversed) {\n        ctx.moveTo(\n          leftPx,\n          toY(typeof lastVal !== 'undefined' ? lastVal : score),\n        )\n        ctx.lineTo(leftPx, toY(score))\n        ctx.lineTo(rightPx, toY(score))\n      } else {\n        ctx.moveTo(\n          rightPx,\n          toY(typeof lastVal !== 'undefined' ? lastVal : score),\n        )\n        ctx.lineTo(rightPx, toY(score))\n        ctx.lineTo(leftPx, toY(score))\n      }\n      ctx.stroke()\n      lastVal = score\n\n      if (highClipping) {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, 0, w, 4)\n      } else if (lowClipping && scaleOpts.scaleType !== 'log') {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, height - 4, w, height)\n      }\n      if (feature.get('highlighted')) {\n        ctx.fillStyle = highlightColor\n        ctx.fillRect(leftPx, 0, w, height)\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from '../configSchema'\n\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default } from './LinePlotRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'LinePlotRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { FeatureStats } from '@jbrowse/core/util/stats'\n\nexport class WiggleGetGlobalStats extends RpcMethodType {\n  name = 'WiggleGetGlobalStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriverClassName: string,\n  ): Promise<FeatureStats> {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      // @ts-ignore\n      if (dataAdapter.capabilities.includes('hasGlobalStats')) {\n        // @ts-ignore\n        return dataAdapter.getGlobalStats(deserializedArgs)\n      }\n      throw new Error('Data adapter does not support global stats')\n    }\n    throw new Error('Data adapter not found')\n  }\n}\n\nexport class WiggleGetMultiRegionStats extends RpcMethodType {\n  name = 'WiggleGetMultiRegionStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const assemblyManager = this.pluginManager.rootModel?.session\n      ?.assemblyManager\n    if (!assemblyManager) {\n      return args\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters && args.filters.toJSON().filters,\n    })\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      return dataAdapter.getMultiRegionStats(regions, deserializedArgs)\n    }\n    throw new Error('Data adapter not found')\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport WiggleBaseRenderer from './WiggleBaseRenderer'\nimport WiggleRendering from './WiggleRendering'\nimport {\n  configSchema as bigWigAdapterConfigSchema,\n  adapterCapabilities,\n} from './BigWigAdapter'\nimport DensityRenderer, {\n  configSchema as densityRendererConfigSchema,\n  ReactComponent as DensityRendererReactComponent,\n} from './DensityRenderer'\nimport * as utils from './util'\nimport {\n  configSchemaFactory as linearWiggleDisplayConfigSchemaFactory,\n  modelFactory as linearWiggleDisplayModelFactory,\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  YSCALEBAR_LABEL_OFFSET,\n} from './LinearWiggleDisplay'\nimport XYPlotRenderer, {\n  configSchema as xyPlotRendererConfigSchema,\n  ReactComponent as XYPlotRendererReactComponent,\n} from './XYPlotRenderer'\nimport LinePlotRenderer, {\n  configSchema as linePlotRendererConfigSchema,\n  ReactComponent as LinePlotRendererReactComponent,\n} from './LinePlotRenderer'\nimport {\n  WiggleGetGlobalStats,\n  WiggleGetMultiRegionStats,\n} from './WiggleRPC/rpcMethods'\n\nexport default class WigglePlugin extends Plugin {\n  name = 'WigglePlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'QuantitativeTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      return new TrackType({\n        name: 'QuantitativeTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'QuantitativeTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearWiggleDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearWiggleDisplay',\n        configSchema,\n        stateModel: linearWiggleDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'QuantitativeTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearWiggleDisplayReactComponent,\n      })\n    })\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BigWigAdapter',\n          configSchema: bigWigAdapterConfigSchema,\n          adapterCapabilities,\n          getAdapterClass: () =>\n            import('./BigWigAdapter/BigWigAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new DensityRenderer({\n          name: 'DensityRenderer',\n          ReactComponent: DensityRendererReactComponent,\n          configSchema: densityRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new LinePlotRenderer({\n          name: 'LinePlotRenderer',\n          ReactComponent: LinePlotRendererReactComponent,\n          configSchema: linePlotRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new XYPlotRenderer({\n          name: 'XYPlotRenderer',\n          ReactComponent: XYPlotRendererReactComponent,\n          configSchema: xyPlotRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRpcMethod(() => new WiggleGetGlobalStats(pluginManager))\n    pluginManager.addRpcMethod(\n      () => new WiggleGetMultiRegionStats(pluginManager),\n    )\n  }\n\n  exports = {\n    LinearWiggleDisplayReactComponent,\n    XYPlotRendererReactComponent,\n    XYPlotRenderer,\n    xyPlotRendererConfigSchema,\n    utils,\n    WiggleBaseRenderer,\n    linearWiggleDisplayModelFactory,\n  }\n}\n\nexport * from './util'\n\nexport { WiggleRendering }\nexport { WiggleBaseRenderer }\nexport { LinearWiggleDisplayReactComponent, linearWiggleDisplayModelFactory }\nexport { YSCALEBAR_LABEL_OFFSET }\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const XYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'XYPlotRenderer',\n  ).configSchema\n  const DensityRendererConfigSchema = pluginManager.getRendererType(\n    'DensityRenderer',\n  ).configSchema\n  const LinePlotRendererConfigSchema = pluginManager.getRendererType(\n    'LinePlotRenderer',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearWiggleDisplay',\n    {\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', [\n          'global',\n          'local',\n          'globalsd',\n          'localsd',\n          'zscore',\n        ]),\n        description:\n          'global/local using their min/max values or w/ standard deviations (globalsd/localsd)',\n      },\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      numStdDev: {\n        type: 'number',\n        description:\n          'number of standard deviations to use for autoscale types globalsd or localsd',\n        defaultValue: 3,\n      },\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['density', 'xyplot', 'line']),\n        defaultValue: 'xyplot',\n      },\n\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        DensityRenderer: DensityRendererConfigSchema,\n        XYPlotRenderer: XYPlotRendererConfigSchema,\n        LinePlotRenderer: LinePlotRendererConfigSchema,\n      }),\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function SetMinMaxDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    scaleType: string\n    setMinScore: Function\n    setMaxScore: Function\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const { minScore, maxScore, scaleType } = model\n\n  const [min, setMin] = useState(\n    `${minScore !== Number.MIN_VALUE ? minScore : ''}`,\n  )\n  const [max, setMax] = useState(\n    `${maxScore !== Number.MAX_VALUE ? maxScore : ''}`,\n  )\n\n  const ok =\n    min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n      ? +max > +min\n      : true\n\n  const logOk =\n    scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Set min/max score for track\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent style={{ overflowX: 'hidden' }}>\n        <div className={classes.root}>\n          <Typography>Enter min/max score: </Typography>\n          {!ok ? (\n            <Typography color=\"error\">\n              Max is greater than or equal to min\n            </Typography>\n          ) : null}\n\n          {!logOk ? (\n            <Typography color=\"error\">\n              Min score should be greater than 0 for log scale\n            </Typography>\n          ) : null}\n\n          <TextField\n            value={min}\n            onChange={event => {\n              setMin(event.target.value)\n            }}\n            placeholder=\"Enter min score\"\n          />\n          <TextField\n            value={max}\n            onChange={event => {\n              setMax(event.target.value)\n            }}\n            placeholder=\"Enter max score\"\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            disabled={!ok}\n            onClick={() => {\n              model.setMinScore(\n                min !== '' && !Number.isNaN(+min) ? +min : undefined,\n              )\n              model.setMaxScore(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Button,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { CompactPicker, Color, RGBColor } from 'react-color'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return `rgb(${r},${g},${b},${a})`\n  }\n  return color\n}\n\nexport default function SetColorDialog(props: {\n  model: {\n    color: number\n    setColor: Function\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Select a color\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent style={{ overflowX: 'hidden' }}>\n        <div className={classes.root}>\n          <CompactPicker\n            onChange={event => {\n              model.setColor(serializeColor(event.rgb))\n            }}\n          />\n          <br />\n          <div style={{ margin: 20 }}>\n            <Button\n              onClick={() => {\n                model.setColor(undefined)\n              }}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Restore default from config\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => {\n                handleClose()\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","WiggleBaseRenderer","FeatureRendererType","renderProps","getFeatures","features","height","bpPerPx","regions","width","region","end","start","renderToAbstractCanvas","ctx","_this2","draw","res","WiggleRendering","props","onMouseLeave","onMouseMove","onFeatureClick","ref","useRef","getFeatureUnderMouse","eventClientX","offset","current","getBoundingClientRect","left","featureUnderMouse","offsetX","clientBp","reversed","feature","get","React","event","clientX","id","onClick","role","className","style","overflow","position","PrerenderedCanvas","observer","ConfigurationSchema","bigWigLocation","defaultValue","uri","explicitlyTyped","BigWigAdapter","BaseFeatureDataAdapter","config","bigwig","BigWig","filehandle","openLocation","readConfObject","opts","statusCallback","getHeader","setup","refsByName","refId","refsByNumber","rectifyStats","totalSummary","refName","signal","resolution","ObservableCreate","getFeatureStream","basesPerSpan","pipe","mergeAll","map","SimpleFeature","data","subscribe","adapterCapabilities","capabilities","getScale","scale","domain","range","scaleType","pivotValue","inverted","min","max","scaleLinear","scaleLog","base","scaleQuantize","nice","getOrigin","getNiceDomain","bounds","minScore","maxScore","Number","MIN_VALUE","MAX_VALUE","getScaleType","color","description","posColor","negColor","highlightColor","clipColor","renderType","model","types","enumeration","filled","bicolorPivot","bicolorPivotValue","summaryScoreMode","displayCrossHatches","DensityRenderer","colorCallback","colorScale","scaleOpts","pivot","featureSpanPx","leftPx","w","fillStyle","fillRect","configSchema","baseConfiguration","ConfigSchema","toP","s","parseFloat","toPrecision","useStyles","makeStyles","theme","popper","fontSize","zIndex","tooltip","pointerEvents","hoverVertical","background","border","top","cursor","TooltipContents","displayRef","toLocaleString","coord","Tooltip","mouseCoord","classes","MUITooltip","placement","open","title","YSCALEBAR_LABEL_OFFSET","YScaleBar","Axis","ticks","format","n","orient","orientation","LEFT","RIGHT","LinearWiggleDisplay","ready","stats","needsScalebar","BaseLinearDisplayComponent","SetMinMaxDlg","lazy","SetColorDlg","rendererTypes","Map","logb","x","y","Math","log","round","v","b","pow","floor","abs","stateModelFactory","pluginManager","compose","BaseLinearDisplay","literal","configuration","ConfigurationReference","selectedRendering","optional","string","number","fill","maybe","rendererTypeNameState","autoscale","constraints","message","observable","scoreMin","scoreMax","statsFetchInProgress","actions","updateStats","setColor","setLoading","aborter","statsFetch","aborted","abort","selectFeature","session","getSession","isSelectionContainer","setSelection","setResolution","setFill","toggleLogScale","setScaleType","setSummaryScoreMode","val","setAutoscale","setMaxScore","setRendererType","setMinScore","toggleCrossHatches","setCrossHatches","cross","views","adapterConfig","viewName","getConf","rendererType","rendererConfig","configBlob","rendererTypeName","getEnv","oldDomain","ret","headroom","JSON","stringify","autoscaleType","trackMenuItems","axisPropsFromTickScale","composedRenderProps","getParentRenderProps","notReady","rpcDriverName","displayModel","filters","getAdapterType","adapterTypeName","includes","hasResolution","label","subMenu","elt","canHaveFill","checked","displayCrossHatchesSetting","_toConsumableArray","hasGlobalStats","setDialogComponent","composedTrackMenuItems","superReload","reload","superRenderSvg","renderSvg","getStats","rpcManager","nd","sessionId","getRpcSessionId","params","isAlive","setMessage","results","scoreMean","scoreStdDev","getContainingView","dynamicBlocks","assemblyName","getTrackAssemblyNames","parentTrack","parse","contentBlocks","ceil","setError","AbortController","afterAttach","addDisposer","autorun","view","initialized","maxViewBpPerPx","isAbortException","delay","when","regionCannotBeRenderedText","offsetPx","transform","XYPlotRenderer","unadjustedHeight","originY","niceMin","niceMax","toY","toHeight","_","score","_score","strokeStyle","moveTo","lineTo","stroke","crossingOrigin","rightPx","maxr","minr","lowClipping","highClipping","summary","c","Color","lighten","mix","darken","lineWidth","tick","beginPath","LinePlotRenderer","lastVal","rawscore","WiggleGetGlobalStats","RpcMethodType","args","rpcDriverClassName","SerializableFilterChain","deserializeArguments","deserializedArgs","getAdapter","dataAdapter","getGlobalStats","WiggleGetMultiRegionStats","assemblyManager","rootModel","_this$pluginManager$r","_this$pluginManager$r2","renameRegionsIfNeeded","toJSON","getMultiRegionStats","WigglePlugin","Plugin","LinearWiggleDisplayReactComponent","XYPlotRendererReactComponent","xyPlotRendererConfigSchema","utils","linearWiggleDisplayModelFactory","addTrackType","createBaseTrackConfig","TrackType","stateModel","createBaseTrackModel","addDisplayType","XYPlotRendererConfigSchema","getRendererType","DensityRendererConfigSchema","LinePlotRendererConfigSchema","numStdDev","defaultRendering","renderers","baseLinearDisplayConfigSchema","linearWiggleDisplayConfigSchemaFactory","DisplayType","trackType","viewType","ReactComponent","addAdapterType","AdapterType","bigWigAdapterConfigSchema","getAdapterClass","r","addRendererType","DensityRendererReactComponent","densityRendererConfigSchema","LinePlotRendererReactComponent","linePlotRendererConfigSchema","addRpcMethod","root","closeButton","right","spacing","palette","grey","handleClose","useState","setMin","setMax","ok","logOk","Dialog","onClose","DialogTitle","IconButton","CloseIcon","DialogContent","overflowX","Typography","TextField","onChange","target","placeholder","Button","variant","marginLeft","disabled","CompactPicker","g","a","serializeColor","rgb","margin"],"mappings":"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"}