{"version":3,"file":"plugin-circular-view.cjs.production.min.js","sources":["../src/CircularView/models/viewportVisibleRegion.ts","../src/CircularView/models/slices.ts","../src/CircularView/models/CircularView.ts","../src/BaseChordDisplay/components/Loading.tsx","../src/BaseChordDisplay/components/DisplayError.js","../src/BaseChordDisplay/components/RpcRenderedSvgGroup.js","../../../node_modules/regenerator-runtime/runtime.js","../src/BaseChordDisplay/models/renderReaction.js","../src/BaseChordDisplay/models/BaseChordDisplayModel.ts","../src/BaseChordDisplay/models/baseChordDisplayConfig.ts","../src/index.ts","../src/CircularView/components/Ruler.js","../src/CircularView/components/CircularView.js","../src/BaseChordDisplay/components/BaseChordDisplay.tsx"],"sourcesContent":["function findCircleIntersectionX(\n  y: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(y - cy)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([cx, y])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([cx - solution, y])\n  resultArray.push([cx + solution, y])\n}\n\nfunction findCircleIntersectionY(\n  x: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(x - cx)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([x, cy])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([x, cy - solution])\n  resultArray.push([x, cy + solution])\n}\n\nfunction cartesianToTheta(x: number, y: number) {\n  let theta = (Math.atan(y / x) + 2 * Math.PI) % (2 * Math.PI)\n  if (x < 0) {\n    if (y <= 0) {\n      theta += Math.PI\n    } else {\n      theta -= Math.PI\n    }\n  }\n  return theta\n}\n\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  if (rho === 0) {\n    return [0, 0]\n  }\n  const theta = cartesianToTheta(x, y)\n  return [rho, theta]\n}\n\nconst twoPi = 2 * Math.PI\nexport function thetaRangesOverlap(\n  r1start: number,\n  r1length: number,\n  r2start: number,\n  r2length: number,\n) {\n  if (r1length <= 0 || r2length <= 0) {\n    return false\n  }\n  if (r1length + 0.0001 >= twoPi || r2length + 0.0001 >= twoPi) {\n    return true\n  }\n\n  // put both range starts between 2π and 4π\n  r1start = (((r1start % twoPi) + twoPi) % twoPi) + twoPi\n  r2start = (((r2start % twoPi) + twoPi) % twoPi) + twoPi\n\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move r2 2π to the left and check\n  r2start -= twoPi\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move it 2π to the right and check\n  r2start += twoPi + twoPi\n  return r1start < r2start + r2length && r1start + r1length > r2start\n}\n\n// return which arc range has any part of the circle visible in the viewport\nexport function viewportVisibleSection(\n  viewSides: [number, number, number, number],\n  circleCenter: [number, number],\n  circleRadius: number,\n) {\n  let [viewL, viewR, viewT, viewB] = viewSides\n  const [cx, cy] = circleCenter\n\n  // transform coordinate system to center of circle\n  viewL -= cx\n  viewR -= cx\n  viewT -= cy\n  viewB -= cy\n\n  const centerIsInsideViewport =\n    viewL < 0 && viewR > 0 && viewT < 0 && viewB > 0\n\n  if (centerIsInsideViewport) {\n    const vertices = [\n      [viewL, viewT],\n      [viewR, viewT],\n      [viewL, viewB],\n      [viewR, viewB],\n    ]\n    let maxRho = -Infinity\n    for (let i = 0; i < vertices.length; i += 1) {\n      const [x, y] = vertices[i]\n      const rho = Math.sqrt(x * x + y * y)\n      if (rho > maxRho) {\n        maxRho = rho\n      }\n    }\n    return {\n      rho: [0, Math.min(circleRadius, maxRho)],\n      theta: [0, 2 * Math.PI],\n    }\n  }\n  // const viewportCompletelyContainsCircle =\n  //   circleCenter[0] - viewL >= circleRadius &&\n  //   viewR - circleCenter[0] >= circleRadius &&\n  //   circleCenter[1] - viewT >= circleRadius &&\n  //   viewB - circleCenter[1] >= circleRadius\n\n  // if (viewportCompletelyContainsCircle) {\n  //   return [0, 2 * Math.PI]\n  // }\n\n  // const distToCenterSquared = ([x, y]) => {\n  //   const [cx, cy] = circleCenter\n  //   const sq = n => n * n\n  //   return sq(x - cx) + sq(y - cy)\n  // }\n  // const circleRadiusSquared = circleRadius * circleRadius\n\n  // const tlInside = distToCenterSquared([viewL, viewT]) <= circleRadiusSquared\n  // const trInside = distToCenterSquared([viewR, viewT]) <= circleRadiusSquared\n  // const blInside = distToCenterSquared([viewL, viewB]) <= circleRadiusSquared\n  // const brInside = distToCenterSquared([viewR, viewB]) <= circleRadiusSquared\n\n  // const noIntersection = !tlInside && !trInside && !blInside && !brInside\n  // if (noIntersection) return undefined\n\n  // const circleCompletelyContainsViewport =\n  //   tlInside && trInside && blInside && brInside\n  // if (circleCompletelyContainsViewport) {\n  //   // viewport is in the circle, but the center is not in it, so take max\n  //   // and min of thetas to the center\n  //   const thetas = [\n  //     Math.atan(viewT / viewL),\n  //     Math.atan(viewT / viewR),\n  //     Math.atan(viewB / viewL),\n  //     Math.atan(viewB / viewR),\n  //   ]\n\n  //   return [Math.min(...thetas), Math.max(...thetas)]\n  // }\n\n  // if we get here, the viewport is partly in, partly out of the circle\n\n  // const viewLIntersects = Math.abs(viewL - circleCenter[0]) <= circleRadius\n  // const viewRIntersects = Math.abs(viewR - circleCenter[0]) <= circleRadius\n  // const viewTIntersects = Math.abs(viewT - circleCenter[1]) <= circleRadius\n  // const viewBIntersects = Math.abs(viewB - circleCenter[1]) <= circleRadius\n\n  // const numIntersectingSides =\n  //   Number(viewLIntersects) +\n  //   Number(viewRIntersects) +\n  //   Number(viewTIntersects) +\n  //   Number(viewBIntersects)\n\n  // if (numIntersectingSides === 4) return [0, 2 * Math.PI]\n  // if (numIntersectingSides === 3) {\n  //   // TODO calculate the thetas of the\n  // } else if (numIntersectingSides === 2) {\n  //   // TODO calculate the thetas of the 2 intersection points\n  // } else if (numIntersectingSides === 1) {\n  //   // TODO calculate the thetas of the 1-2 intersection points of the line, and the angle between\n  // }\n\n  // make a list of vertices-of-interest that lie inside both shapes to examine\n  // to determine the range covered by their intersection\n\n  // transform coordinates to have the circle as the origin and find the intersections\n  // of the circle and the view rectangle\n  const vertices: [number, number][] = [\n    [viewL, viewT],\n    [viewR, viewT],\n    [viewL, viewB],\n    [viewR, viewB],\n  ]\n  findCircleIntersectionY(viewL, 0, 0, circleRadius, vertices)\n  findCircleIntersectionY(viewR, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewT, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewB, 0, 0, circleRadius, vertices)\n\n  // for each edge, also look at the closest point to center if it is inside the circle\n  if (-viewL < circleRadius) {\n    vertices.push([viewL, 0])\n  }\n  if (viewR < circleRadius) {\n    vertices.push([viewR, 0])\n  }\n  if (-viewT < circleRadius) {\n    vertices.push([0, viewT])\n  }\n  if (viewB < circleRadius) {\n    vertices.push([0, viewB])\n  }\n\n  // const verticesOriginal = vertices.map(([x, y]) => [x + cx, y + cy])\n\n  // now convert them all to polar and take the max and min of rho and theta\n\n  // const viewportCenterTheta = cartesianToTheta(viewR + viewL, viewT + viewB)\n  const reflect = viewL >= 0 ? -1 : 1\n  // viewportCenterTheta < Math.PI / 2 || viewportCenterTheta > 1.5 * Math.PI\n  //   ? -1\n  //   : 1\n  let rhoMin = Infinity\n  let rhoMax = -Infinity\n  let thetaMin = Infinity\n  let thetaMax = -Infinity\n  for (let i = 0; i < vertices.length; i += 1) {\n    // ignore vertex if outside the viewport\n    const [vx, vy] = vertices[i]\n    if (vx >= viewL && vx <= viewR && vy >= viewT && vy <= viewB) {\n      const [rho, theta] = cartesianToPolar(vx * reflect, vy * reflect)\n      // ignore vertex if outside the circle\n      if (rho <= circleRadius + 0.001) {\n        // ignore theta if rho is 0\n        if (theta < thetaMin && rho > 0.0001) {\n          thetaMin = theta\n        }\n        if (theta > thetaMax && rho > 0.0001) {\n          thetaMax = theta\n        }\n        if (rho < rhoMin) {\n          rhoMin = rho\n        }\n        if (rho > rhoMax) {\n          rhoMax = rho\n        }\n      }\n    }\n  }\n\n  if (reflect === -1) {\n    thetaMin += Math.PI\n    thetaMax += Math.PI\n  }\n\n  if (thetaMin > 2 * Math.PI && thetaMax > 2 * Math.PI) {\n    thetaMin -= 2 * Math.PI\n    thetaMax -= 2 * Math.PI\n  }\n\n  return {\n    rho: [rhoMin, Math.min(circleRadius, rhoMax)],\n    theta: [thetaMin, thetaMax],\n  }\n}\n","import {\n  polarToCartesian,\n  assembleLocString,\n  objectFromEntries,\n  Region,\n} from '@jbrowse/core/util'\nimport { thetaRangesOverlap } from './viewportVisibleRegion'\n\nexport class Slice {\n  key: string\n\n  region: Region & { widthBp: number; elided: boolean }\n\n  offsetRadians: number\n\n  startRadians: number\n\n  endRadians: number\n\n  bpPerRadian: number\n\n  radianWidth: number\n\n  flipped: boolean\n\n  constructor(\n    view: { bpPerRadian: number },\n    region: Region & { widthBp: number; elided: boolean },\n    currentRadianOffset: number,\n    radianWidth: number,\n  ) {\n    const { bpPerRadian } = view\n    this.key = assembleLocString(region)\n    this.region = region\n    this.offsetRadians = currentRadianOffset\n    this.bpPerRadian = bpPerRadian\n    this.radianWidth = radianWidth\n    this.flipped = false\n\n    this.startRadians = this.offsetRadians\n    this.endRadians = region.widthBp / this.bpPerRadian + this.offsetRadians\n    Object.freeze(this)\n  }\n\n  bpToXY(bp: number, radiusPx: number) {\n    let offsetBp\n    if (this.region.elided) {\n      offsetBp = this.region.widthBp / 2\n    } else if (this.flipped) {\n      offsetBp = this.region.end - bp\n    } else {\n      offsetBp = bp - this.region.start\n    }\n    const totalRadians = offsetBp / this.bpPerRadian + this.offsetRadians\n    return polarToCartesian(radiusPx, totalRadians)\n  }\n\n  toJSON() {\n    return objectFromEntries(Object.entries(this))\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction calculateStaticSlices(self: any) {\n  const slices = []\n  let currentRadianOffset = 0\n  for (const region of self.elidedRegions) {\n    const radianWidth =\n      region.widthBp / self.bpPerRadian + self.spacingPx / self.pxPerRadian\n    slices.push(new Slice(self, region, currentRadianOffset, radianWidth))\n    currentRadianOffset += radianWidth\n  }\n  return slices\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction sliceIsVisible(self: any, slice: Slice) {\n  const {\n    // rho: visibleRhoRange,\n    theta: [visibleThetaMin, visibleThetaMax],\n  } = self.visibleSection\n\n  return thetaRangesOverlap(\n    slice.offsetRadians + self.offsetRadians,\n    slice.radianWidth,\n    visibleThetaMin,\n    visibleThetaMax - visibleThetaMin,\n  )\n}\n\nexport { calculateStaticSlices, sliceIsVisible }\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  SnapshotOrInstance,\n  Instance,\n  types,\n  getParent,\n  resolveIdentifier,\n  getRoot,\n  cast,\n} from 'mobx-state-tree'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport { transaction } from 'mobx'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  getSession,\n  clamp,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { calculateStaticSlices, sliceIsVisible } from './slices'\n\nimport { viewportVisibleSection } from './viewportVisibleRegion'\n\nexport default function CircularView(pluginManager: PluginManager) {\n  const minHeight = 40\n  const minWidth = 100\n  const defaultHeight = 400\n  return types.compose(\n    BaseViewModel,\n    types\n      .model('CircularView', {\n        type: types.literal('CircularView'),\n        offsetRadians: -Math.PI / 2,\n        bpPerPx: 2000000,\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        hideVerticalResizeHandle: false,\n        hideTrackSelectorButton: false,\n        lockedFitToWindow: true,\n        disableImportForm: false,\n\n        height: types.optional(\n          types.refinement('trackHeight', types.number, n => n >= minHeight),\n          defaultHeight,\n        ),\n        minimumRadiusPx: 25,\n        spacingPx: 10,\n        paddingPx: 80,\n        lockedPaddingPx: 100,\n        minVisibleWidth: 6,\n        minimumBlockWidth: 20,\n        displayedRegions: types.array(Region),\n        scrollX: 0,\n        scrollY: 0,\n        trackSelectorType: 'hierarchical',\n      })\n      .volatile(() => ({\n        width: 800,\n      }))\n      .views(self => ({\n        get staticSlices() {\n          return calculateStaticSlices(self)\n        },\n        get visibleStaticSlices() {\n          return this.staticSlices.filter(sliceIsVisible.bind(this, self))\n        },\n        get visibleSection() {\n          return viewportVisibleSection(\n            [\n              self.scrollX,\n              self.scrollX + self.width,\n              self.scrollY,\n              self.scrollY + self.height,\n            ],\n            this.centerXY,\n            this.radiusPx,\n          )\n        },\n        get circumferencePx() {\n          let elidedBp = 0\n          for (const r of this.elidedRegions) {\n            elidedBp += r.widthBp\n          }\n          return (\n            elidedBp / self.bpPerPx + self.spacingPx * this.elidedRegions.length\n          )\n        },\n        get radiusPx() {\n          return this.circumferencePx / (2 * Math.PI)\n        },\n        get bpPerRadian() {\n          return self.bpPerPx * this.radiusPx\n        },\n        get pxPerRadian() {\n          return this.radiusPx\n        },\n        get centerXY(): [number, number] {\n          return [\n            this.radiusPx + self.paddingPx,\n            this.radiusPx + self.paddingPx,\n          ]\n        },\n        get totalBp() {\n          let total = 0\n          for (const region of self.displayedRegions) {\n            total += region.end - region.start\n          }\n          return total\n        },\n        get maximumRadiusPx() {\n          return self.lockedFitToWindow\n            ? Math.min(self.width, self.height) / 2 - self.lockedPaddingPx\n            : 1000000\n        },\n        get maxBpPerPx() {\n          const minCircumferencePx = 2 * Math.PI * self.minimumRadiusPx\n          return this.totalBp / minCircumferencePx\n        },\n        get minBpPerPx() {\n          // min depends on window dimensions, clamp between old min(0.01) and max\n          const maxCircumferencePx = 2 * Math.PI * this.maximumRadiusPx\n          return clamp(\n            this.totalBp / maxCircumferencePx,\n            0.0000000001,\n            this.maxBpPerPx,\n          )\n        },\n        get atMaxBpPerPx() {\n          return self.bpPerPx >= this.maxBpPerPx\n        },\n        get atMinBpPerPx() {\n          return self.bpPerPx <= this.minBpPerPx\n        },\n        get tooSmallToLock() {\n          return this.minBpPerPx <= 0.0000000001\n        },\n        get figureDimensions() {\n          return [\n            this.radiusPx * 2 + 2 * self.paddingPx,\n            this.radiusPx * 2 + 2 * self.paddingPx,\n          ]\n        },\n        get figureWidth() {\n          return this.figureDimensions[0]\n        },\n        get figureHeight() {\n          return this.figureDimensions[1]\n        },\n        // this is displayedRegions, post-processed to\n        // elide regions that are too small to see reasonably\n        get elidedRegions() {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const visible: any[] = []\n          self.displayedRegions.forEach(region => {\n            const widthBp = region.end - region.start\n            const widthPx = widthBp / self.bpPerPx\n            if (widthPx < self.minVisibleWidth) {\n              // too small to see, collapse into a single elision region\n              const lastVisible = visible[visible.length - 1]\n              if (lastVisible && lastVisible.elided) {\n                lastVisible.regions.push({ ...region })\n                lastVisible.widthBp += widthBp\n              } else {\n                visible.push({\n                  elided: true,\n                  widthBp,\n                  regions: [{ ...region }],\n                })\n              }\n            } else {\n              // big enough to see, display it\n              visible.push({ ...region, widthBp })\n            }\n          })\n\n          // remove any single-region elisions\n          for (let i = 0; i < visible.length; i += 1) {\n            const v = visible[i]\n            if (v.elided && v.regions.length === 1) {\n              delete v.elided\n              visible[i] = { ...v, ...v.regions[0] }\n            }\n          }\n          return visible\n        },\n\n        get assemblyNames() {\n          const assemblyNames: string[] = []\n          self.displayedRegions.forEach(displayedRegion => {\n            if (!assemblyNames.includes(displayedRegion.assemblyName)) {\n              assemblyNames.push(displayedRegion.assemblyName)\n            }\n          })\n          return assemblyNames\n        },\n      }))\n      .volatile(() => ({\n        error: undefined as Error | undefined,\n      }))\n      .actions(self => ({\n        // toggle action with a flag stating which mode it's in\n        setWidth(newWidth: number) {\n          self.width = Math.max(newWidth, minWidth)\n          return self.width\n        },\n        setHeight(newHeight: number) {\n          self.height = Math.max(newHeight, minHeight)\n          return self.height\n        },\n        resizeHeight(distance: number) {\n          const oldHeight = self.height\n          const newHeight = this.setHeight(self.height + distance)\n          this.setModelViewWhenAdjust(!self.tooSmallToLock)\n          return newHeight - oldHeight\n        },\n        resizeWidth(distance: number) {\n          const oldWidth = self.width\n          const newWidth = this.setWidth(self.width + distance)\n          this.setModelViewWhenAdjust(!self.tooSmallToLock)\n          return newWidth - oldWidth\n        },\n        rotateClockwiseButton() {\n          this.rotateClockwise(Math.PI / 6)\n        },\n\n        rotateCounterClockwiseButton() {\n          this.rotateCounterClockwise(Math.PI / 6)\n        },\n\n        rotateClockwise(distance = 0.17) {\n          self.offsetRadians += distance\n        },\n\n        rotateCounterClockwise(distance = 0.17) {\n          self.offsetRadians -= distance\n        },\n\n        zoomInButton() {\n          this.setBpPerPx(self.bpPerPx / 1.4)\n        },\n\n        zoomOutButton() {\n          this.setBpPerPx(self.bpPerPx * 1.4)\n        },\n\n        setBpPerPx(newVal: number) {\n          self.bpPerPx = clamp(newVal, self.minBpPerPx, self.maxBpPerPx)\n        },\n\n        setModelViewWhenAdjust(secondCondition: boolean) {\n          if (self.lockedFitToWindow && secondCondition) {\n            this.setBpPerPx(self.minBpPerPx)\n          }\n        },\n\n        closeView() {\n          getParent(self, 2).removeView(self)\n        },\n\n        setDisplayedRegions(regions: SnapshotOrInstance<typeof Region>[]) {\n          const previouslyEmpty = self.displayedRegions.length === 0\n          self.displayedRegions = cast(regions)\n\n          if (previouslyEmpty) {\n            this.setBpPerPx(self.minBpPerPx)\n          } else {\n            this.setBpPerPx(self.bpPerPx)\n          }\n        },\n\n        activateTrackSelector() {\n          if (self.trackSelectorType === 'hierarchical') {\n            const session = getSession(self)\n            if (isSessionModelWithWidgets(session)) {\n              const selector = session.addWidget(\n                'HierarchicalTrackSelectorWidget',\n                'hierarchicalTrackSelector',\n                { view: self },\n              )\n              session.showWidget(selector)\n              return selector\n            }\n          }\n          throw new Error(\n            `invalid track selector type ${self.trackSelectorType}`,\n          )\n        },\n\n        toggleTrack(trackId: string) {\n          // if we have any tracks with that configuration, turn them off\n          const hiddenCount = this.hideTrack(trackId)\n          // if none had that configuration, turn one on\n          if (!hiddenCount) {\n            this.showTrack(trackId)\n          }\n        },\n\n        setError(error: Error) {\n          console.error(error)\n          self.error = error\n        },\n\n        showTrack(trackId: string, initialSnapshot = {}) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          const trackType = pluginManager.getTrackType(configuration.type)\n          if (!trackType) {\n            throw new Error(`unknown track type ${configuration.type}`)\n          }\n          const viewType = pluginManager.getViewType(self.type)\n          const supportedDisplays = viewType.displayTypes.map(\n            displayType => displayType.name,\n          )\n          const displayConf = configuration.displays.find(\n            (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n          )\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            type: configuration.type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          })\n          self.tracks.push(track)\n        },\n\n        addTrackConf(\n          configuration: AnyConfigurationModel,\n          initialSnapshot = {},\n        ) {\n          const { type } = configuration\n          const name = readConfObject(configuration, 'name')\n          const trackType = pluginManager.getTrackType(type)\n          if (!trackType) {\n            throw new Error(`unknown track type ${configuration.type}`)\n          }\n          const viewType = pluginManager.getViewType(self.type)\n          const supportedDisplays = viewType.displayTypes.map(\n            displayType => displayType.name,\n          )\n          const displayConf = configuration.displays.find(\n            (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n          )\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            name,\n            type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          })\n          self.tracks.push(track)\n        },\n\n        hideTrack(trackId: string) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          // if we have any tracks with that configuration, turn them off\n          const shownTracks = self.tracks.filter(\n            t => t.configuration === configuration,\n          )\n          transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n          return shownTracks.length\n        },\n\n        toggleFitToWindowLock() {\n          self.lockedFitToWindow = !self.lockedFitToWindow\n          // when going unlocked -> locked and circle is cut off, set to the locked minBpPerPx\n          this.setModelViewWhenAdjust(self.atMinBpPerPx)\n          return self.lockedFitToWindow\n        },\n      })),\n  )\n}\n\nexport type CircularViewStateModel = ReturnType<typeof CircularView>\nexport type CircularViewModel = Instance<CircularViewStateModel>\n\n/*\nPLANS\n\n- tracks\n- ruler tick marks\n- set viewport scroll from state snapshot\n\n*/\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  const { lib } = pluginManager\n  const React = lib.react\n  const { useState, useEffect } = React\n  const { makeStyles } = lib['@material-ui/core/styles']\n  const { observer } = lib['mobx-react']\n\n  const useStyles = makeStyles(theme => {\n    const offset = 2\n    const duration = 1.4\n    return {\n      path: {\n        strokeDasharray: 187,\n        strokeDashoffset: 50,\n        animation: `$dash ${duration}s ease-in-out infinite, $colors ${\n          duration * 4\n        }s ease-in-out infinite`,\n      },\n      '@keyframes colors': {\n        '0%': {\n          stroke: theme.palette.primary.light,\n        },\n        '25%': {\n          stroke: theme.palette.secondary.light,\n        },\n        '50%': {\n          stroke: theme.palette.tertiary.light,\n        },\n        '75%': {\n          stroke: theme.palette.quaternary.light,\n        },\n        '100%': {\n          stroke: theme.palette.primary.light,\n        },\n      },\n      '@keyframes dash': {\n        '0%': {\n          strokeDashoffset: offset,\n        },\n        '50%': {\n          strokeDashoffset: offset / 4,\n          transform: 'rotate(135deg)',\n        },\n        '100%': {\n          strokeDashoffset: offset,\n          transform: 'rotate(720deg)',\n        },\n      },\n    }\n  })\n\n  // 'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n  const Loading = observer(\n    ({\n      model: {\n        renderProps: { radius },\n      },\n    }: {\n      model: { renderProps: { radius: number } }\n    }) => {\n      const classes = useStyles()\n\n      // only show the loading message after 400ms to prevent excessive flickering\n      const [shown, setShown] = useState(false)\n      useEffect(() => {\n        const timeout = setTimeout(() => setShown(true), 400)\n        return () => clearTimeout(timeout)\n      })\n\n      return !shown ? null : (\n        <g>\n          <defs>\n            <pattern\n              id=\"diagonalHatch\"\n              width=\"10\"\n              height=\"10\"\n              patternTransform=\"rotate(45 0 0)\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <line\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"10\"\n                style={{ stroke: 'rgba(255,255,255,0.5)', strokeWidth: 10 }}\n              />\n            </pattern>\n          </defs>\n          <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#f1f1f1\" />\n          <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n          <text\n            x=\"0\"\n            y=\"0\"\n            transform=\"rotate(90 0 0)\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            Loading&hellip;\n          </text>\n          <circle\n            className={classes.path}\n            fill=\"none\"\n            strokeWidth=\"4\"\n            strokeLinecap=\"round\"\n            cx=\"0\"\n            cy=\"0\"\n            r=\"60\"\n          />\n        </g>\n      )\n    },\n  )\n\n  return Loading\n}\n","export default ({ jbrequire }) => {\n  const React = jbrequire('react')\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const { observer } = jbrequire('mobx-react')\n\n  const useStyles = makeStyles({\n    errorMessage: {},\n    errorBackground: {},\n    errorText: {},\n  })\n\n  // 'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n  const DisplayError = observer(\n    ({\n      model: {\n        renderProps: { radius },\n        error,\n      },\n    }) => {\n      const classes = useStyles()\n      return (\n        <g className={classes.errorMessage}>\n          <defs>\n            <pattern\n              id=\"diagonalHatch\"\n              width=\"10\"\n              height=\"10\"\n              patternTransform=\"rotate(45 0 0)\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <line\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"10\"\n                style={{ stroke: 'rgba(255,0,0,0.5)', strokeWidth: 10 }}\n              />\n            </pattern>\n          </defs>\n          <circle\n            className={classes.errorBackground}\n            cx=\"0\"\n            cy=\"0\"\n            r={radius}\n            fill=\"#ffb4b4\"\n          />\n          <circle\n            className={classes.errorPattern}\n            cx=\"0\"\n            cy=\"0\"\n            r={radius}\n            fill=\"url(#diagonalHatch)\"\n          />\n          <text\n            className={classes.errorText}\n            x=\"0\"\n            y=\"0\"\n            transform=\"rotate(90 0 0)\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {String(error)}\n          </text>\n        </g>\n      )\n    },\n  )\n\n  return DisplayError\n}\n","export default ({ jbrequire }) => {\n  const React = jbrequire('react')\n  const { isAlive } = jbrequire('mobx-state-tree')\n  const { useEffect, useRef } = React\n  const { observer, PropTypes: MobxPropTypes } = jbrequire('mobx-react')\n  const { unmountComponentAtNode, hydrate } = jbrequire('react-dom')\n  const { rIC } = jbrequire('@jbrowse/core/util')\n\n  function RpcRenderedSvgGroup({ model }) {\n    const { data, html, filled, renderProps, renderingComponent } = model\n\n    const ssrContainerNode = useRef(null)\n\n    useEffect(() => {\n      const domNode = ssrContainerNode.current\n      function doHydrate() {\n        if (domNode && filled) {\n          if (domNode && domNode.innerHTML) {\n            domNode.style.display = 'none'\n            unmountComponentAtNode(domNode)\n          }\n          domNode.style.display = 'inline'\n          domNode.innerHTML = html\n          // use requestIdleCallback to defer main-thread rendering\n          // and hydration for when we have some free time. helps\n          // keep the framerate up.\n          rIC(() => {\n            if (!isAlive(model)) {\n              return\n            }\n            const mainThreadRendering = React.createElement(\n              renderingComponent,\n              { ...data, ...renderProps },\n              null,\n            )\n            rIC(() => {\n              if (!isAlive(model)) {\n                return\n              }\n              hydrate(mainThreadRendering, domNode)\n            })\n          })\n        }\n      }\n      doHydrate()\n      return () => {\n        if (domNode) {\n          unmountComponentAtNode(domNode)\n        }\n      }\n    })\n\n    return <g ref={ssrContainerNode} />\n  }\n\n  RpcRenderedSvgGroup.propTypes = {\n    model: MobxPropTypes.observableObject.isRequired,\n  }\n\n  return observer(RpcRenderedSvgGroup)\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default ({ jbrequire }) => {\n  const { getRpcSessionId } = jbrequire('@jbrowse/core/util/tracks')\n  const { getContainingView } = jbrequire('@jbrowse/core/util')\n  const { getSession } = jbrequire('@jbrowse/core/util')\n\n  function renderReactionData(self) {\n    const display = self\n    const view = getContainingView(display)\n    const { rendererType, renderProps } = display\n    const { rpcManager } = getSession(view)\n\n    const a = {\n      rendererType,\n      rpcManager,\n      renderProps,\n      renderArgs: {\n        // TODO: Figure this out for multiple assembly names\n        assemblyName: view.displayedRegions[0]?.assemblyName,\n        adapterConfig: JSON.parse(JSON.stringify(display.adapterConfig)),\n        rendererType: rendererType.name,\n        regions: JSON.parse(JSON.stringify(view.displayedRegions)),\n        blockDefinitions: view.blockDefinitions,\n        sessionId: getRpcSessionId(display),\n        timeout: 1000000, // 10000,\n      },\n    }\n    return a\n  }\n\n  async function renderReactionEffect(props, signal, self) {\n    if (!props) {\n      throw new Error('cannot render with no props')\n    }\n\n    const {\n      rendererType,\n      rpcManager,\n      cannotBeRenderedReason,\n      renderArgs,\n      renderProps,\n    } = props\n\n    if (cannotBeRenderedReason) {\n      return { message: cannotBeRenderedReason }\n    }\n\n    // don't try to render 0 or NaN radius or no regions\n    if (\n      !props.renderProps.radius ||\n      !props.renderArgs.regions ||\n      !props.renderArgs.regions.length\n    ) {\n      return { message: 'Skipping render' }\n    }\n\n    // check renderertype compatibility\n    if (!self.isCompatibleWithRenderer(rendererType)) {\n      throw new Error(\n        `renderer ${rendererType.name} is not compatible with this display type`,\n      )\n    }\n\n    const { html, ...data } = await rendererType.renderInClient(rpcManager, {\n      ...renderArgs,\n      ...renderProps,\n      signal,\n    })\n\n    return { html, data, renderingComponent: rendererType.ReactComponent }\n  }\n\n  return { renderReactionData, renderReactionEffect }\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport CircularChordRendererType from '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType'\nimport RendererType from '@jbrowse/core/pluggableElementTypes/renderers/RendererType'\nimport {\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n  AnyReactComponentType,\n} from '@jbrowse/core/util'\nimport { Feature, isFeature } from '@jbrowse/core/util/simpleFeature'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\nimport { Region } from '@jbrowse/core/util/types'\nimport { getParent, isAlive, types, getEnv } from 'mobx-state-tree'\nimport React from 'react'\nimport renderReactionFactory from './renderReaction'\nimport { CircularViewModel } from '../../CircularView/models/CircularView'\n\nexport const BaseChordDisplayModel = types\n  .compose(\n    'BaseChordDisplay',\n    BaseDisplay,\n    types.model({\n      bezierRadiusRatio: 0.1,\n      assemblyName: types.maybe(types.string),\n    }),\n  )\n  .volatile(() => {\n    return {\n      // NOTE: all this volatile stuff has to be filled in at once\n      // so that it stays consistent\n      filled: false,\n      reactElement: undefined as React.ReactElement | undefined,\n      data: undefined,\n      message: '',\n      error: undefined as Error | undefined,\n      renderingComponent: undefined as undefined | AnyReactComponentType,\n      refNameMap: undefined as Record<string, string> | undefined,\n    }\n  })\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const track = self\n    return {\n      onChordClick(feature: Feature) {\n        getConf(self, 'onChordClick', { feature, track, pluginManager })\n      },\n    }\n  })\n  .views(self => ({\n    get blockDefinitions() {\n      const origSlices = (getContainingView(self) as CircularViewModel)\n        .staticSlices\n      if (!self.refNameMap) {\n        return origSlices\n      }\n\n      const slices = JSON.parse(JSON.stringify(origSlices))\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      slices.forEach((slice: any) => {\n        const regions = slice.region.elided\n          ? slice.region.regions\n          : [slice.region]\n        regions.forEach((region: Region) => {\n          const renamed = self.refNameMap?.[region.refName]\n          if (renamed && region.refName !== renamed) {\n            region.refName = renamed\n          }\n        })\n      })\n      return slices\n    },\n\n    get renderProps() {\n      const view = getContainingView(self) as CircularViewModel\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n        bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n        radius: view.radiusPx,\n        blockDefinitions: this.blockDefinitions,\n        onChordClick: self.onChordClick,\n      }\n    },\n\n    /**\n     * the pluggable element type object for this diplay's\n     * renderer\n     */\n    get rendererType() {\n      const display = self\n      const { pluginManager } = getEnv(self)\n      const ThisRendererType = pluginManager.getRendererType(\n        self.rendererTypeName,\n      )\n      if (!ThisRendererType) {\n        throw new Error(`renderer \"${display.rendererTypeName}\" not found`)\n      }\n      if (!ThisRendererType.ReactComponent) {\n        throw new Error(\n          `renderer ${display.rendererTypeName} has no ReactComponent, it may not be completely implemented yet`,\n        )\n      }\n      return ThisRendererType\n    },\n\n    isCompatibleWithRenderer(renderer: RendererType) {\n      return !!(renderer instanceof CircularChordRendererType)\n    },\n\n    /**\n     * returns a string feature ID if the globally-selected object\n     * is probably a feature\n     */\n    get selectedFeatureId() {\n      if (!isAlive(self)) {\n        return undefined\n      }\n      const session = getSession(self)\n      if (!session) {\n        return undefined\n      }\n      const { selection } = session\n      // does it quack like a feature?\n      if (isFeature(selection)) {\n        return selection.id()\n      }\n      return undefined\n    },\n  }))\n  .actions(self => ({\n    renderStarted() {\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.error = undefined\n      self.renderingComponent = undefined\n    },\n    renderSuccess({\n      message,\n      data,\n      reactElement,\n      renderingComponent,\n    }: {\n      message: string\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: any\n      reactElement: React.ReactElement\n      renderingComponent: AnyReactComponentType\n    }) {\n      if (message) {\n        self.filled = false\n        self.message = message\n        self.reactElement = undefined\n        self.data = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n      } else {\n        self.filled = true\n        self.message = ''\n        self.reactElement = reactElement\n        self.data = data\n        self.error = undefined\n        self.renderingComponent = renderingComponent\n      }\n    },\n    renderError(error: Error) {\n      console.error(error)\n      // the rendering failed for some reason\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.error = error\n      self.renderingComponent = undefined\n    },\n\n    setRefNameMap(refNameMap: Record<string, string>) {\n      self.refNameMap = refNameMap\n    },\n    setError(error: Error) {\n      self.error = error\n    },\n  }))\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const {\n      renderReactionData,\n      renderReactionEffect,\n    } = pluginManager.jbrequire(renderReactionFactory)\n    return {\n      afterAttach() {\n        makeAbortableReaction(\n          self,\n          renderReactionData,\n          renderReactionEffect,\n          {\n            name: `${self.type} ${self.id} rendering`,\n            // delay: self.renderDelay || 300,\n            fireImmediately: true,\n          },\n          self.renderStarted,\n          self.renderSuccess,\n          self.renderError,\n        )\n        makeAbortableReaction(\n          self,\n          () => ({\n            assemblyNames: getTrackAssemblyNames(self.parentTrack) as string[],\n            adapter: getConf(getParent(self, 2), 'adapter'),\n            assemblyManager: getSession(self).assemblyManager,\n          }),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          async ({ assemblyNames, adapter, assemblyManager }: any, signal) => {\n            return assemblyManager.getRefNameMapForAdapter(\n              adapter,\n              assemblyNames[0],\n              { signal, sessionId: getRpcSessionId(self) },\n            )\n          },\n          {\n            name: `${self.type} ${self.id} getting refNames`,\n            fireImmediately: true,\n          },\n          () => {},\n          refNameMap => {\n            self.setRefNameMap(refNameMap)\n          },\n          error => {\n            console.error(error)\n            self.setError(error)\n          },\n        )\n      },\n    }\n  })\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nconst baseChordDisplayConfig = ConfigurationSchema(\n  'BaseChordDisplay',\n  {\n    onChordClick: {\n      type: 'boolean',\n      description:\n        'callback that should be run when a chord in the track is clicked',\n      defaultValue: false,\n      contextVariable: ['feature', 'track', 'pluginManager'],\n    },\n  },\n  { explicitIdentifier: 'displayId' },\n)\n\nexport { baseChordDisplayConfig }\n","import { lazy } from 'react'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport DataUsageIcon from '@material-ui/icons/DataUsage'\nimport stateModelFactory from './CircularView/models/CircularView'\n\nexport default class CircularViewPlugin extends Plugin {\n  name = 'CircularViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(\n      () =>\n        new ViewType({\n          ReactComponent: lazy(\n            () => import('./CircularView/components/CircularView'),\n          ),\n          stateModel: stateModelFactory(pluginManager),\n          name: 'CircularView',\n        }),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Circular view',\n        icon: DataUsageIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('CircularView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  BaseChordDisplayModel,\n  baseChordDisplayConfig,\n  BaseChordDisplayComponentFactory,\n} from './BaseChordDisplay'\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  getSession,\n  polarToCartesian,\n  radToDeg,\n  assembleLocString,\n} from '@jbrowse/core/util'\nimport { makeContrasting } from '@jbrowse/core/util/color'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  rulerLabel: {\n    fontSize: '0.8rem',\n    fontWeight: 500,\n    lineHeight: 1.6,\n    letterSpacing: '0.0075em',\n  },\n})\n\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n  if (slice.flipped) {\n    ;[startBase, endBase] = [endBase, startBase]\n  }\n  const startXY = slice.bpToXY(startBase, radiusPx)\n  const endXY = slice.bpToXY(endBase, radiusPx)\n  const largeArc =\n    Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0'\n  const sweepFlag = '1'\n  return [\n    'M',\n    ...startXY,\n    'A',\n    radiusPx,\n    radiusPx,\n    '0',\n    largeArc,\n    sweepFlag,\n    ...endXY,\n  ].join(' ')\n}\n\nconst ElisionRulerArc = observer(({ model, slice }) => {\n  const theme = useTheme()\n  const { radiusPx: modelRadiusPx } = model\n  const radiusPx = modelRadiusPx + 1\n  const { endRadians, startRadians, region } = slice\n  const startXY = polarToCartesian(radiusPx, startRadians)\n  const endXY = polarToCartesian(radiusPx, endRadians)\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const largeArc = endRadians - startRadians > Math.PI ? '1' : '0'\n  // TODO: draw the elision\n  const centerRadians = (endRadians + startRadians) / 2\n  const regionCountString = `[${Number(\n    region.regions.length,\n  ).toLocaleString()}]`\n  return (\n    <>\n      <RulerLabel\n        text={regionCountString}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        title={`${Number(region.regions.length).toLocaleString()} more regions`}\n        color={theme.palette.text.primary}\n      />\n      <path\n        d={[\n          'M',\n          ...startXY,\n          'A',\n          radiusPx,\n          radiusPx,\n          '0',\n          largeArc,\n          '1',\n          ...endXY,\n        ].join(' ')}\n        stroke={theme.palette.text.secondary}\n        strokeWidth={2}\n        strokeDasharray=\"2,2\"\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nconst RulerLabel = observer(\n  ({ view, text, maxWidthPx, radians, radiusPx, title, color }) => {\n    const classes = useStyles()\n    const textXY = polarToCartesian(radiusPx + 5, radians)\n    if (!text) {\n      return null\n    }\n\n    if (text.length * 6.5 < maxWidthPx) {\n      // text is rotated parallel to the ruler arc\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"middle\"\n          dominantBaseline=\"baseline\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians) + 90})`}\n          style={{ fill: color }}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n    if (maxWidthPx > 4) {\n      // text is rotated perpendicular to the ruler arc\n      const overallRotation = radToDeg(\n        radians + view.offsetRadians - Math.PI / 2,\n      )\n      if (overallRotation >= 180) {\n        return (\n          <text\n            x={0}\n            y={0}\n            className={classes.rulerLabel}\n            textAnchor=\"start\"\n            dominantBaseline=\"middle\"\n            transform={`translate(${textXY}) rotate(${radToDeg(radians)})`}\n            style={{ fill: color }}\n          >\n            {text}\n            <title>{title || text}</title>\n          </text>\n        )\n      }\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"end\"\n          dominantBaseline=\"middle\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians) + 180})`}\n          style={{ fill: color }}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n\n    // if you get here there is no room for the text at all\n    return null\n  },\n)\n\nconst RegionRulerArc = observer(({ model, slice }) => {\n  const theme = useTheme()\n  const { radiusPx } = model\n  const { region, endRadians, startRadians } = slice\n  const centerRadians = (endRadians + startRadians) / 2\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const session = getSession(model)\n  let color\n  const assembly = session.assemblyManager.get(slice.region.assemblyName)\n  if (assembly) {\n    color = assembly.getRefNameColor(region.refName)\n  }\n  if (color) {\n    try {\n      color = makeContrasting(color, theme.palette.background.paper)\n    } catch (error) {\n      color = theme.palette.text.primary\n    }\n  } else {\n    color = theme.palette.text.primary\n  }\n\n  // TODO: slice flipping\n  return (\n    <>\n      <RulerLabel\n        text={region.refName}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        color={color}\n      />\n      <path\n        d={sliceArcPath(slice, radiusPx + 1, region.start, region.end)}\n        stroke={color}\n        strokeWidth={2}\n        fill=\"none\"\n      >\n        <title>{region.refName}</title>\n      </path>\n    </>\n  )\n})\n\nconst CircularRuler = observer(function Ruler({ model, slice }) {\n  if (slice.region.elided) {\n    return (\n      <ElisionRulerArc\n        key={assembleLocString(slice.region.regions[0])}\n        model={model}\n        slice={slice}\n      />\n    )\n  }\n  return (\n    <RegionRulerArc\n      key={assembleLocString(slice.region)}\n      model={model}\n      slice={slice}\n    />\n  )\n})\n\nexport default CircularRuler\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport RotateLeft from '@material-ui/icons/RotateLeft'\nimport RotateRight from '@material-ui/icons/RotateRight'\nimport LockOutline from '@material-ui/icons/LockOutlined'\nimport LockOpen from '@material-ui/icons/LockOpen'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// material-ui stuff\nimport {\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  MenuItem,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport { grey } from '@material-ui/core/colors'\n\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { assembleLocString, getSession } from '@jbrowse/core/util'\nimport Ruler from './Ruler'\n\nconst dragHandleHeight = 3\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n      background: 'white',\n    },\n    scroller: {\n      overflow: 'auto',\n    },\n    sliceRoot: {\n      background: 'none',\n      // background: theme.palette.background.paper,\n      boxSizing: 'content-box',\n      display: 'block',\n    },\n    iconButton: {\n      padding: '4px',\n      margin: '0 2px 0 2px',\n    },\n    controls: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      position: 'absolute',\n      background: grey[200],\n      boxSizing: 'border-box',\n      borderRight: '1px solid #a2a2a2',\n      borderBottom: '1px solid #a2a2a2',\n      left: 0,\n      top: 0,\n    },\n    importFormContainer: {\n      marginBottom: theme.spacing(4),\n    },\n  }\n})\n\nconst Slices = observer(({ model }) => {\n  return (\n    <>\n      <>\n        {model.staticSlices.map(slice => {\n          return (\n            <Ruler\n              key={assembleLocString(\n                slice.region.elided ? slice.region.regions[0] : slice.region,\n              )}\n              model={model}\n              slice={slice}\n            />\n          )\n        })}\n      </>\n      <>\n        {model.tracks.map(track => {\n          const display = track.displays[0]\n          return (\n            <display.RenderingComponent\n              key={display.id}\n              display={display}\n              view={model}\n            />\n          )\n        })}\n      </>\n    </>\n  )\n})\n\nconst Controls = observer(({ model, showingFigure }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        title={model.lockedFitToWindow ? 'unlock to zoom out' : 'zoom out'}\n        disabled={\n          !showingFigure || model.atMaxBpPerPx || model.lockedFitToWindow\n        }\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        disabled={!showingFigure || model.atMinBpPerPx}\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateCounterClockwiseButton}\n        className={classes.iconButton}\n        title=\"rotate counter-clockwise\"\n        disabled={!showingFigure}\n        color=\"secondary\"\n      >\n        <RotateLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateClockwiseButton}\n        className={classes.iconButton}\n        title=\"rotate clockwise\"\n        disabled={!showingFigure}\n        color=\"secondary\"\n      >\n        <RotateRight />\n      </IconButton>\n\n      <IconButton\n        onClick={model.toggleFitToWindowLock}\n        className={classes.iconButton}\n        title={\n          model.lockedFitToWindow\n            ? 'locked model to window size'\n            : 'unlocked model to zoom further'\n        }\n        disabled={model.tooSmallToLock}\n        color=\"secondary\"\n      >\n        {model.lockedFitToWindow ? <LockOutline /> : <LockOpen />}\n      </IconButton>\n\n      {model.hideTrackSelectorButton ? null : (\n        <IconButton\n          onClick={model.activateTrackSelector}\n          title=\"Open track selector\"\n          data-testid=\"circular_track_select\"\n          color=\"secondary\"\n        >\n          <TrackSelectorIcon />\n        </IconButton>\n      )}\n    </div>\n  )\n})\n\nconst ImportForm = observer(({ model }) => {\n  const classes = useStyles()\n  const [selectedAssemblyIdx, setSelectedAssemblyIdx] = useState(0)\n  const { assemblyNames, assemblyManager } = getSession(model)\n  const assemblyError = assemblyNames.length ? '' : 'No configured assemblies'\n  const assembly = assemblyManager.get(assemblyNames[selectedAssemblyIdx])\n  const regions = assembly?.regions || []\n\n  function onAssemblyChange(event) {\n    setSelectedAssemblyIdx(Number(event.target.value))\n  }\n\n  function onOpenClick() {\n    model.setDisplayedRegions(regions)\n  }\n\n  return (\n    <>\n      <Container className={classes.importFormContainer}>\n        <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TextField\n              select\n              value={\n                assemblyNames[selectedAssemblyIdx] && !assemblyError\n                  ? selectedAssemblyIdx\n                  : ''\n              }\n              onChange={onAssemblyChange}\n              helperText={assemblyError || 'Select assembly to view'}\n              error={!!assemblyError}\n              disabled={!!assemblyError}\n              margin=\"normal\"\n            >\n              {assemblyNames.map((name, idx) => (\n                <MenuItem key={name} value={idx}>\n                  {name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            <Button\n              disabled={!(regions && regions.length)}\n              onClick={onOpenClick}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {regions.length ? 'Open' : 'Loading…'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n})\n\nconst CircularView = observer(({ model }) => {\n  const classes = useStyles()\n  const initialized =\n    !!model.displayedRegions.length && model.figureWidth && model.figureHeight\n\n  const showImportForm = !initialized && !model.disableImportForm\n  const showFigure = initialized && !showImportForm\n\n  return (\n    <div\n      className={classes.root}\n      style={{\n        width: model.width,\n        height: model.height,\n      }}\n      data-testid={model.id}\n    >\n      {model.error ? (\n        <p style={{ color: 'red' }}>{model.error.message}</p>\n      ) : (\n        <>\n          {showImportForm ? <ImportForm model={model} /> : null}\n          <>\n            {!showFigure ? null : (\n              <div\n                className={classes.scroller}\n                style={{\n                  width: model.width,\n                  height: model.height,\n                }}\n              >\n                <div\n                  className={classes.rotator}\n                  style={{\n                    transform: [`rotate(${model.offsetRadians}rad)`].join(' '),\n                    transition: 'transform 0.5s',\n                    transformOrigin: model.centerXY\n                      .map(x => `${x}px`)\n                      .join(' '),\n                  }}\n                >\n                  <svg\n                    style={{\n                      position: 'absolute',\n                      left: 0,\n                      top: 0,\n                    }}\n                    className={classes.sliceRoot}\n                    width={`${model.figureWidth}px`}\n                    height={`${model.figureHeight}px`}\n                    version=\"1.1\"\n                  >\n                    <g transform={`translate(${model.centerXY})`}>\n                      <Slices model={model} />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n            )}\n            <Controls model={model} showingFigure={showFigure} />\n            {model.hideVerticalResizeHandle ? null : (\n              <ResizeHandle\n                onDrag={model.resizeHeight}\n                style={{\n                  height: dragHandleHeight,\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  background: '#ccc',\n                  boxSizing: 'border-box',\n                  borderTop: '1px solid #fafafa',\n                }}\n              />\n            )}\n          </>\n        </>\n      )}\n    </div>\n  )\n})\n\nexport default CircularView\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ChordDisplayLoadingFactory from './Loading'\nimport ChordDisplayErrorFactory from './DisplayError'\nimport RpcRenderedSvgGroupF from './RpcRenderedSvgGroup'\n\nexport default ({ lib, load }: PluginManager) => {\n  const React = lib.react\n  const { observer, PropTypes: MobxPropTypes } = lib['mobx-react']\n\n  const Loading = load(ChordDisplayLoadingFactory)\n  const DisplayError = load(ChordDisplayErrorFactory)\n  const RpcRenderedSvgGroup = load(RpcRenderedSvgGroupF)\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function BaseChordDisplay({ display }: any) {\n    if (display.error) {\n      return <DisplayError model={display} />\n    }\n    if (!display.filled) {\n      return <Loading model={display} />\n    }\n    return <RpcRenderedSvgGroup model={display} />\n  }\n  BaseChordDisplay.propTypes = {\n    display: MobxPropTypes.observableObject.isRequired,\n  }\n  return observer(BaseChordDisplay)\n}\n"],"names":["findCircleIntersectionX","y","cx","cy","r","resultArray","d","Math","abs","push","solution","sqrt","findCircleIntersectionY","x","cartesianToPolar","rho","theta","atan","PI","cartesianToTheta","twoPi","Slice","view","region","currentRadianOffset","radianWidth","bpPerRadian","key","assembleLocString","offsetRadians","flipped","startRadians","this","endRadians","widthBp","Object","freeze","bp","radiusPx","polarToCartesian","elided","end","start","objectFromEntries","entries","sliceIsVisible","self","slice","r1start","r1length","r2start","r2length","visibleSection","visibleThetaMin","CircularView","pluginManager","types","compose","BaseViewModel","model","type","literal","bpPerPx","tracks","array","pluggableMstType","hideVerticalResizeHandle","hideTrackSelectorButton","lockedFitToWindow","disableImportForm","height","optional","refinement","number","n","minimumRadiusPx","spacingPx","paddingPx","lockedPaddingPx","minVisibleWidth","minimumBlockWidth","displayedRegions","Region","scrollX","scrollY","trackSelectorType","width","views","slices","elidedRegions","pxPerRadian","calculateStaticSlices","staticSlices","filter","bind","viewSides","circleCenter","circleRadius","viewL","viewR","viewT","viewB","vertices","maxRho","Infinity","i","length","min","reflect","rhoMin","rhoMax","thetaMin","thetaMax","vx","vy","viewportVisibleSection","centerXY","elidedBp","circumferencePx","total","minCircumferencePx","totalBp","maxCircumferencePx","maximumRadiusPx","clamp","maxBpPerPx","minBpPerPx","figureDimensions","visible","forEach","lastVisible","regions","v","assemblyNames","displayedRegion","includes","assemblyName","error","undefined","actions","setWidth","newWidth","max","setHeight","newHeight","resizeHeight","distance","oldHeight","setModelViewWhenAdjust","tooSmallToLock","resizeWidth","oldWidth","rotateClockwiseButton","rotateClockwise","rotateCounterClockwiseButton","rotateCounterClockwise","zoomInButton","setBpPerPx","zoomOutButton","newVal","secondCondition","closeView","getParent","removeView","setDisplayedRegions","previouslyEmpty","cast","activateTrackSelector","session","getSession","isSessionModelWithWidgets","selector","addWidget","showWidget","Error","toggleTrack","trackId","hideTrack","showTrack","setError","console","initialSnapshot","trackConfigSchema","pluggableConfigSchemaType","configuration","resolveIdentifier","getRoot","trackType","getTrackType","viewType","getViewType","supportedDisplays","displayTypes","map","displayType","name","displayConf","displays","find","track","stateModel","create","addTrackConf","readConfObject","shownTracks","t","transaction","remove","toggleFitToWindowLock","atMinBpPerPx","lib","React","react","useState","useEffect","observer","useStyles","makeStyles","theme","path","strokeDasharray","strokeDashoffset","animation","duration","stroke","palette","primary","light","secondary","tertiary","quaternary","offset","transform","radius","renderProps","classes","shown","setShown","timeout","setTimeout","clearTimeout","id","patternTransform","patternUnits","x1","y1","x2","y2","style","strokeWidth","fill","dominantBaseline","textAnchor","className","strokeLinecap","jbrequire","errorMessage","errorBackground","errorText","errorPattern","String","isAlive","useRef","MobxPropTypes","PropTypes","unmountComponentAtNode","hydrate","rIC","RpcRenderedSvgGroup","data","html","filled","renderingComponent","ssrContainerNode","domNode","current","innerHTML","display","mainThreadRendering","createElement","ref","propTypes","observableObject","isRequired","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","generator","Generator","context","Context","_invoke","state","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","getRpcSessionId","getContainingView","props","signal","rendererType","rpcManager","renderArgs","cannotBeRenderedReason","message","isCompatibleWithRenderer","renderInClient","ReactComponent","renderReactionData","_view$displayedRegion","adapterConfig","JSON","parse","stringify","blockDefinitions","sessionId","renderReactionEffect","BaseChordDisplayModel","BaseDisplay","bezierRadiusRatio","maybe","string","reactElement","refNameMap","getEnv","onChordClick","feature","getConf","origSlices","renamed","_self$refNameMap","refName","getParentRenderProps","rpcDriverName","displayModel","bezierRadius","ThisRendererType","getRendererType","rendererTypeName","renderer","CircularChordRendererType","selection","isFeature","renderStarted","renderSuccess","renderError","setRefNameMap","renderReactionFactory","afterAttach","makeAbortableReaction","fireImmediately","getTrackAssemblyNames","parentTrack","adapter","assemblyManager","getRefNameMapForAdapter","baseChordDisplayConfig","ConfigurationSchema","description","defaultValue","contextVariable","explicitIdentifier","CircularViewPlugin","Plugin","addViewType","ViewType","lazy","stateModelFactory","isAbstractMenuManager","rootModel","appendToSubMenu","label","icon","DataUsageIcon","onClick","addView","rulerLabel","fontSize","fontWeight","lineHeight","letterSpacing","sliceArcPath","startBase","endBase","startXY","bpToXY","endXY","largeArc","join","ElisionRulerArc","useTheme","widthPx","centerRadians","regionCountString","Number","toLocaleString","RulerLabel","text","maxWidthPx","radians","title","color","textXY","radToDeg","overallRotation","RegionRulerArc","assembly","get","getRefNameColor","makeContrasting","background","paper","CircularRuler","root","position","marginBottom","spacing","overflow","scroller","sliceRoot","boxSizing","iconButton","padding","margin","controls","whiteSpace","grey","borderRight","borderBottom","left","top","importFormContainer","Slices","Ruler","RenderingComponent","Controls","showingFigure","IconButton","disabled","atMaxBpPerPx","ZoomOut","ZoomIn","RotateLeft","RotateRight","LockOutline","LockOpen","TrackSelectorIcon","ImportForm","selectedAssemblyIdx","setSelectedAssemblyIdx","assemblyError","Container","Grid","container","justify","alignItems","item","TextField","select","onChange","event","target","helperText","idx","MenuItem","Button","variant","initialized","figureWidth","figureHeight","showImportForm","showFigure","rotator","transition","transformOrigin","version","ResizeHandle","onDrag","bottom","borderTop","load","Loading","ChordDisplayLoadingFactory","DisplayError","ChordDisplayErrorFactory","RpcRenderedSvgGroupF","BaseChordDisplay"],"mappings":"mkLAAA,SAASA,EACPC,EACAC,EACAC,EACAC,EACAC,OAEMC,EAAIC,KAAKC,IAAIP,EAAIE,QACnBG,EAAIF,IAGJE,IAAMF,GACRC,EAAYI,KAAK,CAACP,EAAID,QAElBS,EAAWH,KAAKI,KAAKP,EAAIA,EAAIE,EAAIA,GACvCD,EAAYI,KAAK,CAACP,EAAKQ,EAAUT,IACjCI,EAAYI,KAAK,CAACP,EAAKQ,EAAUT,KAGnC,SAASW,EACPC,EACAX,EACAC,EACAC,EACAC,OAEMC,EAAIC,KAAKC,IAAIK,EAAIX,QACnBI,EAAIF,IAGJE,IAAMF,GACRC,EAAYI,KAAK,CAACI,EAAGV,QAEjBO,EAAWH,KAAKI,KAAKP,EAAIA,EAAIE,EAAIA,GACvCD,EAAYI,KAAK,CAACI,EAAGV,EAAKO,IAC1BL,EAAYI,KAAK,CAACI,EAAGV,EAAKO,cAeZI,EAAiBD,EAAWZ,OACpCc,EAAMR,KAAKI,KAAKE,EAAIA,EAAIZ,EAAIA,UACtB,IAARc,EACK,CAAC,EAAG,GAGN,CAACA,EAlBV,SAA0BF,EAAWZ,OAC/Be,GAAST,KAAKU,KAAKhB,EAAIY,GAAK,EAAIN,KAAKW,KAAO,EAAIX,KAAKW,WACrDL,EAAI,IACFZ,GAAK,EACPe,GAAST,KAAKW,GAEdF,GAAST,KAAKW,IAGXF,EAQOG,CAAiBN,EAAGZ,IAIpC,IAAMmB,EAAQ,EAAIb,KAAKW,GCnDVG,wBAkBTC,EACAC,EACAC,EACAC,iBAEQC,EAAgBJ,EAAhBI,iBACHC,IAAMC,oBAAkBL,QACxBA,OAASA,OACTM,cAAgBL,OAChBE,YAAcA,OACdD,YAAcA,OACdK,SAAU,OAEVC,aAAeC,KAAKH,mBACpBI,WAAaV,EAAOW,QAAUF,KAAKN,YAAcM,KAAKH,cAC3DM,OAAOC,OAAOJ,sCAGhB,SAAOK,EAAYC,UAUVC,mBAAiBD,GARpBN,KAAKT,OAAOiB,OACHR,KAAKT,OAAOW,QAAU,EACxBF,KAAKF,QACHE,KAAKT,OAAOkB,IAAMJ,EAElBA,EAAKL,KAAKT,OAAOmB,OAEEV,KAAKN,YAAcM,KAAKH,qCAI1D,kBACSc,oBAAkBR,OAAOS,QAAQZ,gBAkB5C,SAASa,EAAeC,EAAWC,ODfjCC,EACAC,EACAC,EACAC,MCgBIL,EAAKM,eADPpC,SAAQqC,cDlBVL,ECsBED,EAAMlB,cAAgBiB,EAAKjB,cDpB7BqB,ECsBEG,EDrBFF,OCsBoBE,KDxBpBJ,ECsBEF,EAAMtB,cDlBQ,GAAK0B,GAAY,KAG7BF,EAAW,MAAU7B,GAAS+B,EAAW,MAAU/B,IAKvD4B,GAAaA,EAAU5B,EAASA,GAASA,EAASA,IAClD8B,GAAaA,EAAU9B,EAASA,GAASA,EAASA,GAE1B+B,GAAYH,EAAUC,EAAWC,GAMrDF,GADJE,GAAW9B,GACa+B,GAAYH,EAAUC,EAAWC,GAMlDF,GADPE,GAAW9B,EAAQA,GACQ+B,GAAYH,EAAUC,EAAWC,YEjEtCI,EAAaC,UAI5BC,QAAMC,QACXC,gBACAF,QACGG,MAAM,eAAgB,CACrBC,KAAMJ,QAAMK,QAAQ,gBACpBhC,eAAgBtB,KAAKW,GAAK,EAC1B4C,QAAS,IACTC,OAAQP,QAAMQ,MACZT,EAAcU,iBAAiB,QAAS,eAG1CC,0BAA0B,EAC1BC,yBAAyB,EACzBC,mBAAmB,EACnBC,mBAAmB,EAEnBC,OAAQd,QAAMe,SACZf,QAAMgB,WAAW,cAAehB,QAAMiB,QAAQ,SAAAC,UAAKA,GApBzC,MAEI,KAqBhBC,gBAAiB,GACjBC,UAAW,GACXC,UAAW,GACXC,gBAAiB,IACjBC,gBAAiB,EACjBC,kBAAmB,GACnBC,iBAAkBzB,QAAMQ,MAAMkB,UAC9BC,QAAS,EACTC,QAAS,EACTC,kBAAmB,2BAEX,iBAAO,CACfC,MAAO,QAERC,OAAM,SAAAzC,SAAS,2BDCtB,SAA+BA,SACvB0C,EAAS,GACXhE,EAAsB,MACLsB,EAAK2C,8CAAe,KAA9BlE,UACHE,EACJF,EAAOW,QAAUY,EAAKpB,YAAcoB,EAAK8B,UAAY9B,EAAK4C,YAC5DF,EAAO/E,KAAK,IAAIY,EAAMyB,EAAMvB,EAAQC,EAAqBC,IACzDD,GAAuBC,wCAElB+D,ECRQG,CAAsB7C,qCAGtBd,KAAK4D,aAAaC,OAAOhD,EAAeiD,KAAK9D,KAAMc,0CF2BlEiD,EACAC,EACAC,WAEmCF,KAA9BG,OAAOC,OAAOC,OAAOC,WACTL,KAAV9F,OAAIC,UAIXgG,GAASjG,EACTkG,GAASjG,EACTkG,GAASlG,GAHT+F,GAAShG,GAMC,GAAKiG,EAAQ,GAAKC,EAAQ,GAAKC,EAAQ,EAErB,SACpBC,EAAW,CACf,CAACJ,EAAOE,GACR,CAACD,EAAOC,GACR,CAACF,EAAOG,GACR,CAACF,EAAOE,IAENE,GAAUC,SACLC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,GAAK,EAAG,SAC5BH,EAASG,MAAjB5F,OAAGZ,OACJc,EAAMR,KAAKI,KAAKE,EAAIA,EAAIZ,EAAIA,GAC9Bc,EAAMwF,IACRA,EAASxF,SAGN,CACLA,IAAK,CAAC,EAAGR,KAAKoG,IAAIV,EAAcM,IAChCvF,MAAO,CAAC,EAAG,EAAIT,KAAKW,SAsElBoF,EAA+B,CACnC,CAACJ,EAAOE,GACR,CAACD,EAAOC,GACR,CAACF,EAAOG,GACR,CAACF,EAAOE,IAEVzF,EAAwBsF,EAAO,EAAG,EAAGD,EAAcK,GACnD1F,EAAwBuF,EAAO,EAAG,EAAGF,EAAcK,GACnDtG,EAAwBoG,EAAO,EAAG,EAAGH,EAAcK,GACnDtG,EAAwBqG,EAAO,EAAG,EAAGJ,EAAcK,IAG9CJ,EAAQD,GACXK,EAAS7F,KAAK,CAACyF,EAAO,IAEpBC,EAAQF,GACVK,EAAS7F,KAAK,CAAC0F,EAAO,KAEnBC,EAAQH,GACXK,EAAS7F,KAAK,CAAC,EAAG2F,IAEhBC,EAAQJ,GACVK,EAAS7F,KAAK,CAAC,EAAG4F,YAQdO,EAAUV,GAAS,GAAK,EAAI,EAI9BW,EAASL,SACTM,GAAUN,SACVO,EAAWP,SACXQ,GAAYR,SACPC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,GAAK,EAAG,SAE1BH,EAASG,MAAnBQ,OAAIC,UACPD,GAAMf,GAASe,GAAMd,GAASe,GAAMd,GAASc,GAAMb,EAAO,SACvCvF,EAAiBmG,EAAKL,EAASM,EAAKN,MAAlD7F,OAAKC,OAERD,GAAOkF,EAAe,OAEpBjF,EAAQ+F,GAAYhG,EAAM,OAC5BgG,EAAW/F,GAETA,EAAQgG,GAAYjG,EAAM,OAC5BiG,EAAWhG,GAETD,EAAM8F,IACRA,EAAS9F,GAEPA,EAAM+F,IACRA,EAAS/F,YAMA,IAAb6F,IACFG,GAAYxG,KAAKW,GACjB8F,GAAYzG,KAAKW,IAGf6F,EAAW,EAAIxG,KAAKW,IAAM8F,EAAW,EAAIzG,KAAKW,KAChD6F,GAAY,EAAIxG,KAAKW,GACrB8F,GAAY,EAAIzG,KAAKW,IAGhB,CACLH,IAAK,CAAC8F,EAAQtG,KAAKoG,IAAIV,EAAca,IACrC9F,MAAO,CAAC+F,EAAUC,IEzMLG,CACL,CACErE,EAAKqC,QACLrC,EAAKqC,QAAUrC,EAAKwC,MACpBxC,EAAKsC,QACLtC,EAAKsC,QAAUtC,EAAKwB,QAEtBtC,KAAKoF,SACLpF,KAAKM,uCAIH+E,EAAW,MACCrF,KAAKyD,8CACnB4B,WAAcnF,6CAGdmF,EAAWvE,EAAKgB,QAAUhB,EAAK8B,UAAY5C,KAAKyD,cAAciB,8BAIzD1E,KAAKsF,iBAAmB,EAAI/G,KAAKW,8BAGjC4B,EAAKgB,QAAU9B,KAAKM,mCAGpBN,KAAKM,+BAGL,CACLN,KAAKM,SAAWQ,EAAK+B,UACrB7C,KAAKM,SAAWQ,EAAK+B,gCAInB0C,EAAQ,MACSzE,EAAKmC,iDAAkB,KAAjC1D,UACTgG,GAAShG,EAAOkB,IAAMlB,EAAOmB,4CAExB6E,gCAGAzE,EAAKsB,kBACR7D,KAAKoG,IAAI7D,EAAKwC,MAAOxC,EAAKwB,QAAU,EAAIxB,EAAKgC,gBAC7C,0BAGE0C,EAAqB,EAAIjH,KAAKW,GAAK4B,EAAK6B,uBACvC3C,KAAKyF,QAAUD,wBAIhBE,EAAqB,EAAInH,KAAKW,GAAKc,KAAK2F,uBACvCC,QACL5F,KAAKyF,QAAUC,EACf,MACA1F,KAAK6F,uCAIA/E,EAAKgB,SAAW9B,KAAK6F,sCAGrB/E,EAAKgB,SAAW9B,KAAK8F,wCAGrB9F,KAAK8F,YAAc,oCAGnB,CACW,EAAhB9F,KAAKM,SAAe,EAAIQ,EAAK+B,UACb,EAAhB7C,KAAKM,SAAe,EAAIQ,EAAK+B,qCAIxB7C,KAAK+F,iBAAiB,8BAGtB/F,KAAK+F,iBAAiB,4BAMvBC,EAAiB,GACvBlF,EAAKmC,iBAAiBgD,SAAQ,SAAA1G,OACtBW,EAAUX,EAAOkB,IAAMlB,EAAOmB,SACpBR,EAAUY,EAAKgB,QACjBhB,EAAKiC,gBAAiB,KAE5BmD,EAAcF,EAAQA,EAAQtB,OAAS,GACzCwB,GAAeA,EAAY1F,QAC7B0F,EAAYC,QAAQ1H,UAAUc,IAC9B2G,EAAYhG,SAAWA,GAEvB8F,EAAQvH,KAAK,CACX+B,QAAQ,EACRN,QAAAA,EACAiG,QAAS,MAAM5G,WAKnByG,EAAQvH,YAAUc,OAAQW,QAAAA,YAKzB,IAAIuE,EAAI,EAAGA,EAAIuB,EAAQtB,OAAQD,GAAK,EAAG,KACpC2B,EAAIJ,EAAQvB,GACd2B,EAAE5F,QAA+B,IAArB4F,EAAED,QAAQzB,gBACjB0B,EAAE5F,OACTwF,EAAQvB,UAAU2B,GAAMA,EAAED,QAAQ,YAG/BH,2BAIDK,EAA0B,UAChCvF,EAAKmC,iBAAiBgD,SAAQ,SAAAK,GACvBD,EAAcE,SAASD,EAAgBE,eAC1CH,EAAc5H,KAAK6H,EAAgBE,iBAGhCH,iBAGD,iBAAO,CACfI,WAAOC,MAERC,SAAQ,SAAA7F,SAAS,CAEhB8F,kBAASC,UACP/F,EAAKwC,MAAQ/E,KAAKuI,IAAID,EAnLb,KAoLF/F,EAAKwC,OAEdyD,mBAAUC,UACRlG,EAAKwB,OAAS/D,KAAKuI,IAAIE,EAxLb,IAyLHlG,EAAKwB,QAEd2E,sBAAaC,OACLC,EAAYrG,EAAKwB,OACjB0E,EAAYhH,KAAK+G,UAAUjG,EAAKwB,OAAS4E,eAC1CE,wBAAwBtG,EAAKuG,gBAC3BL,EAAYG,GAErBG,qBAAYJ,OACJK,EAAWzG,EAAKwC,MAChBuD,EAAW7G,KAAK4G,SAAS9F,EAAKwC,MAAQ4D,eACvCE,wBAAwBtG,EAAKuG,gBAC3BR,EAAWU,GAEpBC,sCACOC,gBAAgBlJ,KAAKW,GAAK,IAGjCwI,6CACOC,uBAAuBpJ,KAAKW,GAAK,IAGxCuI,+BAAgBP,yDAAW,IACzBpG,EAAKjB,eAAiBqH,GAGxBS,sCAAuBT,yDAAW,IAChCpG,EAAKjB,eAAiBqH,GAGxBU,6BACOC,WAAW/G,EAAKgB,QAAU,MAGjCgG,8BACOD,WAA0B,IAAf/G,EAAKgB,UAGvB+F,oBAAWE,GACTjH,EAAKgB,QAAU8D,QAAMmC,EAAQjH,EAAKgF,WAAYhF,EAAK+E,aAGrDuB,gCAAuBY,GACjBlH,EAAKsB,mBAAqB4F,QACvBH,WAAW/G,EAAKgF,aAIzBmC,qBACEC,YAAUpH,EAAM,GAAGqH,WAAWrH,IAGhCsH,6BAAoBjC,OACZkC,EAAmD,IAAjCvH,EAAKmC,iBAAiByB,OAC9C5D,EAAKmC,iBAAmBqF,OAAKnC,QAGtB0B,WADHQ,EACcvH,EAAKgF,WAELhF,EAAKgB,UAIzByG,oCACiC,iBAA3BzH,EAAKuC,kBAAsC,KACvCmF,EAAUC,aAAW3H,MACvB4H,4BAA0BF,GAAU,KAChCG,EAAWH,EAAQI,UACvB,kCACA,4BACA,CAAEtJ,KAAMwB,WAEV0H,EAAQK,WAAWF,GACZA,SAGL,IAAIG,4CACuBhI,EAAKuC,qBAIxC0F,qBAAYC,GAEUhJ,KAAKiJ,UAAUD,SAG5BE,UAAUF,IAInBG,kBAAS1C,GACP2C,QAAQ3C,MAAMA,GACd3F,EAAK2F,MAAQA,GAGfyC,mBAAUF,OAAiBK,yDAAkB,GACrCC,EAAoB/H,EAAcgI,0BACtC,SAEIC,EAAgBC,oBACpBH,EACAI,UAAQ5I,GACRkI,GAEIW,EAAYpI,EAAcqI,aAAaJ,EAAc5H,UACtD+H,QACG,IAAIb,mCAA4BU,EAAc5H,WAEhDiI,EAAWtI,EAAcuI,YAAYhJ,EAAKc,MAC1CmI,EAAoBF,EAASG,aAAaC,KAC9C,SAAAC,UAAeA,EAAYC,QAEvBC,EAAcZ,EAAca,SAASC,MACzC,SAAChM,UAA6ByL,EAAkBxD,SAASjI,EAAEsD,SAEvD2I,EAAQZ,EAAUa,WAAWC,cAC9BpB,OACHzH,KAAM4H,EAAc5H,KACpB4H,cAAAA,EACAa,SAAU,CAAC,CAAEzI,KAAMwI,EAAYxI,KAAM4H,cAAeY,OAEtDtJ,EAAKiB,OAAOtD,KAAK8L,IAGnBG,sBACElB,OACAH,yDAAkB,GAEVzH,EAAS4H,EAAT5H,KACFuI,EAAOQ,iBAAenB,EAAe,QACrCG,EAAYpI,EAAcqI,aAAahI,OACxC+H,QACG,IAAIb,mCAA4BU,EAAc5H,WAEhDiI,EAAWtI,EAAcuI,YAAYhJ,EAAKc,MAC1CmI,EAAoBF,EAASG,aAAaC,KAC9C,SAAAC,UAAeA,EAAYC,QAEvBC,EAAcZ,EAAca,SAASC,MACzC,SAAChM,UAA6ByL,EAAkBxD,SAASjI,EAAEsD,SAEvD2I,EAAQZ,EAAUa,WAAWC,cAC9BpB,OACHc,KAAAA,EACAvI,KAAAA,EACA4H,cAAAA,EACAa,SAAU,CAAC,CAAEzI,KAAMwI,EAAYxI,KAAM4H,cAAeY,OAEtDtJ,EAAKiB,OAAOtD,KAAK8L,IAGnBtB,mBAAUD,OACFM,EAAoB/H,EAAcgI,0BACtC,SAEIC,EAAgBC,oBACpBH,EACAI,UAAQ5I,GACRkI,GAGI4B,EAAc9J,EAAKiB,OAAO8B,QAC9B,SAAAgH,UAAKA,EAAErB,gBAAkBA,YAE3BsB,eAAY,kBAAMF,EAAY3E,SAAQ,SAAA4E,UAAK/J,EAAKiB,OAAOgJ,OAAOF,SACvDD,EAAYlG,QAGrBsG,wCACElK,EAAKsB,mBAAqBtB,EAAKsB,uBAE1BgF,uBAAuBtG,EAAKmK,cAC1BnK,EAAKsB,wBC5XtB,eAAgBb,OACN2J,EAAQ3J,EAAR2J,IACFC,EAAQD,EAAIE,MACVC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,UAEVC,EAAaL,EAAI,cAAjBK,SAEFC,GAAYC,EAHKP,EAAI,4BAAnBO,aAGqB,SAAAC,SAGpB,CACLC,KAAM,CACJC,gBAAiB,IACjBC,iBAAkB,GAClBC,0BALa,+CAMXC,mDAGiB,MACb,CACJC,OAAQN,EAAMO,QAAQC,QAAQC,aAEzB,CACLH,OAAQN,EAAMO,QAAQG,UAAUD,aAE3B,CACLH,OAAQN,EAAMO,QAAQI,SAASF,aAE1B,CACLH,OAAQN,EAAMO,QAAQK,WAAWH,cAE3B,CACNH,OAAQN,EAAMO,QAAQC,QAAQC,0BAGf,MACX,CACJN,iBA7BS,SA+BJ,CACLA,iBAAkBU,GAClBC,UAAW,yBAEL,CACNX,iBApCS,EAqCTW,UAAW,8BAOHjB,GACd,gBAEmBkB,IADjB9K,MACE+K,YAAeD,OAKXE,EAAUnB,QAGUH,GAAS,MAA5BuB,OAAOC,cACdvB,GAAU,eACFwB,EAAUC,YAAW,kBAAMF,GAAS,KAAO,YAC1C,kBAAMG,aAAaF,OAGpBF,EACNzB,yBACEA,4BACEA,2BACE8B,GAAG,gBACH3J,MAAM,KACNhB,OAAO,KACP4K,iBAAiB,iBACjBC,aAAa,kBAEbhC,wBACEiC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,MAAO,CAAExB,OAAQ,wBAAyByB,YAAa,QAI7DtC,0BAAQjN,GAAG,IAAIC,GAAG,IAAIC,EAAGqO,EAAQiB,KAAK,YACtCvC,0BAAQjN,GAAG,IAAIC,GAAG,IAAIC,EAAGqO,EAAQiB,KAAK,wBACtCvC,wBACEtM,EAAE,IACFZ,EAAE,IACFuO,UAAU,iBACVmB,iBAAiB,SACjBC,WAAW,sBAIbzC,0BACE0C,UAAWlB,EAAQhB,KACnB+B,KAAK,OACLD,YAAY,IACZK,cAAc,QACd5P,GAAG,IACHC,GAAG,IACHC,EAAE,QArCQ,4BCvEJ2P,IAAAA,UACV5C,EAAQ4C,EAAU,SAChBtC,EAAesC,EAAU,4BAAzBtC,WACAF,EAAawC,EAAU,cAAvBxC,SAEFC,EAAYC,EAAW,CAC3BuC,aAAc,GACdC,gBAAiB,GACjBC,UAAW,YAIQ3C,GACnB,oBACE5J,MACiB8K,IAAfC,YAAeD,OACfhG,IAAAA,MAGIkG,EAAUnB,WAEdL,qBAAG0C,UAAWlB,EAAQqB,cACpB7C,4BACEA,2BACE8B,GAAG,gBACH3J,MAAM,KACNhB,OAAO,KACP4K,iBAAiB,iBACjBC,aAAa,kBAEbhC,wBACEiC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,MAAO,CAAExB,OAAQ,oBAAqByB,YAAa,QAIzDtC,0BACE0C,UAAWlB,EAAQsB,gBACnB/P,GAAG,IACHC,GAAG,IACHC,EAAGqO,EACHiB,KAAK,YAEPvC,0BACE0C,UAAWlB,EAAQwB,aACnBjQ,GAAG,IACHC,GAAG,IACHC,EAAGqO,EACHiB,KAAK,wBAEPvC,wBACE0C,UAAWlB,EAAQuB,UACnBrP,EAAE,IACFZ,EAAE,IACFuO,UAAU,iBACVmB,iBAAiB,SACjBC,WAAW,UAEVQ,OAAO3H,4BC7DFsH,IAAAA,UACV5C,EAAQ4C,EAAU,SAChBM,EAAYN,EAAU,mBAAtBM,QACA/C,EAAsBH,EAAtBG,UAAWgD,EAAWnD,EAAXmD,SAC4BP,EAAU,cAAjDxC,IAAAA,SAAqBgD,IAAXC,YAC0BT,EAAU,aAA9CU,IAAAA,uBAAwBC,IAAAA,QACxBC,EAAQZ,EAAU,sBAAlBY,aAECC,SAAsBjN,IAAAA,MACrBkN,EAAwDlN,EAAxDkN,KAAMC,EAAkDnN,EAAlDmN,KAAMC,EAA4CpN,EAA5CoN,OAAQrC,EAAoC/K,EAApC+K,YAAasC,EAAuBrN,EAAvBqN,mBAEnCC,EAAmBX,EAAO,aAEhChD,GAAU,eACF4D,EAAUD,EAAiBE,eAE3BD,GAAWH,IACTG,GAAWA,EAAQE,YACrBF,EAAQ1B,MAAM6B,QAAU,OACxBZ,EAAuBS,IAEzBA,EAAQ1B,MAAM6B,QAAU,SACxBH,EAAQE,UAAYN,EAIpBH,GAAI,cACGN,EAAQ1M,QAGP2N,EAAsBnE,EAAMoE,cAChCP,SACKH,GAASnC,GACd,MAEFiC,GAAI,WACGN,EAAQ1M,IAGb+M,EAAQY,EAAqBJ,WAM9B,WACDA,GACFT,EAAuBS,OAKtB/D,qBAAGqE,IAAKP,WAGjBL,EAAoBa,UAAY,CAC9B9N,MAAO4M,EAAcmB,iBAAiBC,YAGjCpE,EAASqD,6FCpDdgB,EAAW,SAAUC,OAGnBC,EAAK3P,OAAO4P,UACZC,EAASF,EAAGG,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,yBAEtCC,EAAOC,EAAKhR,EAAKiR,UACxBzQ,OAAO0Q,eAAeF,EAAKhR,EAAK,CAC9BiR,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELL,EAAIhR,OAIX+Q,EAAO,GAAI,IACX,MAAOO,GACPP,EAAS,SAASC,EAAKhR,EAAKiR,UACnBD,EAAIhR,GAAOiR,YAIbM,EAAKC,EAASC,EAAStQ,EAAMuQ,OAGhCC,EAAYnR,OAAOsK,QADF2G,GAAWA,EAAQrB,qBAAqBwB,EAAYH,EAAUG,GACtCxB,WACzCyB,EAAU,IAAIC,EAAQJ,GAAe,WAIzCC,EAAUI,iBAsMcP,EAASrQ,EAAM0Q,OACnCG,EA/KuB,wBAiLpB,SAAgBC,EAAQC,MA/KT,cAgLhBF,QACI,IAAI7I,MAAM,mCAhLE,cAmLhB6I,EAA6B,IAChB,UAAXC,QACIC,QAyQL,CAAEjB,WAzfPlK,EAyfyBoL,MAAM,OAjQ/BN,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,KACPE,EAAWP,EAAQO,YACnBA,EAAU,KACRC,EAAiBC,EAAoBF,EAAUP,MAC/CQ,EAAgB,IACdA,IAAmBE,EAAkB,gBAClCF,MAIY,SAAnBR,EAAQI,OAGVJ,EAAQW,KAAOX,EAAQY,MAAQZ,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,IAlNhB,mBAmNjBD,QACFA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQa,kBAAkBb,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQc,OAAO,SAAUd,EAAQK,KAGnCF,EA5NkB,gBA8NdY,EAASC,EAASrB,EAASrQ,EAAM0Q,MACjB,WAAhBe,EAAO3Q,KAAmB,IAG5B+P,EAAQH,EAAQM,KAjOA,YAFK,iBAuOjBS,EAAOV,MAAQK,iBAIZ,CACLtB,MAAO2B,EAAOV,IACdC,KAAMN,EAAQM,MAGS,UAAhBS,EAAO3Q,OAChB+P,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMU,EAAOV,OA9QPY,CAAiBtB,EAASrQ,EAAM0Q,GAE7CF,WAcAkB,EAASE,EAAI/B,EAAKkB,aAEhB,CAAEjQ,KAAM,SAAUiQ,IAAKa,EAAGC,KAAKhC,EAAKkB,IAC3C,MAAOZ,SACA,CAAErP,KAAM,QAASiQ,IAAKZ,IAhBjCpB,EAAQqB,KAAOA,MA2BXgB,EAAmB,YAMdX,cACAqB,cACAC,SAILC,EAAoB,GACxBA,EAAkB1C,GAAkB,kBAC3BpQ,UAGL+S,EAAW5S,OAAO6S,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BnD,GAC5BE,EAAO2C,KAAKM,EAAyB7C,KAGvC0C,EAAoBG,OAGlBE,EAAKN,EAA2B9C,UAClCwB,EAAUxB,UAAY5P,OAAOsK,OAAOqI,YAW7BM,EAAsBrD,IAC5B,OAAQ,QAAS,UAAU9J,SAAQ,SAAS2L,GAC3ClB,EAAOX,EAAW6B,GAAQ,SAASC,UAC1B7R,KAAK0R,QAAQE,EAAQC,kBAkCzBwB,EAAc/B,EAAWgC,OAgC5BC,OAgCC7B,iBA9BYE,EAAQC,YACd2B,WACA,IAAIF,GAAY,SAASG,EAASC,aAnCpCC,EAAO/B,EAAQC,EAAK4B,EAASC,OAChCnB,EAASC,EAASlB,EAAUM,GAASN,EAAWO,MAChC,UAAhBU,EAAO3Q,KAEJ,KACDgS,EAASrB,EAAOV,IAChBjB,EAAQgD,EAAOhD,aACfA,GACiB,iBAAVA,GACPZ,EAAO2C,KAAK/B,EAAO,WACd0C,EAAYG,QAAQ7C,EAAMiD,SAASC,MAAK,SAASlD,GACtD+C,EAAO,OAAQ/C,EAAO6C,EAASC,MAC9B,SAASzC,GACV0C,EAAO,QAAS1C,EAAKwC,EAASC,MAI3BJ,EAAYG,QAAQ7C,GAAOkD,MAAK,SAASC,GAI9CH,EAAOhD,MAAQmD,EACfN,EAAQG,MACP,SAASnN,UAGHkN,EAAO,QAASlN,EAAOgN,EAASC,MAvBzCA,EAAOnB,EAAOV,KAiCZ8B,CAAO/B,EAAQC,EAAK4B,EAASC,aAI1BH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,cAkHDvB,EAAoBF,EAAUP,OACjCI,EAASG,EAAS1B,SAASmB,EAAQI,gBAzTrClL,IA0TEkL,EAAsB,IAGxBJ,EAAQO,SAAW,KAEI,UAAnBP,EAAQI,OAAoB,IAE1BG,EAAS1B,SAAT,SAGFmB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZnL,EAsUIuL,EAAoBF,EAAUP,GAEP,UAAnBA,EAAQI,eAGHM,EAIXV,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAImC,UAChB,yDAGG9B,MAGLK,EAASC,EAASZ,EAAQG,EAAS1B,SAAUmB,EAAQK,QAErC,UAAhBU,EAAO3Q,YACT4P,EAAQI,OAAS,QACjBJ,EAAQK,IAAMU,EAAOV,IACrBL,EAAQO,SAAW,KACZG,MAGL+B,EAAO1B,EAAOV,WAEZoC,EAOFA,EAAKnC,MAGPN,EAAQO,EAASmC,YAAcD,EAAKrD,MAGpCY,EAAQ2C,KAAOpC,EAASqC,QAQD,WAAnB5C,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVnL,GAmYF8K,EAAQO,SAAW,KACZG,GANE+B,GA3BPzC,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAImC,UAAU,oCAC5BxC,EAAQO,SAAW,KACZG,YAoDFmC,EAAaC,OAChBC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,SAGnBM,WAAWnW,KAAK8V,YAGdM,EAAcN,OACjBhC,EAASgC,EAAMO,YAAc,GACjCvC,EAAO3Q,KAAO,gBACP2Q,EAAOV,IACd0C,EAAMO,WAAavC,WAGZd,EAAQJ,QAIVuD,WAAa,CAAC,CAAEJ,OAAQ,SAC7BnD,EAAYpL,QAAQoO,EAAcrU,WAC7B+U,OAAM,YA8BJ7B,EAAO8B,MACVA,EAAU,KACRC,EAAiBD,EAAS5E,MAC1B6E,SACKA,EAAetC,KAAKqC,MAGA,mBAAlBA,EAASb,YACXa,MAGJE,MAAMF,EAAStQ,QAAS,KACvBD,GAAK,EAAG0P,EAAO,SAASA,WACjB1P,EAAIuQ,EAAStQ,WAChBsL,EAAO2C,KAAKqC,EAAUvQ,UACxB0P,EAAKvD,MAAQoE,EAASvQ,GACtB0P,EAAKrC,MAAO,EACLqC,SAIXA,EAAKvD,WAzeTlK,EA0eIyN,EAAKrC,MAAO,EAELqC,UAGFA,EAAKA,KAAOA,SAKhB,CAAEA,KAAMgB,YAIRA,UACA,CAAEvE,WAzfPlK,EAyfyBoL,MAAM,UA7ZnCc,EAAkB7C,UAAYoD,EAAGiC,YAAcvC,EAC/CA,EAA2BuC,YAAcxC,EACzCA,EAAkByC,YAAc3E,EAC9BmC,EACArC,EACA,qBAaFX,EAAQyF,oBAAsB,SAASC,OACjCC,EAAyB,mBAAXD,GAAyBA,EAAOH,oBAC3CI,IACHA,IAAS5C,GAG2B,uBAAnC4C,EAAKH,aAAeG,EAAKrL,QAIhC0F,EAAQ4F,KAAO,SAASF,UAClBpV,OAAOuV,eACTvV,OAAOuV,eAAeH,EAAQ1C,IAE9B0C,EAAOI,UAAY9C,EACnBnC,EAAO6E,EAAQ/E,EAAmB,sBAEpC+E,EAAOxF,UAAY5P,OAAOsK,OAAO0I,GAC1BoC,GAOT1F,EAAQ+F,MAAQ,SAAS/D,SAChB,CAAEgC,QAAShC,IAsEpBuB,EAAsBC,EAActD,WACpCsD,EAActD,UAAUO,GAAuB,kBACtCtQ,MAET6P,EAAQwD,cAAgBA,EAKxBxD,EAAQgG,MAAQ,SAAS1E,EAASC,EAAStQ,EAAMuQ,EAAaiC,QACxC,IAAhBA,IAAwBA,EAAcwC,aAEtCC,EAAO,IAAI1C,EACbnC,EAAKC,EAASC,EAAStQ,EAAMuQ,GAC7BiC,UAGKzD,EAAQyF,oBAAoBlE,GAC/B2E,EACAA,EAAK5B,OAAOL,MAAK,SAASF,UACjBA,EAAO9B,KAAO8B,EAAOhD,MAAQmF,EAAK5B,WAuKjDf,EAAsBD,GAEtBzC,EAAOyC,EAAI3C,EAAmB,aAO9B2C,EAAG/C,GAAkB,kBACZpQ,MAGTmT,EAAG6C,SAAW,iBACL,sBAkCTnG,EAAQoG,KAAO,SAASC,OAClBD,EAAO,OACN,IAAItW,KAAOuW,EACdD,EAAKxX,KAAKkB,UAEZsW,EAAKE,UAIE,SAAShC,SACP8B,EAAKvR,QAAQ,KACd/E,EAAMsW,EAAKG,SACXzW,KAAOuW,SACT/B,EAAKvD,MAAQjR,EACbwU,EAAKrC,MAAO,EACLqC,SAOXA,EAAKrC,MAAO,EACLqC,IAsCXtE,EAAQqD,OAASA,EAMjBzB,EAAQ1B,UAAY,CAClBqF,YAAa3D,EAEbsD,MAAO,SAASsB,WACTC,KAAO,OACPnC,KAAO,OAGPhC,KAAOnS,KAAKoS,WApgBjB1L,OAqgBKoL,MAAO,OACPC,SAAW,UAEXH,OAAS,YACTC,SAzgBLnL,OA2gBKkO,WAAW3O,QAAQ4O,IAEnBwB,MACE,IAAIlM,KAAQnK,KAEQ,MAAnBmK,EAAKoM,OAAO,IACZvG,EAAO2C,KAAK3S,KAAMmK,KACjB+K,OAAO/K,EAAKpJ,MAAM,WAChBoJ,QAnhBXzD,IAyhBF8P,KAAM,gBACC1E,MAAO,MAGR2E,EADYzW,KAAK4U,WAAW,GACLE,cACH,UAApB2B,EAAW7U,WACP6U,EAAW5E,WAGZ7R,KAAK0W,MAGdrE,kBAAmB,SAASsE,MACtB3W,KAAK8R,WACD6E,MAGJnF,EAAUxR,cACL4W,EAAOC,EAAKC,UACnBvE,EAAO3Q,KAAO,QACd2Q,EAAOV,IAAM8E,EACbnF,EAAQ2C,KAAO0C,EAEXC,IAGFtF,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZnL,KAujBYoQ,MAGP,IAAIrS,EAAIzE,KAAK4U,WAAWlQ,OAAS,EAAGD,GAAK,IAAKA,EAAG,KAChD8P,EAAQvU,KAAK4U,WAAWnQ,GACxB8N,EAASgC,EAAMO,cAEE,SAAjBP,EAAMC,cAIDoC,EAAO,UAGZrC,EAAMC,QAAUxU,KAAKsW,KAAM,KACzBS,EAAW/G,EAAO2C,KAAK4B,EAAO,YAC9ByC,EAAahH,EAAO2C,KAAK4B,EAAO,iBAEhCwC,GAAYC,EAAY,IACtBhX,KAAKsW,KAAO/B,EAAME,gBACbmC,EAAOrC,EAAME,UAAU,GACzB,GAAIzU,KAAKsW,KAAO/B,EAAMG,kBACpBkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,MACL/W,KAAKsW,KAAO/B,EAAME,gBACbmC,EAAOrC,EAAME,UAAU,OAG3B,CAAA,IAAIuC,QAMH,IAAIlO,MAAM,6CALZ9I,KAAKsW,KAAO/B,EAAMG,kBACbkC,EAAOrC,EAAMG,gBAU9BpC,OAAQ,SAAS1Q,EAAMiQ,OAChB,IAAIpN,EAAIzE,KAAK4U,WAAWlQ,OAAS,EAAGD,GAAK,IAAKA,EAAG,KAChD8P,EAAQvU,KAAK4U,WAAWnQ,MACxB8P,EAAMC,QAAUxU,KAAKsW,MACrBtG,EAAO2C,KAAK4B,EAAO,eACnBvU,KAAKsW,KAAO/B,EAAMG,WAAY,KAC5BuC,EAAe1C,SAKnB0C,IACU,UAATrV,GACS,aAATA,IACDqV,EAAazC,QAAU3C,GACvBA,GAAOoF,EAAavC,aAGtBuC,EAAe,UAGb1E,EAAS0E,EAAeA,EAAanC,WAAa,UACtDvC,EAAO3Q,KAAOA,EACd2Q,EAAOV,IAAMA,EAEToF,QACGrF,OAAS,YACTuC,KAAO8C,EAAavC,WAClBxC,GAGFlS,KAAKkX,SAAS3E,IAGvB2E,SAAU,SAAS3E,EAAQoC,MACL,UAAhBpC,EAAO3Q,WACH2Q,EAAOV,UAGK,UAAhBU,EAAO3Q,MACS,aAAhB2Q,EAAO3Q,UACJuS,KAAO5B,EAAOV,IACM,WAAhBU,EAAO3Q,WACX8U,KAAO1W,KAAK6R,IAAMU,EAAOV,SACzBD,OAAS,cACTuC,KAAO,OACa,WAAhB5B,EAAO3Q,MAAqB+S,SAChCR,KAAOQ,GAGPzC,GAGTiF,OAAQ,SAASzC,OACV,IAAIjQ,EAAIzE,KAAK4U,WAAWlQ,OAAS,EAAGD,GAAK,IAAKA,EAAG,KAChD8P,EAAQvU,KAAK4U,WAAWnQ,MACxB8P,EAAMG,aAAeA,cAClBwC,SAAS3C,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPrC,UAKJ,SAASsC,OACX,IAAI/P,EAAIzE,KAAK4U,WAAWlQ,OAAS,EAAGD,GAAK,IAAKA,EAAG,KAChD8P,EAAQvU,KAAK4U,WAAWnQ,MACxB8P,EAAMC,SAAWA,EAAQ,KACvBjC,EAASgC,EAAMO,cACC,UAAhBvC,EAAO3Q,KAAkB,KACvBwV,EAAS7E,EAAOV,IACpBgD,EAAcN,UAET6C,SAML,IAAItO,MAAM,0BAGlBuO,cAAe,SAASrC,EAAUd,EAAYE,eACvCrC,SAAW,CACd1B,SAAU6C,EAAO8B,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhBpU,KAAK4R,cAGFC,SA7rBPnL,GAgsBOwL,IAQJrC,EA7sBM,CAotBgByH,EAAOzH,aAIpC0H,mBAAqB3H,EACrB,MAAO4H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7H,0BC1uBxB7B,IAAAA,UACR2J,EAAoB3J,EAAU,6BAA9B2J,gBACAC,EAAsB5J,EAAU,sBAAhC4J,kBACAlP,EAAesF,EAAU,sBAAzBtF,4CA0BR,WAAoCmP,EAAOC,EAAQ/W,0FAC5C8W,wBACG,IAAI9O,MAAM,yCAIhBgP,EAKEF,EALFE,aACAC,EAIEH,EAJFG,WAEAC,EAEEJ,EAFFI,WACAtL,EACEkL,EADFlL,cAFAuL,EAGEL,EAHFK,iEAMO,CAAEC,QAASD,cAKjBL,EAAMlL,YAAYD,QAClBmL,EAAMI,WAAW7R,SACjByR,EAAMI,WAAW7R,QAAQzB,gDAEnB,CAAEwT,QAAS,8BAIfpX,EAAKqX,yBAAyBL,yBAC3B,IAAIhP,yBACIgP,EAAa3N,2EAIG2N,EAAaM,eAAeL,WACvDC,GACAtL,OACHmL,OAAAA,oBAHM/I,aAAAA,KAASD,kCAMV,CAAEC,KAAAA,EAAMD,KAAAA,EAAMG,mBAAoB8I,EAAaO,0FAGjD,CAAEC,4BAlEmBxX,SACpBuO,EAAUvO,EACVxB,EAAOqY,EAAkBtI,GACvByI,EAA8BzI,EAA9ByI,aAAcpL,EAAgB2C,EAAhB3C,kBAGZ,CACRoL,aAAAA,EACAC,WAJqBtP,EAAWnJ,GAA1ByY,WAKNrL,YAAAA,EACAsL,WAAY,CAEVxR,uBAAclH,EAAK2D,iBAAiB,uBAAtBsV,EAA0B/R,aACxCgS,cAAeC,KAAKC,MAAMD,KAAKE,UAAUtJ,EAAQmJ,gBACjDV,aAAcA,EAAa3N,KAC3BhE,QAASsS,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAK2D,mBACxC2V,iBAAkBtZ,EAAKsZ,iBACvBC,UAAWnB,EAAgBrI,GAC3BvC,QAAS,OAgDcgM,uECjDlBC,GAAwBvX,QAClCC,QACC,mBACAuX,cACAxX,QAAMG,MAAM,CACVsX,kBAAmB,GACnBzS,aAAchF,QAAM0X,MAAM1X,QAAM2X,qBAG1B,iBACD,CAGLpK,QAAQ,EACRqK,kBAAc1S,EACdmI,UAAMnI,EACNwR,QAAS,GACTzR,WAAOC,EACPsI,wBAAoBtI,EACpB2S,gBAAY3S,MAGfC,SAAQ,SAAA7F,OACCS,EAAkB+X,SAAOxY,GAAzBS,cACFgJ,EAAQzJ,QACP,CACLyY,sBAAaC,GACXC,UAAQ3Y,EAAM,eAAgB,CAAE0Y,QAAAA,EAASjP,MAAAA,EAAOhJ,cAAAA,SAIrDgC,OAAM,SAAAzC,SAAS,4BAEN4Y,EAAc/B,oBAAkB7W,GACnC8C,iBACE9C,EAAKuY,kBACDK,MAGHlW,EAASiV,KAAKC,MAAMD,KAAKE,UAAUe,WAGzClW,EAAOyC,SAAQ,SAAClF,IACEA,EAAMxB,OAAOiB,OACzBO,EAAMxB,OAAO4G,QACb,CAACpF,EAAMxB,SACH0G,SAAQ,SAAC1G,SACToa,YAAU7Y,EAAKuY,+BAALO,EAAkBra,EAAOsa,SACrCF,GAAWpa,EAAOsa,UAAYF,IAChCpa,EAAOsa,QAAUF,SAIhBnW,yBAIDlE,EAAOqY,oBAAkB7W,iBAE1BgZ,uBAAqBhZ,QACxBiZ,cAAejZ,EAAKiZ,cACpBC,aAAclZ,EACdmZ,aAAc3a,EAAKgB,SAAWQ,EAAKmY,kBACnCxM,OAAQnN,EAAKgB,SACbsY,iBAAkB5Y,KAAK4Y,iBACvBW,aAAczY,EAAKyY,uCASflK,EAAUvO,EAEVoZ,EADoBZ,SAAOxY,GAAzBS,cAC+B4Y,gBACrCrZ,EAAKsZ,sBAEFF,QACG,IAAIpR,0BAAmBuG,EAAQ+K,qCAElCF,EAAiB7B,qBACd,IAAIvP,yBACIuG,EAAQ+K,6FAGjBF,GAGT/B,kCAAyBkC,YACbA,aAAoBC,+BAQzBjM,UAAQvN,QAGP0H,EAAUC,aAAW3H,MACtB0H,OAGG+R,EAAc/R,EAAd+R,iBAEJC,YAAUD,GACLA,EAAUtN,mBAKtBtG,SAAQ,SAAA7F,SAAS,CAChB2Z,yBACE3Z,EAAKiO,QAAS,EACdjO,EAAKoX,QAAU,GACfpX,EAAKsY,kBAAe1S,EACpB5F,EAAK+N,UAAOnI,EACZ5F,EAAK2F,WAAQC,EACb5F,EAAKkO,wBAAqBtI,GAE5BgU,8BACExC,IAAAA,QACArJ,IAAAA,KACAuK,IAAAA,aACApK,IAAAA,mBAQIkJ,GACFpX,EAAKiO,QAAS,EACdjO,EAAKoX,QAAUA,EACfpX,EAAKsY,kBAAe1S,EACpB5F,EAAK+N,UAAOnI,EACZ5F,EAAK2F,WAAQC,EACb5F,EAAKkO,wBAAqBtI,IAE1B5F,EAAKiO,QAAS,EACdjO,EAAKoX,QAAU,GACfpX,EAAKsY,aAAeA,EACpBtY,EAAK+N,KAAOA,EACZ/N,EAAK2F,WAAQC,EACb5F,EAAKkO,mBAAqBA,IAG9B2L,qBAAYlU,GACV2C,QAAQ3C,MAAMA,GAEd3F,EAAKiO,QAAS,EACdjO,EAAKoX,QAAU,GACfpX,EAAKsY,kBAAe1S,EACpB5F,EAAK+N,UAAOnI,EACZ5F,EAAK2F,MAAQA,EACb3F,EAAKkO,wBAAqBtI,GAG5BkU,uBAAcvB,GACZvY,EAAKuY,WAAaA,GAEpBlQ,kBAAS1C,GACP3F,EAAK2F,MAAQA,OAGhBE,SAAQ,SAAA7F,SACmBwY,SAAOxY,GAAzBS,cAIUwM,UAAU8M,IAF1BvC,IAAAA,mBACAQ,IAAAA,2BAEK,CACLgC,uBACEC,wBACEja,EACAwX,EACAQ,EACA,CACE3O,eAASrJ,EAAKc,iBAAQd,EAAKmM,iBAE3B+N,iBAAiB,GAEnBla,EAAK2Z,cACL3Z,EAAK4Z,cACL5Z,EAAK6Z,aAEPI,wBACEja,GACA,iBAAO,CACLuF,cAAe4U,wBAAsBna,EAAKoa,aAC1CC,QAAS1B,UAAQvR,YAAUpH,EAAM,GAAI,WACrCsa,gBAAiB3S,aAAW3H,GAAMsa,+CAGpC,aAAyDvD,8FAAxBuD,gBACRC,0BADDF,UAAf9U,cAGS,GACd,CAAEwR,OAAAA,EAAQgB,UAAWnB,kBAAgB5W,yGAGzC,CACEqJ,eAASrJ,EAAKc,iBAAQd,EAAKmM,wBAC3B+N,iBAAiB,IAEnB,eACA,SAAA3B,GACEvY,EAAK8Z,cAAcvB,MAErB,SAAA5S,GACE2C,QAAQ3C,MAAMA,GACd3F,EAAKqI,SAAS1C,WC3OpB6U,GAAyBC,sBAC7B,mBACA,CACEhC,aAAc,CACZ3X,KAAM,UACN4Z,YACE,mEACFC,cAAc,EACdC,gBAAiB,CAAC,UAAW,QAAS,mBAG1C,CAAEC,mBAAoB,cCLHC,qPAA2BC,mFACvC,wDAEP,SAAQta,GACNA,EAAcua,aACZ,kBACE,IAAIC,EAAS,CACX1D,eAAgB2D,QACd,kBAAMlG,mDAERtL,WAAYyR,EAAkB1a,GAC9B4I,KAAM,6CAKd,SAAU5I,GACJ2a,wBAAsB3a,EAAc4a,YACtC5a,EAAc4a,UAAUC,gBAAgB,CAAC,OAAQ,OAAQ,CACvDC,MAAO,gBACPC,KAAMC,EACNC,QAAS,SAAChU,GACRA,EAAQiU,QAAQ,eAAgB,gBCnBpCjR,GAAYC,aAAW,CAC3BiR,WAAY,CACVC,SAAU,SACVC,WAAY,IACZC,WAAY,IACZC,cAAe,cAInB,SAASC,GAAahc,EAAOT,EAAU0c,EAAWC,MAE5Clc,EAAMjB,QAAS,OACO,CAACmd,EAASD,GAAhCA,OAAWC,WAETC,EAAUnc,EAAMoc,OAAOH,EAAW1c,GAClC8c,EAAQrc,EAAMoc,OAAOF,EAAS3c,GAC9B+c,EACJ9e,KAAKC,IAAIye,EAAUD,GAAajc,EAAMrB,YAAcnB,KAAKW,GAAK,IAAM,UAE/D,CACL,cACGge,IACH,IACA5c,EACAA,EACA,IACA+c,EARgB,OAUbD,IACHE,KAAK,KAGT,IAAMC,GAAkBhS,YAAS,gBAAG5J,IAAAA,MAAOZ,IAAAA,MACnC2K,EAAQ8R,aAERld,EAD8BqB,EAA5BrB,SACyB,EACzBL,EAAqCc,EAArCd,WAAYF,EAAyBgB,EAAzBhB,aAAcR,EAAWwB,EAAXxB,OAC5B2d,EAAU3c,mBAAiBD,EAAUP,GACrCqd,EAAQ7c,mBAAiBD,EAAUL,GACnCwd,GAAWxd,EAAaF,GAAgBO,EACxC+c,EAAWpd,EAAaF,EAAexB,KAAKW,GAAK,IAAM,IAEvDwe,GAAiBzd,EAAaF,GAAgB,EAC9C4d,aAAwBC,OAC5Bre,EAAO4G,QAAQzB,QACfmZ,6BAEA1S,gCACEA,gBAAC2S,IACCC,KAAMJ,EACNre,KAAMqC,EACNqc,WAAYP,EACZQ,QAASP,EACTpd,SAAUA,EACV4d,gBAAUN,OAAOre,EAAO4G,QAAQzB,QAAQmZ,kCACxCM,MAAOzS,EAAMO,QAAQ8R,KAAK7R,UAE5Bf,wBACE7M,EAAG,CACD,cACG4e,IACH,IACA5c,EACAA,EACA,IACA+c,EACA,OACGD,IACHE,KAAK,KACPtR,OAAQN,EAAMO,QAAQ8R,KAAK3R,UAC3BqB,YAAa,EACb7B,gBAAgB,MAChB8B,KAAK,aAMPoQ,GAAavS,YACjB,gBAAGjM,IAAAA,KAAMye,IAAAA,KAAMC,IAAAA,WAAYC,IAAAA,QAAS3d,IAAAA,SAAU4d,IAAAA,MAAOC,IAAAA,MAC7CxR,EAAUnB,KACV4S,EAAS7d,mBAAiBD,EAAW,EAAG2d,OACzCF,SACI,QAGS,IAAdA,EAAKrZ,OAAesZ,SAGpB7S,wBACEtM,EAAG,EACHZ,EAAG,EACH4P,UAAWlB,EAAQ+P,WACnB9O,WAAW,SACXD,iBAAiB,WACjBnB,8BAAwB4R,sBAAkBC,WAASJ,GAAW,QAC9DzQ,MAAO,CAAEE,KAAMyQ,IAEdJ,EACD5S,6BAAQ+S,GAASH,OAInBC,EAAa,EAAG,KAEZM,EAAkBD,WACtBJ,EAAU3e,EAAKO,cAAgBtB,KAAKW,GAAK,UAIvCiM,uBAFAmT,GAAmB,KAGjBzf,EAAG,EACHZ,EAAG,EACH4P,UAAWlB,EAAQ+P,WACnB9O,WAAW,QACXD,iBAAiB,SACjBnB,8BAAwB4R,sBAAkBC,WAASJ,QACnDzQ,MAAO,CAAEE,KAAMyQ,KASjBtf,EAAG,EACHZ,EAAG,EACH4P,UAAWlB,EAAQ+P,WACnB9O,WAAW,MACXD,iBAAiB,SACjBnB,8BAAwB4R,sBAAkBC,WAASJ,GAAW,SAC9DzQ,MAAO,CAAEE,KAAMyQ,IAbZJ,EACD5S,6BAAQ+S,GAASH,WAqBlB,QAILQ,GAAiBhT,YAAS,gBAO1B4S,EAP6Bxc,IAAAA,MAAOZ,IAAAA,MAClC2K,EAAQ8R,aACNld,EAAaqB,EAAbrB,SACAf,EAAqCwB,EAArCxB,OAAQU,EAA6Bc,EAA7Bd,WAAYF,EAAiBgB,EAAjBhB,aACtB2d,GAAiBzd,EAAaF,GAAgB,EAC9C0d,GAAWxd,EAAaF,GAAgBO,EAGxCke,EAFU/V,aAAW9G,GAEFyZ,gBAAgBqD,IAAI1d,EAAMxB,OAAOiH,iBACtDgY,IACFL,EAAQK,EAASE,gBAAgBnf,EAAOsa,UAEtCsE,MAEAA,EAAQQ,kBAAgBR,EAAOzS,EAAMO,QAAQ2S,WAAWC,OACxD,MAAOpY,GACP0X,EAAQzS,EAAMO,QAAQ8R,KAAK7R,aAG7BiS,EAAQzS,EAAMO,QAAQ8R,KAAK7R,eAK3Bf,gCACEA,gBAAC2S,IACCC,KAAMxe,EAAOsa,QACbva,KAAMqC,EACNqc,WAAYP,EACZQ,QAASP,EACTpd,SAAUA,EACV6d,MAAOA,IAEThT,wBACE7M,EAAGye,GAAahc,EAAOT,EAAW,EAAGf,EAAOmB,MAAOnB,EAAOkB,KAC1DuL,OAAQmS,EACR1Q,YAAa,EACbC,KAAK,QAELvC,6BAAQ5L,EAAOsa,cAMjBiF,GAAgBvT,YAAS,gBAAiB5J,IAAAA,MAAOZ,IAAAA,aACjDA,EAAMxB,OAAOiB,OAEb2K,gBAACoS,IACC5d,IAAKC,oBAAkBmB,EAAMxB,OAAO4G,QAAQ,IAC5CxE,MAAOA,EACPZ,MAAOA,IAKXoK,gBAACoT,IACC5e,IAAKC,oBAAkBmB,EAAMxB,QAC7BoC,MAAOA,EACPZ,MAAOA,OCzLPyK,GAAYC,cAAW,SAAAC,SACpB,CACLqT,KAAM,CACJC,SAAU,WACVC,aAAcvT,EAAMwT,QAAQ,GAC5BC,SAAU,SACVP,WAAY,SAEdQ,SAAU,CACRD,SAAU,QAEZE,UAAW,CACTT,WAAY,OAEZU,UAAW,cACXjQ,QAAS,SAEXkQ,WAAY,CACVC,QAAS,MACTC,OAAQ,eAEVC,SAAU,CACRP,SAAU,SACVQ,WAAY,SACZX,SAAU,WACVJ,WAAYgB,OAAK,KACjBN,UAAW,aACXO,YAAa,oBACbC,aAAc,oBACdC,KAAM,EACNC,IAAK,GAEPC,oBAAqB,CACnBhB,aAAcvT,EAAMwT,QAAQ,QAK5BgB,GAAS3U,YAAS,gBAAG5J,IAAAA,aAEvBwJ,gCACEA,gCACGxJ,EAAMiC,aAAaqG,KAAI,SAAAlJ,UAEpBoK,gBAACgV,IACCxgB,IAAKC,oBACHmB,EAAMxB,OAAOiB,OAASO,EAAMxB,OAAO4G,QAAQ,GAAKpF,EAAMxB,QAExDoC,MAAOA,EACPZ,MAAOA,QAKfoK,gCACGxJ,EAAMI,OAAOkI,KAAI,SAAAM,OACV8E,EAAU9E,EAAMF,SAAS,UAE7Bc,gBAACkE,EAAQ+Q,oBACPzgB,IAAK0P,EAAQpC,GACboC,QAASA,EACT/P,KAAMqC,YASd0e,GAAW9U,YAAS,gBAAG5J,IAAAA,MAAO2e,IAAAA,cAC5B3T,EAAUnB,YAEdL,uBAAK0C,UAAWlB,EAAQ+S,UACtBvU,gBAACoV,cACC/D,QAAS7a,EAAMmG,cACf+F,UAAWlB,EAAQ4S,WACnBrB,MAAOvc,EAAMS,kBAAoB,qBAAuB,WACxDoe,UACGF,GAAiB3e,EAAM8e,cAAgB9e,EAAMS,kBAEhD+b,MAAM,aAENhT,gBAACuV,SAGHvV,gBAACoV,cACC/D,QAAS7a,EAAMiG,aACfiG,UAAWlB,EAAQ4S,WACnBrB,MAAM,UACNsC,UAAWF,GAAiB3e,EAAMsJ,aAClCkT,MAAM,aAENhT,gBAACwV,SAGHxV,gBAACoV,cACC/D,QAAS7a,EAAM+F,6BACfmG,UAAWlB,EAAQ4S,WACnBrB,MAAM,2BACNsC,UAAWF,EACXnC,MAAM,aAENhT,gBAACyV,SAGHzV,gBAACoV,cACC/D,QAAS7a,EAAM6F,sBACfqG,UAAWlB,EAAQ4S,WACnBrB,MAAM,mBACNsC,UAAWF,EACXnC,MAAM,aAENhT,gBAAC0V,SAGH1V,gBAACoV,cACC/D,QAAS7a,EAAMqJ,sBACf6C,UAAWlB,EAAQ4S,WACnBrB,MACEvc,EAAMS,kBACF,8BACA,iCAENoe,SAAU7e,EAAM0F,eAChB8W,MAAM,aAEqBhT,gBAA1BxJ,EAAMS,kBAAqB0e,EAAkBC,SAG/Cpf,EAAMQ,wBAA0B,KAC/BgJ,gBAACoV,cACC/D,QAAS7a,EAAM4G,sBACf2V,MAAM,oCACM,wBACZC,MAAM,aAENhT,gBAAC6V,2BAOLC,GAAa1V,YAAS,gBAAG5J,IAAAA,MACvBgL,EAAUnB,SACsCH,WAAS,MAAxD6V,OAAqBC,SACe1Y,aAAW9G,GAA9C0E,IAAAA,cACF+a,EAAgB/a,EAAc3B,OAAS,GAAK,2BAC5C8Z,IAFiBpD,gBAEUqD,IAAIpY,EAAc6a,IAC7C/a,GAAUqY,MAAAA,SAAAA,EAAUrY,UAAW,UAWnCgF,gCACEA,gBAACkW,aAAUxT,UAAWlB,EAAQsT,qBAC5B9U,gBAACmW,QAAKC,aAAUrC,QAAS,EAAGsC,QAAQ,SAASC,WAAW,UACtDtW,gBAACmW,QAAKI,SACJvW,gBAACwW,aACCC,UACAhR,MACEvK,EAAc6a,KAAyBE,EACnCF,EACA,GAENW,kBApBcC,GACxBX,EAAuBvD,OAAOkE,EAAMC,OAAOnR,SAoBjCoR,WAAYZ,GAAiB,0BAC7B3a,QAAS2a,EACTZ,WAAYY,EACZ3B,OAAO,UAENpZ,EAAc4D,KAAI,SAACE,EAAM8X,UACxB9W,gBAAC+W,YAASviB,IAAKwK,EAAMyG,MAAOqR,GACzB9X,QAKTgB,gBAACmW,QAAKI,SACJvW,gBAACgX,UACC3B,WAAYra,GAAWA,EAAQzB,QAC/B8X,mBA/BV7a,EAAMyG,oBAAoBjC,IAgChBic,QAAQ,YACRjE,MAAM,WAELhY,EAAQzB,OAAS,OAAS,8CASpB6G,YAAS,gBAAG5J,IAAAA,MACzBgL,EAAUnB,KACV6W,IACF1gB,EAAMsB,iBAAiByB,QAAU/C,EAAM2gB,aAAe3gB,EAAM4gB,aAE1DC,GAAkBH,IAAgB1gB,EAAMU,kBACxCogB,EAAaJ,IAAgBG,SAGjCrX,uBACE0C,UAAWlB,EAAQoS,KACnBvR,MAAO,CACLlK,MAAO3B,EAAM2B,MACbhB,OAAQX,EAAMW,sBAEHX,EAAMsL,IAElBtL,EAAM8E,MACL0E,qBAAGqC,MAAO,CAAE2Q,MAAO,QAAUxc,EAAM8E,MAAMyR,SAEzC/M,gCACGqX,EAAiBrX,gBAAC8V,IAAWtf,MAAOA,IAAY,KACjDwJ,gCACIsX,EACAtX,uBACE0C,UAAWlB,EAAQyS,SACnB5R,MAAO,CACLlK,MAAO3B,EAAM2B,MACbhB,OAAQX,EAAMW,SAGhB6I,uBACE0C,UAAWlB,EAAQ+V,QACnBlV,MAAO,CACLhB,UAAW,kBAAW7K,EAAM9B,uBAAqByd,KAAK,KACtDqF,WAAY,iBACZC,gBAAiBjhB,EAAMyD,SACpB6E,KAAI,SAAApL,mBAAQA,WACZye,KAAK,OAGVnS,uBACEqC,MAAO,CACLwR,SAAU,WACVe,KAAM,EACNC,IAAK,GAEPnS,UAAWlB,EAAQ0S,UACnB/b,gBAAU3B,EAAM2gB,kBAChBhgB,iBAAWX,EAAM4gB,mBACjBM,QAAQ,OAER1X,qBAAGqB,8BAAwB7K,EAAMyD,eAC/B+F,gBAAC+U,IAAOve,MAAOA,QA9BV,KAoCfwJ,gBAACkV,IAAS1e,MAAOA,EAAO2e,cAAemC,IACtC9gB,EAAMO,yBAA2B,KAChCiJ,gBAAC2X,gBACCC,OAAQphB,EAAMsF,aACduG,MAAO,CACLlL,OA3QO,EA4QP0c,SAAU,WACVgE,OAAQ,EACRjD,KAAM,EACNnB,WAAY,OACZU,UAAW,aACX2D,UAAW,uFCxSX/X,IAAAA,IAAKgY,IAAAA,KACf/X,EAAQD,EAAIE,QAC6BF,EAAI,cAA3CK,IAAAA,SAAqBgD,IAAXC,UAEZ2U,EAAUD,EAAKE,GACfC,EAAeH,EAAKI,IACpB1U,EAAsBsU,EAAKK,aAGxBC,SAAmBnU,IAAAA,eAEjBlE,gBADLkE,EAAQ5I,MACF4c,EAELhU,EAAQN,OAGLH,EAFEuU,GAHaxhB,MAAO0N,WAOhCmU,EAAiB/T,UAAY,CAC3BJ,QAASd,EAAcmB,iBAAiBC,YAEnCpE,EAASiY"}