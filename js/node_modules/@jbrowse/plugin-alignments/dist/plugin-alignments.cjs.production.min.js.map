{"version":3,"file":"plugin-alignments.cjs.production.min.js","sources":["../src/AlignmentsFeatureDetail/index.js","../src/BamAdapter/configSchema.ts","../src/BamAdapter/index.ts","../../../node_modules/regenerator-runtime/runtime.js","../src/BamAdapter/MismatchParser.ts","../src/CramAdapter/configSchema.ts","../src/CramAdapter/index.ts","../src/HtsgetBamAdapter/configSchema.ts","../src/HtsgetBamAdapter/index.ts","../src/LinearAlignmentsDisplay/models/model.tsx","../src/LinearAlignmentsDisplay/components/AlignmentsDisplay.tsx","../src/LinearPileupDisplay/components/LinearPileupDisplayBlurb.tsx","../src/shared.ts","../src/LinearPileupDisplay/model.ts","../src/LinearSNPCoverageDisplay/components/Tooltip.tsx","../src/LinearSNPCoverageDisplay/models/model.ts","../src/PileupRenderer/components/PileupRendering.tsx","../src/PileupRenderer/configSchema.ts","../src/util.ts","../src/PileupRenderer/PileupLayoutSession.ts","../src/PileupRenderer/PileupRenderer.tsx","../src/PileupRenderer/sortUtil.ts","../src/SNPCoverageAdapter/configSchema.ts","../src/SNPCoverageAdapter/SNPCoverageAdapter.ts","../src/SNPCoverageAdapter/index.ts","../src/SNPCoverageRenderer/configSchema.js","../src/SNPCoverageRenderer/SNPCoverageRenderer.ts","../src/SNPCoverageRenderer/index.js","../src/PileupRPC/rpcMethods.ts","../src/index.ts","../src/LinearPileupDisplay/configSchema.ts","../src/LinearSNPCoverageDisplay/models/configSchema.ts","../src/LinearAlignmentsDisplay/models/configSchema.ts","../src/BamAdapter/BamSlightlyLazyFeature.ts","../src/BamAdapter/BamAdapter.ts","../src/CramAdapter/CramSlightlyLazyFeature.ts","../src/CramAdapter/CramAdapter.ts","../src/HtsgetBamAdapter/HtsgetBamAdapter.ts","../src/LinearPileupDisplay/components/ColorByTag.tsx","../src/LinearPileupDisplay/components/FilterByTag.tsx","../src/LinearPileupDisplay/components/SortByTag.tsx","../src/LinearPileupDisplay/components/SetFeatureHeight.tsx","../src/LinearPileupDisplay/components/SetMaxHeight.tsx","../src/LinearPileupDisplay/components/ColorByModifications.tsx","../src/AlignmentsFeatureDetail/AlignmentsFeatureDetail.tsx"],"sourcesContent":["import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nconst configSchema = ConfigurationSchema('AlignmentsFeatureWidget', {})\n\nexport default function stateModelFactory(pluginManager) {\n  return types\n    .model('AlignmentsFeatureWidget', {\n      id: ElementId,\n      type: types.literal('AlignmentsFeatureWidget'),\n      featureData: types.frozen(),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      setFeatureData(data) {\n        self.featureData = data\n      },\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n    }))\n}\n\nexport { configSchema, stateModelFactory }\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default types.late(() =>\n  ConfigurationSchema(\n    'BamAdapter',\n    {\n      bamLocation: {\n        type: 'fileLocation',\n        defaultValue: { uri: '/path/to/my.bam' },\n      },\n      index: ConfigurationSchema('BamIndex', {\n        indexType: {\n          model: types.enumeration('IndexType', ['BAI', 'CSI']),\n          type: 'stringEnum',\n          defaultValue: 'BAI',\n        },\n        location: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.bam.bai' },\n        },\n      }),\n      chunkSizeLimit: {\n        type: 'number',\n        defaultValue: 100000000,\n      },\n      fetchSizeLimit: {\n        type: 'number',\n        defaultValue: 500000000,\n      },\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n    },\n    { explicitlyTyped: true },\n  ),\n)\n","import configSchema from './configSchema'\n\nexport default (/* pluginManager: PluginManager */) => {\n  return {\n    configSchema,\n    getAdapterClass: () => import('./BamAdapter').then(r => r.default),\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export interface Mismatch {\n  qual?: number\n  start: number\n  length: number\n  type: string\n  base: string\n  altbase?: string\n  seq?: string\n  cliplen?: number\n}\n\nexport function parseCigar(cigar: string) {\n  return (cigar || '').split(/([MIDNSHPX=])/)\n}\nexport function cigarToMismatches(\n  ops: string[],\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  let currOffset = 0\n  let seqOffset = 0\n  const mismatches: Mismatch[] = []\n  for (let i = 0; i < ops.length - 1; i += 2) {\n    const len = +ops[i]\n    const op = ops[i + 1]\n    if (op === 'M' || op === '=' || op === 'E') {\n      seqOffset += len\n    }\n    if (op === 'I') {\n      mismatches.push({\n        start: currOffset,\n        type: 'insertion',\n        base: `${len}`,\n        length: 0,\n      })\n      seqOffset += len\n    } else if (op === 'D') {\n      mismatches.push({\n        start: currOffset,\n        type: 'deletion',\n        base: '*',\n        length: len,\n      })\n    } else if (op === 'N') {\n      mismatches.push({\n        start: currOffset,\n        type: 'skip',\n        base: 'N',\n        length: len,\n      })\n    } else if (op === 'X') {\n      const r = seq.slice(seqOffset, seqOffset + len)\n      const q = qual?.slice(seqOffset, seqOffset + len) || []\n\n      for (let j = 0; j < len; j++) {\n        mismatches.push({\n          start: currOffset + j,\n          type: 'mismatch',\n          base: r[j],\n          qual: q[j],\n          length: 1,\n        })\n      }\n      seqOffset += len\n    } else if (op === 'H') {\n      mismatches.push({\n        start: currOffset,\n        type: 'hardclip',\n        base: `H${len}`,\n        cliplen: len,\n        length: 1,\n      })\n    } else if (op === 'S') {\n      mismatches.push({\n        start: currOffset,\n        type: 'softclip',\n        base: `S${len}`,\n        cliplen: len,\n        length: 1,\n      })\n      seqOffset += len\n    }\n\n    if (op !== 'I' && op !== 'S' && op !== 'H') {\n      currOffset += len\n    }\n  }\n  return mismatches\n}\n\n/**\n * parse a SAM MD tag to find mismatching bases of the template versus the reference\n * @returns array of mismatches and their positions\n */\nexport function mdToMismatches(\n  mdstring: string,\n  cigarOps: string[],\n  cigarMismatches: Mismatch[],\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  const mismatchRecords: Mismatch[] = []\n  let curr: Mismatch = { start: 0, base: '', length: 0, type: 'mismatch' }\n  const skips = cigarMismatches.filter(cigar => cigar.type === 'skip')\n  let lastCigar = 0\n  let lastTemplateOffset = 0\n  let lastRefOffset = 0\n  let lastSkipPos = 0\n\n  // convert a position on the reference sequence to a position\n  // on the template sequence, taking into account hard and soft\n  // clipping of reads\n\n  function nextRecord(): void {\n    mismatchRecords.push(curr)\n\n    // get a new mismatch record ready\n    curr = {\n      start: curr.start + curr.length,\n      length: 0,\n      base: '',\n      type: 'mismatch',\n    }\n  }\n\n  function getTemplateCoordLocal(refCoord: number): number {\n    let templateOffset = lastTemplateOffset\n    let refOffset = lastRefOffset\n    for (\n      let i = lastCigar;\n      i < cigarOps.length && refOffset <= refCoord;\n      i += 2, lastCigar = i\n    ) {\n      const len = +cigarOps[i]\n      const op = cigarOps[i + 1]\n      if (op === 'S' || op === 'I') {\n        templateOffset += len\n      } else if (op === 'D' || op === 'P' || op === 'N') {\n        refOffset += len\n      } else if (op !== 'H') {\n        templateOffset += len\n        refOffset += len\n      }\n    }\n    lastTemplateOffset = templateOffset\n    lastRefOffset = refOffset\n\n    return templateOffset - (refOffset - refCoord)\n  }\n\n  // now actually parse the MD string\n  const md = mdstring.match(/(\\d+|\\^[a-z]+|[a-z])/gi) || []\n  for (let i = 0; i < md.length; i++) {\n    const token = md[i]\n    if (token.match(/^\\d/)) {\n      curr.start += parseInt(token, 10)\n    } else if (token.match(/^\\^/)) {\n      curr.length = token.length - 1\n      curr.base = '*'\n      curr.type = 'deletion'\n      curr.seq = token.substring(1)\n      nextRecord()\n    } else if (token.match(/^[a-z]/i)) {\n      // mismatch\n      for (let j = 0; j < token.length; j += 1) {\n        curr.length = 1\n\n        while (lastSkipPos < skips.length) {\n          const mismatch = skips[lastSkipPos]\n          if (curr.start >= mismatch.start) {\n            curr.start += mismatch.length\n            lastSkipPos++\n          } else {\n            break\n          }\n        }\n        const s = cigarOps ? getTemplateCoordLocal(curr.start) : curr.start\n        curr.base = seq ? seq.substr(s, 1) : 'X'\n        const qualScore = qual?.slice(s, s + 1)[0]\n        if (qualScore) {\n          curr.qual = qualScore\n        }\n        curr.altbase = token\n        nextRecord()\n      }\n    }\n  }\n  return mismatchRecords\n}\n\nexport function getTemplateCoord(refCoord: number, cigarOps: string[]): number {\n  let templateOffset = 0\n  let refOffset = 0\n  for (let i = 0; i < cigarOps.length && refOffset <= refCoord; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'S' || op === 'I') {\n      templateOffset += len\n    } else if (op === 'D' || op === 'P') {\n      refOffset += len\n    } else if (op !== 'H') {\n      templateOffset += len\n      refOffset += len\n    }\n  }\n  return templateOffset - (refOffset - refCoord)\n}\n\nexport function getMismatches(\n  cigarString: string,\n  mdString: string,\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  let mismatches: Mismatch[] = []\n  let cigarOps: string[] = []\n\n  // parse the CIGAR tag if it has one\n  if (cigarString) {\n    cigarOps = parseCigar(cigarString)\n    mismatches = mismatches.concat(cigarToMismatches(cigarOps, seq, qual))\n  }\n\n  // now let's look for CRAM or MD mismatches\n  if (mdString) {\n    mismatches = mismatches.concat(\n      mdToMismatches(mdString, cigarOps, mismatches, seq, qual),\n    )\n  }\n\n  // uniqify the mismatches\n  const seen: { [index: string]: boolean } = {}\n  return mismatches.filter(m => {\n    const key = `${m.type},${m.start},${m.length}`\n    const s = seen[key]\n    seen[key] = true\n    return !s\n  })\n}\n\n// adapted from minimap2 code static void write_MD_core function\nexport function generateMD(target: string, query: string, cigar: string) {\n  let queryOffset = 0\n  let targetOffset = 0\n  let lengthMD = 0\n  if (!target) {\n    console.warn('no ref supplied to generateMD')\n    return ''\n  }\n  const cigarOps = parseCigar(cigar)\n  let str = ''\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'M' || op === 'X' || op === '=') {\n      for (let j = 0; j < len; j++) {\n        if (\n          query[queryOffset + j].toLowerCase() !==\n          target[targetOffset + j].toLowerCase()\n        ) {\n          str += `${lengthMD}${target[targetOffset + j].toUpperCase()}`\n          lengthMD = 0\n        } else {\n          lengthMD++\n        }\n      }\n      queryOffset += len\n      targetOffset += len\n    } else if (op === 'I') {\n      queryOffset += len\n    } else if (op === 'D') {\n      let tmp = ''\n      for (let j = 0; j < len; j++) {\n        tmp += target[targetOffset + j].toUpperCase()\n      }\n      str += `${lengthMD}^${tmp}`\n      lengthMD = 0\n      targetOffset += len\n    } else if (op === 'N') {\n      targetOffset += len\n    } else if (op === 'S') {\n      queryOffset += len\n    }\n  }\n  if (lengthMD > 0) {\n    str += lengthMD\n  }\n  return str\n}\n\n// get relative reference sequence positions for positions given relative to\n// the read sequence\nexport function* getNextRefPos(cigarOps: string[], positions: number[]) {\n  let cigarIdx = 0\n  let readPos = 0\n  let refPos = 0\n\n  for (let i = 0; i < positions.length; i++) {\n    const pos = positions[i]\n    for (; cigarIdx < cigarOps.length && readPos < pos; cigarIdx += 2) {\n      const len = +cigarOps[cigarIdx]\n      const op = cigarOps[cigarIdx + 1]\n      if (op === 'S' || op === 'I') {\n        readPos += len\n      } else if (op === 'D' || op === 'N') {\n        refPos += len\n      } else if (op === 'M' || op === 'X' || op === '=') {\n        readPos += len\n        refPos += len\n      }\n    }\n\n    yield positions[i] - readPos + refPos\n  }\n}\n\nexport function getModificationPositions(mm: string, seq: string) {\n  const mods = mm.split(';')\n  return mods\n    .filter(mod => !!mod)\n    .map(mod => {\n      const [basemod, ...rest] = mod.split(',')\n\n      // regexes based on parse_mm.pl from hts-specs\n      const matches = basemod.match(/([A-Z])([-+])([^,]+)/)\n      if (!matches) {\n        throw new Error('bad format for MM tag')\n      }\n      const [, base, strand, typestr] = matches\n\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      const types = typestr.split(/(\\d+|.)/).filter(f => !!f)\n\n      if (strand === '-') {\n        console.warn('unsupported negative strand modifications')\n        // make sure to return a somewhat matching type even in this case\n        return { type: 'unsupported', positions: [] }\n      }\n\n      // this logic also based on parse_mm.pl from hts-specs is that in the\n      // sequence of the read, if we have a modification type e.g. C+m;2 and a\n      // sequence ACGTACGTAC we skip the two instances of C and go to the last\n      // C\n      return types.map(type => {\n        let i = 0\n        return {\n          type,\n          positions: rest\n            .map(score => +score)\n            .map(delta => {\n              i++\n              do {\n                if (base === 'N' || base === seq[i]) {\n                  delta--\n                }\n                i++\n              } while (delta >= 0 && i < seq.length)\n              i--\n              return i\n            }),\n        }\n      })\n    })\n    .flat()\n}\n\nexport function getModificationTypes(mm: string) {\n  const mods = mm.split(';')\n  return mods\n    .filter(mod => !!mod)\n    .map(mod => {\n      const [basemod] = mod.split(',')\n\n      const matches = basemod.match(/([A-Z])([-+])([^,]+)/)\n      if (!matches) {\n        throw new Error('bad format for MM tag')\n      }\n      const [, , , typestr] = matches\n\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      return typestr.split(/(\\d+|.)/).filter(f => !!f)\n    })\n    .flat()\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default (pluginManager: PluginManager) => {\n  const { types } = pluginManager.lib['mobx-state-tree']\n  return types.late(() =>\n    ConfigurationSchema(\n      'CramAdapter',\n      {\n        cramLocation: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.cram' },\n        },\n        craiLocation: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.cram.crai' },\n        },\n        sequenceAdapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      },\n      { explicitlyTyped: true },\n    ),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  return {\n    configSchema: pluginManager.load(configSchemaF),\n    getAdapterClass: () => import('./CramAdapter').then(r => r.default),\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default types.late(() =>\n  ConfigurationSchema(\n    'HtsgetBamAdapter',\n    {\n      htsgetBase: {\n        type: 'string',\n        defaultValue: '',\n      },\n      htsgetTrackId: {\n        type: 'string',\n        defaultValue: '',\n      },\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n    },\n    { explicitlyTyped: true },\n  ),\n)\n","import configSchema from './configSchema'\n\nexport default (/* pluginManager: PluginManager */) => {\n  return {\n    configSchema,\n    getAdapterClass: () => import('./HtsgetBamAdapter').then(r => r.default),\n  }\n}\n","import React from 'react'\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport deepEqual from 'fast-deep-equal'\nimport { autorun, when } from 'mobx'\nimport { addDisposer, getSnapshot, Instance, types } from 'mobx-state-tree'\nimport { getContainingTrack } from '@jbrowse/core/util'\nimport { AlignmentsConfigModel } from './configSchema'\n\nconst minDisplayHeight = 20\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AlignmentsConfigModel,\n) => {\n  return types\n    .compose(\n      'LinearAlignmentsDisplay',\n      BaseDisplay,\n      types.model({\n        PileupDisplay: types.maybe(\n          pluginManager.getDisplayType('LinearPileupDisplay').stateModel,\n        ),\n        SNPCoverageDisplay: types.maybe(\n          pluginManager.getDisplayType('LinearSNPCoverageDisplay').stateModel,\n        ),\n        snpCovHeight: 45,\n        type: types.literal('LinearAlignmentsDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        height: 250,\n        showCoverage: true,\n        showPileup: true,\n      }),\n    )\n    .volatile(() => ({\n      scrollTop: 0,\n    }))\n    .actions(self => ({\n      toggleCoverage() {\n        self.showCoverage = !self.showCoverage\n      },\n      togglePileup() {\n        self.showPileup = !self.showPileup\n      },\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n      setSNPCoverageHeight(n: number) {\n        self.snpCovHeight = n\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get pileupDisplayConfig() {\n          const conf = getConf(self, 'pileupDisplay')\n          const track = getContainingTrack(self)\n          return {\n            ...conf,\n            type: 'LinearPileupDisplay',\n            name: `${getConf(track, 'name')} pileup`,\n            displayId: `${self.configuration.displayId}_pileup_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n          }\n        },\n\n        getFeatureByID(id: string) {\n          return self.PileupDisplay.getFeatureByID(id)\n        },\n\n        get features() {\n          return self.PileupDisplay.features\n        },\n\n        get DisplayBlurb() {\n          return self.PileupDisplay?.DisplayBlurb\n        },\n\n        get sortedBy() {\n          return self.PileupDisplay.sortedBy\n        },\n        get sortedByPosition() {\n          return self.PileupDisplay.sortedByPosition\n        },\n        get sortedByRefName() {\n          return self.PileupDisplay.sortedByRefName\n        },\n\n        get snpCoverageDisplayConfig() {\n          const conf = getConf(self, 'snpCoverageDisplay')\n          const track = getContainingTrack(self)\n          return {\n            ...conf,\n            type: 'LinearSNPCoverageDisplay',\n            name: `${getConf(track, 'name')} snp coverage`,\n            displayId: `${self.configuration.displayId}_snpcoverage_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n          }\n        },\n\n        get trackMenuItems(): MenuItem[] {\n          return [\n            ...trackMenuItems,\n            {\n              type: 'subMenu',\n              label: 'Pileup settings',\n              subMenu: self.PileupDisplay.composedTrackMenuItems,\n            },\n            {\n              type: 'subMenu',\n              label: 'SNPCoverage settings',\n              subMenu: [\n                ...self.SNPCoverageDisplay.composedTrackMenuItems,\n                ...self.SNPCoverageDisplay.extraTrackMenuItems,\n              ],\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      setSNPCoverageDisplay(displayConfig: AnyConfigurationModel) {\n        self.SNPCoverageDisplay = {\n          type: 'LinearSNPCoverageDisplay',\n          configuration: displayConfig,\n          height: self.snpCovHeight,\n        }\n      },\n      setUserBpPerPxLimit(limit: number) {\n        self.PileupDisplay.setUserBpPerPxLimit(limit)\n        self.SNPCoverageDisplay.setUserBpPerPxLimit(limit)\n      },\n      setPileupDisplay(displayConfig: AnyConfigurationModel) {\n        self.PileupDisplay = {\n          type: 'LinearPileupDisplay',\n          configuration: displayConfig,\n        }\n      },\n      setHeight(displayHeight: number) {\n        if (displayHeight > minDisplayHeight) {\n          self.height = displayHeight\n        } else {\n          self.height = minDisplayHeight\n        }\n        return self.height\n      },\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            if (!self.SNPCoverageDisplay) {\n              self.setSNPCoverageDisplay(self.snpCoverageDisplayConfig)\n            } else if (\n              !deepEqual(\n                self.snpCoverageDisplayConfig,\n                getSnapshot(self.SNPCoverageDisplay.configuration),\n              )\n            ) {\n              self.SNPCoverageDisplay.setHeight(self.snpCovHeight)\n              self.SNPCoverageDisplay.setConfig(self.snpCoverageDisplayConfig)\n            }\n\n            if (!self.PileupDisplay) {\n              self.setPileupDisplay(self.pileupDisplayConfig)\n            } else if (\n              !deepEqual(\n                self.pileupDisplayConfig,\n                getSnapshot(self.PileupDisplay.configuration),\n              )\n            ) {\n              self.PileupDisplay.setConfig(self.pileupDisplayConfig)\n            }\n\n            // propagate the filterBy setting from pileupdisplay to snpcoverage\n            // note: the snpcoverage display is not able to control filterBy\n            // itself\n            if (\n              self.PileupDisplay.filterBy &&\n              !deepEqual(\n                getSnapshot(self.PileupDisplay.filterBy),\n                getSnapshot(self.SNPCoverageDisplay.filterBy),\n              )\n            ) {\n              self.SNPCoverageDisplay.setFilterBy(\n                getSnapshot(self.PileupDisplay.filterBy),\n              )\n            }\n            if (\n              self.PileupDisplay.colorBy &&\n              !deepEqual(\n                getSnapshot(self.PileupDisplay.colorBy),\n                self.SNPCoverageDisplay.colorBy\n                  ? getSnapshot(self.SNPCoverageDisplay.colorBy)\n                  : {},\n              )\n            ) {\n              self.SNPCoverageDisplay.setColorBy(\n                getSnapshot(self.PileupDisplay.colorBy),\n              )\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(() => {\n            self.setSNPCoverageHeight(self.SNPCoverageDisplay.height)\n          }),\n        )\n      },\n      async renderSvg(opts: { rasterizeLayers?: boolean }) {\n        const pileupHeight = self.height - self.SNPCoverageDisplay.height\n        await when(() => self.PileupDisplay.ready)\n        return (\n          <>\n            <g>{await self.SNPCoverageDisplay.renderSvg(opts)}</g>\n            <g transform={`translate(0 ${self.SNPCoverageDisplay.height})`}>\n              {\n                await self.PileupDisplay.renderSvg({\n                  ...opts,\n                  overrideHeight: pileupHeight,\n                })\n              }\n            </g>\n          </>\n        )\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type AlignmentsDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type AlignmentsDisplayModel = Instance<AlignmentsDisplayStateModel>\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { AlignmentsDisplayModel } from '../models/model'\n\nfunction AlignmentsDisplay({ model }: { model: AlignmentsDisplayModel }) {\n  const { PileupDisplay, SNPCoverageDisplay, showPileup, showCoverage } = model\n  return (\n    <div\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      style={{ position: 'relative' }}\n    >\n      <div data-testid=\"Blockset-snpcoverage\">\n        {showCoverage ? (\n          <SNPCoverageDisplay.RenderingComponent model={SNPCoverageDisplay} />\n        ) : null}\n      </div>\n      <ResizeHandle\n        onDrag={delta => {\n          if (SNPCoverageDisplay) {\n            SNPCoverageDisplay.setHeight(SNPCoverageDisplay.height + delta)\n            return delta\n          }\n          return 0\n        }}\n        style={{\n          position: 'absolute',\n          top: showCoverage ? SNPCoverageDisplay.height + 2 : 0,\n          height: 3,\n        }}\n      />\n\n      <div\n        data-testid=\"Blockset-pileup\"\n        style={{\n          position: 'absolute',\n          top: showCoverage ? SNPCoverageDisplay.height + 5 : 0,\n          height: 3,\n        }}\n      >\n        {showPileup ? (\n          <PileupDisplay.RenderingComponent model={PileupDisplay} />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(AlignmentsDisplay)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Typography from '@material-ui/core/Typography'\n\nexport interface LinearPileupDisplayBlurbProps {\n  model: {\n    sortedBy?: {\n      pos: number\n      refName: number\n      type: string\n    }\n  }\n}\n\nfunction LinearPileupDisplayBlurb(props: LinearPileupDisplayBlurbProps) {\n  const { model } = props\n  const { sortedBy } = model\n  return sortedBy ? (\n    <div\n      data-testid={`blurb-${model.sortedBy}`}\n      style={{ backgroundColor: 'white' }}\n    >\n      <Typography color=\"secondary\" variant=\"caption\">\n        {model.sortedBy\n          ? `Sorted by ${sortedBy.type.toLowerCase()} at ${sortedBy.refName}:${\n              sortedBy.pos\n            }`\n          : null}\n      </Typography>\n    </div>\n  ) : null\n}\nexport default observer(LinearPileupDisplayBlurb)\n","import { BlockSet } from '@jbrowse/core/util/blockTypes'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\nexport async function getUniqueTagValues(\n  self: IAnyStateTreeNode & { adapterConfig: AnyConfigurationModel },\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    getRpcSessionId(self),\n    'PileupGetGlobalValueForTag',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n\nexport async function getUniqueModificationValues(\n  self: IAnyStateTreeNode,\n  adapterConfig: AnyConfigurationModel,\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    sessionId,\n    'PileupGetVisibleModifications',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n","import { lazy } from 'react'\nimport {\n  ConfigurationReference,\n  readConfObject,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  getContainingView,\n} from '@jbrowse/core/util'\n\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  LinearGenomeViewModel,\n  BaseLinearDisplay,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { cast, types, addDisposer, getEnv, Instance } from 'mobx-state-tree'\nimport copy from 'copy-to-clipboard'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport SortIcon from '@material-ui/icons/Sort'\nimport PaletteIcon from '@material-ui/icons/Palette'\nimport FilterListIcon from '@material-ui/icons/ClearAll'\n\nimport { autorun, observable } from 'mobx'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { LinearPileupDisplayConfigModel } from './configSchema'\nimport LinearPileupDisplayBlurb from './components/LinearPileupDisplayBlurb'\n\nimport { getUniqueTagValues, getUniqueModificationValues } from '../shared'\n\nconst ColorByTagDlg = lazy(() => import('./components/ColorByTag'))\nconst FilterByTagDlg = lazy(() => import('./components/FilterByTag'))\nconst SortByTagDlg = lazy(() => import('./components/SortByTag'))\nconst SetFeatureHeightDlg = lazy(() => import('./components/SetFeatureHeight'))\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\nconst ModificationsDlg = lazy(() => import('./components/ColorByModifications'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['pileup', 'PileupRenderer'],\n  ['svg', 'SvgFeatureRenderer'],\n])\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: LinearPileupDisplayConfigModel,\n) =>\n  types\n    .compose(\n      'LinearPileupDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearPileupDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        showSoftClipping: false,\n        featureHeight: types.maybe(types.number),\n        noSpacing: types.maybe(types.boolean),\n        fadeLikelihood: types.maybe(types.boolean),\n        trackMaxHeight: types.maybe(types.number),\n        mismatchAlpha: types.maybe(types.boolean),\n        sortedBy: types.maybe(\n          types.model({\n            type: types.string,\n            pos: types.number,\n            tag: types.maybe(types.string),\n            refName: types.string,\n            assemblyName: types.string,\n          }),\n        ),\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n            extra: types.frozen(),\n          }),\n        ),\n        filterBy: types.optional(\n          types.model({\n            flagInclude: types.optional(types.number, 0),\n            flagExclude: types.optional(types.number, 1536),\n            readName: types.maybe(types.string),\n            tagFilter: types.maybe(\n              types.model({ tag: types.string, value: types.string }),\n            ),\n          }),\n          {},\n        ),\n      }),\n    )\n    .volatile(() => ({\n      colorTagMap: observable.map<string, string>({}),\n      modificationTagMap: observable.map<string, string>({}),\n      ready: false,\n      currBpPerPx: 0,\n    }))\n    .actions(self => ({\n      setReady(flag: boolean) {\n        self.ready = flag\n      },\n      setCurrBpPerPx(n: number) {\n        self.currBpPerPx = n\n      },\n      setMaxHeight(n: number) {\n        self.trackMaxHeight = n\n      },\n      setFeatureHeight(n: number) {\n        self.featureHeight = n\n      },\n      setNoSpacing(flag: boolean) {\n        self.noSpacing = flag\n      },\n\n      setColorScheme(colorScheme: { type: string; tag?: string }) {\n        self.colorTagMap = observable.map({}) // clear existing mapping\n        self.colorBy = cast(colorScheme)\n        self.ready = false\n      },\n\n      updateModificationColorMap(uniqueModifications: string[]) {\n        const colorPalette = ['red', 'blue', 'green', 'orange', 'purple']\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            const totalKeys = [...self.modificationTagMap.keys()].length\n            const newColor = colorPalette[totalKeys]\n            self.modificationTagMap.set(value, newColor)\n          }\n        })\n      },\n\n      updateColorTagMap(uniqueTag: string[]) {\n        // pale color scheme https://cran.r-project.org/web/packages/khroma/vignettes/tol.html e.g. \"tol_light\"\n        const colorPalette = [\n          '#BBCCEE',\n          'pink',\n          '#CCDDAA',\n          '#EEEEBB',\n          '#FFCCCC',\n          'lightblue',\n          'lightgreen',\n          'tan',\n          '#CCEEFF',\n          'lightsalmon',\n        ]\n\n        uniqueTag.forEach(value => {\n          if (!self.colorTagMap.has(value)) {\n            const totalKeys = [...self.colorTagMap.keys()].length\n            const newColor = colorPalette[totalKeys]\n            self.colorTagMap.set(value, newColor)\n          }\n        })\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              try {\n                const { rpcManager } = getSession(self)\n                const { sortedBy, colorBy, renderProps } = self\n                const view = getContainingView(self) as LGV\n\n                // continually generate the vc pairing, set and rerender if any\n                // new values seen\n                if (colorBy?.tag) {\n                  const uniqueTagSet = await getUniqueTagValues(\n                    self,\n                    colorBy,\n                    view.staticBlocks,\n                  )\n                  self.updateColorTagMap(uniqueTagSet)\n                }\n\n                if (colorBy?.type === 'modifications') {\n                  const uniqueModificationsSet = await getUniqueModificationValues(\n                    self,\n                    getConf(self.parentTrack, ['adapter']),\n                    colorBy,\n                    view.staticBlocks,\n                  )\n                  self.updateModificationColorMap(uniqueModificationsSet)\n                }\n\n                if (sortedBy) {\n                  const { pos, refName, assemblyName } = sortedBy\n\n                  const region = {\n                    start: pos,\n                    end: (pos || 0) + 1,\n                    refName,\n                    assemblyName,\n                  }\n\n                  // render just the sorted region first\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  await (self.rendererType as any).renderInClient(rpcManager, {\n                    assemblyName,\n                    regions: [region],\n                    adapterConfig: self.adapterConfig,\n                    rendererType: self.rendererType.name,\n                    sessionId: getRpcSessionId(self),\n                    timeout: 1000000,\n                    ...renderProps,\n                  })\n                  self.setReady(true)\n                  self.setCurrBpPerPx(view.bpPerPx)\n                } else {\n                  self.setReady(true)\n                }\n              } catch (error) {\n                console.error(error)\n                self.setError(error)\n              }\n            },\n            { delay: 1000 },\n          ),\n        )\n      },\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'AlignmentsFeatureWidget',\n            'alignmentFeature',\n            { featureData: feature.toJSON(), view: getContainingView(self) },\n          )\n          session.showWidget(featureWidget)\n        }\n        session.setSelection(feature)\n      },\n\n      clearSelected() {\n        self.sortedBy = undefined\n      },\n\n      // uses copy-to-clipboard and generates notification\n      copyFeatureToClipboard(feature: Feature) {\n        const copiedFeature = feature.toJSON()\n        delete copiedFeature.uniqueId\n        const session = getSession(self)\n        copy(JSON.stringify(copiedFeature, null, 4))\n        session.notify('Copied to clipboard', 'success')\n      },\n\n      toggleSoftClipping() {\n        self.showSoftClipping = !self.showSoftClipping\n      },\n      toggleMismatchAlpha() {\n        self.mismatchAlpha = !self.mismatchAlpha\n      },\n\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n\n      setSortedBy(type: string, tag?: string) {\n        const { centerLineInfo } = getContainingView(self) as LGV\n        if (!centerLineInfo) {\n          return\n        }\n        const { refName, assemblyName, offset } = centerLineInfo\n        const centerBp = Math.round(offset) + 1\n        const centerRefName = refName\n\n        if (centerBp < 0) {\n          return\n        }\n\n        self.sortedBy = {\n          type,\n          pos: centerBp,\n          refName: centerRefName,\n          assemblyName,\n          tag,\n        }\n        self.ready = false\n      },\n      setFilterBy(filter: {\n        flagInclude: number\n        flagExclude: number\n        readName?: string\n        tagFilter?: { tag: string; value: string }\n      }) {\n        self.filterBy = cast(filter)\n      },\n    }))\n    .actions(self => {\n      // resets the sort object and refresh whole display on reload\n      const superReload = self.reload\n\n      return {\n        reload() {\n          self.clearSelected()\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      get maxHeight() {\n        const conf = getConf(self, ['renderers', self.rendererTypeName]) || {}\n        return self.trackMaxHeight !== undefined\n          ? self.trackMaxHeight\n          : conf.maxHeight\n      },\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', self.rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            height: self.featureHeight,\n            noSpacing: self.noSpacing,\n            maxHeight: this.maxHeight,\n            mismatchAlpha: self.mismatchAlpha,\n          },\n          getEnv(self),\n        )\n      },\n      get featureHeightSetting() {\n        return (\n          self.featureHeight || readConfObject(this.rendererConfig, 'height')\n        )\n      },\n      get mismatchAlphaSetting() {\n        return self.mismatchAlpha !== undefined\n          ? self.mismatchAlpha\n          : readConfObject(this.rendererConfig, 'mismatchAlpha')\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get rendererTypeName() {\n          const viewName = getConf(self, 'defaultRendering')\n          const rendererType = rendererTypes.get(viewName)\n          if (!rendererType) {\n            throw new Error(`unknown alignments view name ${viewName}`)\n          }\n          return rendererType\n        },\n\n        get contextMenuItems() {\n          const feat = self.contextMenuFeature\n          const contextMenuItems = feat\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: () => {\n                    self.clearFeatureSelection()\n                    if (feat) {\n                      self.selectFeature(feat)\n                    }\n                  },\n                },\n                {\n                  label: 'Copy info to clipboard',\n                  icon: ContentCopyIcon,\n                  onClick: () => {\n                    if (feat) {\n                      self.copyFeatureToClipboard(feat)\n                    }\n                  },\n                },\n              ]\n            : []\n          self.additionalContextMenuItemCallbacks.forEach(\n            (callback: Function) => {\n              const menuItems = callback(feat, self, pluginManager)\n              contextMenuItems.push(...menuItems)\n            },\n          )\n          return contextMenuItems\n        },\n\n        get DisplayBlurb() {\n          return LinearPileupDisplayBlurb\n        },\n\n        get filters() {\n          let filters: string[] = []\n          if (self.filterBy) {\n            const { flagInclude, flagExclude } = self.filterBy\n            filters = [\n              `jexl:((get(feature,'flags')&${flagInclude})==${flagInclude}) && !(get(feature,'flags')&${flagExclude})`,\n            ]\n            if (self.filterBy.tagFilter) {\n              const { tag, value } = self.filterBy.tagFilter\n              filters.push(\n                `jexl:\"${value}\" =='*' ? getTag(feature,\"${tag}\") != undefined : getTag(feature,\"${tag}\") == \"${value}\"`,\n              )\n            }\n            if (self.filterBy.readName) {\n              const { readName } = self.filterBy\n              filters.push(`jexl:get(feature,'name') == \"${readName}\"`)\n            }\n          }\n          return new SerializableFilterChain({ filters })\n        },\n\n        get renderProps() {\n          const view = getContainingView(self) as LGV\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            notReady:\n              !self.ready ||\n              (self.sortedBy && self.currBpPerPx !== view.bpPerPx),\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            sortedBy: self.sortedBy,\n            colorBy: self.colorBy,\n            colorTagMap: JSON.parse(JSON.stringify(self.colorTagMap)),\n            modificationTagMap: JSON.parse(\n              JSON.stringify(self.modificationTagMap),\n            ),\n            filters: this.filters,\n            showSoftClip: self.showSoftClipping,\n            config: self.rendererConfig,\n          }\n        },\n\n        get composedTrackMenuItems() {\n          return [\n            {\n              label: 'Show soft clipping',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showSoftClipping,\n              onClick: () => {\n                self.toggleSoftClipping()\n                // if toggling from off to on, will break sort for this track\n                // so clear it\n                if (self.showSoftClipping) {\n                  self.clearSelected()\n                }\n              },\n            },\n            {\n              label: 'Sort by',\n              icon: SortIcon,\n              disabled: self.showSoftClipping,\n              subMenu: [\n                ...['Start location', 'Read strand', 'Base pair'].map(\n                  option => {\n                    return {\n                      label: option,\n                      onClick: () => self.setSortedBy(option),\n                    }\n                  },\n                ),\n                {\n                  label: 'Sort by tag...',\n                  onClick: () =>\n                    getSession(self).setDialogComponent(SortByTagDlg, {\n                      model: self,\n                    }),\n                },\n                {\n                  label: 'Clear sort',\n                  onClick: () => self.clearSelected(),\n                },\n              ],\n            },\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Normal',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'normal' })\n                  },\n                },\n                {\n                  label: 'Mapping quality',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'mappingQuality' })\n                  },\n                },\n                {\n                  label: 'Strand',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'strand' })\n                  },\n                },\n                {\n                  label: 'Pair orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'pairOrientation' })\n                  },\n                },\n                {\n                  label: 'Per-base quality',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'perBaseQuality' })\n                  },\n                },\n                {\n                  label: 'Modifications or methylation',\n                  onClick: () => {\n                    getSession(self).setDialogComponent(ModificationsDlg, {\n                      model: self,\n                    })\n                  },\n                },\n                {\n                  label: 'Insert size',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSize' })\n                  },\n                },\n                {\n                  label: 'Stranded paired-end',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'reverseTemplate' })\n                  },\n                },\n                {\n                  label: 'Color by tag...',\n                  onClick: () => {\n                    getSession(self).setDialogComponent(ColorByTagDlg, {\n                      model: self,\n                    })\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).setDialogComponent(FilterByTagDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set feature height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetFeatureHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMaxHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Fade mismatches by quality',\n              type: 'checkbox',\n              checked: self.mismatchAlphaSetting,\n              onClick: () => {\n                self.toggleMismatchAlpha()\n              },\n            },\n          ]\n        },\n\n        get trackMenuItems() {\n          return [...trackMenuItems, ...this.composedTrackMenuItems]\n        },\n      }\n    })\n\nexport type LinearPileupDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearPileupDisplayModel = Instance<LinearPileupDisplayStateModel>\n\nexport default stateModelFactory\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    fontSize: '0.8em',\n    zIndex: theme.zIndex.tooltip, // important to have a zIndex directly on the popper itself, material-ui Tooltip uses popper and has similar thing\n    pointerEvents: 'none', // needed to avoid rapid mouseLeave/mouseEnter on popper\n  },\n\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: 0,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n}))\n\ntype Count = {\n  [key: string]: {\n    total: number\n    strands: { [key: string]: number }\n  }\n}\n\nfunction TooltipContents({ feature }: { feature: Feature }) {\n  const refName = feature.get('refName')\n  const start = (feature.get('start') + 1).toLocaleString('en-US')\n  const end = feature.get('end').toLocaleString('en-US')\n  const loc = `${refName ? `${refName}:` : ''}${\n    start === end ? start : `${start}..${end}`\n  }`\n\n  const info = feature.get('snpinfo') as {\n    ref: Count\n    cov: Count\n    lowqual: Count\n    noncov: Count\n    delskips: Count\n    total: number\n  }\n\n  const { total, ref, cov, noncov, lowqual, delskips } = info\n  return (\n    <div>\n      <table>\n        <caption>{loc}</caption>\n        <thead>\n          <tr>\n            <th>Base</th>\n            <th>Count</th>\n            <th>% of Total</th>\n            <th>Strands</th>\n            <th>Source</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Total</td>\n            <td>{total}</td>\n            <td />\n          </tr>\n\n          {Object.entries({ ref, cov, noncov, delskips, lowqual }).map(\n            ([key, entry]) => {\n              return (\n                <React.Fragment key={key}>\n                  {Object.entries(entry).map(([base, score]) => {\n                    const { strands } = score\n                    return (\n                      <tr key={base}>\n                        <td>{base.toUpperCase()}</td>\n                        <td>{score.total}</td>\n                        <td>\n                          {base === 'total'\n                            ? '---'\n                            : `${Math.floor((score.total / total) * 100)}%`}\n                        </td>\n                        <td>\n                          {strands['-1'] ? `${strands['-1']}(-)` : ''}\n                          {strands['1'] ? `${strands['1']}(+)` : ''}\n                        </td>\n                        <td>{key}</td>\n                      </tr>\n                    )\n                  })}\n                </React.Fragment>\n              )\n            },\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\ntype Coord = [number, number]\nconst Tooltip = observer(\n  ({\n    model,\n    height,\n    mouseCoord,\n  }: {\n    model: any\n    height: number\n    mouseCoord: Coord\n  }) => {\n    const { featureUnderMouse } = model\n    const classes = useStyles()\n\n    return featureUnderMouse ? (\n      <>\n        <MUITooltip\n          placement=\"right-start\"\n          className={classes.popper}\n          open\n          title={<TooltipContents feature={featureUnderMouse} />}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              left: mouseCoord[0],\n              top: 0,\n            }}\n          >\n            {' '}\n          </div>\n        </MUITooltip>\n        <div\n          className={classes.hoverVertical}\n          style={{ left: mouseCoord[0], height }}\n        />\n      </>\n    ) : null\n  },\n)\n\nexport default Tooltip\n","import { addDisposer, types, cast, getEnv, getSnapshot } from 'mobx-state-tree'\nimport { observable, autorun } from 'mobx'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport {\n  AnyConfigurationSchemaType,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { getContainingView } from '@jbrowse/core/util'\nimport Tooltip from '../components/Tooltip'\nimport { getUniqueModificationValues } from '../../shared'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// using a map because it preserves order\nconst rendererTypes = new Map([['snpcoverage', 'SNPCoverageRenderer']])\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) =>\n  types\n    .compose(\n      'LinearSNPCoverageDisplay',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        type: types.literal('LinearSNPCoverageDisplay'),\n        drawInterbaseCounts: types.maybe(types.boolean),\n        drawIndicators: types.maybe(types.boolean),\n        filterBy: types.optional(\n          types.model({\n            flagInclude: types.optional(types.number, 0),\n            flagExclude: types.optional(types.number, 1536),\n            readName: types.maybe(types.string),\n            tagFilter: types.maybe(\n              types.model({ tag: types.string, value: types.string }),\n            ),\n          }),\n          {},\n        ),\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n          }),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      modificationTagMap: observable.map({}),\n    }))\n    .actions(self => ({\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n      setFilterBy(filter: {\n        flagInclude: number\n        flagExclude: number\n        readName?: string\n        tagFilter?: { tag: string; value: string }\n      }) {\n        self.filterBy = cast(filter)\n      },\n      setColorBy(colorBy?: { type: string; tag?: string }) {\n        self.colorBy = cast(colorBy)\n      },\n\n      updateModificationColorMap(uniqueModifications: string[]) {\n        const colorPalette = ['red', 'blue', 'green', 'orange', 'purple']\n        let i = 0\n\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            const newColor = colorPalette[i++]\n            self.modificationTagMap.set(value, newColor)\n          }\n        })\n      },\n    }))\n    .views(self => ({\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', self.rendererTypeName]) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            drawInterbaseCounts:\n              self.drawInterbaseCounts === undefined\n                ? configBlob.drawInterbaseCounts\n                : self.drawInterbaseCounts,\n            drawIndicators:\n              self.drawIndicators === undefined\n                ? configBlob.drawIndicators\n                : self.drawIndicators,\n          },\n          getEnv(self),\n        )\n      },\n      get drawInterbaseCountsSetting() {\n        return self.drawInterbaseCounts !== undefined\n          ? self.drawInterbaseCounts\n          : readConfObject(this.rendererConfig, 'drawInterbaseCounts')\n      },\n      get drawIndicatorsSetting() {\n        return self.drawIndicators !== undefined\n          ? self.drawIndicators\n          : readConfObject(this.rendererConfig, 'drawIndicators')\n      },\n\n      get modificationsReady() {\n        return self.colorBy?.type === 'modifications'\n          ? Object.keys(JSON.parse(JSON.stringify(self.modificationTagMap)))\n              .length > 0\n          : true\n      },\n      get renderProps() {\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          notReady: !self.ready || !this.modificationsReady,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: self.rendererConfig,\n          scaleOpts: self.scaleOpts,\n          resolution: self.resolution,\n          height: self.height,\n          ticks: self.ticks,\n          displayCrossHatches: self.displayCrossHatches,\n          filters: self.filters,\n          modificationTagMap: JSON.parse(\n            JSON.stringify(self.modificationTagMap),\n          ),\n\n          // must use getSnapshot because otherwise changes to e.g. just the\n          // colorBy.type are not read\n          colorBy: self.colorBy ? getSnapshot(self.colorBy) : undefined,\n        }\n      },\n    }))\n    .actions(self => ({\n      toggleDrawIndicators() {\n        self.drawIndicators = !self.drawIndicatorsSetting\n      },\n      toggleDrawInterbaseCounts() {\n        self.drawInterbaseCounts = !self.drawInterbaseCountsSetting\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              try {\n                const { colorBy } = self\n                const { staticBlocks } = getContainingView(self) as LGV\n                if (colorBy?.type === 'modifications') {\n                  const vals = await getUniqueModificationValues(\n                    self,\n                    getConf(self.parentTrack, 'adapter'),\n                    colorBy,\n                    staticBlocks,\n                  )\n                  self.updateModificationColorMap(vals)\n                }\n              } catch (error) {\n                console.error(error)\n                self.setError(error)\n              }\n            },\n            { delay: 1000 },\n          ),\n        )\n      },\n    }))\n\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get TooltipComponent() {\n          return Tooltip\n        },\n\n        get adapterConfig() {\n          const subadapter = getConf(self.parentTrack, 'adapter')\n          return {\n            type: 'SNPCoverageAdapter',\n            subadapter,\n          }\n        },\n\n        get rendererTypeName() {\n          return rendererTypes.get('snpcoverage')\n        },\n\n        get needsScalebar() {\n          return true\n        },\n\n        get contextMenuItems() {\n          return []\n        },\n\n        get extraTrackMenuItems() {\n          return [\n            {\n              label: 'Draw insertion/clipping indicators',\n              type: 'checkbox',\n              checked: self.drawIndicatorsSetting,\n              onClick: () => {\n                self.toggleDrawIndicators()\n              },\n            },\n            {\n              label: 'Draw insertion/clipping counts',\n              type: 'checkbox',\n              checked: self.drawInterbaseCountsSetting,\n              onClick: () => {\n                self.toggleDrawInterbaseCounts()\n              },\n            },\n          ]\n        },\n        get trackMenuItems() {\n          return [\n            ...trackMenuItems,\n            ...self.composedTrackMenuItems,\n            ...this.extraTrackMenuItems,\n          ]\n        },\n        // The SNPCoverage filters are called twice because the BAM/CRAM features\n        // pass filters and then the SNPCoverage score features pass through\n        // here, and are already have 'snpinfo' are passed through\n        get filters() {\n          let filters: string[] = []\n          if (self.filterBy) {\n            const { flagInclude, flagExclude } = self.filterBy\n            filters = [\n              `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                `((get(feature,'flags')&${flagInclude})==${flagInclude}) && ` +\n                `!((get(feature,'flags')&${flagExclude}))`,\n            ]\n\n            if (self.filterBy.tagFilter) {\n              const { tag, value } = self.filterBy.tagFilter\n              filters.push(\n                `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                  `\"${value}\" =='*' ? getTag(feature,\"${tag}\") != undefined : ` +\n                  `getTag(feature,\"${tag}\") == \"${value}\"`,\n              )\n            }\n            if (self.filterBy.readName) {\n              const { readName } = self.filterBy\n              filters.push(\n                `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                  `get(feature,'name') == \"${readName}\"`,\n              )\n            }\n          }\n          return new SerializableFilterChain({ filters })\n        },\n      }\n    })\n\nexport type SNPCoverageDisplayModel = ReturnType<typeof stateModelFactory>\n\nexport default stateModelFactory\n","import { Region } from '@jbrowse/core/util/types'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport React, { MouseEvent, useRef, useState, useEffect } from 'react'\nimport type { BaseLinearDisplayModel } from '@jbrowse/plugin-linear-genome-view'\n\nfunction PileupRendering(props: {\n  blockKey: string\n  displayModel: BaseLinearDisplayModel\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n  sortedBy?: { type: string; pos: number; refName: string }\n  colorBy?: { type: string; tag?: string }\n  onMouseMove?: (event: React.MouseEvent, featureId: string | undefined) => void\n}) {\n  const {\n    onMouseMove,\n    blockKey,\n    displayModel,\n    width,\n    height,\n    regions,\n    bpPerPx,\n    sortedBy,\n    colorBy,\n  } = props\n  const {\n    selectedFeatureId,\n    featureIdUnderMouse,\n    contextMenuFeature,\n    blockLayoutFeatures,\n  } = displayModel || {}\n  const [region] = regions\n  const highlightOverlayCanvas = useRef<HTMLCanvasElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] = useState(\n    false,\n  )\n  useEffect(() => {\n    const canvas = highlightOverlayCanvas.current\n    if (!canvas) {\n      return\n    }\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      return\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    let rect\n    let blockLayout\n\n    if (\n      selectedFeatureId &&\n      (blockLayout = blockLayoutFeatures.get(blockKey)) &&\n      (rect = blockLayout.get(selectedFeatureId))\n    ) {\n      const [leftBp, topPx, rightBp, bottomPx] = rect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.shadowColor = '#222266'\n      ctx.shadowBlur = 10\n      ctx.lineJoin = 'bevel'\n      ctx.lineWidth = 2\n      ctx.strokeStyle = '#00b8ff'\n      ctx.strokeRect(\n        leftPx - 2,\n        rectTop - 2,\n        rightPx - leftPx + 4,\n        rectHeight + 4,\n      )\n      ctx.clearRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n    const highlightedFeature = featureIdUnderMouse || contextMenuFeature?.id()\n    if (\n      highlightedFeature &&\n      (blockLayout = blockLayoutFeatures.get(blockKey)) &&\n      (rect = blockLayout.get(highlightedFeature))\n    ) {\n      const [leftBp, topPx, rightBp, bottomPx] = rect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.fillStyle = '#0003'\n      ctx.fillRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n  }, [\n    bpPerPx,\n    region,\n    selectedFeatureId,\n    featureIdUnderMouse,\n    contextMenuFeature,\n    blockKey,\n    blockLayoutFeatures,\n  ])\n\n  function onMouseDown(event: MouseEvent) {\n    setMouseIsDown(true)\n    setMovedDuringLastMouseDown(false)\n    callMouseHandler('MouseDown', event)\n  }\n\n  function onMouseEnter(event: MouseEvent) {\n    callMouseHandler('MouseEnter', event)\n  }\n\n  function onMouseOut(event: MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onMouseOver(event: MouseEvent) {\n    callMouseHandler('MouseOver', event)\n  }\n\n  function onMouseUp(event: MouseEvent) {\n    setMouseIsDown(false)\n    callMouseHandler('MouseUp', event)\n  }\n\n  function onClick(event: MouseEvent) {\n    if (!movedDuringLastMouseDown) {\n      callMouseHandler('Click', event)\n    }\n  }\n\n  function onMouseLeave(event: MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onContextMenu(event: MouseEvent) {\n    callMouseHandler('ContextMenu', event)\n  }\n\n  function mouseMove(event: MouseEvent) {\n    if (mouseIsDown) {\n      setMovedDuringLastMouseDown(true)\n    }\n    let offsetX = 0\n    let offsetY = 0\n    if (highlightOverlayCanvas.current) {\n      offsetX = highlightOverlayCanvas.current.getBoundingClientRect().left\n      offsetY = highlightOverlayCanvas.current.getBoundingClientRect().top\n    }\n    offsetX = event.clientX - offsetX\n    offsetY = event.clientY - offsetY\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n\n    const featIdUnderMouse = displayModel.getFeatureOverlapping(\n      blockKey,\n      clientBp,\n      offsetY,\n    )\n\n    if (onMouseMove) {\n      onMouseMove(event, featIdUnderMouse)\n    }\n  }\n\n  function callMouseHandler(handlerName: string, event: MouseEvent) {\n    // @ts-ignore\n    const featureHandler = props[`onFeature${handlerName}`]\n    // @ts-ignore\n    const canvasHandler = props[`on${handlerName}`]\n    if (featureHandler && featureIdUnderMouse) {\n      featureHandler(event, featureIdUnderMouse)\n    } else if (canvasHandler) {\n      canvasHandler(event, featureIdUnderMouse)\n    }\n  }\n\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div\n      className=\"PileupRendering\"\n      data-testid={`pileup-${\n        sortedBy || colorBy\n          ? `${sortedBy?.type || ''}${colorBy?.type || ''}${colorBy?.tag || ''}`\n          : 'normal'\n      }`}\n      style={{ position: 'relative', width: canvasWidth, height }}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n      <canvas\n        data-testid=\"pileup_overlay_canvas\"\n        width={canvasWidth}\n        height={height}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n        className=\"highlightOverlayCanvas\"\n        ref={highlightOverlayCanvas}\n        onMouseDown={event => onMouseDown(event)}\n        onMouseEnter={event => onMouseEnter(event)}\n        onMouseOut={event => onMouseOut(event)}\n        onMouseOver={event => onMouseOver(event)}\n        onMouseUp={event => onMouseUp(event)}\n        onMouseLeave={event => onMouseLeave(event)}\n        onMouseMove={event => mouseMove(event)}\n        onClick={event => onClick(event)}\n        onContextMenu={event => onContextMenu(event)}\n        onFocus={() => {}}\n        onBlur={() => {}}\n      />\n    </div>\n  )\n}\n\nexport default observer(PileupRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'PileupRenderer',\n  {\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a pileup alignment',\n      defaultValue: `#c8c8c8`,\n      contextVariable: ['feature'],\n    },\n\n    orientationType: {\n      type: 'stringEnum',\n      model: types.enumeration('orientationType', ['fr', 'rf', 'ff']),\n      defaultValue: 'fr',\n      description:\n        'read sequencer orienation. fr is normal \"reads pointing at each other ---> <--- while some other sequencers can use other options',\n    },\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    minSubfeatureWidth: {\n      type: 'number',\n      description:\n        'the minimum width in px for a pileup mismatch feature. use for increasing mismatch marker widths when zoomed out to e.g. 1px or 0.5px',\n      defaultValue: 0,\n    },\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a pileup rendering',\n      defaultValue: 1200,\n    },\n    maxClippingSize: {\n      type: 'integer',\n      description: 'the max clip size to be used in a pileup rendering',\n      defaultValue: 10000,\n    },\n    height: {\n      type: 'number',\n      description: 'the height of each feature in a pileup alignment',\n      defaultValue: 7,\n      contextVariable: ['feature'],\n    },\n    noSpacing: {\n      type: 'boolean',\n      description: 'remove spacing between features',\n      defaultValue: false,\n    },\n    largeInsertionIndicatorScale: {\n      type: 'number',\n      description:\n        'scale at which to draw the large insertion indicators (bp/pixel)',\n      defaultValue: 10,\n    },\n    mismatchAlpha: {\n      type: 'boolean',\n      defaultValue: false,\n      description: 'Fade low quality mismatches',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\n// get tag from BAM or CRAM feature, where CRAM uses feature.get('tags') and\n// BAM does not\nexport function getTag(feature: Feature, tag: string) {\n  const tags = feature.get('tags')\n  return tags ? tags[tag] : feature.get(tag)\n}\n\n// use fallback alt tag, used in situations where upper case/lower case tags\n// exist e.g. Mm/MM for base modifications\nexport function getTagAlt(feature: Feature, tag: string, alt: string) {\n  return getTag(feature, tag) || getTag(feature, alt)\n}\n\n// orientation definitions from igv.js, see also\n// https://software.broadinstitute.org/software/igv/interpreting_pair_orientations\nexport const orientationTypes = {\n  fr: {\n    F1R2: 'LR',\n    F2R1: 'LR',\n\n    F1F2: 'LL',\n    F2F1: 'LL',\n\n    R1R2: 'RR',\n    R2R1: 'RR',\n\n    R1F2: 'RL',\n    R2F1: 'RL',\n  } as { [key: string]: string },\n\n  rf: {\n    R1F2: 'LR',\n    R2F1: 'LR',\n\n    R1R2: 'LL',\n    R2R1: 'LL',\n\n    F1F2: 'RR',\n    F2F1: 'RR',\n\n    F1R2: 'RL',\n    F2R1: 'RL',\n  } as { [key: string]: string },\n\n  ff: {\n    F2F1: 'LR',\n    R1R2: 'LR',\n\n    F2R1: 'LL',\n    R1F2: 'LL',\n\n    R2F1: 'RR',\n    F1R2: 'RR',\n\n    R2R1: 'RL',\n    F1F2: 'RL',\n  } as { [key: string]: string },\n}\n\nexport function getColorWGBS(strand: number, base: string) {\n  if (strand === 1) {\n    if (base === 'C') {\n      return '#f00'\n    }\n    if (base === 'T') {\n      return '#00f'\n    }\n  } else if (strand === -1) {\n    if (base === 'G') {\n      return '#f00'\n    }\n    if (base === 'A') {\n      return '#00f'\n    }\n  }\n  return '#888'\n}\n","import deepEqual from 'fast-deep-equal'\nimport { LayoutSession } from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport GranularRectLayout from '@jbrowse/core/util/layouts/GranularRectLayout'\nimport MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nexport interface PileupLayoutSessionProps {\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters: SerializableFilterChain\n  sortedBy: unknown\n  showSoftClip: unknown\n}\n\ntype MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\ninterface CachedPileupLayout {\n  layout: MyMultiLayout\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n  sortedBy: unknown\n  showSoftClip: boolean\n}\n// Sorting and revealing soft clip changes the layout of Pileup renderer\n// Adds extra conditions to see if cached layout is valid\nexport class PileupLayoutSession extends LayoutSession {\n  sortedBy: unknown\n\n  showSoftClip = false\n\n  constructor(args: PileupLayoutSessionProps) {\n    super(args)\n    this.config = args.config\n  }\n\n  cachedLayoutIsValid(cachedLayout: CachedPileupLayout) {\n    return (\n      super.cachedLayoutIsValid(cachedLayout) &&\n      this.showSoftClip === cachedLayout.showSoftClip &&\n      deepEqual(this.sortedBy, cachedLayout.sortedBy)\n    )\n  }\n\n  cachedLayout: CachedPileupLayout | undefined\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        config: readConfObject(this.config),\n        filters: this.filters,\n        sortedBy: this.sortedBy,\n        showSoftClip: this.showSoftClip,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { toArray } from 'rxjs/operators'\nimport BoxRendererType, {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderArgsDeserialized as BoxRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { Theme } from '@material-ui/core'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { bpSpanPx, iterMap } from '@jbrowse/core/util'\nimport Color from 'color'\nimport { Region } from '@jbrowse/core/util/types'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { BaseLayout } from '@jbrowse/core/util/layouts/BaseLayout'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  Mismatch,\n  parseCigar,\n  getModificationPositions,\n  getNextRefPos,\n} from '../BamAdapter/MismatchParser'\nimport { sortFeature } from './sortUtil'\nimport { getTagAlt, orientationTypes } from '../util'\n\nimport {\n  PileupLayoutSession,\n  PileupLayoutSessionProps,\n} from './PileupLayoutSession'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport type {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n}\n\nfunction getColorBaseMap(theme: Theme) {\n  return {\n    A: theme.palette.bases.A.main,\n    C: theme.palette.bases.C.main,\n    G: theme.palette.bases.G.main,\n    T: theme.palette.bases.T.main,\n    deletion: '#808080', // gray\n  }\n}\n\nexport interface RenderArgsDeserialized extends BoxRenderArgsDeserialized {\n  colorBy?: { type: string; tag?: string }\n  colorTagMap?: Record<string, string>\n  modificationTagMap?: Record<string, string>\n  sortedBy?: {\n    type: string\n    pos: number\n    refName: string\n    assemblyName: string\n    tag?: string\n  }\n  showSoftClip: boolean\n  highResolutionScaling: number\n}\n\nexport interface RenderArgsDeserializedWithFeaturesAndLayout\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  layout: BaseLayout<Feature>\n  regionSequence?: string\n}\n\ninterface LayoutRecord {\n  feature: Feature\n  leftPx: number\n  rightPx: number\n  topPx: number\n  heightPx: number\n}\n\nconst alignmentColoring: { [key: string]: string } = {\n  color_fwd_strand_not_proper: '#ECC8C8',\n  color_rev_strand_not_proper: '#BEBED8',\n  color_fwd_strand: '#EC8B8B',\n  color_rev_strand: '#8F8FD8',\n  color_fwd_missing_mate: '#D11919',\n  color_rev_missing_mate: '#1919D1',\n  color_fwd_diff_chr: '#000',\n  color_rev_diff_chr: '#969696',\n  color_pair_lr: '#c8c8c8',\n  color_pair_rr: 'navy',\n  color_pair_rl: 'teal',\n  color_pair_ll: 'green',\n  color_nostrand: '#999',\n  color_interchrom: 'orange',\n  color_longinsert: 'red',\n  color_shortinsert: 'pink',\n}\n\ninterface LayoutFeature {\n  heightPx: number\n  topPx: number\n  feature: Feature\n}\n\nfunction shouldDrawMismatches(type?: string) {\n  return !['methylation', 'modifications'].includes(type || '')\n}\n\nexport default class PileupRenderer extends BoxRendererType {\n  supportsSVG = true\n\n  // get width and height of chars the height is an approximation: width\n  // letter M is approximately the height\n  getCharWidthHeight(ctx: CanvasRenderingContext2D) {\n    const charWidth = ctx.measureText('A').width\n    const charHeight = ctx.measureText('M').width\n    return { charWidth, charHeight }\n  }\n\n  layoutFeature(\n    feature: Feature,\n    layout: BaseLayout<Feature>,\n    config: AnyConfigurationModel,\n    bpPerPx: number,\n    region: Region,\n    showSoftClip?: boolean,\n  ): LayoutRecord | null {\n    let expansionBefore = 0\n    let expansionAfter = 0\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const seq: string = feature.get('seq')\n\n    // Expand the start and end of feature when softclipping enabled\n    if (showSoftClip && seq) {\n      for (let i = 0; i < mismatches.length; i += 1) {\n        const { type, start, cliplen = 0 } = mismatches[i]\n        if (type === 'softclip') {\n          start === 0 ? (expansionBefore = cliplen) : (expansionAfter = cliplen)\n        }\n      }\n    }\n\n    const [leftPx, rightPx] = bpSpanPx(\n      feature.get('start') - expansionBefore,\n      feature.get('end') + expansionAfter,\n      region,\n      bpPerPx,\n    )\n\n    let heightPx = readConfObject(config, 'height', { feature })\n    const displayMode = readConfObject(config, 'displayMode', { feature })\n    if (displayMode === 'compact') {\n      heightPx /= 3\n    }\n    if (feature.get('refName') !== region.refName) {\n      throw new Error(\n        `feature ${feature.id()} is not on the current region's reference sequence ${\n          region.refName\n        }`,\n      )\n    }\n    const topPx = layout.addRect(\n      feature.id(),\n      feature.get('start') - expansionBefore,\n      feature.get('end') + expansionAfter,\n      heightPx,\n    )\n    if (topPx === null) {\n      return null\n    }\n\n    return {\n      feature,\n      leftPx,\n      rightPx,\n      topPx: displayMode === 'collapse' ? 0 : topPx,\n      heightPx,\n    }\n  }\n\n  // expands region for clipping to use. possible improvement: use average read\n  // size to set the heuristic maxClippingSize expansion (e.g. short reads\n  // don't have to expand a softclipping size a lot, but long reads might)\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    const { config, showSoftClip } = renderArgs\n\n    const maxClippingSize = readConfObject(config, 'maxClippingSize')\n    const { start, end } = region\n    const len = end - start\n    const bpExpansion = Math.max(\n      len,\n      showSoftClip ? Math.round(maxClippingSize) : 0,\n    )\n\n    return {\n      ...region,\n      start: Math.floor(Math.max(start - bpExpansion, 0)),\n      end: Math.ceil(end + bpExpansion),\n    }\n  }\n\n  colorByOrientation(feature: Feature, config: AnyConfigurationModel) {\n    return alignmentColoring[\n      this.getOrientation(feature, config) || 'color_nostrand'\n    ]\n  }\n\n  getOrientation(feature: Feature, config: AnyConfigurationModel) {\n    const orientationType = readConfObject(config, 'orientationType') as\n      | 'fr'\n      | 'ff'\n      | 'rf'\n    const type = orientationTypes[orientationType]\n    const orientation = type[feature.get('pair_orientation') as string]\n    const map: { [key: string]: string } = {\n      LR: 'color_pair_lr',\n      RR: 'color_pair_rr',\n      RL: 'color_pair_rl',\n      LL: 'color_pair_ll',\n    }\n    return map[orientation]\n  }\n\n  colorByInsertSize(feature: Feature, _config: AnyConfigurationModel) {\n    return feature.get('is_paired') &&\n      feature.get('seq_id') !== feature.get('next_seq_id')\n      ? '#555'\n      : `hsl(${Math.abs(feature.get('template_length')) / 10},50%,50%)`\n  }\n\n  colorByStranded(feature: Feature, _config: AnyConfigurationModel) {\n    const flags = feature.get('flags')\n    const strand = feature.get('strand')\n    // is paired\n    if (flags & 1) {\n      const revflag = flags & 64\n      const flipper = revflag ? -1 : 1\n      // proper pairing\n      if (flags & 2) {\n        return strand * flipper === 1 ? 'color_rev_strand' : 'color_fwd_strand'\n      }\n      if (feature.get('multi_segment_next_segment_unmapped')) {\n        return strand * flipper === 1\n          ? 'color_rev_missing_mate'\n          : 'color_fwd_missing_mate'\n      }\n      if (feature.get('seq_id') === feature.get('next_seq_id')) {\n        return strand * flipper === 1\n          ? 'color_rev_strand_not_proper'\n          : 'color_fwd_strand_not_proper'\n      }\n      // should only leave aberrant chr\n      return strand === 1 ? 'color_fwd_diff_chr' : 'color_rev_diff_chr'\n    }\n    return strand === 1 ? 'color_fwd_strand' : 'color_rev_strand'\n  }\n\n  colorByPerBaseQuality(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n  ) {\n    const { feature, topPx, heightPx } = feat\n    const qual: string = feature.get('qual') || ''\n    const scores = qual.split(' ').map(val => +val)\n    const cigarOps = parseCigar(feature.get('CIGAR'))\n    const width = 1 / bpPerPx\n    const start = feature.get('start')\n\n    for (let i = 0, j = 0, k = 0; k < scores.length; i += 2, k++) {\n      const len = +cigarOps[i]\n      const op = cigarOps[i + 1]\n      if (op === 'S' || op === 'I') {\n        k += len\n      } else if (op === 'D' || op === 'N') {\n        j += len\n      } else if (op === 'M' || op === 'X' || op === '=') {\n        for (let m = 0; m < len; m++) {\n          const score = scores[k + m]\n          ctx.fillStyle = `hsl(${score === 255 ? 150 : score * 1.5},55%,50%)`\n          const [leftPx] = bpSpanPx(\n            start + j + m,\n            start + j + m + 1,\n            region,\n            bpPerPx,\n          )\n          ctx.fillRect(leftPx, topPx, width + 0.5, heightPx)\n        }\n        j += len\n      }\n    }\n  }\n\n  // ML stores probabilities as array of numerics and MP is scaled phred scores\n  // https://github.com/samtools/hts-specs/pull/418/files#diff-e765c6479316309f56b636f88189cdde8c40b854c7bdcce9ee7fe87a4e76febcR596\n  //\n  // if we have ML or Ml, it is an 8bit probability, divide by 255\n  //\n  // if we have MP or Mp it is phred scaled ASCII, which can go up to 90 but\n  // has very high likelihood basecalls at that point, we really only care\n  // about low qual calls <20 approx\n  //\n  colorByModifications(\n    ctx: CanvasRenderingContext2D,\n    layoutFeature: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { feature, topPx, heightPx } = layoutFeature\n    const { modificationTagMap = {} } = props\n\n    const mm = (getTagAlt(feature, 'MM', 'Mm') as string) || ''\n\n    const ml = (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n\n    const probabilities = ml\n      ? (typeof ml === 'string' ? ml.split(',').map(e => +e) : ml).map(\n          e => e / 255,\n        )\n      : (getTagAlt(feature, 'MP', 'Mp') as string)\n          .split('')\n          .map(s => s.charCodeAt(0) - 33)\n          .map(elt => Math.min(1, elt / 50))\n\n    const cigar = feature.get('CIGAR')\n    const start = feature.get('start')\n    const end = feature.get('end')\n    const seq = feature.get('seq')\n    const cigarOps = parseCigar(cigar)\n\n    const modifications = getModificationPositions(mm, seq)\n\n    // probIndex applies across multiple modifications e.g.\n    let probIndex = 0\n    modifications.forEach(({ type, positions }) => {\n      const col = modificationTagMap[type] || 'black'\n      const base = Color(col)\n      for (const readPos of getNextRefPos(cigarOps, positions)) {\n        if (readPos >= 0 && start + readPos < end) {\n          const [leftPx, rightPx] = bpSpanPx(\n            start + readPos,\n            start + readPos + 1,\n            region,\n            bpPerPx,\n          )\n\n          // give it a little boost of 0.1 to not make them fully\n          // invisible to avoid confusion\n          ctx.fillStyle = base\n            .alpha(probabilities[probIndex] + 0.1)\n            .hsl()\n            .string()\n          ctx.fillRect(leftPx, topPx, rightPx - leftPx + 0.5, heightPx)\n        }\n        probIndex++\n      }\n    })\n  }\n\n  // Color by methylation is slightly modified version of color by\n  // modifications\n  //\n  colorByMethylation(\n    ctx: CanvasRenderingContext2D,\n    layoutFeature: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { regionSequence } = props\n    const { feature, topPx, heightPx } = layoutFeature\n\n    const mm: string = getTagAlt(feature, 'MM', 'Mm') || ''\n\n    if (!regionSequence) {\n      throw new Error('region sequence required for methylation')\n    }\n\n    const cigar = feature.get('CIGAR')\n    const fstart = feature.get('start')\n    const fend = feature.get('end')\n    const seq = feature.get('seq')\n    const cigarOps = parseCigar(cigar)\n    const { start: rstart, end: rend } = region\n\n    const methBins = new Array(rend - rstart).fill(0)\n    getModificationPositions(mm, seq).forEach(({ type, positions }) => {\n      if (type === 'm' && positions) {\n        for (const pos of getNextRefPos(cigarOps, positions)) {\n          const epos = pos + fstart - rstart\n          if (epos >= 0 && epos < methBins.length) {\n            methBins[epos] = 1\n          }\n        }\n      }\n    })\n\n    for (let j = fstart; j < fend; j++) {\n      const i = j - rstart\n      if (i >= 0 && i < methBins.length) {\n        const l2 = regionSequence[i + 1]\n        const l1 = regionSequence[i]\n        // color\n        if (l1.toUpperCase() === 'C' && l2.toUpperCase() === 'G') {\n          const [leftPx, rightPx] = bpSpanPx(\n            rstart + i,\n            rstart + i + 1,\n            region,\n            bpPerPx,\n          )\n          if (methBins[i]) {\n            ctx.fillStyle = 'red'\n          } else {\n            ctx.fillStyle = 'blue'\n          }\n          ctx.fillRect(leftPx, topPx, rightPx - leftPx + 0.5, heightPx)\n        }\n      }\n    }\n  }\n\n  drawRect(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserialized,\n  ) {\n    const { regions, bpPerPx } = props\n    const { heightPx, topPx, feature } = feat\n    const [region] = regions\n    const [leftPx, rightPx] = bpSpanPx(\n      feature.get('start'),\n      feature.get('end'),\n      region,\n      bpPerPx,\n    )\n    const flip = region.reversed ? -1 : 1\n    const strand = feature.get('strand') * flip\n    if (bpPerPx < 10) {\n      if (strand === -1) {\n        ctx.beginPath()\n        ctx.moveTo(leftPx - 5, topPx + heightPx / 2)\n        ctx.lineTo(leftPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx)\n        ctx.lineTo(leftPx, topPx)\n        ctx.closePath()\n        ctx.fill()\n      } else {\n        ctx.beginPath()\n        ctx.moveTo(leftPx, topPx)\n        ctx.lineTo(leftPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx + heightPx)\n        ctx.lineTo(rightPx + 5, topPx + heightPx / 2)\n        ctx.lineTo(rightPx, topPx)\n        ctx.closePath()\n        ctx.fill()\n      }\n    } else {\n      ctx.fillRect(leftPx, topPx, rightPx - leftPx, heightPx)\n    }\n  }\n\n  drawAlignmentRect(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { config, bpPerPx, regions, colorBy, colorTagMap = {} } = props\n    const { tag = '', type: colorType = '' } = colorBy || {}\n    const { feature } = feat\n    const region = regions[0]\n\n    // first pass for simple color changes that change the color of the\n    // alignment\n    switch (colorType) {\n      case 'insertSize':\n        ctx.fillStyle = this.colorByInsertSize(feature, config)\n        break\n      case 'strand':\n        ctx.fillStyle = feature.get('strand') === -1 ? '#8F8FD8' : '#EC8B8B'\n        break\n      case 'mappingQuality':\n        ctx.fillStyle = `hsl(${feature.get('mq')},50%,50%)`\n        break\n\n      case 'pairOrientation':\n        ctx.fillStyle = this.colorByOrientation(feature, config)\n        break\n      case 'stranded':\n        ctx.fillStyle = alignmentColoring[this.colorByStranded(feature, config)]\n        break\n      case 'xs':\n      case 'tag': {\n        const tags = feature.get('tags')\n        const val = tags ? tags[tag] : feature.get(tag)\n\n        // special for for XS/TS tag\n        if (tag === 'XS' || tag === 'TS') {\n          const map: { [key: string]: string | undefined } = {\n            '-': 'color_rev_strand',\n            '+': 'color_fwd_strand',\n          }\n          ctx.fillStyle = alignmentColoring[map[val] || 'color_nostrand']\n        }\n\n        // lower case 'ts' from minimap2 is flipped from xs\n        if (tag === 'ts') {\n          const map: { [key: string]: string } = {\n            '-':\n              feature.get('strand') === -1\n                ? 'color_fwd_strand'\n                : 'color_rev_strand',\n            '+':\n              feature.get('strand') === -1\n                ? 'color_rev_strand'\n                : 'color_fwd_strand',\n          }\n          ctx.fillStyle = alignmentColoring[map[val] || 'color_nostrand']\n        }\n\n        // tag is not one of the autofilled tags, has color-value pairs from\n        // fetchValues\n        else {\n          const foundValue = colorTagMap[val]\n          ctx.fillStyle = foundValue || 'color_nostrand'\n        }\n        break\n      }\n      case 'insertSizeAndPairOrientation':\n        break\n\n      case 'normal':\n      default:\n        ctx.fillStyle = readConfObject(config, 'color', { feature })\n        break\n    }\n\n    this.drawRect(ctx, feat, props)\n\n    // second pass for color types that render per-base things that go over the\n    // existing drawing\n    switch (colorType) {\n      case 'perBaseQuality':\n        this.colorByPerBaseQuality(ctx, feat, config, region, bpPerPx)\n        break\n\n      case 'modifications':\n        this.colorByModifications(ctx, feat, config, region, bpPerPx, props)\n        break\n\n      case 'methylation':\n        this.colorByMethylation(ctx, feat, config, region, bpPerPx, props)\n        break\n    }\n  }\n\n  drawMismatches(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n    theme: Theme,\n    colorForBase: { [key: string]: string },\n    opts: {\n      mismatchAlpha?: boolean\n      drawSNPs?: boolean\n      drawIndels?: boolean\n    },\n  ) {\n    const { mismatchAlpha, drawSNPs = true, drawIndels = true } = opts\n    const { config, bpPerPx, regions } = props\n    const { heightPx, topPx, feature } = feat\n    const { charWidth, charHeight } = this.getCharWidthHeight(ctx)\n    const [region] = regions\n    const start = feature.get('start')\n    const minFeatWidth = readConfObject(config, 'minSubfeatureWidth')\n    const insertionScale = readConfObject(\n      config,\n      'largeInsertionIndicatorScale',\n    )\n    const pxPerBp = Math.min(1 / bpPerPx, 2)\n    const w = Math.max(minFeatWidth, pxPerBp)\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const heightLim = charHeight - 2\n\n    function getAlphaColor(baseColor: string, mismatch: { qual?: number }) {\n      let color = baseColor\n      if (mismatchAlpha && mismatch.qual !== undefined) {\n        color = Color(baseColor)\n          .alpha(Math.min(1, mismatch.qual / 50))\n          .hsl()\n          .string()\n      }\n      return color\n    }\n\n    // two pass rendering: first pass, draw all the mismatches except wide\n    // insertion markers\n    for (let i = 0; i < mismatches.length; i += 1) {\n      const mismatch = mismatches[i]\n      const [mismatchLeftPx, mismatchRightPx] = bpSpanPx(\n        start + mismatch.start,\n        start + mismatch.start + mismatch.length,\n        region,\n        bpPerPx,\n      )\n      const mismatchWidthPx = Math.max(\n        minFeatWidth,\n        Math.abs(mismatchLeftPx - mismatchRightPx),\n      )\n      if (mismatch.type === 'mismatch' && drawSNPs) {\n        const baseColor = colorForBase[mismatch.base] || '#888'\n\n        ctx.fillStyle = getAlphaColor(baseColor, mismatch)\n\n        ctx.fillRect(mismatchLeftPx, topPx, mismatchWidthPx, heightPx)\n\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          // normal SNP coloring\n          ctx.fillStyle = getAlphaColor(\n            theme.palette.getContrastText(baseColor),\n            mismatch,\n          )\n          ctx.fillText(\n            mismatch.base,\n            mismatchLeftPx + (mismatchWidthPx - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'deletion' && drawIndels) {\n        const baseColor = colorForBase.deletion\n        ctx.fillStyle = baseColor\n        ctx.fillRect(mismatchLeftPx, topPx, mismatchWidthPx, heightPx)\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          ctx.fillStyle = theme.palette.getContrastText(baseColor)\n          ctx.fillText(\n            mismatch.base,\n            mismatchLeftPx + (mismatchWidthPx - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'insertion' && drawIndels) {\n        ctx.fillStyle = 'purple'\n        const pos = mismatchLeftPx - 1\n        const len = +mismatch.base || mismatch.length\n        if (len < 10) {\n          ctx.fillRect(pos, topPx, w, heightPx)\n          if (1 / bpPerPx >= charWidth) {\n            ctx.fillRect(pos - w, topPx, w * 3, 1)\n            ctx.fillRect(pos - w, topPx + heightPx - 1, w * 3, 1)\n          }\n          if (1 / bpPerPx >= charWidth && heightPx >= heightLim) {\n            ctx.fillText(\n              `(${mismatch.base})`,\n              mismatchLeftPx + 2,\n              topPx + heightPx,\n            )\n          }\n        }\n      } else if (mismatch.type === 'hardclip' || mismatch.type === 'softclip') {\n        ctx.fillStyle = mismatch.type === 'hardclip' ? 'red' : 'blue'\n        const pos = mismatchLeftPx - 1\n        ctx.fillRect(pos, topPx + 1, w, heightPx - 2)\n        ctx.fillRect(pos - w, topPx, w * 3, 1)\n        ctx.fillRect(pos - w, topPx + heightPx - 1, w * 3, 1)\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          ctx.fillText(\n            `(${mismatch.base})`,\n            mismatchLeftPx + 2,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'skip') {\n        // fix to avoid bad rendering\n        // note that this was also related to chrome bug https://bugs.chromium.org/p/chro>\n        // ref #1236\n        if (mismatchLeftPx + mismatchWidthPx > 0) {\n          ctx.clearRect(\n            mismatchLeftPx,\n            topPx,\n            // make small exons more visible when zoomed far out\n            mismatchWidthPx - (bpPerPx > 10 ? 1.5 : 0),\n            heightPx,\n          )\n        }\n        ctx.fillStyle = '#333'\n        ctx.fillRect(mismatchLeftPx, topPx + heightPx / 2, mismatchWidthPx, 2)\n      }\n    }\n\n    // second pass, draw wide insertion markers on top\n    if (drawIndels) {\n      for (let i = 0; i < mismatches.length; i += 1) {\n        const mismatch = mismatches[i]\n        const [mismatchLeftPx] = bpSpanPx(\n          feature.get('start') + mismatch.start,\n          feature.get('start') + mismatch.start + mismatch.length,\n          region,\n          bpPerPx,\n        )\n        const len = +mismatch.base || mismatch.length\n        const txt = `${len}`\n        if (mismatch.type === 'insertion' && len >= 10) {\n          if (bpPerPx > insertionScale) {\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(mismatchLeftPx - 1, topPx, 2, heightPx)\n          } else if (heightPx > charHeight) {\n            const rect = ctx.measureText(txt)\n            const padding = 5\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(\n              mismatchLeftPx - rect.width / 2 - padding,\n              topPx,\n              rect.width + 2 * padding,\n              heightPx,\n            )\n            ctx.fillStyle = 'white'\n            ctx.fillText(txt, mismatchLeftPx - rect.width / 2, topPx + heightPx)\n          } else {\n            const padding = 2\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(mismatchLeftPx - padding, topPx, 2 * padding, heightPx)\n          }\n        }\n      }\n    }\n  }\n\n  drawSoftClipping(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n    config: AnyConfigurationModel,\n    theme: Theme,\n  ) {\n    const { feature, topPx, heightPx } = feat\n    const { regions, bpPerPx } = props\n    const [region] = regions\n    const minFeatWidth = readConfObject(config, 'minSubfeatureWidth')\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const seq = feature.get('seq')\n    const { charWidth, charHeight } = this.getCharWidthHeight(ctx)\n    const colorForBase: { [key: string]: string } = {\n      A: theme.palette.bases.A.main,\n      C: theme.palette.bases.C.main,\n      G: theme.palette.bases.G.main,\n      T: theme.palette.bases.T.main,\n      deletion: '#808080', // gray\n    }\n\n    // Display all bases softclipped off in lightened colors\n    if (seq) {\n      mismatches\n        .filter(mismatch => mismatch.type === 'softclip')\n        .forEach(mismatch => {\n          const softClipLength = mismatch.cliplen || 0\n          const softClipStart =\n            mismatch.start === 0\n              ? feature.get('start') - softClipLength\n              : feature.get('start') + mismatch.start\n\n          for (let k = 0; k < softClipLength; k += 1) {\n            const base = seq.charAt(k + mismatch.start)\n\n            // If softclip length+start is longer than sequence, no need to\n            // continue showing base\n            if (!base) {\n              return\n            }\n\n            const [softClipLeftPx, softClipRightPx] = bpSpanPx(\n              softClipStart + k,\n              softClipStart + k + 1,\n              region,\n              bpPerPx,\n            )\n            const softClipWidthPx = Math.max(\n              minFeatWidth,\n              Math.abs(softClipLeftPx - softClipRightPx),\n            )\n\n            // Black accounts for IUPAC ambiguity code bases such as N that\n            // show in soft clipping\n            const baseColor = colorForBase[base] || '#000000'\n            ctx.fillStyle = baseColor\n            ctx.fillRect(softClipLeftPx, topPx, softClipWidthPx, heightPx)\n\n            if (softClipWidthPx >= charWidth && heightPx >= charHeight - 5) {\n              ctx.fillStyle = theme.palette.getContrastText(baseColor)\n              ctx.fillText(\n                base,\n                softClipLeftPx + (softClipWidthPx - charWidth) / 2 + 1,\n                topPx + heightPx,\n              )\n            }\n          }\n        })\n    }\n  }\n\n  async makeImageData(\n    ctx: CanvasRenderingContext2D,\n    layoutRecords: any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { layout, config, showSoftClip, colorBy, theme: configTheme } = props\n    const mismatchAlpha = readConfObject(config, 'mismatchAlpha')\n    const theme = createJBrowseTheme(configTheme)\n    const colorForBase = getColorBaseMap(theme)\n    if (!layout) {\n      throw new Error(`layout required`)\n    }\n    if (!layout.addRect) {\n      throw new Error('invalid layout object')\n    }\n    ctx.font = 'bold 10px Courier New,monospace'\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layoutRecords.forEach((feat: any) => {\n      if (feat === null) {\n        return\n      }\n\n      const { feature, topPx, heightPx } = feat\n\n      ctx.fillStyle = readConfObject(config, 'color', { feature })\n      this.drawAlignmentRect(ctx, { feature, topPx, heightPx }, props)\n      this.drawMismatches(ctx, feat, props, theme, colorForBase, {\n        mismatchAlpha,\n\n        drawSNPs: shouldDrawMismatches(colorBy?.type),\n        drawIndels: shouldDrawMismatches(colorBy?.type),\n      })\n      if (showSoftClip) {\n        this.drawSoftClipping(ctx, feat, props, config, theme)\n      }\n    })\n  }\n\n  // we perform a full layout before render as a separate method because the\n  // layout determines the height of the canvas that we use to render\n  layoutFeats(props: RenderArgsDeserializedWithFeaturesAndLayout) {\n    const {\n      layout,\n      features,\n      sortedBy,\n      config,\n      bpPerPx,\n      showSoftClip,\n      regions,\n    } = props\n    const [region] = regions\n    if (!layout) {\n      throw new Error(`layout required`)\n    }\n    if (!layout.addRect) {\n      throw new Error('invalid layout object')\n    }\n\n    const sortedFeatures =\n      sortedBy && sortedBy.type && region.start === sortedBy.pos\n        ? sortFeature(features, sortedBy)\n        : null\n    const featureMap = sortedFeatures || features\n    const layoutRecords = iterMap(\n      featureMap.values(),\n      feature =>\n        this.layoutFeature(\n          feature,\n          layout,\n          config,\n          bpPerPx,\n          region,\n          showSoftClip,\n        ),\n      featureMap.size,\n    )\n    return layoutRecords\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const { bpPerPx, regions } = renderProps\n    const features = await this.getFeatures(renderProps)\n    const layout = this.createLayoutInWorker(renderProps)\n\n    const layoutRecords = this.layoutFeats({ ...renderProps, features, layout })\n\n    // @ts-ignore\n    const { dataAdapter: sequenceAdapter } = renderProps.adapterConfig\n      .sequenceAdapter\n      ? await getAdapter(\n          this.pluginManager,\n          renderProps.sessionId,\n          // @ts-ignore\n          renderProps.adapterConfig.sequenceAdapter,\n        )\n      : {}\n    const [region] = regions\n    const [feat] = sequenceAdapter\n      ? await (sequenceAdapter as BaseFeatureDataAdapter)\n          .getFeatures({\n            start: region.start,\n            end: region.end + 1,\n            refName: region.refName,\n            assemblyName: region.assemblyName,\n          })\n          .pipe(toArray())\n          .toPromise()\n      : []\n    const regionSequence = feat?.get('seq')\n\n    const width = (region.end - region.start) / bpPerPx\n    const height = Math.max(layout.getTotalHeight(), 1)\n\n    const res = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      (ctx: CanvasRenderingContext2D) =>\n        this.makeImageData(ctx, layoutRecords, {\n          ...renderProps,\n          layout,\n          features,\n          regionSequence,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n      maxHeightReached: layout.maxHeightReached,\n    }\n  }\n\n  createSession(args: PileupLayoutSessionProps) {\n    return new PileupLayoutSession(args)\n  }\n}\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { Mismatch } from '../BamAdapter/MismatchParser'\n\ninterface SortObject {\n  pos: number\n  type: string\n  tag?: string\n}\nexport const sortFeature = (\n  features: Map<string, Feature>,\n  sortedBy: SortObject,\n) => {\n  const featureArray = Array.from(features.values())\n  const featuresInCenterLine: Feature[] = []\n  const featuresOutsideCenter: Feature[] = []\n  const { pos, type } = sortedBy\n\n  // only sort on features that intersect center line, append those outside post-sort\n  featureArray.forEach(innerArray => {\n    const feature = innerArray\n    const start = feature.get('start')\n    const end = feature.get('end')\n    if (doesIntersect2(pos - 1, pos, start, end)) {\n      featuresInCenterLine.push(innerArray)\n    } else {\n      featuresOutsideCenter.push(innerArray)\n    }\n  })\n\n  const isCram = featureArray.length ? featureArray[0].get('tags') : false\n  switch (type) {\n    case 'Start location': {\n      featuresInCenterLine.sort((a, b) => a.get('start') - b.get('start'))\n      break\n    }\n\n    case 'tag': {\n      const tag = sortedBy.tag as string\n      const getTag = (f: Feature, t: string) => {\n        return isCram ? f.get('tags')[t] : f.get(t)\n      }\n      const isString =\n        featuresInCenterLine[0] &&\n        typeof getTag(featuresInCenterLine[0], tag) === 'string'\n      if (isString) {\n        featuresInCenterLine.sort((a, b) =>\n          getTag(b, tag).localeCompare(getTag(a, tag)),\n        )\n      } else {\n        featuresInCenterLine.sort(\n          (a, b) => (getTag(b, tag) || 0) - (getTag(a, tag) || 0),\n        )\n      }\n      break\n    }\n\n    // first sort all mismatches, then all reference bases at the end\n    case 'Base pair': {\n      const baseSortArray: [string, Mismatch][] = []\n      featuresInCenterLine.forEach(feature => {\n        const mismatches: Mismatch[] = feature.get('mismatches')\n        mismatches.forEach(mismatch => {\n          const start = feature.get('start')\n          const offset = start + mismatch.start + 1\n          const consuming =\n            mismatch.type === 'insertion' || mismatch.type === 'softclip'\n          const len = consuming ? 0 : mismatch.length\n          if (pos >= offset && pos < offset + len) {\n            baseSortArray.push([feature.id(), mismatch])\n          }\n        })\n      })\n\n      const baseMap = new Map(baseSortArray)\n      featuresInCenterLine.sort((a, b) => {\n        const aMismatch = baseMap.get(a.id())\n        const bMismatch = baseMap.get(b.id())\n        const acode = bMismatch && bMismatch.base.toUpperCase()\n        const bcode = aMismatch && aMismatch.base.toUpperCase()\n        if (acode === bcode && acode === '*') {\n          // @ts-ignore\n          return aMismatch.length - bMismatch.length\n        }\n        return (\n          (acode ? acode.charCodeAt(0) : 0) - (bcode ? bcode.charCodeAt(0) : 0)\n        )\n      })\n\n      break\n    }\n\n    // sorts positive strands then negative strands\n    case 'Read strand': {\n      featuresInCenterLine.sort((a, b) =>\n        a.get('strand') <= b.get('strand') ? 1 : -1,\n      )\n      break\n    }\n  }\n\n  const sortedMap = new Map(\n    featuresInCenterLine\n      .concat(featuresOutsideCenter)\n      .map(feature => [feature.id(), feature]),\n  )\n\n  return sortedMap\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { types } from 'mobx-state-tree'\n\nexport default (pluginManager: PluginManager) =>\n  types.late(() =>\n    ConfigurationSchema(\n      'SNPCoverageAdapter',\n      {\n        subadapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      },\n      { explicitlyTyped: true },\n    ),\n  )\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { reduce, filter, toArray } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\nimport { getTagAlt } from '../util'\nimport {\n  parseCigar,\n  getNextRefPos,\n  getModificationPositions,\n  Mismatch,\n} from '../BamAdapter/MismatchParser'\n\ninterface SNPCoverageOptions extends BaseOptions {\n  filters?: SerializableFilterChain\n}\n\nfunction mismatchLen(mismatch: Mismatch) {\n  return !isInterbase(mismatch.type) ? mismatch.length : 1\n}\n\nfunction isInterbase(type: string) {\n  return type === 'softclip' || type === 'hardclip' || type === 'insertion'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction inc(bin: any, strand: number, type: string, field: string) {\n  if (!bin[type][field]) {\n    bin[type][field] = { total: 0, strands: { '-1': 0, '0': 0, '1': 0 } }\n  }\n  bin[type][field].total++\n  bin[type][field].strands[strand]++\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dec(bin: any, strand: number, type: string, field: string) {\n  if (!bin[type][field]) {\n    bin[type][field] = { total: 0, strands: { '-1': 0, '0': 0, '1': 0 } }\n  }\n  bin[type][field].total--\n  bin[type][field].strands[strand]--\n}\n\nexport default class SNPCoverageAdapter extends BaseFeatureDataAdapter {\n  protected async configure() {\n    const subadapterConfig = readConfObject(this.config, 'subadapter')\n    const sequenceConf = readConfObject(this.config, [\n      'subadapter',\n      'sequenceAdapter',\n    ])\n    const dataAdapter = await this.getSubAdapter?.(subadapterConfig)\n\n    const sequenceAdapter = sequenceConf\n      ? await this.getSubAdapter?.(sequenceConf)\n      : undefined\n\n    if (!dataAdapter) {\n      throw new Error('Failed to get subadapter')\n    }\n\n    return {\n      subadapter: dataAdapter.dataAdapter as BaseFeatureDataAdapter,\n      sequenceAdapter: sequenceAdapter?.dataAdapter as\n        | BaseFeatureDataAdapter\n        | undefined,\n    }\n  }\n\n  getFeatures(region: Region, opts: SNPCoverageOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { subadapter } = await this.configure()\n      let stream = subadapter.getFeatures(region, opts)\n\n      if (opts.filters) {\n        const { filters } = opts\n        stream = stream.pipe(filter(f => filters.passes(f, opts)))\n      }\n\n      const bins = await this.generateCoverageBins(stream, region, opts)\n\n      bins.forEach((bin, index) => {\n        if (bin.total) {\n          observer.next(\n            new SimpleFeature({\n              id: `${this.id}-${region.start}-${index}`,\n              data: {\n                score: bin.total,\n                snpinfo: bin,\n                start: region.start + index,\n                end: region.start + index + 1,\n                refName: region.refName,\n              },\n            }),\n          )\n        }\n      })\n\n      observer.complete()\n    }, opts.signal)\n  }\n\n  async getRefNames(opts: BaseOptions = {}) {\n    const { subadapter } = await this.configure()\n    return subadapter.getRefNames(opts)\n  }\n\n  freeResources(/* { region } */): void {}\n\n  /**\n   * Generates coverage bins from features which details\n   * the reference, mismatches, strands, and coverage info\n   * @param features - Features of region to be passed in\n   * @param region - Region\n   * @param bpPerPx - base pairs per pixel\n   * @returns Array of nested frequency tables\n   */\n  async generateCoverageBins(\n    features: Observable<Feature>,\n    region: Region,\n    opts: { bpPerPx?: number; colorBy?: { type: string; tag?: string } },\n  ) {\n    const { colorBy } = opts\n    const { sequenceAdapter } = await this.configure()\n    const { refName, start, end } = region\n    const binMax = Math.ceil(region.end - region.start)\n\n    // bins contain cov feature if they contribute to coverage, or noncov which\n    // are interbase or other features that don't contribute to coverage.\n    // delskips are elements that don't contribute to coverage, but should be\n    // reported also (and are not interbase)\n    type BinType = { total: number; strands: { [key: string]: number } }\n    const initBins = Array.from({ length: binMax }, () => ({\n      total: 0,\n      lowqual: {} as BinType,\n      cov: {} as BinType,\n      delskips: {} as BinType,\n      noncov: {} as BinType,\n      ref: {} as BinType,\n    }))\n\n    // request an extra +1 on the end to get CpG crossing region boundary\n    let regionSeq: string | undefined\n\n    if (sequenceAdapter) {\n      const [feat] = await sequenceAdapter\n        .getFeatures({ refName, start, end: end + 1, assemblyName: 'na' })\n        .pipe(toArray())\n        .toPromise()\n      regionSeq = feat?.get('seq')\n    }\n\n    return features\n      .pipe(\n        reduce((bins, feature) => {\n          const cigar = feature.get('CIGAR')\n          const fstart = feature.get('start')\n          const fend = feature.get('end')\n          const fstrand = feature.get('strand')\n          const cigarOps = parseCigar(cigar)\n\n          for (let j = fstart; j < fend; j++) {\n            const i = j - region.start\n            if (i >= 0 && i < bins.length) {\n              const bin = bins[i]\n              bin.total++\n              inc(bin, fstrand, 'ref', 'ref')\n            }\n          }\n\n          if (colorBy?.type === 'modifications') {\n            const seq = feature.get('seq')\n            const mm = getTagAlt(feature, 'MM', 'Mm') || ''\n\n            const ml =\n              (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n\n            const probabilities = ml\n              ? (typeof ml === 'string' ? ml.split(',').map(e => +e) : ml).map(\n                  e => e / 255,\n                )\n              : (getTagAlt(feature, 'MP', 'Mp') as string)\n                  .split('')\n                  .map(s => s.charCodeAt(0) - 33)\n                  .map(elt => Math.min(1, elt / 50))\n\n            let probIndex = 0\n            getModificationPositions(mm, seq).forEach(({ type, positions }) => {\n              const mod = `mod_${type}`\n              for (const pos of getNextRefPos(cigarOps, positions)) {\n                const epos = pos + fstart - region.start\n                if (epos >= 0 && epos < bins.length && pos + fstart < fend) {\n                  const bin = bins[epos]\n                  if (probabilities[probIndex] > 0.5) {\n                    inc(bin, fstrand, 'cov', mod)\n                  } else {\n                    inc(bin, fstrand, 'lowqual', mod)\n                  }\n                }\n                probIndex++\n              }\n            })\n          }\n\n          // methylation based coloring takes into account both reference\n          // sequence CpG detection and reads\n          else if (colorBy?.type === 'methylation') {\n            if (!regionSeq) {\n              throw new Error(\n                'no region sequence detected, need sequenceAdapter configuration',\n              )\n            }\n            const seq = feature.get('seq')\n            const mm = getTagAlt(feature, 'MM', 'Mm') || ''\n            const methBins = new Array(region.end - region.start).fill(0)\n\n            getModificationPositions(mm, seq).forEach(({ type, positions }) => {\n              // we are processing methylation\n              if (type === 'm') {\n                for (const pos of getNextRefPos(cigarOps, positions)) {\n                  const epos = pos + fstart - region.start\n                  if (epos >= 0 && epos < methBins.length) {\n                    methBins[epos] = 1\n                  }\n                }\n              }\n            })\n\n            for (let j = fstart; j < fend; j++) {\n              const i = j - region.start\n              if (i >= 0 && i < bins.length) {\n                const l2 = regionSeq[i + 1]\n                const l1 = regionSeq[i]\n                const bin = bins[i]\n                // color\n                if (l1.toUpperCase() === 'C' && l2.toUpperCase() === 'G') {\n                  if (methBins[i]) {\n                    inc(bin, fstrand, 'cov', 'meth')\n                    dec(bin, fstrand, 'ref', 'ref')\n                  } else {\n                    inc(bin, fstrand, 'cov', 'unmeth')\n                    dec(bin, fstrand, 'ref', 'ref')\n                  }\n                }\n              }\n            }\n          }\n\n          // normal SNP based coloring\n          else {\n            const mismatches = feature.get('mismatches')\n            for (let i = 0; i < mismatches?.length; i++) {\n              const mismatch = mismatches[i] as Mismatch\n              const mstart = fstart + mismatch.start\n              for (let j = mstart; j < mstart + mismatchLen(mismatch); j++) {\n                const epos = j - region.start\n                if (epos >= 0 && epos < bins.length) {\n                  const bin = bins[epos]\n                  const { base, type } = mismatch\n                  const interbase = isInterbase(type)\n                  if (!interbase) {\n                    dec(bin, fstrand, 'ref', 'ref')\n                  } else {\n                    inc(bin, fstrand, 'noncov', type)\n                  }\n\n                  if (type === 'deletion' || type === 'skip') {\n                    inc(bin, fstrand, 'delskips', type)\n                    bin.total--\n                  } else if (!interbase) {\n                    inc(bin, fstrand, 'cov', base)\n                  }\n                }\n              }\n            }\n          }\n\n          return bins\n        }, initBins),\n      )\n      .toPromise()\n  }\n}\n\nconst { capabilities } = SNPCoverageAdapter\nexport { capabilities }\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaFactory from './configSchema'\nimport { capabilities } from './SNPCoverageAdapter'\n\nexport default (pluginManager: PluginManager) => {\n  return {\n    getAdapterClass: () => import('./SNPCoverageAdapter').then(r => r.default),\n    configSchema: configSchemaFactory(pluginManager),\n    adapterCapabilities: capabilities,\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    indicatorThreshold: {\n      type: 'number',\n      description:\n        'the proportion of reads containing a insertion/clip indicator',\n      defaultValue: 0.3,\n    },\n    drawInterbaseCounts: {\n      type: 'boolean',\n      description:\n        'draw count \"upsidedown histogram\" of the interbase events that don\\'t contribute to the coverage count so are not drawn in the normal histogram',\n      defaultValue: true,\n    },\n    drawIndicators: {\n      type: 'boolean',\n      description:\n        'draw a triangular indicator where an event has been detected',\n      defaultValue: true,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { RenderArgsDeserialized as FeatureRenderArgsDeserialized } from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport {\n  getOrigin,\n  getScale,\n  ScaleOpts,\n  WiggleBaseRenderer,\n  YSCALEBAR_LABEL_OFFSET,\n} from '@jbrowse/plugin-wiggle'\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  ticks: { values: number[] }\n  displayCrossHatches: boolean\n  modificationTagMap: Record<string, string>\n}\n\nexport default class SNPCoverageRenderer extends WiggleBaseRenderer {\n  // note: the snps are drawn on linear scale even if the data is drawn in log\n  // scape hence the two different scales being used\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      regions,\n      bpPerPx,\n      scaleOpts,\n      height: unadjustedHeight,\n      theme: configTheme,\n      config: cfg,\n      displayCrossHatches,\n      ticks: { values },\n      modificationTagMap,\n    } = props\n    const theme = createJBrowseTheme(configTheme)\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const offset = YSCALEBAR_LABEL_OFFSET\n    const height = unadjustedHeight - offset * 2\n\n    const opts = { ...scaleOpts, range: [0, height] }\n    const viewScale = getScale(opts)\n    const snpViewScale = getScale({ ...opts, scaleType: 'linear' })\n    const originY = getOrigin(scaleOpts.scaleType)\n    const snpOriginY = getOrigin('linear')\n\n    const indicatorThreshold = readConfObject(cfg, 'indicatorThreshold')\n    const drawInterbaseCounts = readConfObject(cfg, 'drawInterbaseCounts')\n    const drawIndicators = readConfObject(cfg, 'drawIndicators')\n\n    // get the y coordinate that we are plotting at, this can be log scale\n    const toY = (n: number) => height - viewScale(n) + offset\n    const toHeight = (n: number) => toY(originY) - toY(n)\n\n    // this is always linear scale, even when plotted on top of log scale\n    const snpToY = (n: number) => height - snpViewScale(n) + offset\n    const snpToHeight = (n: number) => snpToY(snpOriginY) - snpToY(n)\n\n    const colorForBase: { [key: string]: string } = {\n      A: theme.palette.bases.A.main,\n      C: theme.palette.bases.C.main,\n      G: theme.palette.bases.G.main,\n      T: theme.palette.bases.T.main,\n      total: 'lightgrey',\n      insertion: 'purple',\n      softclip: 'blue',\n      hardclip: 'red',\n      meth: 'red',\n      unmeth: 'blue',\n      ref: 'lightgrey',\n    }\n\n    // Use two pass rendering, which helps in visualizing the SNPs at higher\n    // bpPerPx First pass: draw the gray background\n    ctx.fillStyle = colorForBase.total\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + 0.3\n      const score = feature.get('score') as number\n      ctx.fillRect(leftPx, toY(score), w, toHeight(score))\n    }\n    ctx.fillStyle = 'grey'\n    ctx.beginPath()\n    ctx.lineTo(0, 0)\n    ctx.moveTo(0, width)\n    ctx.stroke()\n\n    // Second pass: draw the SNP data, and add a minimum feature width of 1px\n    // which can be wider than the actual bpPerPx This reduces overdrawing of\n    // the grey background over the SNPs\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      type Counts = {\n        [key: string]: { total: number; strands: { [key: string]: number } }\n      }\n      const snpinfo = feature.get('snpinfo') as {\n        cov: Counts\n        noncov: Counts\n        total: number\n      }\n      const w = Math.max(rightPx - leftPx + 0.3, 1)\n      const totalScore = snpinfo.total\n\n      Object.entries(snpinfo.cov)\n        .sort(([a], [b]) => {\n          if (a < b) {\n            return -1\n          }\n          if (a > b) {\n            return 1\n          }\n          return 0\n        })\n        .reduce((curr, [base, { total }]) => {\n          ctx.fillStyle =\n            colorForBase[base] ||\n            modificationTagMap[base.replace('mod_', '')] ||\n            'red'\n          ctx.fillRect(leftPx, snpToY(total + curr), w, snpToHeight(total))\n          return curr + total\n        }, 0)\n\n      const interbaseEvents = Object.entries(snpinfo.noncov)\n      const indicatorHeight = 4.5\n      if (drawInterbaseCounts) {\n        interbaseEvents.reduce((curr, [base, { total }]) => {\n          ctx.fillStyle = colorForBase[base]\n          ctx.fillRect(\n            leftPx - 0.6,\n            indicatorHeight + snpToHeight(curr),\n            1.2,\n            snpToHeight(total),\n          )\n          return curr + total\n        }, 0)\n      }\n\n      if (drawIndicators) {\n        let accum = 0\n        let max = 0\n        let maxBase = ''\n        interbaseEvents.forEach(([base, { total }]) => {\n          accum += total\n          if (total > max) {\n            max = total\n            maxBase = base\n          }\n        })\n\n        // avoid drawing a bunch of indicators if coverage is very low e.g.\n        // less than 7\n        if (accum > totalScore * indicatorThreshold && totalScore > 7) {\n          ctx.fillStyle = colorForBase[maxBase]\n          ctx.beginPath()\n          ctx.moveTo(leftPx - 3, 0)\n          ctx.lineTo(leftPx + 3, 0)\n          ctx.lineTo(leftPx, indicatorHeight)\n          ctx.fill()\n        }\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(140,140,140,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from './configSchema'\n\nexport { WiggleRendering as ReactComponent } from '@jbrowse/plugin-wiggle'\nexport { default } from './SNPCoverageRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { toArray } from 'rxjs/operators'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { getTagAlt } from '../util'\nimport { getModificationTypes } from '../BamAdapter/MismatchParser'\n\nexport class PileupGetGlobalValueForTag extends RpcMethodType {\n  name = 'PileupGetGlobalValueForTag'\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, args)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId, regions, tag } = deserializedArgs\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(regions)\n    const featuresArray = await features.pipe(toArray()).toPromise()\n    const uniqueValues = new Set<string>()\n    featuresArray.forEach(feature => {\n      const tags = feature.get('tags')\n      const val = tags ? tags[tag] : feature.get(tag)\n      if (val !== undefined) {\n        uniqueValues.add(`${val}`)\n      }\n    })\n    return [...uniqueValues]\n  }\n}\n\nexport class PileupGetVisibleModifications extends RpcMethodType {\n  name = 'PileupGetVisibleModifications'\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, args)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId, regions } = deserializedArgs\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(regions)\n    const featuresArray = await features.pipe(toArray()).toPromise()\n    const uniqueValues = new Set<string>()\n    featuresArray.forEach(feature => {\n      const val = (getTagAlt(feature, 'MM', 'Mm') as string) || ''\n      if (val !== undefined) {\n        getModificationTypes(val).forEach(t => uniqueValues.add(t))\n      }\n    })\n    return [...uniqueValues]\n  }\n}\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\nimport {\n  configSchema as alignmentsFeatureDetailConfigSchema,\n  stateModelFactory as alignmentsFeatureDetailStateModelFactory,\n} from './AlignmentsFeatureDetail'\nimport BamAdapterF from './BamAdapter'\nimport * as MismatchParser from './BamAdapter/MismatchParser'\nimport CramAdapterF from './CramAdapter'\nimport HtsgetBamAdapterF from './HtsgetBamAdapter'\nimport {\n  configSchemaFactory as linearAligmentsDisplayConfigSchemaFactory,\n  modelFactory as linearAlignmentsDisplayModelFactory,\n  ReactComponent as LinearAlignmentsDisplayReactComponent,\n} from './LinearAlignmentsDisplay'\nimport {\n  configSchemaFactory as linearPileupDisplayConfigSchemaFactory,\n  modelFactory as linearPileupDisplayModelFactory,\n} from './LinearPileupDisplay'\nimport {\n  configSchemaFactory as linearSNPCoverageDisplayConfigSchemaFactory,\n  modelFactory as linearSNPCoverageDisplayModelFactory,\n} from './LinearSNPCoverageDisplay'\nimport PileupRenderer, {\n  configSchema as pileupRendererConfigSchema,\n  ReactComponent as PileupRendererReactComponent,\n} from './PileupRenderer'\nimport SNPCoverageAdapterF from './SNPCoverageAdapter'\nimport SNPCoverageRenderer, {\n  configSchema as SNPCoverageRendererConfigSchema,\n  ReactComponent as SNPCoverageRendererReactComponent,\n} from './SNPCoverageRenderer'\nimport {\n  PileupGetGlobalValueForTag,\n  PileupGetVisibleModifications,\n} from './PileupRPC/rpcMethods'\n\nexport { MismatchParser }\n\nexport default class AlignmentsPlugin extends Plugin {\n  name = 'AlignmentsPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'AlignmentsTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      const track = new TrackType({\n        name: 'AlignmentsTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'AlignmentsTrack',\n          configSchema,\n        ),\n      })\n      const linearAlignmentsDisplay = pluginManager.getDisplayType(\n        'LinearAlignmentsDisplay',\n      )\n      // Add LinearAlignmentsDisplay here so that it has priority over the other\n      // linear displays (defaults to order the displays are added, but we have\n      // to add the Pileup and SNPCoverage displays first).\n      track.addDisplayType(linearAlignmentsDisplay)\n      return track\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearPileupDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearPileupDisplay',\n        configSchema,\n        stateModel: linearPileupDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearSNPCoverageDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearSNPCoverageDisplay',\n        configSchema,\n        stateModel: linearSNPCoverageDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearWiggleDisplayReactComponent,\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearAligmentsDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearAlignmentsDisplay',\n        configSchema,\n        stateModel: linearAlignmentsDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearAlignmentsDisplayReactComponent,\n      })\n    })\n    pluginManager.addWidgetType(\n      () =>\n        new WidgetType({\n          name: 'AlignmentsFeatureWidget',\n          heading: 'Feature details',\n          configSchema: alignmentsFeatureDetailConfigSchema,\n          stateModel: alignmentsFeatureDetailStateModelFactory(pluginManager),\n          ReactComponent: lazy(\n            () => import('./AlignmentsFeatureDetail/AlignmentsFeatureDetail'),\n          ),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BamAdapter',\n          ...pluginManager.load(BamAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'SNPCoverageAdapter',\n          ...pluginManager.load(SNPCoverageAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'CramAdapter',\n          ...pluginManager.load(CramAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'HtsgetBamAdapter',\n          ...pluginManager.load(HtsgetBamAdapterF),\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new PileupRenderer({\n          name: 'PileupRenderer',\n          ReactComponent: PileupRendererReactComponent,\n          configSchema: pileupRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new SNPCoverageRenderer({\n          name: 'SNPCoverageRenderer',\n          ReactComponent: SNPCoverageRendererReactComponent,\n          configSchema: SNPCoverageRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRpcMethod(\n      () => new PileupGetGlobalValueForTag(pluginManager),\n    )\n    pluginManager.addRpcMethod(\n      () => new PileupGetVisibleModifications(pluginManager),\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nfunction PileupConfigFactory(pluginManager: PluginManager) {\n  const PileupRendererConfigSchema = pluginManager.getRendererType(\n    'PileupRenderer',\n  ).configSchema\n  const SvgFeatureRendererConfigSchema = pluginManager.getRendererType(\n    'SvgFeatureRenderer',\n  ).configSchema\n\n  // modify config schema to take in a sub coverage display\n  return ConfigurationSchema(\n    'LinearPileupDisplay',\n    {\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['pileup', 'svg']),\n        defaultValue: 'pileup',\n      },\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        PileupRenderer: PileupRendererConfigSchema,\n        SvgFeatureRenderer: SvgFeatureRendererConfigSchema,\n      }),\n      renderer: '',\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 100,\n      },\n      colorScheme: {\n        type: 'stringEnum',\n        model: types.enumeration('colorScheme', [\n          'strand',\n          'normal',\n          'insertSize',\n          'insertSizeAndOrientation',\n          'mappingQuality',\n          'tag',\n        ]),\n        description: 'color scheme to use',\n        defaultValue: 'normal',\n      },\n    },\n    {\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type LinearPileupDisplayConfigModel = ReturnType<\n  typeof PileupConfigFactory\n>\nexport type LinearPileupDisplayConfig = Instance<LinearPileupDisplayConfigModel>\nexport default PileupConfigFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SNPCoverageConfigFactory(pluginManager: PluginManager) {\n  const SNPCoverageRendererConfigSchema = pluginManager.getRendererType(\n    'SNPCoverageRenderer',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearSNPCoverageDisplay',\n    {\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', ['local']),\n        description:\n          'performs local autoscaling (no other options for SNP Coverage available)',\n      },\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 100,\n      },\n      headroom: {\n        type: 'number',\n        description:\n          'round the upper value of the domain scale to the nearest N',\n        defaultValue: 0,\n      },\n\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        SNPCoverageRenderer: SNPCoverageRendererConfigSchema,\n      }),\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst configModelFactory = (pluginManager: PluginManager) => {\n  const PileupDisplayConfigSchema = pluginManager.getDisplayType(\n    'LinearPileupDisplay',\n  ).configSchema\n  const SNPCoverageDisplayConfigSchema = pluginManager.getDisplayType(\n    'LinearSNPCoverageDisplay',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearAlignmentsDisplay',\n    {\n      pileupDisplay: PileupDisplayConfigSchema,\n      snpCoverageDisplay: SNPCoverageDisplayConfigSchema,\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n\nexport type AlignmentsConfigModel = ReturnType<typeof configModelFactory>\nexport default configModelFactory\n","/* eslint-disable no-underscore-dangle */\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { BamRecord } from '@gmod/bam'\nimport {\n  parseCigar,\n  generateMD,\n  cigarToMismatches,\n  mdToMismatches,\n  Mismatch,\n} from './MismatchParser'\n\nimport BamAdapter from './BamAdapter'\n\nexport default class BamSlightlyLazyFeature implements Feature {\n  private record: BamRecord\n\n  private adapter: BamAdapter\n\n  private ref?: string\n\n  constructor(record: BamRecord, adapter: BamAdapter, ref?: string) {\n    this.record = record\n    this.adapter = adapter\n    this.ref = ref\n  }\n\n  _get_name() {\n    return this.record.get('name')\n  }\n\n  _get_type(): string {\n    return 'match'\n  }\n\n  _get_score(): number {\n    return this.record.get('mq')\n  }\n\n  _get_flags(): string {\n    // @ts-ignore\n    return this.record.flags\n  }\n\n  _get_strand(): number {\n    return this.record.isReverseComplemented() ? -1 : 1\n  }\n\n  _get_read_group_id(): number {\n    // @ts-ignore\n    return this.record.readGroupId\n  }\n\n  _get_pair_orientation() {\n    return this.record.isPaired() ? this.record.getPairOrientation() : undefined\n  }\n\n  _get_next_seq_id() {\n    return this.record._next_refid()\n  }\n\n  _get_seq_id() {\n    // @ts-ignore\n    return this.record._refID\n  }\n\n  _get_next_refName(): string | undefined {\n    return this.adapter.refIdToName(this.record._next_refid())\n  }\n\n  _get_next_segment_position(): string | undefined {\n    return this.record.isPaired()\n      ? `${this.adapter.refIdToName(this.record._next_refid())}:${\n          this.record._next_pos() + 1\n        }`\n      : undefined\n  }\n\n  _get_seq(): string {\n    return this.record.getReadBases()\n  }\n\n  _get_MD(): string | undefined {\n    const md = this.record.get('MD')\n    const seq = this.get('seq')\n    if (!md && seq && this.ref) {\n      return generateMD(this.ref, this.record.getReadBases(), this.get('CIGAR'))\n    }\n    return md\n  }\n\n  qualRaw(): Buffer | undefined {\n    return this.record.qualRaw()\n  }\n\n  set(): void {}\n\n  tags() {\n    const properties = Object.getOwnPropertyNames(\n      BamSlightlyLazyFeature.prototype,\n    )\n\n    return [\n      ...new Set(\n        properties\n          .filter(\n            prop =>\n              prop.startsWith('_get_') &&\n              prop !== '_get_mismatches' &&\n              prop !== '_get_skips_and_dels' &&\n              prop !== '_get_cram_read_features' &&\n              prop !== '_get_tags' &&\n              prop !== '_get_next_seq_id' &&\n              prop !== '_get_seq_id',\n          )\n          .map(methodName => methodName.replace('_get_', ''))\n          .concat(this.record._tags()),\n      ),\n    ]\n  }\n\n  id(): string {\n    return `${this.adapter.id}-${this.record.id()}`\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(field: string): any {\n    const methodName = `_get_${field}`\n    // @ts-ignore\n    if (this[methodName]) {\n      // @ts-ignore\n      return this[methodName]()\n    }\n    return this.record.get(field)\n  }\n\n  _get_refName(): string | undefined {\n    return this.adapter.refIdToName(this.record.seq_id())\n  }\n\n  parent(): undefined {\n    return undefined\n  }\n\n  children(): undefined {\n    return undefined\n  }\n\n  pairedFeature(): boolean {\n    return false\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    const tags = Object.fromEntries(\n      this.tags()\n        .map(t => {\n          return [t, this.get(t)]\n        })\n        .filter(elt => elt[1] !== undefined),\n    )\n\n    return {\n      ...tags,\n      uniqueId: this.id(),\n    }\n  }\n\n  _get_skips_and_dels(\n    opts: {\n      cigarAttributeName: string\n    } = {\n      cigarAttributeName: 'CIGAR',\n    },\n  ): Mismatch[] {\n    const { cigarAttributeName } = opts\n    let mismatches: Mismatch[] = []\n    let cigarOps: string[] = []\n\n    // parse the CIGAR tag if it has one\n    const cigarString = this.get(cigarAttributeName)\n    if (cigarString) {\n      cigarOps = parseCigar(cigarString)\n      mismatches = mismatches.concat(\n        cigarToMismatches(cigarOps, this.get('seq'), this.qualRaw()),\n      )\n    }\n    return mismatches\n  }\n\n  _get_mismatches({\n    cigarAttributeName = 'CIGAR',\n    mdAttributeName = 'MD',\n  }: {\n    cigarAttributeName?: string\n    mdAttributeName?: string\n  } = {}): Mismatch[] {\n    let mismatches: Mismatch[] = []\n    let cigarOps: string[] = []\n\n    // parse the CIGAR tag if it has one\n    const cigarString = this.get(cigarAttributeName)\n    if (cigarString) {\n      cigarOps = parseCigar(cigarString)\n      mismatches = mismatches.concat(\n        cigarToMismatches(cigarOps, this.get('seq'), this.qualRaw()),\n      )\n    }\n\n    // now let's look for CRAM or MD mismatches\n    const mdString = this.get(mdAttributeName)\n    if (mdString) {\n      mismatches = mismatches.concat(\n        mdToMismatches(\n          mdString,\n          cigarOps,\n          mismatches,\n          this.get('seq'),\n          this.qualRaw(),\n        ),\n      )\n    }\n\n    // uniqify the mismatches\n    const seen: { [index: string]: boolean } = {}\n    return mismatches.filter(m => {\n      const key = `${m.type},${m.start},${m.length}`\n      const s = seen[key]\n      seen[key] = true\n      return !s\n    })\n  }\n\n  _get_clipPos() {\n    const cigar = this.get('CIGAR') || ''\n    return this.get('strand') === -1\n      ? +(cigar.match(/(\\d+)[SH]$/) || [])[1] || 0\n      : +(cigar.match(/^(\\d+)([SH])/) || [])[1] || 0\n  }\n}\n","import { BamFile } from '@gmod/bam'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport { checkAbortSignal } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { toArray } from 'rxjs/operators'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport BamSlightlyLazyFeature from './BamSlightlyLazyFeature'\n\ninterface Header {\n  idToName: string[]\n  nameToId: Record<string, number>\n}\n\nexport default class BamAdapter extends BaseFeatureDataAdapter {\n  private samHeader?: Header\n\n  private setupP?: Promise<Header>\n\n  protected configured?: Promise<{\n    bam: BamFile\n    sequenceAdapter?: BaseFeatureDataAdapter\n  }>\n\n  // derived classes may not use the same configuration so a custom\n  // configure method allows derived classes to override this behavior\n  protected async configure() {\n    if (!this.configured) {\n      const bamLocation = readConfObject(this.config, 'bamLocation')\n      const location = readConfObject(this.config, ['index', 'location'])\n      const indexType = readConfObject(this.config, ['index', 'indexType'])\n      const chunkSizeLimit = readConfObject(this.config, 'chunkSizeLimit')\n      const fetchSizeLimit = readConfObject(this.config, 'fetchSizeLimit')\n      const bam = new BamFile({\n        bamFilehandle: openLocation(bamLocation),\n        csiFilehandle: indexType === 'CSI' ? openLocation(location) : undefined,\n        baiFilehandle: indexType !== 'CSI' ? openLocation(location) : undefined,\n        chunkSizeLimit,\n        fetchSizeLimit,\n      })\n\n      const adapterConfig = readConfObject(this.config, 'sequenceAdapter')\n      if (adapterConfig && this.getSubAdapter) {\n        this.configured = this.getSubAdapter(adapterConfig).then(\n          ({ dataAdapter }) => ({\n            bam,\n            sequenceAdapter: dataAdapter as BaseFeatureDataAdapter,\n          }),\n        )\n      } else {\n        this.configured = Promise.resolve({ bam })\n      }\n    }\n    return this.configured\n  }\n\n  async getHeader(opts?: BaseOptions) {\n    const { bam } = await this.configure()\n    return bam.getHeaderText(opts)\n  }\n\n  private async setup(opts?: BaseOptions) {\n    // note that derived classes may not provide a BAM directly so this is\n    // conditional\n    const { statusCallback = () => {} } = opts || {}\n    if (!this.setupP) {\n      this.setupP = this.configure()\n        .then(async ({ bam }) => {\n          statusCallback('Downloading index')\n          const samHeader = await bam.getHeader(opts)\n\n          // use the @SQ lines in the header to figure out the\n          // mapping between ref ref ID numbers and names\n          const idToName: string[] = []\n          const nameToId: Record<string, number> = {}\n          samHeader\n            .filter(l => l.tag === 'SQ')\n            .forEach((sqLine, refId) => {\n              sqLine.data.forEach(item => {\n                if (item.tag === 'SN') {\n                  // this is the ref name\n                  const refName = item.value\n                  nameToId[refName] = refId\n                  idToName[refId] = refName\n                }\n              })\n            })\n          statusCallback('')\n          this.samHeader = { idToName, nameToId }\n          return this.samHeader\n        })\n        .catch(e => {\n          this.setupP = undefined\n          throw e\n        })\n    }\n    return this.setupP\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const { idToName } = await this.setup(opts)\n    return idToName\n  }\n\n  private async seqFetch(refName: string, start: number, end: number) {\n    const { sequenceAdapter } = await this.configure()\n    const refSeqStore = sequenceAdapter\n    if (!refSeqStore) {\n      return undefined\n    }\n    if (!refName) {\n      return undefined\n    }\n\n    const features = refSeqStore.getFeatures({\n      refName,\n      start,\n      end,\n      assemblyName: '',\n    })\n\n    const seqChunks = await features.pipe(toArray()).toPromise()\n\n    const trimmed: string[] = []\n    seqChunks\n      .sort((a: Feature, b: Feature) => a.get('start') - b.get('start'))\n      .forEach((chunk: Feature) => {\n        const chunkStart = chunk.get('start')\n        const chunkEnd = chunk.get('end')\n        const trimStart = Math.max(start - chunkStart, 0)\n        const trimEnd = Math.min(end - chunkStart, chunkEnd - chunkStart)\n        const trimLength = trimEnd - trimStart\n        const chunkSeq = chunk.get('seq') || chunk.get('residues')\n        trimmed.push(chunkSeq.substr(trimStart, trimLength))\n      })\n\n    const sequence = trimmed.join('')\n    if (sequence.length !== end - start) {\n      throw new Error(\n        `sequence fetch failed: fetching ${refName}:${(\n          start - 1\n        ).toLocaleString()}-${end.toLocaleString()} returned ${sequence.length.toLocaleString()} bases, but should have returned ${(\n          end - start\n        ).toLocaleString()}`,\n      )\n    }\n    return sequence\n  }\n\n  getFeatures(\n    region: Region & { originalRefName?: string },\n    opts?: BaseOptions,\n  ) {\n    const { refName, start, end, originalRefName } = region\n    const { signal, statusCallback = () => {} } = opts || {}\n    return ObservableCreate<Feature>(async observer => {\n      const { bam } = await this.configure()\n      await this.setup(opts)\n      statusCallback('Downloading alignments')\n      const records = await bam.getRecordsForRange(refName, start, end, opts)\n\n      checkAbortSignal(signal)\n\n      for (const record of records) {\n        let ref: string | undefined\n        if (!record.get('md')) {\n          ref = await this.seqFetch(\n            originalRefName || refName,\n            record.get('start'),\n            record.get('end'),\n          )\n        }\n        observer.next(new BamSlightlyLazyFeature(record, this, ref))\n      }\n      statusCallback('')\n      observer.complete()\n    }, signal)\n  }\n\n  freeResources(/* { region } */): void {}\n\n  // depends on setup being called before the BAM constructor\n  refIdToName(refId: number): string | undefined {\n    return this.samHeader?.idToName[refId]\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\n\nimport CramAdapter from './CramAdapter'\n\nexport interface Mismatch {\n  qual?: number\n  start: number\n  length: number\n  type: string\n  base: string\n  altbase?: string\n  seq?: string\n  cliplen?: number\n}\n\nexport default class CramSlightlyLazyFeature implements Feature {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private record: any\n\n  private _store: CramAdapter\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(record: any, store: CramAdapter) {\n    this.record = record\n    this._store = store\n  }\n\n  _get_name() {\n    return this.record.readName\n  }\n\n  _get_start() {\n    return this.record.alignmentStart - 1\n  }\n\n  _get_end() {\n    return this.record.alignmentStart + this.record.lengthOnRef - 1\n  }\n\n  _get_cram_read_features() {\n    return this.record.readFeatures\n  }\n\n  _get_type() {\n    return 'match'\n  }\n\n  _get_score() {\n    return this.record.mappingQuality\n  }\n\n  _get_flags() {\n    return this.record.flags\n  }\n\n  _get_strand() {\n    return this.record.isReverseComplemented() ? -1 : 1\n  }\n\n  _read_group_id() {\n    const rg = this._store.samHeader.readGroups\n    return rg ? rg[this.record.readGroupId] : undefined\n  }\n\n  _get_qual() {\n    return (this.record.qualityScores || []).join(' ')\n  }\n\n  qualRaw() {\n    return this.record.qualityScores\n  }\n\n  _get_seq_id() {\n    return this._store.refIdToName(this.record.sequenceId)\n  }\n\n  _get_refName() {\n    return this._get_seq_id()\n  }\n\n  _get_is_paired() {\n    return !!this.record.mate\n  }\n\n  _get_pair_orientation() {\n    return this.record.isPaired() ? this.record.getPairOrientation() : undefined\n  }\n\n  _get_template_length() {\n    return this.record.templateLength || this.record.templateSize\n  }\n\n  _get_next_seq_id() {\n    return this.record.mate\n      ? this._store.refIdToName(this.record.mate.sequenceId)\n      : undefined\n  }\n\n  _get_next_pos() {\n    return this.record.mate ? this.record.mate.alignmentStart : undefined\n  }\n\n  _get_next_segment_position() {\n    return this.record.mate\n      ? `${this._store.refIdToName(this.record.mate.sequenceId)}:${\n          this.record.mate.alignmentStart\n        }`\n      : undefined\n  }\n\n  _get_tags() {\n    const RG = this._read_group_id()\n    const { tags } = this.record\n    // avoids a tag copy if no RG, but just copy if there is one\n    return RG !== undefined ? { ...tags, RG } : tags\n  }\n\n  _get_seq() {\n    return this.record.getReadBases()\n  }\n\n  // generate a CIGAR, based on code from jkbonfield\n  _get_CIGAR() {\n    let seq = ''\n    let cigar = ''\n    let op = 'M'\n    let oplen = 0\n\n    // not sure I should access these, but...\n    const ref = this.record._refRegion.seq\n    const refStart = this.record._refRegion.start\n    let last_pos = this.record.alignmentStart\n    let sublen = 0\n    if (typeof this.record.readFeatures !== 'undefined') {\n      // @ts-ignore\n      this.record.readFeatures.forEach(({ code, refPos, sub, data }) => {\n        sublen = refPos - last_pos\n        seq += ref.substring(last_pos - refStart, refPos - refStart)\n        last_pos = refPos\n\n        if (oplen && op !== 'M') {\n          cigar += oplen + op\n          oplen = 0\n        }\n        if (sublen) {\n          op = 'M'\n          oplen += sublen\n        }\n\n        if (code === 'b') {\n          // An array of bases stored verbatim\n          const ret = data.split(',')\n          const added = String.fromCharCode(...ret)\n          seq += added\n          last_pos += added.length\n          oplen += added.length\n        } else if (code === 'B') {\n          // Single base (+ qual score)\n          seq += sub\n          last_pos++\n          oplen++\n        } else if (code === 'X') {\n          // Substitution\n          seq += sub\n          last_pos++\n          oplen++\n        } else if (code === 'D' || code === 'N') {\n          // Deletion or Ref Skip\n          last_pos += data\n          if (oplen) {\n            cigar += oplen + op\n          }\n          cigar += data + code\n          oplen = 0\n        } else if (code === 'I' || code === 'S') {\n          // Insertion or soft-clip\n          seq += data\n          if (oplen) {\n            cigar += oplen + op\n          }\n          cigar += data.length + code\n          oplen = 0\n        } else if (code === 'i') {\n          // Single base insertion\n          seq += data\n          if (oplen) {\n            cigar += oplen + op\n          }\n          cigar += `${1}I`\n          oplen = 0\n        } else if (code === 'P') {\n          // Padding\n          if (oplen) {\n            cigar += oplen + op\n          }\n          cigar += `${data}P`\n        } else if (code === 'H') {\n          // Hard clip\n          if (oplen) {\n            cigar += oplen + op\n          }\n          cigar += `${data}H`\n          oplen = 0\n        } // else q or Q\n      })\n    } else {\n      sublen = this.record.readLength - seq.length\n    }\n    if (seq.length !== this.record.readLength) {\n      sublen = this.record.readLength - seq.length\n      seq += ref.substring(last_pos - refStart, last_pos - refStart + sublen)\n\n      if (oplen && op !== 'M') {\n        cigar += oplen + op\n        oplen = 0\n      }\n      op = 'M'\n      oplen += sublen\n    }\n    if (oplen) {\n      cigar += oplen + op\n    }\n    return cigar\n  }\n\n  tags() {\n    const properties = Object.getOwnPropertyNames(\n      CramSlightlyLazyFeature.prototype,\n    )\n    return properties\n      .filter(\n        prop =>\n          prop.startsWith('_get_') &&\n          prop !== '_get_mismatches' &&\n          prop !== '_get_skips_and_dels' &&\n          prop !== '_get_cram_read_features',\n      )\n      .map(methodName => methodName.replace('_get_', ''))\n  }\n\n  id() {\n    return `${this._store.id}-${this.record.uniqueId}`\n  }\n\n  get(field: string) {\n    const methodName = `_get_${field}`\n    // @ts-ignore\n    if (this[methodName]) {\n      // @ts-ignore\n      return this[methodName]()\n    }\n    return undefined\n  }\n\n  parent(): undefined | Feature {\n    return undefined\n  }\n\n  children(): undefined | Feature[] {\n    return undefined\n  }\n\n  set(): void {}\n\n  pairedFeature() {\n    return false\n  }\n\n  _get_clipPos() {\n    const mismatches = this.get('mismatches')\n    if (mismatches.length) {\n      const record =\n        this.get('strand') === -1\n          ? mismatches[mismatches.length - 1]\n          : mismatches[0]\n      const { type, cliplen } = record\n      if (type === 'softclip' || type === 'hardclip') {\n        return cliplen\n      }\n    }\n    return 0\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const tags: Record<string, any> = {}\n    this.tags().forEach((t: string) => {\n      const val = this.get(t)\n      if (val !== undefined) {\n        tags[t] = val\n      }\n    })\n\n    return {\n      ...tags,\n      name: this.get('name'),\n      type: this.get('type'),\n      uniqueId: this.id(),\n    }\n  }\n\n  _get_mismatches(): Mismatch[] {\n    const readFeatures = this.get('cram_read_features')\n    const qual = this.qualRaw()\n    if (!readFeatures) {\n      return []\n    }\n    const start = this.get('start')\n    const mismatches: Mismatch[] = []\n    readFeatures.forEach(\n      (args: {\n        code: string\n        refPos: number\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: any\n        pos: number\n        sub: string\n        ref: string\n      }) => {\n        const { code, pos, data, sub, ref } = args\n        const refPos = args.refPos - 1 - start\n        if (code === 'X') {\n          // substitution\n          mismatches.push({\n            start: refPos,\n            length: 1,\n            base: sub,\n            qual: qual?.[pos],\n            altbase: ref,\n            type: 'mismatch',\n          })\n        } else if (code === 'I') {\n          // insertion\n          mismatches.push({\n            start: refPos,\n            type: 'insertion',\n            base: `${data.length}`,\n            length: 0,\n          })\n        } else if (code === 'N') {\n          // reference skip\n          mismatches.push({\n            type: 'skip',\n            length: data,\n            start: refPos,\n            base: 'N',\n          })\n        } else if (code === 'S') {\n          // soft clip\n          const len = data.length\n          mismatches.push({\n            start: refPos,\n            type: 'softclip',\n            base: `S${len}`,\n            cliplen: len,\n            length: 1,\n          })\n        } else if (code === 'P') {\n          // padding\n        } else if (code === 'H') {\n          // hard clip\n          const len = data\n          mismatches.push({\n            start: refPos,\n            type: 'hardclip',\n            base: `H${len}`,\n            cliplen: len,\n            length: 1,\n          })\n        } else if (code === 'D') {\n          // deletion\n          mismatches.push({\n            type: 'deletion',\n            length: data,\n            start: refPos,\n            base: '*',\n          })\n        } else if (code === 'b') {\n          // stretch of bases\n        } else if (code === 'q') {\n          // stretch of qual scores\n        } else if (code === 'B') {\n          // a pair of [base, qual]\n        } else if (code === 'i') {\n          // single-base insertion\n          // insertion\n          mismatches.push({\n            start: refPos,\n            type: 'insertion',\n            base: data,\n            length: 1,\n          })\n        } else if (code === 'Q') {\n          // single quality value\n        }\n      },\n    )\n    return mismatches\n  }\n\n  _get_skips_and_dels(): Mismatch[] {\n    return this._get_mismatches()\n  }\n}\n","import { CraiIndex, IndexedCramFile } from '@gmod/cram'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport { checkAbortSignal } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { toArray } from 'rxjs/operators'\nimport CramSlightlyLazyFeature from './CramSlightlyLazyFeature'\n\ninterface HeaderLine {\n  tag: string\n  value: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  data: HeaderLine[]\n}\ninterface Header {\n  idToName?: string[]\n  nameToId?: Record<string, number>\n  readGroups?: number[]\n}\n\nexport default class CramAdapter extends BaseFeatureDataAdapter {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private cram: any\n\n  private setupP?: Promise<Header>\n\n  private sequenceAdapter?: BaseFeatureDataAdapter\n\n  public samHeader: Header = {}\n\n  // maps a refname to an id\n  private seqIdToRefName: string[] | undefined\n\n  // maps a seqId to original refname, passed specially to render args, to a seqid\n  private seqIdToOriginalRefName: string[] = []\n\n  public async configure() {\n    const cramLocation = readConfObject(this.config, 'cramLocation')\n    const craiLocation = readConfObject(this.config, 'craiLocation')\n    if (!cramLocation) {\n      throw new Error('missing cramLocation argument')\n    }\n    if (!craiLocation) {\n      throw new Error('missing craiLocation argument')\n    }\n    this.cram = new IndexedCramFile({\n      cramFilehandle: openLocation(cramLocation),\n      index: new CraiIndex({ filehandle: openLocation(craiLocation) }),\n      seqFetch: this.seqFetch.bind(this),\n      checkSequenceMD5: false,\n      fetchSizeLimit: this.config.fetchSizeLimit || 600000000,\n    })\n    // instantiate the sequence adapter\n    const sequenceAdapterType = readConfObject(this.config, [\n      'sequenceAdapter',\n      'type',\n    ])\n\n    if (!this.getSubAdapter) {\n      throw new Error('Error getting subadapter')\n    }\n\n    const { dataAdapter } = await this.getSubAdapter(\n      readConfObject(this.config, 'sequenceAdapter'),\n    )\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      this.sequenceAdapter = dataAdapter\n    } else {\n      throw new Error(\n        `CRAM feature adapters cannot use sequence adapters of type '${sequenceAdapterType}'`,\n      )\n    }\n    return { sequenceAdapter: this.sequenceAdapter }\n  }\n\n  async getHeader(opts?: BaseOptions) {\n    await this.configure()\n    return this.cram.cram.getHeaderText(opts)\n  }\n\n  private async seqFetch(seqId: number, start: number, end: number) {\n    start -= 1 // convert from 1-based closed to interbase\n\n    const refSeqStore = this.sequenceAdapter\n    if (!refSeqStore) {\n      return undefined\n    }\n    const refName = this.refIdToOriginalName(seqId) || this.refIdToName(seqId)\n    if (!refName) {\n      return undefined\n    }\n\n    const features = refSeqStore.getFeatures(\n      {\n        refName,\n        start,\n        end,\n        assemblyName: '',\n      },\n      {},\n    )\n\n    const seqChunks = await features.pipe(toArray()).toPromise()\n\n    const trimmed: string[] = []\n    seqChunks\n      .sort((a, b) => a.get('start') - b.get('start'))\n      .forEach((chunk: Feature) => {\n        const chunkStart = chunk.get('start')\n        const chunkEnd = chunk.get('end')\n        const trimStart = Math.max(start - chunkStart, 0)\n        const trimEnd = Math.min(end - chunkStart, chunkEnd - chunkStart)\n        const trimLength = trimEnd - trimStart\n        const chunkSeq = chunk.get('seq') || chunk.get('residues')\n        trimmed.push(chunkSeq.substr(trimStart, trimLength))\n      })\n\n    const sequence = trimmed.join('')\n    if (sequence.length !== end - start) {\n      throw new Error(\n        `sequence fetch failed: fetching ${refName}:${(\n          start - 1\n        ).toLocaleString()}-${end.toLocaleString()} returned ${sequence.length.toLocaleString()} bases, but should have returned ${(\n          end - start\n        ).toLocaleString()}`,\n      )\n    }\n    return sequence\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    if (!this.setupP) {\n      this.setupP = this.configure()\n        .then(async () => {\n          statusCallback('Downloading index')\n          const samHeader: HeaderLine[] = await this.cram.cram.getSamHeader(\n            opts?.signal,\n          )\n\n          // use the @SQ lines in the header to figure out the\n          // mapping between ref ID numbers and names\n          const idToName: string[] = []\n          const nameToId: Record<string, number> = {}\n          samHeader\n            .filter(l => l.tag === 'SQ')\n            .forEach((sqLine, refId) => {\n              sqLine.data.forEach(item => {\n                if (item.tag === 'SN') {\n                  // this is the ref name\n                  const refName = item.value\n                  nameToId[refName] = refId\n                  idToName[refId] = refName\n                }\n              })\n            })\n\n          const readGroups = samHeader\n            .filter(l => l.tag === 'RG')\n            .map(rgLine => rgLine.data.find(item => item.tag === 'ID')?.value)\n\n          if (idToName.length) {\n            this.samHeader = { idToName, nameToId, readGroups }\n          }\n          statusCallback('')\n          return this.samHeader\n        })\n        .catch(e => {\n          this.setupP = undefined\n          throw e\n        })\n    }\n    return this.setupP\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    await this.setup(opts)\n    if (this.samHeader.idToName) {\n      return this.samHeader.idToName\n    }\n    if (this.sequenceAdapter) {\n      return this.sequenceAdapter.getRefNames()\n    }\n    throw new Error('unable to get refnames')\n  }\n\n  // use info from the SAM header if possible, but fall back to using\n  // the ref seq order from when the browser's refseqs were loaded\n  refNameToId(refName: string) {\n    if (this.samHeader.nameToId) {\n      return this.samHeader.nameToId[refName]\n    }\n    if (this.seqIdToRefName) {\n      return this.seqIdToRefName.indexOf(refName)\n    }\n    return undefined\n  }\n\n  // use info from the SAM header if possible, but fall back to using\n  // the ref seq order from when the browser's refseqs were loaded\n  refIdToName(refId: number) {\n    if (this.samHeader.idToName) {\n      return this.samHeader.idToName[refId]\n    }\n    if (this.seqIdToRefName) {\n      return this.seqIdToRefName[refId]\n    }\n    return undefined\n  }\n\n  refIdToOriginalName(refId: number) {\n    return this.seqIdToOriginalRefName[refId]\n  }\n\n  getFeatures(\n    region: Region & { originalRefName?: string },\n    opts?: BaseOptions,\n  ) {\n    const { signal, statusCallback = () => {} } = opts || {}\n    const { refName, start, end, originalRefName } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      await this.setup(opts)\n      if (this.sequenceAdapter && !this.seqIdToRefName) {\n        this.seqIdToRefName = await this.sequenceAdapter.getRefNames(opts)\n      }\n      const refId = this.refNameToId(refName)\n      if (refId !== undefined) {\n        if (originalRefName) {\n          this.seqIdToOriginalRefName[refId] = originalRefName\n        }\n        statusCallback('Downloading alignments')\n        const records = await this.cram.getRecordsForRange(\n          refId,\n          start,\n          end,\n          opts,\n        )\n        checkAbortSignal(signal)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        records.forEach((record: any) => {\n          observer.next(this.cramRecordToFeature(record))\n        })\n      }\n      statusCallback('')\n      observer.complete()\n    }, signal)\n  }\n\n  freeResources(/* { region } */): void {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  cramRecordToFeature(record: any): Feature {\n    return new CramSlightlyLazyFeature(record, this)\n  }\n}\n","import { HtsgetFile } from '@gmod/bam'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport BamAdapter from '../BamAdapter/BamAdapter'\n\nexport default class HtsgetBamAdapter extends BamAdapter {\n  protected async configure() {\n    if (!this.configured) {\n      const htsgetBase = readConfObject(this.config, 'htsgetBase')\n      const htsgetTrackId = readConfObject(this.config, 'htsgetTrackId')\n      const bam = new HtsgetFile({\n        baseUrl: htsgetBase,\n        trackId: htsgetTrackId,\n      })\n\n      const adapterConfig = readConfObject(this.config, 'sequenceAdapter')\n      if (adapterConfig && this.getSubAdapter) {\n        this.configured = this.getSubAdapter(adapterConfig).then(\n          ({ dataAdapter }) => {\n            return {\n              bam,\n              sequenceAdapter: dataAdapter as BaseFeatureDataAdapter,\n            }\n          },\n        )\n      }\n      this.configured = Promise.resolve({ bam })\n    }\n    return this.configured\n  }\n}\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction ColorByTagDlg(props: {\n  model: { setColorScheme: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Color by tag\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent style={{ overflowX: 'hidden' }}>\n        <div className={classes.root}>\n          <Typography>Enter tag to color by: </Typography>\n          <Typography color=\"textSecondary\">\n            Examples: XS or TS for RNA-seq inferred read strand, ts (lower-case)\n            for minimap2 read strand, HP for haplotype, RG for read group, etc.\n          </Typography>\n\n          <TextField\n            value={tag}\n            onChange={event => {\n              setTag(event.target.value)\n            }}\n            placeholder=\"Enter tag name\"\n            inputProps={{\n              maxLength: 2,\n              'data-testid': 'color-tag-name-input',\n            }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n            autoComplete=\"off\"\n            data-testid=\"color-tag-name\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginLeft: 20 }}\n            onClick={() => {\n              model.setColorScheme({\n                type: 'tag',\n                tag,\n              })\n              handleClose()\n            }}\n            disabled={!validTag}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(ColorByTagDlg)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nfunction Bitmask(props: { flag?: number; setFlag: Function }) {\n  const { flag = 0, setFlag } = props\n  return (\n    <>\n      <TextField\n        type=\"number\"\n        value={flag}\n        onChange={event => setFlag(+event.target.value)}\n      />\n      {flagNames.map((name, index) => {\n        const val = flag & (1 << index)\n        const key = `${name}_${val}`\n        return (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(val)}\n              onChange={event => {\n                if (event.target.checked) {\n                  setFlag(flag | (1 << index))\n                } else {\n                  setFlag(flag & ~(1 << index))\n                }\n              }}\n            />\n            <label htmlFor={key}>{name}</label>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nfunction FilterByTagDlg(props: {\n  model: {\n    filterBy?: {\n      flagExclude: number\n      flagInclude: number\n      readName?: string\n      tagFilter?: { tag: string; value: string }\n    }\n    setFilterBy: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { filterBy } = model\n  const [flagInclude, setFlagInclude] = useState(filterBy?.flagInclude)\n  const [flagExclude, setFlagExclude] = useState(filterBy?.flagExclude)\n  const [tag, setTag] = useState(filterBy?.tagFilter?.tag || '')\n  const [tagValue, setTagValue] = useState(filterBy?.tagFilter?.value || '')\n  const [readName, setReadName] = useState(filterBy?.readName || '')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  const site = 'https://broadinstitute.github.io/picard/explain-flags.html'\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Set filter bitmask options. Refer to <Link href={site}>{site}</Link>{' '}\n          for details\n        </Typography>\n        <div className={classes.root}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <div style={{ display: 'flex' }}>\n              <div>\n                <Typography>Read must have ALL these flags</Typography>\n                <Bitmask flag={flagInclude} setFlag={setFlagInclude} />\n              </div>\n              <div>\n                <Typography>Read must have NONE of these flags</Typography>\n                <Bitmask flag={flagExclude} setFlag={setFlagExclude} />\n              </div>\n            </div>\n          </Paper>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <Typography>\n              Filter by tag name and value. Use * in the value field to get all\n              reads containing any value for that tag. Example: filter tag name\n              SA with value * to get all split/supplementary reads. Other\n              examples include HP for haplotype, or RG for read group\n            </Typography>\n            <TextField\n              className={classes.field}\n              value={tag}\n              onChange={event => {\n                setTag(event.target.value)\n              }}\n              placeholder=\"Enter tag name\"\n              inputProps={{\n                maxLength: 2,\n                'data-testid': 'color-tag-name-input',\n              }}\n              error={tag.length === 2 && !validTag}\n              helperText={\n                tag.length === 2 && !validTag ? 'Not a valid tag' : ''\n              }\n              data-testid=\"color-tag-name\"\n            />\n            <TextField\n              className={classes.field}\n              value={tagValue}\n              onChange={event => {\n                setTagValue(event.target.value)\n              }}\n              placeholder=\"Enter tag value\"\n              inputProps={{\n                'data-testid': 'color-tag-name-input',\n              }}\n              data-testid=\"color-tag-value\"\n            />\n          </Paper>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <Typography>Filter by read name</Typography>\n            <TextField\n              className={classes.field}\n              value={readName}\n              onChange={event => {\n                setReadName(event.target.value)\n              }}\n              placeholder=\"Enter read name\"\n              inputProps={{\n                'data-testid': 'color-tag-readname-input',\n              }}\n              data-testid=\"color-tag-readname\"\n            />\n          </Paper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              model.setFilterBy({\n                flagInclude,\n                flagExclude,\n                readName,\n                tagFilter:\n                  tag !== ''\n                    ? {\n                        tag,\n                        value: tagValue,\n                      }\n                    : undefined,\n              })\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FilterByTagDlg)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction SortByTagDlg(props: {\n  model: { setSortedBy: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Sort by tag\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          <Typography>Set the tag to sort by</Typography>\n          <Typography color=\"textSecondary\">\n            Examples: HP for haplotype, RG for read group, etc.\n          </Typography>\n          <TextField\n            value={tag}\n            onChange={event => {\n              setTag(event.target.value)\n            }}\n            placeholder=\"Enter tag name\"\n            inputProps={{\n              maxLength: 2,\n              'data-testid': 'sort-tag-name-input',\n            }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n            autoComplete=\"off\"\n            data-testid=\"sort-tag-name\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              model.setSortedBy('tag', tag)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\nexport default observer(SortByTagDlg)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  TextField,\n  Typography,\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction SetFeatureHeightDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    setMinScore: Function\n    setMaxScore: Function\n    setFeatureHeight: Function\n    setNoSpacing: Function\n    featureHeightSetting: number\n    noSpacing: boolean\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const { featureHeightSetting, noSpacing: noSpacingSetting } = model\n\n  const [height, setHeight] = useState(`${featureHeightSetting}`)\n  const [noSpacing, setNoSpacing] = useState(noSpacingSetting)\n\n  const ok = height !== '' && !Number.isNaN(+height)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Set feature height\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Adjust the feature height and whether there is any spacing between\n          features. Setting feature height to 1 and removing spacing makes the\n          display very compact\n        </Typography>\n        <div className={classes.root}>\n          <Typography>Enter feature height: </Typography>\n          <TextField\n            value={height}\n            onChange={event => {\n              setHeight(event.target.value)\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={!!noSpacing}\n                onChange={() => setNoSpacing(val => !val)}\n              />\n            }\n            label=\"Remove spacing between features in y-direction?\"\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            disabled={!ok}\n            onClick={() => {\n              model.setFeatureHeight(\n                height !== '' && !Number.isNaN(+height) ? +height : undefined,\n              )\n              model.setNoSpacing(noSpacing)\n\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetFeatureHeightDlg)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle id=\"alert-dialog-title\">\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.root}>\n          <Typography>Set max height for the track</Typography>\n          <TextField\n            value={max}\n            onChange={event => {\n              setMax(event.target.value)\n            }}\n            placeholder=\"Enter max height for layout\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ObservableMap } from 'mobx'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  CircularProgress,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  table: {\n    border: '1px solid #888',\n    margin: theme.spacing(4),\n    '& td': {\n      padding: theme.spacing(1),\n    },\n  },\n}))\n\nfunction ModificationTable({\n  modifications,\n}: {\n  modifications: [string, string][]\n}) {\n  const classes = useStyles()\n  return (\n    <table className={classes.table}>\n      <tbody>\n        {modifications.map(([key, value]) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{value}</td>\n            <td\n              style={{\n                width: '1em',\n                background: value,\n              }}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nfunction ColorByTagDlg(props: {\n  model: {\n    setColorScheme: Function\n    modificationTagMap: ObservableMap<string, string>\n    colorBy?: { type: string }\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const { colorBy, modificationTagMap } = model\n\n  const modifications = [...modificationTagMap.entries()]\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Color by modifications\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.root}>\n          <Typography>\n            You can choose to color the modifications in the BAM/CRAM MM/ML\n            specification using this dialog. Choosing modifications colors the\n            modified positions and can color multiple modification types.\n            Choosing the methylation setting colors methylated and unmethylated\n            CpG.\n          </Typography>\n          <Typography>\n            Note: you can revisit this dialog to see the current mapping of\n            colors to modification type for the modification coloring mode\n          </Typography>\n          <div style={{ margin: 20 }}>\n            {colorBy?.type === 'modifications' ? (\n              <div>\n                {modifications.length ? (\n                  <>\n                    Current modification-type-to-color mapping\n                    <ModificationTable\n                      modifications={[...modificationTagMap.entries()]}\n                    />\n                  </>\n                ) : (\n                  <div>\n                    <Typography>\n                      Note: color by modifications is already enabled. Loading\n                      current modifications...\n                    </Typography>\n                    <CircularProgress size={15} />\n                  </div>\n                )}\n              </div>\n            ) : null}\n            {colorBy?.type === 'methylation' ? (\n              <ModificationTable\n                modifications={[\n                  ['methylated', 'red'],\n                  ['unmethylated', 'blue'],\n                ]}\n              />\n            ) : null}\n          </div>\n          <div style={{ display: 'flex' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ margin: 5 }}\n              onClick={() => {\n                model.setColorScheme({\n                  type: 'modifications',\n                })\n                handleClose()\n              }}\n            >\n              Modifications\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ margin: 5 }}\n              onClick={() => {\n                model.setColorScheme({\n                  type: 'methylation',\n                })\n                handleClose()\n              }}\n            >\n              Methylation\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ margin: 5 }}\n              onClick={() => handleClose()}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(ColorByTagDlg)\n","import React, { useState } from 'react'\nimport {\n  Typography,\n  Link,\n  Paper,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport copy from 'copy-to-clipboard'\nimport {\n  FeatureDetails,\n  BaseCard,\n  SimpleValue,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseCigar } from '../BamAdapter/MismatchParser'\n\nconst useStyles = makeStyles(() => ({\n  compact: {\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}))\n\nconst omit = ['clipPos', 'flags']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction AlignmentFlags(props: { feature: any }) {\n  const classes = useStyles()\n  const { feature } = props\n  const { flags } = feature\n  const flagNames = [\n    'read paired',\n    'read mapped in proper pair',\n    'read unmapped',\n    'mate unmapped',\n    'read reverse strand',\n    'mate reverse strand',\n    'first in pair',\n    'second in pair',\n    'not primary alignment',\n    'read fails platform/vendor quality checks',\n    'read is PCR or optical duplicate',\n    'supplementary alignment',\n  ]\n  return (\n    <BaseCard {...props} title=\"Flags\">\n      <SimpleValue name={'Flag'} value={flags} />\n\n      <FormGroup>\n        {flagNames.map((name, index) => {\n          const val = flags & (1 << index)\n          const key = `${name}_${val}`\n          return (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  className={classes.compact}\n                  checked={Boolean(val)}\n                  name={name}\n                  readOnly\n                />\n              }\n              label={name}\n            />\n          )\n        })}\n      </FormGroup>\n    </BaseCard>\n  )\n}\n\nfunction Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const display = String(value)\n  if (display.length > 100) {\n    return (\n      <>\n        <button type=\"button\" onClick={() => copy(display)}>\n          Copy\n        </button>\n        <button type=\"button\" onClick={() => setShow(val => !val)}>\n          {show ? 'Show less' : 'Show more'}\n        </button>\n        <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n      </>\n    )\n  }\n  return <div>{display}</div>\n}\n\n// utility function to get length of alignment from cigar\nfunction getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction SupplementaryAlignments(props: { tag: string; model: any }) {\n  const { tag, model } = props\n  const session = getSession(model)\n  return (\n    <BaseCard {...props} title=\"Supplementary alignments\">\n      <Typography>List of supplementary alignment locations</Typography>\n      <ul>\n        {tag\n          .split(';')\n          .filter(SA => !!SA)\n          .map((SA, index) => {\n            const [saRef, saStart, saStrand, saCigar] = SA.split(',')\n            const saLength = getLengthOnRef(saCigar)\n            const extra = Math.floor(saLength / 5)\n            const start = +saStart\n            const end = +saStart + saLength\n            const locString = `${saRef}:${Math.max(1, start - extra)}-${\n              end + extra\n            }`\n            const displayString = `${saRef}:${start}-${end} (${saStrand})`\n            return (\n              <li key={`${locString}-${index}`}>\n                <Link\n                  onClick={() => {\n                    const { view } = model\n                    if (view) {\n                      view.navToLocString(locString)\n                    } else {\n                      session.notify(\n                        'No view associated with this feature detail panel anymore',\n                        'warning',\n                      )\n                    }\n                  }}\n                  href=\"#\"\n                >\n                  {displayString}\n                </Link>\n              </li>\n            )\n          })}\n      </ul>\n    </BaseCard>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction PairLink({ locString, model }: { locString: string; model: any }) {\n  const session = getSession(model)\n  return (\n    <Link\n      onClick={() => {\n        const { view } = model\n        if (view) {\n          view.navToLocString(locString)\n        } else {\n          session.notify(\n            'No view associated with this feature detail panel anymore',\n            'warning',\n          )\n        }\n      }}\n      href=\"#\"\n    >\n      {locString}\n    </Link>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction AlignmentFeatureDetails(props: { model: any }) {\n  const { model } = props\n  const feat = JSON.parse(JSON.stringify(model.featureData))\n  const SA = (feat.tags && feat.tags.SA) || feat.SA\n  return (\n    <Paper data-testid=\"alignment-side-drawer\">\n      <FeatureDetails\n        {...props}\n        omit={omit}\n        feature={feat}\n        formatter={(value: unknown, key: string) => {\n          return key === 'next_segment_position' ? (\n            <PairLink model={model} locString={value as string} />\n          ) : (\n            <Formatter value={value} />\n          )\n        }}\n      />\n      {SA ? <SupplementaryAlignments model={model} tag={SA} /> : null}\n      <AlignmentFlags feature={feat} {...props} />\n    </Paper>\n  )\n}\n\nexport default observer(AlignmentFeatureDetails)\n"],"names":["configSchema","ConfigurationSchema","stateModelFactory","pluginManager","types","model","id","ElementId","type","literal","featureData","frozen","view","safeReference","pluggableMstType","actions","self","setFeatureData","data","clearFeatureData","undefined","late","bamLocation","defaultValue","uri","index","indexType","enumeration","location","chunkSizeLimit","fetchSizeLimit","sequenceAdapter","explicitlyTyped","getAdapterClass","Promise","then","r","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","getNextRefPos","parseCigar","cigar","split","cigarToMismatches","ops","seq","qual","currOffset","seqOffset","mismatches","len","op","start","base","q","j","cliplen","mdToMismatches","mdstring","cigarOps","cigarMismatches","mismatchRecords","curr","skips","filter","lastCigar","lastTemplateOffset","lastRefOffset","lastSkipPos","nextRecord","getTemplateCoordLocal","refCoord","templateOffset","refOffset","md","match","token","parseInt","substring","mismatch","s","substr","qualScore","altbase","generateMD","target","query","queryOffset","targetOffset","lengthMD","console","warn","str","toLowerCase","toUpperCase","tmp","positions","cigarIdx","readPos","refPos","pos","getModificationPositions","mm","mod","map","basemod","rest","matches","strand","f","score","delta","flat","getModificationTypes","cigarString","mdString","concat","seen","m","lib","cramLocation","craiLocation","pluggableConfigSchemaType","load","configSchemaF","htsgetBase","htsgetTrackId","compose","BaseDisplay","PileupDisplay","maybe","getDisplayType","stateModel","SNPCoverageDisplay","snpCovHeight","configuration","ConfigurationReference","height","showCoverage","showPileup","scrollTop","toggleCoverage","togglePileup","setScrollTop","setSNPCoverageHeight","n","views","trackMenuItems","conf","getConf","track","getContainingTrack","displayId","getFeatureByID","features","_self$PileupDisplay","DisplayBlurb","sortedBy","sortedByPosition","sortedByRefName","label","subMenu","composedTrackMenuItems","extraTrackMenuItems","setSNPCoverageDisplay","displayConfig","setUserBpPerPxLimit","limit","setPileupDisplay","setHeight","displayHeight","resizeHeight","distance","oldHeight","afterAttach","addDisposer","autorun","deepEqual","snpCoverageDisplayConfig","getSnapshot","setConfig","pileupDisplayConfig","filterBy","setFilterBy","colorBy","setColorBy","renderSvg","opts","pileupHeight","when","ready","React","transform","overrideHeight","AlignmentsDisplay","style","position","RenderingComponent","ResizeHandle","onDrag","top","observer","LinearPileupDisplayBlurb","props","backgroundColor","Typography","color","variant","refName","getUniqueTagValues","colorScheme","blocks","getSession","rpcManager","adapterConfig","sessionId","getRpcSessionId","tag","regions","contentBlocks","getUniqueModificationValues","ColorByTagDlg","lazy","FilterByTagDlg","SortByTagDlg","SetFeatureHeightDlg","SetMaxHeightDlg","ModificationsDlg","rendererTypes","Map","BaseLinearDisplay","showSoftClipping","featureHeight","number","noSpacing","fadeLikelihood","trackMaxHeight","mismatchAlpha","string","assemblyName","extra","optional","flagInclude","flagExclude","readName","tagFilter","colorTagMap","observable","modificationTagMap","currBpPerPx","setReady","flag","setCurrBpPerPx","setMaxHeight","setFeatureHeight","setNoSpacing","setColorScheme","cast","updateModificationColorMap","uniqueModifications","colorPalette","has","totalKeys","_toConsumableArray","set","updateColorTagMap","uniqueTag","renderProps","getContainingView","staticBlocks","parentTrack","region","end","rendererType","renderInClient","timeout","bpPerPx","setError","delay","selectFeature","feature","session","isSessionModelWithWidgets","featureWidget","addWidget","toJSON","showWidget","setSelection","clearSelected","copyFeatureToClipboard","copiedFeature","uniqueId","copy","JSON","stringify","notify","toggleSoftClipping","toggleMismatchAlpha","setSortedBy","centerLineInfo","centerBp","Math","round","offset","superReload","reload","rendererTypeName","maxHeight","configBlob","getEnv","readConfObject","rendererConfig","viewName","get","feat","contextMenuFeature","contextMenuItems","icon","MenuOpenIcon","onClick","clearFeatureSelection","ContentCopyIcon","additionalContextMenuItemCallbacks","callback","menuItems","filters","SerializableFilterChain","composedRenderProps","getParentRenderProps","notReady","rpcDriverName","displayModel","parse","showSoftClip","config","VisibilityIcon","checked","SortIcon","disabled","option","setDialogComponent","PaletteIcon","FilterListIcon","mismatchAlphaSetting","useStyles","makeStyles","theme","popper","fontSize","zIndex","tooltip","pointerEvents","hoverVertical","background","border","width","cursor","TooltipContents","toLocaleString","total","ref","cov","noncov","lowqual","delskips","entries","Fragment","strands","floor","Tooltip","mouseCoord","featureUnderMouse","classes","MUITooltip","placement","className","open","title","left","linearWiggleDisplayModelFactory","drawInterbaseCounts","drawIndicators","newColor","modificationsReady","scaleOpts","resolution","ticks","displayCrossHatches","toggleDrawIndicators","drawIndicatorsSetting","toggleDrawInterbaseCounts","drawInterbaseCountsSetting","subadapter","PileupRendering","onMouseMove","blockKey","selectedFeatureId","featureIdUnderMouse","blockLayoutFeatures","highlightOverlayCanvas","useRef","useState","mouseIsDown","setMouseIsDown","movedDuringLastMouseDown","setMovedDuringLastMouseDown","callMouseHandler","handlerName","event","featureHandler","canvasHandler","useEffect","canvas","current","ctx","getContext","rect","blockLayout","clearRect","topPx","bottomPx","bpSpanPx","leftPx","rightPx","rectTop","rectHeight","shadowColor","shadowBlur","lineJoin","lineWidth","strokeStyle","strokeRect","highlightedFeature","fillStyle","fillRect","canvasWidth","ceil","PrerenderedCanvas","onMouseDown","onMouseEnter","onMouseOut","onMouseOver","onMouseUp","onMouseLeave","offsetX","offsetY","getBoundingClientRect","clientX","featIdUnderMouse","getFeatureOverlapping","reversed","clientY","mouseMove","onContextMenu","onFocus","onBlur","description","contextVariable","orientationType","displayMode","minSubfeatureWidth","maxClippingSize","largeInsertionIndicatorScale","getTag","tags","getTagAlt","alt","orientationTypes","fr","F1R2","F2R1","F1F2","F2F1","R1R2","R2R1","R1F2","R2F1","rf","ff","PileupLayoutSession","LayoutSession","args","cachedLayout","_get","cachedLayoutIsValid","layout","makeLayout","getColorBaseMap","A","palette","bases","main","C","G","T","deletion","alignmentColoring","color_fwd_strand_not_proper","color_rev_strand_not_proper","color_fwd_strand","color_rev_strand","color_fwd_missing_mate","color_rev_missing_mate","color_fwd_diff_chr","color_rev_diff_chr","color_pair_lr","color_pair_rr","color_pair_rl","color_pair_ll","color_nostrand","color_interchrom","color_longinsert","color_shortinsert","shouldDrawMismatches","includes","PileupRenderer","BoxRendererType","charWidth","measureText","charHeight","expansionBefore","expansionAfter","heightPx","addRect","renderArgs","bpExpansion","max","getOrientation","LR","RR","RL","LL","_config","abs","flags","flipper","scores","val","k","layoutFeature","ml","probabilities","e","charCodeAt","elt","min","modifications","probIndex","Color","alpha","hsl","regionSequence","fstart","fend","rstart","methBins","Array","fill","epos","l2","flip","beginPath","moveTo","lineTo","closePath","colorType","colorByInsertSize","colorByOrientation","colorByStranded","drawRect","colorByPerBaseQuality","colorByModifications","colorByMethylation","colorForBase","drawSNPs","drawIndels","getCharWidthHeight","minFeatWidth","insertionScale","pxPerBp","w","heightLim","getAlphaColor","baseColor","mismatchLeftPx","mismatchWidthPx","getContrastText","fillText","txt","softClipLength","softClipStart","softClipLeftPx","softClipWidthPx","layoutRecords","configTheme","createJBrowseTheme","font","_this2","drawAlignmentRect","drawMismatches","drawSoftClipping","featureMap","featureArray","from","featuresInCenterLine","featuresOutsideCenter","innerArray","doesIntersect2","isCram","sort","a","b","t","isString","localeCompare","baseSortArray","baseMap","aMismatch","bMismatch","acode","bcode","sortFeature","iterMap","_this3","size","getFeatures","createLayoutInWorker","layoutFeats","getAdapter","dataAdapter","pipe","toArray","toPromise","getTotalHeight","renderToAbstractCanvas","_this4","makeImageData","res","maxHeightReached","mismatchLen","isInterbase","inc","bin","field","dec","SNPCoverageAdapter","BaseFeatureDataAdapter","subadapterConfig","sequenceConf","getSubAdapter","_this$getSubAdapter","_this$getSubAdapter2","ObservableCreate","_this","configure","stream","passes","generateCoverageBins","SimpleFeature","snpinfo","signal","getRefNames","binMax","initBins","regionSeq","reduce","bins","fstrand","mstart","interbase","capabilities","configSchemaFactory","adapterCapabilities","clipColor","indicatorThreshold","SNPCoverageRenderer","WiggleBaseRenderer","unadjustedHeight","cfg","YSCALEBAR_LABEL_OFFSET","range","viewScale","getScale","snpViewScale","scaleType","originY","getOrigin","snpOriginY","toY","snpToY","snpToHeight","insertion","softclip","hardclip","meth","unmeth","featureSpanPx","stroke","totalScore","replace","interbaseEvents","accum","maxBase","tick","baseConfiguration","ConfigSchema","PileupGetGlobalValueForTag","RpcMethodType","assemblyManager","rootModel","_rootModel$session","renameRegionsIfNeeded","rpcDriverClassName","deserializeArguments","deserializedArgs","getFeaturesInMultipleRegions","featuresArray","uniqueValues","Set","add","PileupGetVisibleModifications","_rootModel$session2","AlignmentsPlugin","Plugin","addTrackType","createBaseTrackConfig","TrackType","createBaseTrackModel","linearAlignmentsDisplay","addDisplayType","PileupRendererConfigSchema","getRendererType","SvgFeatureRendererConfigSchema","defaultRendering","renderers","SvgFeatureRenderer","renderer","maxDisplayedBpPerPx","linearBasicDisplayConfigSchemaFactory","linearPileupDisplayConfigSchemaFactory","DisplayType","linearPileupDisplayModelFactory","trackType","viewType","ReactComponent","BaseLinearDisplayComponent","SNPCoverageRendererConfigSchema","autoscale","minScore","Number","MIN_VALUE","maxScore","MAX_VALUE","inverted","headroom","baseLinearDisplayConfigSchema","linearSNPCoverageDisplayConfigSchemaFactory","linearSNPCoverageDisplayModelFactory","LinearWiggleDisplayReactComponent","PileupDisplayConfigSchema","SNPCoverageDisplayConfigSchema","pileupDisplay","snpCoverageDisplay","linearAligmentsDisplayConfigSchemaFactory","linearAlignmentsDisplayModelFactory","LinearAlignmentsDisplayReactComponent","addWidgetType","WidgetType","heading","alignmentsFeatureDetailConfigSchema","alignmentsFeatureDetailStateModelFactory","addAdapterType","AdapterType","BamAdapterF","SNPCoverageAdapterF","CramAdapterF","HtsgetBamAdapterF","addRendererType","PileupRendererReactComponent","pileupRendererConfigSchema","SNPCoverageRendererReactComponent","addRpcMethod","BamSlightlyLazyFeature","adapter","isReverseComplemented","readGroupId","isPaired","getPairOrientation","_next_refid","_refID","refIdToName","_next_pos","getReadBases","qualRaw","properties","getOwnPropertyNames","prop","startsWith","methodName","_tags","seq_id","fromEntries","cigarAttributeName","mdAttributeName","BamAdapter","configured","bam","BamFile","bamFilehandle","openLocation","csiFilehandle","baiFilehandle","getHeaderText","statusCallback","setupP","getHeader","idToName","nameToId","l","sqLine","refId","item","samHeader","setup","refSeqStore","trimmed","chunk","chunkStart","chunkEnd","trimStart","trimLength","chunkSeq","sequence","join","originalRefName","getRecordsForRange","records","checkAbortSignal","seqFetch","_this$samHeader","CramSlightlyLazyFeature","store","_store","alignmentStart","lengthOnRef","readFeatures","mappingQuality","rg","readGroups","qualityScores","sequenceId","_get_seq_id","mate","templateLength","templateSize","RG","_read_group_id","oplen","_refRegion","refStart","last_pos","sublen","code","sub","ret","added","String","fromCharCode","readLength","_get_mismatches","cram","IndexedCramFile","cramFilehandle","CraiIndex","filehandle","bind","checkSequenceMD5","sequenceAdapterType","seqId","refIdToOriginalName","getSamHeader","rgLine","find","_rgLine$data$find","seqIdToRefName","indexOf","seqIdToOriginalRefName","refNameToId","cramRecordToFeature","HtsgetFile","baseUrl","trackId","root","closeButton","right","spacing","grey","handleClose","setTag","validTag","Dialog","onClose","DialogTitle","IconButton","CloseIcon","DialogContent","overflowX","TextField","onChange","placeholder","inputProps","maxLength","helperText","autoComplete","Button","marginLeft","paper","padding","margin","flagNames","Bitmask","setFlag","Boolean","htmlFor","setFlagInclude","setFlagExclude","tagValue","setTagValue","setReadName","site","Link","href","Paper","display","noSpacingSetting","featureHeightSetting","ok","FormControlLabel","control","Checkbox","setMax","table","ModificationTable","CircularProgress","compact","paddingRight","paddingTop","paddingBottom","omit","AlignmentFlags","BaseCard","SimpleValue","FormGroup","readOnly","Formatter","show","setShow","SupplementaryAlignments","SA","saRef","saStart","saStrand","saLength","getLengthOnRef","locString","displayString","navToLocString","PairLink","AlignmentFeatureDetails","FeatureDetails","formatter"],"mappings":"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"}