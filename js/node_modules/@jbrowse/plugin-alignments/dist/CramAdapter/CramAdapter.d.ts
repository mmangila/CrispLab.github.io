import { BaseFeatureDataAdapter, BaseOptions } from '@jbrowse/core/data_adapters/BaseAdapter';
import { Region } from '@jbrowse/core/util/types';
import { Feature } from '@jbrowse/core/util/simpleFeature';
interface Header {
    idToName?: string[];
    nameToId?: Record<string, number>;
    readGroups?: number[];
}
export default class CramAdapter extends BaseFeatureDataAdapter {
    private cram;
    private setupP?;
    private sequenceAdapter?;
    samHeader: Header;
    private seqIdToRefName;
    private seqIdToOriginalRefName;
    configure(): Promise<{
        sequenceAdapter: BaseFeatureDataAdapter;
    }>;
    getHeader(opts?: BaseOptions): Promise<any>;
    private seqFetch;
    private setup;
    getRefNames(opts?: BaseOptions): Promise<string[]>;
    refNameToId(refName: string): number | undefined;
    refIdToName(refId: number): string | undefined;
    refIdToOriginalName(refId: number): string;
    getFeatures(region: Region & {
        originalRefName?: string;
    }, opts?: BaseOptions): import("rxjs").Observable<Feature>;
    freeResources(): void;
    cramRecordToFeature(record: any): Feature;
}
export {};
