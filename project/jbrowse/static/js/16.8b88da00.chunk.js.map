{"version":3,"sources":["../../../packages/core/util/stats.ts","../../../packages/core/util/calculateStaticBlocks.ts","../../../packages/core/pluggableElementTypes/renderers/CircularChordRendererType.ts","../../../packages/core/util/layouts/MultiLayout.ts","../../../packages/core/util/compositeMap.ts","../../../packages/core/TextSearch/BaseResults.ts","../../../plugins/wiggle/src/BigWigAdapter/BigWigAdapter.ts","../../../packages/core/util/types/mst.ts","../../../packages/core/util/tracks.ts","../../../plugins/variants/src/ChordVariantDisplay/models/ChordVariantDisplay.js","../../../plugins/variants/src/ChordVariantDisplay/index.ts","../../../plugins/variants/src/LinearVariantDisplay/model.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/ReactComponent.js","../../../plugins/variants/src/StructuralVariantChordRenderer/index.js","../../../plugins/variants/src/VariantFeatureWidget/index.js","../../../plugins/variants/src/VcfTabixAdapter/configSchema.ts","../../../plugins/variants/src/VcfAdapter/configSchema.ts","../../../plugins/variants/src/index.ts","../../../plugins/variants/src/LinearVariantDisplay/configSchema.ts","../../../plugins/data-management/src/PluginStoreWidget/components/InstalledPlugin.tsx","../../../plugins/data-management/src/PluginStoreWidget/components/InstalledPluginsList.tsx","../../../plugins/data-management/src/PluginStoreWidget/components/PluginCard.tsx","../../../plugins/data-management/src/PluginStoreWidget/components/CustomPluginForm.tsx","../../../plugins/data-management/src/PluginStoreWidget/components/PluginStoreWidget.tsx","../../../packages/core/ui/theme.ts","../../../packages/core/ui/Logo.tsx","../../../packages/core/ui/ResizeHandle.tsx","../../../packages/core/ui/Drawer.js","../../../packages/core/ui/DrawerWidget.js","../../../packages/core/ui/DropDownMenu.tsx","../../../packages/core/ui/EditableTypography.tsx","../../../packages/core/ui/Snackbar.tsx","../../../packages/core/ui/ViewContainer.tsx","../../../packages/core/ui/App.js","../../../packages/core/ui/PrerenderedCanvas.tsx","../../../packages/core/ui/FactoryResetDialog.tsx","../../../packages/core/ui/Tooltip.tsx","../../../packages/core/ui/FatalErrorDialog.tsx","../../../packages/core/ReExports/modules.ts","../../../packages/core/ReExports/list.ts","../../../packages/core/ReExports/index.ts","../../../packages/core/data_adapters/BaseAdapter.ts","../../../packages/core/Plugin.ts","../../../packages/core/util/io/LocalFile.ts","../../../packages/core/util/io/rangeFetcher.ts","../../../packages/core/util/io/index.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/baseLinearDisplayConfigSchema.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/LinearBlocks.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BaseLinearDisplay.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/ServerSideRenderedBlockContent.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/serverSideRenderedBlock.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/BaseLinearDisplayModel.tsx","../../../plugins/linear-genome-view/src/LinearBareDisplay/model.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/model.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/configSchema.ts","../../../plugins/linear-genome-view/src/index.ts","../../../plugins/linear-genome-view/src/LinearBareDisplay/configSchema.ts","../../../packages/core/util/simpleFeature.ts","../../../packages/core/util/rxjs.ts","../../../packages/core/pluggableElementTypes/models/baseConnectionConfig.ts","../../../packages/core/pluggableElementTypes/models/BaseConnectionModelFactory.js","../../../packages/core/pluggableElementTypes/models/BaseDisplayModel.tsx","../../../packages/core/pluggableElementTypes/models/BaseTrackModel.ts","../../../packages/core/pluggableElementTypes/models/baseTrackConfig.ts","../../../packages/core/PluginLoader.ts","../../../plugins/alignments/src/SNPCoverageAdapter/SNPCoverageAdapter.ts","rpc.worker.ts","../../../packages/core/pluggableElementTypes/AdapterType.ts","../../../packages/core/pluggableElementTypes/DisplayType.ts","../../../packages/core/pluggableElementTypes/PluggableElementBase.ts","../../../packages/core/pluggableElementTypes/TrackType.ts","../../../packages/core/pluggableElementTypes/WidgetType.ts","../../../packages/core/ui/Icons.tsx","../../../packages/core/ui/Menu.tsx","../../../plugins/alignments/src/BamAdapter/MismatchParser.ts","../../../packages/core/pluggableElementTypes/ViewType.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ExportSvgDialog.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ReturnToImportFormDialog.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/index.tsx","../../../packages/core/util/types/index.ts","../../../packages/core/configuration/configurationSlot.ts","../../../packages/core/configuration/configurationSchema.ts","../../../packages/core/util/color/cssColorsLevel4.ts","../../../packages/core/util/color/index.ts","../../../packages/core/util/mst-reflection.js","../../../packages/core/util/range.ts","../../../packages/core/util/blockTypes.ts","../../../packages/core/util/offscreenCanvasPonyfill.js","../../../packages/core/util/Base1DViewModel.ts","../../../packages/core/pluggableElementTypes/renderers/FeatureRendererType.ts","../../../packages/core/util/QuickLRU.js","../../../packages/core/util/layouts/GranularRectLayout.ts","../../../packages/core/util/layouts/PrecomputedLayout.ts","../../../packages/core/pluggableElementTypes/renderers/BoxRendererType.ts","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx","../../../packages/core/pluggableElementTypes/renderers/ServerSideRenderedContent.tsx","../../../packages/core/pluggableElementTypes/renderers/ServerSideRendererType.tsx","../../../packages/core/util/aborting.ts","../../../packages/core/util/jexlStrings.ts","../../../packages/core/ui/SanitizedHTML.tsx","../../../packages/core/pluggableElementTypes/models/BaseViewModel.ts","../../../packages/core/pluggableElementTypes/renderers/util/serializableFilterChain.ts","../../../plugins/variants/src/VcfTabixAdapter/VcfFeature.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/util.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewRubberBand.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewScaleBar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ZoomControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Header.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabel.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RubberBand.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ScaleBar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/VerticalGuides.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/CenterLine.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TracksContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsDialog.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ImportForm.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/MiniControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SequenceDialog.tsx","../../../packages/core/util/formatFastaStrings.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Ruler.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/LinearGenomeView.tsx","../../../packages/core/pluggableElementTypes/renderers/RendererType.ts","../../../packages/core/configuration/util.ts","../../../packages/core/util/calculateDynamicBlocks.ts","../../../packages/core/ui/FileSelector.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/Block.tsx","../../../packages/core/pluggableElementTypes/ConnectionType.ts","../../../packages/core/rpc/remoteAbortSignals.ts","../../../packages/core/pluggableElementTypes/RpcMethodType.ts","../../../packages/core/pluggableElementTypes/TextSearchAdapterType.ts","../../../packages/core/BaseFeatureWidget/index.ts","../../../packages/core/data_adapters/dataAdapterCache.ts","../../../packages/core/rpc/coreRpcMethods.ts","../../../packages/core/CorePlugin.ts","../../../packages/core/PluginManager.ts","../../../packages/core/util/analytics.ts","sessionSharing.ts","../../../packages/core/util/offscreenCanvasUtils.tsx","../../../plugins/wiggle/src/WiggleBaseRenderer.tsx","../../../plugins/wiggle/src/WiggleRendering.tsx","../../../plugins/wiggle/src/BigWigAdapter/configSchema.ts","../../../plugins/wiggle/src/util.ts","../../../plugins/wiggle/src/configSchema.ts","../../../plugins/wiggle/src/DensityRenderer/index.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/components/Tooltip.tsx","../../../plugins/wiggle/src/LinearWiggleDisplay/components/WiggleDisplayComponent.tsx","../../../plugins/wiggle/src/LinearWiggleDisplay/models/model.tsx","../../../plugins/wiggle/src/XYPlotRenderer/XYPlotRenderer.ts","../../../plugins/wiggle/src/XYPlotRenderer/index.ts","../../../plugins/wiggle/src/LinePlotRenderer/LinePlotRenderer.js","../../../plugins/wiggle/src/LinePlotRenderer/index.js","../../../plugins/wiggle/src/WiggleRPC/rpcMethods.ts","../../../plugins/wiggle/src/index.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/models/configSchema.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/index.js","../../../plugins/alignments/src/BamAdapter/configSchema.ts","../../../plugins/alignments/src/BamAdapter/index.ts","../../../plugins/alignments/src/CramAdapter/configSchema.ts","../../../plugins/alignments/src/CramAdapter/index.ts","../../../plugins/alignments/src/HtsgetBamAdapter/configSchema.ts","../../../plugins/alignments/src/HtsgetBamAdapter/index.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/models/configSchema.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/models/model.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/components/AlignmentsDisplay.tsx","../../../plugins/alignments/src/LinearPileupDisplay/configSchema.ts","../../../plugins/alignments/src/LinearPileupDisplay/components/LinearPileupDisplayBlurb.tsx","../../../plugins/alignments/src/shared.ts","../../../plugins/alignments/src/LinearPileupDisplay/model.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/Tooltip.tsx","../../../plugins/alignments/src/LinearSNPCoverageDisplay/models/model.ts","../../../plugins/alignments/src/PileupRenderer/components/PileupRendering.tsx","../../../plugins/alignments/src/PileupRenderer/configSchema.ts","../../../plugins/alignments/src/PileupRenderer/PileupLayoutSession.ts","../../../plugins/alignments/src/PileupRenderer/PileupRenderer.tsx","../../../plugins/alignments/src/PileupRenderer/sortUtil.ts","../../../plugins/alignments/src/SNPCoverageAdapter/configSchema.ts","../../../plugins/alignments/src/SNPCoverageAdapter/index.ts","../../../plugins/alignments/src/SNPCoverageRenderer/configSchema.js","../../../plugins/alignments/src/SNPCoverageRenderer/SNPCoverageRenderer.ts","../../../plugins/alignments/src/SNPCoverageRenderer/index.js","../../../plugins/alignments/src/PileupRPC/rpcMethods.ts","../../../plugins/alignments/src/index.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/models/configSchema.ts","../../../plugins/bed/src/BigBedAdapter/configSchema.ts","../../../plugins/bed/src/BedTabixAdapter/configSchema.ts","../../../plugins/bed/src/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointAlignmentsFeatureDetail/index.js","../../../plugins/breakpoint-split-view/src/model.ts","../../../plugins/breakpoint-split-view/src/util.ts","../../../plugins/breakpoint-split-view/src/components/AlignmentConnections.tsx","../../../plugins/breakpoint-split-view/src/components/Breakends.tsx","../../../plugins/breakpoint-split-view/src/components/Header.tsx","../../../plugins/breakpoint-split-view/src/components/Translocations.tsx","../../../plugins/breakpoint-split-view/src/components/BreakpointSplitView.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView.ts","../../../plugins/breakpoint-split-view/src/index.ts","../../../plugins/data-management/src/ucsc-trackhub/configSchema.js","../../../plugins/data-management/src/ucsc-trackhub/ucscAssemblies.js","../../../plugins/data-management/src/ucsc-trackhub/ucscTrackHub.js","../../../plugins/data-management/src/ucsc-trackhub/model.js","../../../plugins/data-management/src/AddTrackWidget/model.ts","../../../plugins/data-management/src/AddTrackWidget/index.js","../../../plugins/data-management/src/AddConnectionWidget/model.js","../../../plugins/data-management/src/AddConnectionWidget/index.js","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/model.js","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/index.js","../../../plugins/data-management/src/PluginStoreWidget/model.ts","../../../plugins/data-management/src/PluginStoreWidget/index.js","../../../plugins/data-management/src/index.ts","../../../plugins/dotplot-view/src/ServerSideRenderedBlockContent.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/components/DotplotDisplay.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/index.ts","../../../plugins/dotplot-view/src/DotplotRenderer/components/DotplotRendering.tsx","../../../plugins/dotplot-view/src/DotplotRenderer/configSchema.ts","../../../packages/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType.ts","../../../plugins/dotplot-view/src/DotplotView/model.ts","../../../plugins/dotplot-view/src/DotplotRenderer/DotplotRenderer.ts","../../../plugins/dotplot-view/src/PAFAdapter/PAFAdapter.ts","../../../plugins/dotplot-view/src/PAFAdapter/configSchema.ts","../../../plugins/dotplot-view/src/DotplotRenderer/ComparativeRenderRpc.ts","../../../plugins/dotplot-view/src/index.ts","../../../plugins/filtering/src/LinearFilteringDisplay/model.js","../../../plugins/filtering/src/LinearFilteringDisplay/components/FilterControls.js","../../../plugins/filtering/src/LinearFilteringDisplay/components/LinearFilteringDisplay.js","../../../plugins/filtering/src/index.ts","../../../plugins/filtering/src/LinearFilteringDisplay/index.js","../../../plugins/gff3/src/Gff3TabixAdapter/configSchema.ts","../../../plugins/gff3/src/index.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSeachAdapter/Crc32.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSeachAdapter/HttpMap.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSeachAdapter/JBrowse1TextSearchAdapter.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSeachAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/util.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigParse.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigLoad.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ToJb2.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/model.js","../../../plugins/legacy-jbrowse/src/index.ts","../../../plugins/linear-comparative-view/src/ServerSideRenderedBlockContent.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/components/LinearComparativeDisplay.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/index.ts","../../../plugins/linear-comparative-view/src/LinearComparativeView/model.ts","../../../plugins/linear-comparative-view/src/LinearComparativeView/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/index.ts","../../../plugins/linear-comparative-view/src/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyRenderer/components/LinearSyntenyRendering.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyRenderer/configSchema.js","../../../plugins/linear-comparative-view/src/LinearSyntenyRenderer/LinearSyntenyRenderer.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/model.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/index.ts","../../../plugins/linear-comparative-view/src/MCScanAnchorsAdapter/MCScanAnchorsAdapter.ts","../../../plugins/linear-comparative-view/src/MCScanAnchorsAdapter/configSchema.ts","../../../plugins/linear-comparative-view/src/index.tsx","../../../plugins/lollipop/src/LinearLollipopDisplay/model.ts","../../../plugins/lollipop/src/LollipopRenderer/components/Lollipop.js","../../../plugins/lollipop/src/LollipopRenderer/components/Stick.js","../../../plugins/lollipop/src/LollipopRenderer/components/LollipopRendering.js","../../../plugins/lollipop/src/LollipopRenderer/configSchema.ts","../../../plugins/lollipop/src/LollipopRenderer/Layout.ts","../../../plugins/lollipop/src/LollipopRenderer/LollipopRenderer.js","../../../plugins/lollipop/src/index.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/configSchema.ts","../../../plugins/menus/src/AboutWidget/index.js","../../../plugins/menus/src/HelpWidget/index.js","../../../plugins/menus/src/ImportSessionWidget/index.ts","../../../plugins/menus/src/SessionManager/index.js","../../../plugins/menus/src/index.ts","../../../plugins/rdf/src/SPARQLAdapter/SPARQLAdapter.ts","../../../plugins/rdf/src/SPARQLAdapter/configSchema.ts","../../../plugins/rdf/src/index.ts","../../../plugins/sequence/src/BgzipFastaAdapter/configSchema.ts","../../../plugins/sequence/src/ChromSizesAdapter/configSchema.ts","../../../plugins/sequence/src/DivSequenceRenderer/components/DivSequenceRendering.tsx","../../../plugins/sequence/src/DivSequenceRenderer/configSchema.ts","../../../plugins/sequence/src/IndexedFastaAdapter/configSchema.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/configSchema.ts","../../../plugins/sequence/src/TwoBitAdapter/configSchema.ts","../../../plugins/sequence/src/GCContentAdapter/configSchema.ts","../../../plugins/sequence/src/GCContentAdapter/index.ts","../../../plugins/sequence/src/index.ts","../../../plugins/sequence/src/referenceSeqTrackConfig.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/model.ts","../../../packages/core/util/layouts/SceneGraph.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureLabel.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureGlyph.js","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgOverlay.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Box.js","../../../plugins/svg/src/SvgFeatureRenderer/components/Chevron.js","../../../plugins/svg/src/SvgFeatureRenderer/components/Segments.js","../../../plugins/svg/src/SvgFeatureRenderer/components/ProcessedTranscript.js","../../../plugins/svg/src/SvgFeatureRenderer/components/Subfeatures.js","../../../plugins/svg/src/SvgFeatureRenderer/components/util.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgFeatureRendering.js","../../../plugins/svg/src/SvgFeatureRenderer/configSchema.ts","../../../plugins/svg/src/index.ts","../../../plugins/trackhub-registry/src/trackhub-registry/configSchema.js","../../../plugins/trackhub-registry/src/trackhub-registry/tracks.js","../../../plugins/trackhub-registry/src/trackhub-registry/model.js","../../../plugins/trackhub-registry/src/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/MakeSpreadsheetColumnType.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocString.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/Text.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocRef.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/Number.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocStart.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocEnd.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/Row.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/StaticRowSet.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/Spreadsheet.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ImportWizard.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/FilterControls.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/SpreadsheetView.ts","../../../plugins/spreadsheet-view/src/index.ts","../../../plugins/sv-inspector/src/SvInspectorView/components/SvInspectorView.js","../../../plugins/sv-inspector/src/SvInspectorView/models/adhocFeatureUtils.js","../../../plugins/sv-inspector/src/SvInspectorView/models/breakpointSplitViewFromTableRow.js","../../../plugins/sv-inspector/src/SvInspectorView/models/SvInspectorView.js","../../../plugins/sv-inspector/src/SvInspectorView/SvInspectorViewType.js","../../../plugins/sv-inspector/src/index.ts","../../../plugins/hic/src/HicRenderer/components/HicRendering.tsx","../../../plugins/hic/src/HicRenderer/configSchema.ts","../../../plugins/hic/src/HicRenderer/HicRenderer.tsx","../../../plugins/hic/src/LinearHicDisplay/configSchema.ts","../../../plugins/hic/src/LinearHicDisplay/model.ts","../../../plugins/hic/src/HicAdapter/configSchema.ts","../../../plugins/hic/src/index.ts","corePlugins.ts","ShareButton.tsx","AdminComponent.tsx","JBrowse.js","../../../packages/core/assemblyManager/assembly.ts","../../../packages/core/assemblyManager/assemblyManager.ts","../../../packages/core/assemblyManager/assemblyConfigSchemas.ts","../../../packages/core/rpc/configSchema.ts","../../../packages/core/rpc/BaseRpcDriver.ts","../../../packages/core/rpc/WebWorkerRpcDriver.ts","../../../packages/core/rpc/MainThreadRpcDriver.ts","../../../packages/core/rpc/RpcManager.ts","../../../packages/core/TextSearch/TextSearchManager.ts","jbrowseModel.js","sessionModelFactory.ts","rootModel.ts","factoryReset.ts","Loader.tsx","../../../plugins/alignments/src/util.ts","../../../plugins/config/src/ConfigurationEditorWidget/components/JsonEditor.js","../../../packages/core/configuration/index.ts","../../../packages/core/util/index.ts","../../../plugins/circular-view/src/CircularView/models/viewportVisibleRegion.ts","../../../plugins/circular-view/src/CircularView/models/slices.ts","../../../plugins/circular-view/src/CircularView/models/CircularView.ts","../../../plugins/circular-view/src/BaseChordDisplay/components/Loading.tsx","../../../plugins/circular-view/src/BaseChordDisplay/components/DisplayError.js","../../../plugins/circular-view/src/BaseChordDisplay/components/RpcRenderedSvgGroup.js","../../../plugins/circular-view/src/BaseChordDisplay/components/BaseChordDisplay.tsx","../../../plugins/circular-view/src/BaseChordDisplay/models/renderReaction.js","../../../plugins/circular-view/src/BaseChordDisplay/models/BaseChordDisplayModel.ts","../../../plugins/circular-view/src/BaseChordDisplay/models/baseChordDisplayConfig.ts","../../../plugins/circular-view/src/index.ts","../../../plugins/config/src/ConfigurationEditorWidget/model.js","../../../plugins/config/src/ConfigurationEditorWidget/index.js","../../../plugins/config/src/FromConfigAdapter/FromConfigAdapter.ts","../../../plugins/config/src/FromConfigAdapter/FromConfigRegionsAdapter.ts","../../../plugins/config/src/FromConfigAdapter/FromConfigSequenceAdapter.ts","../../../plugins/config/src/FromConfigAdapter/configSchema.ts","../../../plugins/config/src/RefNameAliasAdapter/RefNameAliasAdapter.ts","../../../plugins/config/src/RefNameAliasAdapter/configSchema.ts","../../../plugins/config/src/index.ts","../../../packages/core/util/when.ts","../../../packages/core/util/jexl.ts"],"names":["calcStdFromSums","sum","sumSquares","n","variance","population","Math","sqrt","rectifyStats","s","scoreMean","scoreSum","featureCount","basesCovered","scoreStdDev","scoreSumSquares","featureDensity","scoresToStats","region","features","a","start","end","pipe","reduce","seed","f","score","get","scoreMax","max","scoreMin","min","Number","MAX_VALUE","MIN_VALUE","toPromise","blankStats","calculateStaticBlocks","model","padding","elision","extra","width","window","innerWidth","offsetPx","displayedRegions","bpPerPx","minimumBlockWidth","interRegionPaddingWidth","windowLeftBp","windowRightBp","blockSizePx","blockSizeBp","ceil","regionBpOffset","blocks","BlockSet","forEach","regionNumber","assemblyName","refName","regionStart","regionEnd","reversed","regionBlockCount","windowRightBlockNum","floor","windowLeftBlockNum","regionWidthPx","blockNum","isLeftEndOfDisplayedRegion","isRightEndOfDisplayedRegion","blockData","parentRegion","widthPx","key","assembleLocString","push","InterRegionPaddingBlock","variant","ElidedBlock","ContentBlock","length","CircularChordRendererType","FeatureRenderer","MultiLayout","SubLayoutClass","layoutArgs","subLayouts","Map","subLayoutConstructorArgs","this","layoutName","subLayout","undefined","set","id","left","right","height","data","getSublayout","addRect","layout","discardRange","entries","sublayout","toJSON","Symbol","iterator","CompositeMap","submaps","values","has","submap","keys","Set","add","value","k","BaseResult","args","label","renderingComponent","matchedAttribute","matchedObject","textSearchAdapter","relevance","trackId","newScore","LocStringResult","locString","Error","RefSequenceResult","BigWigAdapter","config","bigwig","BigWig","filehandle","openLocation","readConfObject","opts","statusCallback","getHeader","result","setup","header","Object","refsByName","refId","h","refsByNumber","name","totalSummary","signal","resolution","ObservableCreate","observer","getFeatureStream","basesPerSpan","mergeAll","map","record","SimpleFeature","subscribe","BaseFeatureDataAdapter","capabilities","adapterCapabilities","ElementId","types","optional","identifier","shortid","generate","PropTypes","Region","propTypes","shape","string","isRequired","number","ConfigSchema","MxPropTypes","objectOrObservableObject","Feature","func","NoAssemblyRegion","boolean","actions","self","setRefName","newRefName","compose","LocalPathLocation","localPath","BlobLocation","blobId","UriLocationRaw","uri","baseUri","maybe","UriLocation","snapshotProcessor","postProcessor","snap","rest","FileLocation","union","getTrackAssemblyNames","track","trackConf","configuration","trackAssemblyNames","parent","getParent","getRpcSessionId","thisNode","highestRpcSessionId","node","isRoot","rpcSessionId","getParentRenderProps","currentNode","renderProps","UNKNOWN","UNSUPPORTED","blobMap","getBlob","getBlobMap","setBlobMap","storeBlobLocation","location","Date","now","blob","guessAdapter","file","index","getFileName","adapterHint","makeIndex","suffix","fileName","indexName","makeIndexType","typeA","typeB","toUpperCase","endsWith","test","type","bamLocation","indexType","cramLocation","craiLocation","gffGzLocation","vcfLocation","vcfGzLocation","bedGzLocation","bigBedLocation","bigWigLocation","fastaLocation","faiLocation","gziLocation","twoBitLocation","rootUrlTemplate","endpoint","hicLocation","pafLocation","guessTrackType","adapterType","BamAdapter","CramAdapter","BgzipFastaAdapter","IndexedFastaAdapter","TwoBitAdapter","VcfAdapter","VcfTabixAdapter","HicAdapter","PAFAdapter","generateUnsupportedTrackConf","trackName","trackUrl","categories","conf","description","category","objectHash","generateUnknownTrackConf","pluginManager","jbrequire","ConfigurationSchema","ConfigurationReference","getContainingView","configSchema","renderer","baseConfiguration","explicitlyTyped","stateModel","view","rpcDriverName","displayModel","bezierRadius","radius","blockDefinitions","onChordClick","lib","load","DisplayType","ChordVariantDisplay","trackType","viewType","ReactComponent","BaseChordDisplayComponentFactory","linearBasicDisplayModelFactory","literal","selectFeature","feature","session","getSession","isSessionModelWithWidgets","rpcManager","sessionId","getContainingTrack","adapterConfig","getConf","call","featureWidget","addWidget","featureData","descriptions","showWidget","setSelection","React","useMemo","polarToCartesian","blockStart","block","blockEnd","pos","bpOffset","Chord","blocksForRefs","selected","onClick","startBlock","svType","matePosition","breakendSpecification","endPosition","parseInt","endBlock","chr2","mate","startPos","startRadians","bpToRadians","endRadians","startXY","endXY","controlXY","strokeColor","hoverStrokeColor","data-testid","d","style","stroke","evt","onMouseOver","onMouseOut","props","selectedFeatureId","blocksForRefsMemo","regions","chords","String","trackStyleId","dangerouslySetInnerHTML","__html","StructuralVariantChords","ChordRendererType","defaultValue","contextVariable","strokeColorSelected","strokeColorHover","stateModelFactory","setFeatureData","clearFeatureData","enumeration","VariantsPlugin","addAdapterType","AdapterType","vcfTabixAdapterConfigSchema","getAdapterClass","then","r","default","vcfAdapterConfigSchema","addRendererType","StructuralVariantChordRendererFactory","addTrackType","createBaseTrackConfig","TrackType","createBaseTrackModel","addDisplayType","linearBasicDisplayConfigSchemaFactory","linearVariantDisplayConfigSchemaFactory","linearVariantDisplayModelFactory","BaseLinearDisplayComponent","addWidgetType","WidgetType","heading","variantFeatureWidgetConfigSchema","variantFeatureWidgetStateModelFactory","lazy","Plugin","useStyles","makeStyles","closeDialog","position","top","dialogContainer","margin","LockedPlugin","Tooltip","marginRight","title","PluginDialog","onClose","plugin","classes","Dialog","open","DialogTitle","IconButton","className","aria-label","DialogContent","Typography","DialogActions","Button","color","setTimeout","useState","dialogPlugin","setDialogPlugin","sessionPlugins","isSessionPlugin","some","p","pluginMetadata","url","rootModel","jbrowse","adminMode","pluginUrl","removePlugin","isSessionWithSessionPlugins","removeSessionPlugin","ListItem","plugins","corePlugins","filter","isCore","externalPlugins","includes","List","toLowerCase","filterText","card","icon","marginLeft","bold","fontWeight","dataField","display","alignItems","getEnv","isInstalled","Boolean","runtimePluginDefinitions","find","pluginDefinition","tempDisabled","setTempDisabled","disableButton","Card","CardContent","Link","href","target","rel","authors","join","CardActions","disabled","startIcon","addPlugin","addSessionPlugin","flexDirection","formInput","setFormInput","handleChange","event","getRoot","TextField","onChange","multiline","marginTop","theme","accordion","expandIcon","searchBox","marginBottom","spacing","adminBadge","borderRadius","backgroundColor","alignContent","customPluginButton","justifyContent","pluginArray","setPluginArray","error","setError","customPluginFormOpen","setCustomPluginFormOpen","useEffect","killed","fetch","fetchResult","ok","json","array","isElectron","setFilterText","fullWidth","InputProps","endAdornment","InputAdornment","clearFilterText","Accordion","defaultExpanded","AccordionSummary","refTheme","createTheme","jbrowseDefaultPalette","primary","main","secondary","tertiary","palette","augmentColor","quaternary","stopCodon","startCodon","bases","A","green","C","blue","G","amber","T","red","createJBrowseDefaultProps","MuiButton","size","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiList","dense","MuiListItem","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","MuiSvgIcon","fontSize","MuiToggleButtonGroup","MuiCheckbox","MuiLink","underline","createJBrowseDefaultOverrides","generatedPalette","deepmerge","colorSecondary","textSecondary","root","MuiAccordionSummary","minHeight","contrastText","content","MuiMenuItem","paddingTop","paddingBottom","MuiListItemIcon","minWidth","MuiListItemText","inset","paddingLeft","jbrowseBaseTheme","typography","overrides","createJBrowseTheme","getColors","midnight","forrest","grape","mandarin","gray","Logomark","viewBox","Icon","LogoFull","Text","colors","fill","transform","horizontalHandle","cursor","verticalHandle","flexbox_verticalHandle","alignSelf","flexbox_horizontalHandle","ResizeHandle","onDrag","vertical","flexbox","originalClassName","mouseDragging","setMouseDragging","prevPos","useRef","mouseMove","preventDefault","distance","current","actualDistance","mouseUp","addEventListener","removeEventListener","data-resizer","onMouseDown","role","clsx","paper","overflowY","zIndex","outline","background","resizeHandle","Drawer","children","elevation","square","drawerActions","float","alpha","drawerToolbar","spacer","flexGrow","drawerSelect","drawerLoading","dropDownIcon","DrawerHeader","setToolbarHeight","visibleWidget","activeWidgets","useTheme","ref","disableGutters","renderValue","HeadingComp","headingText","option","Array","widget","drawerCloseButton","toolbarHeight","fallback","buttonRoot","action","hoverOpacity","menuTitle","menuItems","setOpen","anchorEl","handleClose","Menu","anchorOrigin","horizontal","onMenuItemClick","_event","callback","input","inputBase","whiteSpace","visibility","inputRoot","inputFocused","borderStyle","borderWidth","EditableTypography","forwardRef","setValue","other","editedValue","setEditedValue","setWidth","sizerNode","setSizerNode","inputNode","setInputNode","blur","setBlur","clientWidth","component","InputBase","inputRef","inputProps","focused","onKeyDown","onBlur","snackbarMessage","setSnackbarMessage","popSnackbarMessage","snackbarMessages","latestMessage","timeoutId","clearTimeout","reason","message","level","Snackbar","Alert","severity","viewContainer","overflow","grow","iconRoot","listItemIconRoot","listItemInset","menuItemDense","paddingRight","secondaryActionRoot","light","borderColor","ViewMenu","IconButtonProps","IconProps","setAnchorEl","aria-controls","aria-haspopup","currentTarget","withContentRect","contentRect","measureRef","padWidth","bounds","isAlive","scrollRef","scrollIntoView","Paper","edge","arrow","displayName","assemblyNames","val","setDisplayName","html","fab","bottom","menuBarAndComponents","gridColumn","gridTemplateRows","menuBar","gridRow","components","appBar","Logo","logoPath","src","alt","HeaderButtons","drawerWidth","minimized","savedSessionNames","menus","views","gridTemplateColumns","menu","maxHeight","getTrackType","PrerenderedCanvas","highResolutionScaling","imageData","showSoftClip","featureCanvas","canvas","context","getContext","commands","command","strokeStyle","fillStyle","font","ImageBitmapType","drawImage","dataURL","img","Image","onload","softClipString","defaultProps","onFactoryReset","handleDialogClose","DialogContentText","hoverLabel","border","pointerEvents","offsetX","offsetY","timeout","shown","setShown","handle","text","ResetComponent","resetButtonText","dialogOpen","setDialogOpen","FactoryResetDialog","FatalErrorDialog","componentStack","toString","reload","libs","mobx","mst","react","ReactDom","mxreact","MUICore","MUISvgIcon","MUIUtils","MUILab","MUIDataGrid","MUIColors","MUIStyles","MUIBox","MUIButton","MUIButtonGroup","MUICard","MUICardContent","MUIContainer","MUICheckbox","MUIDialog","MUIFormGroup","MUIFormLabel","MUIFormControl","MUIFormControlLabel","MUIGrid","MUIIcon","MUIIconButton","MUIInputAdornment","MUILinearProgress","MUIListItemIcon","MUIListItemText","MUIMenu","MUIMenuItem","MUIRadioGroup","MUIRadio","MUISelect","MUISnackbar","MUISnackbarContent","MUITextField","MUITooltip","MUITypography","ToggleButton","ToggleButtonGroup","ViewType","pluggableElementTypeModels","ServerSideRendererType","BoxRendererType","FeatureRendererType","RendererType","Configuration","mstTypes","coreUi","coreUtil","coreColor","trackUtils","Base1DView","coreIo","coreMstReflection","rxjs","BaseFeatureDetail","BaseAdapterExports","modules","idMaker","i","hashCode","BaseAdapter","create","getSubAdapter","jest","isStateTreeNode","getSnapshot","_opts","hasDataForRefName","hasData","checkAbortSignal","getFeatures","takeUntil","observeAbortSignal","complete","obs","merge","getRefNames","refNames","feats","Promise","all","getRegionStats","acc","curr","b","isSequenceAdapter","thing","isRegionsAdapter","isFeatureAdapter","isRefNameAliasAdapter","isTextSearchAdapter","version","configurationSchema","_pluginManager","LocalFile","source","fdPromise","filename","fsOpenPromise","fsReadPromise","fsReadFilePromise","fsStatPromise","utilPromise","fsPromise","util","fs","promisify","read","readFile","stat","buffer","offset","fetchLength","getFd","fd","options","getfetch","method","credentials","requestDate","requestHeaders","headers","range","res","responseDate","status","v","arrayBuffer","Buffer","from","globalRangeCache","HttpRangeFetcher","chunkSize","maxFetchSize","minimumTTL","globalCacheFetch","Headers","isArray","rangeParse","exec","e","getRange","response","Response","openUrl","arg","RemoteFile","isLocalPathLocation","isUriLocation","URL","isBlobLocation","BlobFile","baseLinearDisplayConfigSchema","maxDisplayedBpPerPx","explicitIdentifier","linearBlocks","textAlign","heightOverflowed","borderBottom","textShadow","boxSizing","RenderedBlocks","blockState","state","maxHeightReached","getTotalHeight","boundary","viewModel","mouseCoord","featureUnderMouse","mouseover","placement","BaseLinearDisplay","setMouseCoord","contextCoord","setContextCoord","TooltipComponent","DisplayMessageComponent","contextMenuItems","setContextMenuFeature","onContextMenu","clientX","clientY","onMouseMove","rect","getBoundingClientRect","_","TransitionProps","onExit","anchorReference","anchorPosition","tooltip","loading","disabledBackground","backgroundImage","blockMessage","blockError","blockReactNodeMessage","dots","animation","Repeater","LoadingMessage","blockStatus","BlockMessage","messageContent","isValidElement","BlockError","displayHeight","ServerSideRenderedBlockContent","filled","reactElement","reloadFlag","volatile","renderInProgress","doReload","afterAttach","getContainingDisplay","makeAbortableReaction","renderBlockData","renderBlockEffect","delay","renderDelay","fireImmediately","setLoading","setRendered","setStatus","abortController","aborted","abort","setMessage","messageText","console","beforeDestroy","rendererType","renderArgs","cast","freeResourcesInClient","JSON","parse","stringify","catch","warn","optDisplay","assemblyManager","displayError","parentTrack","regionAsm","hasName","cannotBeRenderedReason","regionCannotBeRendered","blockKey","notReady","renderInClient","BaseDisplay","refinement","BlockState","userBpPerPxLimit","featureIdUnderMouse","contextMenuFeature","additionalContextMenuItemCallbacks","scrollTop","blockType","initialized","selection","isFeature","featureMaps","getFeatureOverlapping","x","y","getByCoord","getFeatureByID","ret","getByID","blockWatchDisposer","autorun","blocksPresent","contentBlocks","addBlock","deleteBlock","addDisposer","setHeight","resizeHeight","oldHeight","setScrollTop","setUserBpPerPxLimit","limit","toRegion","delete","isSelectionContainer","clearFeatureSelection","clearSelection","setFeatureIdUnderMouse","addAdditionalContextMenuItemCallback","regionCannotBeRenderedText","_region","maxViewBpPerPx","MenuOpenIcon","onFeatureClick","featureId","onFeatureContextMenu","onMouseLeave","composedRenderProps","renderSvg","overrideHeight","viewOffsetPx","dynamicBlocks","roundedDynamicBlocks","exportSVG","renderings","rendering","clipid","Fragment","clipPath","postProcessSnapshot","SetMaxHeightDlg","trackShowLabels","trackDisplayMode","trackMaxHeight","showLabels","displayMode","configBlob","toggleShowLabels","setDisplayMode","setMaxHeight","trackMenuItems","rendererConfig","VisibilityIcon","checked","subMenu","setDialogComponent","configSchemaFactory","pluggableConfigSchemaType","LinearGenomeViewPlugin","exports","linearBareDisplayConfigSchemaFactory","LinearBareDisplayStateModelFactory","addViewType","linearGenomeViewStateModelFactory","isAbstractMenuManager","appendToSubMenu","LineStyleIcon","addView","isSimpleFeatureSerialized","subfeatures","parentHandle","uniqueId","aliases","strand","parentId","c","child","Observable","tracks","addTrackConf","addTrackConfs","trackConfs","setTrackConfs","clear","rendererTypeName","getDisplayType","getRendererType","setRpcDriverName","baseTrackConfig","displays","pluggableMstType","pm","getAdapterType","viewMenuActions","isSessionModelWithConfigEditing","sessionTracks","activateConfigurationUI","editTrackConfiguration","hideTrack","showTrack","showDisplay","displayId","initialSnapshot","displayTypeConfigSchema","resolveIdentifier","displayType","hideDisplay","shownDisplays","transaction","remove","replaceDisplay","oldDisplayId","newDisplayId","displayIdx","findIndex","splice","displayChoices","compatibleDisplayTypes","getViewType","displayTypes","compatibleDisplays","displayConf","shownId","metadata","textSearchIndexingAttributes","adapter","preProcessSnapshot","addDisplayConf","PluginLoader","pluginDefinitions","definitions","scriptUrl","document","getElementsByTagName","domLoadScript","importScripts","resolve","reject","definition","parsedUrl","protocol","loadScript","moduleName","umdName","scope","global","constructor","JBrowseExports","ReExports","module","loadPlugin","mismatchLen","mismatch","isInterbase","inc","bin","field","total","strands","dec","SNPCoverageAdapter","subadapterConfig","sequenceConf","dataAdapter","sequenceAdapter","subadapter","configure","stream","filters","passes","generateCoverageBins","next","snpinfo","colorBy","binMax","initBins","lowqual","cov","delskips","noncov","toArray","feat","regionSeq","bins","cigar","fstart","fend","fstrand","cigarOps","parseCigar","j","seq","mm","getTagAlt","ml","probabilities","split","charCodeAt","elt","probIndex","getModificationPositions","positions","mod","getNextRefPos","epos","methBins","l1","l2","bin1","mismatches","mstart","base","interbase","Worker","stuff","AdapterClass","PluggableElementBase","getDefaultValue","HeadingComponent","ContentCopy","TrackSelector","overflowX","maxWidth","menuItemEndDecoration","MenuItemEndDecoration","MenuPage","subMenuAnchorEl","setSubMenuAnchorEl","openSubMenuIdx","setOpenSubMenuIdx","isSubMenuOpen","setIsSubMenuOpen","selectedMenuItemIdx","setSelectedMenuItemIdx","setPosition","paperRef","timer","shouldSubMenuBeOpen","hasEndDecoration","menuItem","hasIcon","menuItemStyle","ListContents","autoFocusItem","sort","priority","idx","endDecoration","activeElement","focus","currentIdx","findLastIndex","slice","findPreviousValidIdx","findNextValidIdx","subLabel","in","transformOrigin","transitionDuration","BackdropProps","invisible","cigarToMismatches","ops","qual","currOffset","seqOffset","len","op","q","cliplen","mdToMismatches","mdstring","cigarMismatches","mismatchRecords","skips","lastCigar","lastTemplateOffset","lastRefOffset","lastSkipPos","nextRecord","getTemplateCoordLocal","refCoord","templateOffset","refOffset","md","match","token","substring","substr","qualScore","altbase","getTemplateCoord","getMismatches","cigarString","mdString","concat","seen","m","generateMD","query","queryOffset","targetOffset","lengthMD","str","tmp","cigarIdx","readPos","refPos","fseq","revcom","basemod","matches","delta","temp","flat","getModificationTypes","closeButton","grey","ExportSvgDlg","OffscreenCanvas","rasterizeLayers","setRasterizeLayers","CircularProgress","FormControlLabel","control","Checkbox","exportSvg","Divider","clearView","autoFocus","calculateVisibleLocStrings","isSingleAssemblyName","every","round","HEADER_BAR_HEIGHT","HEADER_OVERVIEW_HEIGHT","SCALE_BAR_HEIGHT","RESIZE_HANDLE_HEIGHT","BaseViewModel","MUIRegion","hideHeader","hideHeaderOverview","trackSelectorType","trackLabels","showCenterLine","volatileWidth","draggingTrackId","afterDisplayedRegionsSetCallbacks","scaleFactor","trackRefs","coarseDynamicBlocks","coarseTotalBp","leftOffset","rightOffset","searchResults","searchQuery","assembliesInitialized","assemblyList","asm","t","trackHeights","trackHeightsWithResizeHandles","headerHeight","scaleBarHeight","totalbp","totalBp","displayedRegionsTotalPx","searchScope","includeAggregateIndexes","bpToPx","coord","offsetBp","interRegionPaddingBp","minimumBlockBp","pxToBp","px","bpSoFar","bp","oob","getTrack","rankSearchResults","results","openTrackIds","updateScore","getScore","rewriteOnClicks","holdOnClick","apply","allActions","clone","newWidth","toggleHeader","toggleHeaderOverview","scrollTo","newOffsetPx","clamp","minOffset","maxOffset","zoomTo","newBpPerPx","minBpPerPx","maxBpPerPx","oldBpPerPx","abs","viewWidth","setOffsets","setSearchResults","setNewView","horizontallyFlip","reverse","displayInitialSnapshot","trackConfigSchema","supportedDisplays","shownTracks","moveTrack","movingTrackId","targetTrackId","oldIndex","newIndex","closeView","isViewContainer","removeView","toggleTrack","setTrackLabels","setting","toggleCenterLine","setDisplayedRegions","activateTrackSelector","selector","navToLocString","optAssemblyName","isValidRefName","locStrings","locations","ls","parseLocString","navToMultiple","defaultRefName","assembly","parsedLocString","changedAssembly","newAssembly","newRegions","canonicalRefName","getCanonicalRefName","newDisplayedRegion","displayedRegion","navTo","firstLocation","refNameMatched","predicate","lastIndex","previousIndex","moveTo","locationIndex","locationStart","locationEnd","toLocaleString","startDisplayedRegion","endDisplayedRegion","zoomToDisplayedRegions","leftPx","rightPx","startOffset","endOffset","notify","getSelectedRegions","simView","setVolatileWidth","afterDisplayedRegionsSet","cb","targetBpPerPx","extraBp","bpToStart","horizontalScroll","oldOffsetPx","centerAt","regionIndex","centerPx","center","centerBp","showAllRegions","showAllRegionsInAssembly","setDraggingTrackId","setScaleFactor","factor","cancelLastAnimation","slide","viewWidths","springAnimate","animate","cancelAnimation","zoom","currentlyCalculatedStaticBlocks","stringifiedCurrentlyCalculatedStaticBlocks","ReturnToImportFormDlg","FolderOpenIcon","TrackSelectorIcon","SyncAltIcon","LabelIcon","trackTypeActions","sret","calculateDynamicBlocks","setCoarseDynamicBlocks","renderToSvg","Blob","saveAs","isSessionModel","isViewModel","isTrackModel","isDisplayModel","isTrackViewModel","typeModels","stringArray","stringArrayMap","numberMap","integer","fileLocation","frozen","fallbackDefaults","literalJSON","objectJSON","typeModelExtensions","removeAtIndex","setAtIndex","addToKey","ar","removeAtKeyIndex","setAtKeyIndex","JexlStringType","startsWith","isEmptyArray","makeConfigurationSchemaModel","modelName","schemaDefinition","modelDefinition","implicitIdentifier","volatileConstants","isJBrowseConfigurationSchema","jbrowseSchema","slotName","slotDefinition","isType","isLateType","isConfigurationSchemaType","configSlotModelName","charAt","slot","isCallback","stringToJexlExpression","jexl","evalSync","newVal","reset","convertToCallback","valueJSON","convertToValue","funcResult","expr","extend","defineProperty","ConfigSlot","completeModel","setSubschema","newSchema","identifierDefault","modelDefault","defaultSnap","newSnap","matchesDefault","inputSchemaDefinition","inputOptions","jbrowseSchemaDefinition","jbrowseSchemaOptions","preprocessConfigurationSchemaArguments","schemaType","reference","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorToHex","isNamedColor","contrastingTextColor","getLuminance","convertedColor","muiGetLuminance","emphasize","coefficient","muiEmphasize","makeContrasting","foreground","minContrastRatio","convertedForeground","convertedBackground","backgroundLuminance","contrastRatio","getContrastRatio","originalColor","darken","lighten","getSubType","isOptionalType","isArrayType","isMapType","TypeError","getUnionSubTypes","unionType","isUnionType","getPropertyType","propertyName","getEnumerationValues","resolveLateType","maybeLate","intersection2","left1","right1","left2","right2","doesIntersect2","isContainedWithin","lastBlock","thisarg","BaseBlock","assign","otherBlock","elidedBlockCount","weHave","isNode","PonyfillOffscreenContext","w","nx","nw","currentFont","splitColor","Color","hex","opacity","PonyfillOffscreenCanvas","currentPath","nodes","fontFamily","fontStyle","fontVariant","lineHeight","elements","outer","element","parts","parseFont","currentFill","currentStroke","ny","nh","fillOpacity","path","rotation","createCanvas","createImageBitmap","require","nodeCreateCanvas","dataUri","setBpPerPx","setFeatures","zoomOut","zoomIn","scroll","serializedArgs","deserializedFeatures","fromJSON","deserialized","serialized","iterMap","_renderArgs","requestRegions","requestRegion","featureObservable","getExpandedRegion","getFeaturesInMultipleRegions","tap","featurePassesFilters","ignoreElements","NewFeatureRendererType","QuickLRU","_size","cache","oldCache","deleted","item","oldCacheSize","GranularRectLayout","pitchX","rectangles","rbush","pTotalHeight","RBush","existingRecord","minY","currHeight","found","collides","minX","maxX","maxY","insert","search","x1","y2","regionRectangles","totalHeight","objectFromEntries","getRectangles","PrecomputedLayout","_rect","_top","_data","_left","_right","LayoutSession","cachedLayout","isConfigurationModel","update","deepEqual","cachedLayoutIsValid","makeLayout","sessions","createSession","maxFeatureGlyphExpansion","bpExpansion","freed","deserializeLayoutInClient","getWorkerSession","serializeRegion","createLayoutInWorker","stitch","subfeats","sequence","sub","filterId","dedupe","list","ary","revlist","seqlen","cdsColor","updownstreamColor","GeneCDS","cds","GeneProtein","codonTable","protein","GenecDNA","utr","exons","upstream","downstream","includeIntrons","collapseIntron","chunks","chunk","intron","SequencePanel","mode","generateCodonTable","defaultCodonTable","firstCds","lastCds","firstCdsIdx","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","threeUTRs","calculateUTRs","SequenceFeatureDetails","parentFeature","hasCDS","seqPanelRef","useInView","inView","setSequence","setMode","copied","setCopied","finished","fetchSeq","waitForAssembly","Select","MenuItem","copy","innerHTML","format","wordWrap","globalOmit","coreDetails","expansionPanelDetails","flexWrap","fieldDescription","fieldName","wordBreak","fieldValue","fieldSubvalue","BaseCard","unmountOnExit","AccordionDetails","FieldName","prefix","BasicValue","SanitizedHTML","isObject","SimpleValue","ArrayValue","attributes","CoreDetails","strandMap","strandStr","displayStart","displayEnd","displayRef","displayedDetails","BaseCoreDetails","DataGridDetails","unionKeys","colNames","rows","columns","row","measureText","disableSelectionOnClick","rowHeight","rowsPerPageOptions","hideFooterRowCount","hideFooterSelectedRowCount","hideFooter","Attributes","omit","formatter","omits","arr","obj","Description","accessNested","BaseAttributes","FeatureDetails","depth","slug","shortName","sequenceTypes","FallbackComponent","BaseFeatureDetails","ServerSideRenderedContent","ssrContainerNode","RenderingComponent","jbrowseTheme","domNode","unmountComponentAtNode","rIC","hydrate","ThemeProvider","data-html-size","ServerSideRenderer","supportsSVG","SerializableFilterChain","renderToString","deserializedArgs","deserializeArgsInWorker","updateStatus","render","serializeResultsInWorker","serializeArgsInClient","freeResources","freedRpc","AbortError","code","AbortSignal","makeAbortError","ms","abortBreakPoint","DOMException","fromEvent","isAbortException","exception","compilationCache","cacheKey","compiled","compile","createJexlInstance","full","RegExp","tag","escapeHTML","dompurify","sanitize","filterChain","inputFilter","VCFFeature","parser","_id","dataFromVariant","SAMPLES","REF","ALT","POS","CHROM","INFO","ID","_getSOTermAndDescription","SO_term","isTRA","indexOf","END","soTerms","_getSOAndDescFromAltDefs","soTerm","_getSOAndDescByExamination","prefixes","desc","new_descs","suffixes","pref","_altTypeToSO","getMetadata","modAlt","_makeDescriptionString","samples","DEL","INS","DUP","INV","INVDUP","CNV","TRA","NON_REF","createFilterOptions","trim","ignoreCase","fetchResults","textSearchManager","queryString","searchType","onSelect","TextFieldProps","currentSearch","setCurrentSearch","debouncedSearch","useDebounce","searchOptions","setSearchOptions","coarseVisibleLocStrings","active","adapterResults","Autocomplete","freeSolo","disableListWrap","disableClearable","includeInputInList","clearOnBlur","selectOnFocus","onOpen","getOptionDisabled","group","filterOptions","possibleOptions","params","filtered","ListboxProps","selectedOption","newResult","renderInput","helperText","TextFieldInputProps","placeholder","renderOption","getLabel","getRenderingComponent","noWrap","getOptionLabel","chooseGridPitch","scale","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","majorMagnitude","toExponential","majorPitch","majorPitchPx","minorPitch","makeTicks","emitMajor","emitMinor","gridPitch","minBase","maxBase","iterPitch","ticks","rubberBand","rubberBandControl","rubberBandText","popover","mouseEvents","guide","OverviewRubberBand","overview","ControlComponent","startX","setStartX","currentX","setCurrentX","guideX","setGuideX","controlsRef","rubberBandRef","mouseDown","stopPropagation","mouseOut","globalMouseMove","relativeX","globalMouseUp","clickedAt","globalKeyDown","leftBpOffset","rightBpOffset","Popover","keepMounted","disableRestoreFocus","scaleBarColor","scaleBar","scaleBarContig","borderBottomColor","scaleBarContigForward","backgroundRepeat","scaleBarContigReverse","scaleBarRegionIncompleteLeft","backgroundSize","borderTopLeftRadius","borderBottomLeftRadius","scaleBarRegionIncompleteRight","borderTopRightRadius","borderBottomRightRadius","scaleBarRefName","scaleBarLabel","scaleBarVisibleRegion","overviewSvg","Polygon","totalWidthPxWithoutBorders","polygonColor","firstBlock","topLeft","topRight","startPx","endPx","points","ScaleBar","visibleRegions","overviewVisibleRegions","firstOverviewPx","lastOverviewPx","refNameColor","getRefNameColor","regionLength","tickLabels","offsetLabel","tickLabel","labelIdx","LinearProgress","container","slider","log2","Slider","onChangeCommitted","headerBar","headerForm","headerRefName","panButton","toggleButton","buttonSpacer","Controls","PanControls","RegionWidth","LinearGenomeViewHeader","newRegionValue","getLocation","newRegion","toLocaleLowerCase","controls","FormGroup","transition","transitions","duration","shortest","dragHandle","dragHandleIcon","verticalAlign","iconButton","TrackLabel","assemblies","draggable","onDragStart","parentNode","dataTransfer","setDragImage","onDragEnd","getTrackActionMenuItems","overlay","renderingComponentContainer","trackLabel","trackLabelInline","trackLabelOverlap","trackRenderingContainer","debouncedOnDragEnter","useDebouncedCallback","DisplayBlurb","dimmed","onScroll","onDragEnter","onHorizontalScroll","VerticalGuide","coordX","RubberBand","setAnchorPosition","ZoomInIcon","zoomToRegion","getSequence","numOfBpSelected","scaleBarContainer","scaleBarZoomContainer","majorTickLabel","tick","refLabel","RenderedRefNameLabels","lastLeftBlock","staticBlocks","RenderedScaleBarLabels","baseNumber","offsetLeft","totalWidthPx","verticalGuidesZoomContainer","verticalGuidesContainer","majorTick","hint","minorTick","divider","RenderedVerticalGuides","centerLineContainer","borderTop","centerLineText","centerLineInfo","startingPosition","tracksContainer","scheduled","prevX","cleanup","requestAnimationFrame","onWheel","origEvent","normalizeWheel","ctrlKey","pixelY","pixelX","dataset","resizer","button","onMouseUp","dialogContent","SearchResultsDialog","assemblyRegions","handleClick","getTrackName","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","getTrackId","resultTrackId","handleShowTrack","importFormContainer","importFormEntry","ImportForm","selectedAssemblyIdx","setSelectedAssemblyIdx","selectedRegion","setSelectedRegion","setAssemblyRegions","hasError","handleSelectedRegion","done","isSearchDialogDisplayed","Container","Grid","select","onKeyPress","inputValue","disableShrink","MiniControls","loadingMessage","textAreaFont","fetchSequence","selectedRegions","assemblyConfig","regionsSelected","formatSequence","seqChunks","sequenceChunks","incompleteSeqErrs","chunkSeq","chunkRefName","chunkStart","chunkEnd","chunkLocstring","replace","trimEnd","sequenceTooLarge","aria-labelledby","aria-describedby","readOnly","seqFastaFile","mathPower","num","Ruler","major","minor","x2","y1","strokeWidth","data-bp","errorMessage","LinearGenomeView","hasDisplayedRegions","isSeqDialogDisplayed","Header","displayBp","parseFloat","toPrecision","x0","textAnchor","SVGRuler","renderRuler","accum","SVGHeader","SVGRegionSeparators","strokeOpacity","SVGTracks","displayResults","when","shift","ready","renderToStaticMarkup","xmlns","xmlnsXlink","createElement","confObject","slotPath","getType","appliedFunc","newPath","subConf","getTypeNamesFromExplicitlyTypedUnion","maybeUnionType","typeNames","typeName","isBareConfigurationSchemaType","isModelType","isConfigurationSlotType","displayedRegionLeftPx","windowLeftPx","windowRightPx","displayedRegionRightPx","blockOffsetPx","FileLocationEditor","fileOrUrl","fileOrUrlState","setFileOrUrlState","shrink","htmlFor","direction","exclusive","newValue","URLSearchParams","UrlChooser","LocalFileChooser","setLocation","needToReload","files","contentBlock","elidedBlock","interRegionPaddingBlock","boundaryPaddingBlock","ConnectionType","configEditorComponent","abortSignalCounter","abortSignalIds","WeakMap","surrogateAbortControllers","deserializeAbortSignal","abortSignalId","surrogateAbortController","AbortController","RpcMethodType","_rpcDriverClassName","originalReturn","_args","serializedReturn","TextSearchAdapterType","safeReference","adapterConfigCacheKey","jsonStableStringify","adapterCache","getAdapter","adapterConfigSnapshot","dataAdapterType","bind","CLASS","sessionIds","cacheEntry","freeAdapterResources","specification","deleteCount","specKeys","CoreGetRefNames","rpcDriverClassName","deserializeArguments","CoreGetFileInfo","CoreGetMetadata","CoreGetFeatures","CoreFreeResources","getRendererTypes","count","CoreRender","renameRegionsIfNeeded","renamedArgs","validateRendererType","renderInWorker","deserializeResultsInClient","CorePlugin","coreRpcMethods","RpcMethod","addRpcMethod","PhasedScheduler","phaseCallbacks","phaseOrder","phase","phaseName","TypeRecord","elementType","registeredTypes","baseClass","PluginManager","initialPlugins","elementCreationSchedule","rendererTypes","adapterTypes","textSearchAdapterTypes","trackTypes","connectionTypes","viewTypes","widgetTypes","rpcMethods","configured","jbrequireCache","pack","configurationSchemas","install","getPlugin","run","groupName","creationCallback","typeRecord","getElementTypeRecord","newElement","typeGroup","null","pluggableTypes","methodName","addElementType","getElementTypesInGroup","newView","initialTimeStamp","sessionQuery","multiAssemblyTracks","savedSessionCount","localStorage","ver","stats","screen","innerHeight","electron","loadTime","jb2","qs","pluginNames","analyticsScript","gaData","metric1","analyticsScriptNode","appendChild","generateUID","Uint8Array","encrypt","AES","decrypt","bytes","getErrorMsg","err","sess","toUrlSafeB64","password","encryptedSession","body","sessionQueryParam","renderToAbstractCanvas","fakeCanvas","fakeCtx","getSerializedSvg","ctx","convertToBlob","blobToDataURL","toDataURL","xlinkHref","WiggleBaseRenderer","draw","getFeatureUnderMouse","eventClientX","clientBp","getScale","domain","scaleType","pivotValue","inverted","scaleLinear","scaleLog","scaleQuantize","nice","rangeMin","rangeMax","getOrigin","getNiceDomain","minScore","maxScore","getScaleType","posColor","negColor","highlightColor","clipColor","renderType","bicolorPivot","bicolorPivotValue","summaryScoreMode","displayCrossHatches","DensityRenderer","colorCallback","colorScale","scaleOpts","pivot","featureSpanPx","fillRect","toP","popper","hoverVertical","TooltipContents","loc","YSCALEBAR_LABEL_OFFSET","YScaleBar","orientation","orient","LEFT","RIGHT","LinearWiggleDisplay","needsScalebar","SetMinMaxDlg","SetColorDlg","logb","log","pow","selectedRendering","rendererTypeNameState","autoscale","constraints","observable","statsFetchInProgress","updateStats","setColor","aborter","statsFetch","setResolution","setFill","toggleLogScale","setScaleType","setSummaryScoreMode","setAutoscale","setMaxScore","setRendererType","setMinScore","toggleCrossHatches","setCrossHatches","cross","viewName","oldDomain","headroom","autoscaleType","axisPropsFromTickScale","adapterTypeName","hasResolution","canHaveFill","displayCrossHatchesSetting","hasGlobalStats","composedTrackMenuItems","superReload","superRenderSvg","getStats","nd","XYPlotRenderer","unadjustedHeight","originY","niceMin","niceMax","toY","toHeight","_score","lineTo","crossingOrigin","maxr","minr","lowClipping","highClipping","summary","mix","lineWidth","beginPath","LinePlotRenderer","rawscore","lastVal","WiggleGetGlobalStats","l","getGlobalStats","WiggleGetMultiRegionStats","getMultiRegionStats","WigglePlugin","LinearWiggleDisplayReactComponent","XYPlotRendererReactComponent","xyPlotRendererConfigSchema","utils","linearWiggleDisplayModelFactory","XYPlotRendererConfigSchema","DensityRendererConfigSchema","LinePlotRendererConfigSchema","numStdDev","defaultRendering","renderers","linearWiggleDisplayConfigSchemaFactory","bigWigAdapterConfigSchema","DensityRendererReactComponent","densityRendererConfigSchema","LinePlotRendererReactComponent","linePlotRendererConfigSchema","late","chunkSizeLimit","fetchSizeLimit","configSchemaF","htsgetBase","htsgetTrackId","configModelFactory","PileupDisplayConfigSchema","SNPCoverageDisplayConfigSchema","pileupDisplay","snpCoverageDisplay","PileupDisplay","SNPCoverageDisplay","snpCovHeight","showCoverage","showPileup","toggleCoverage","togglePileup","setSNPCoverageHeight","sortedBy","sortedByPosition","sortedByRefName","extraTrackMenuItems","setSNPCoverageDisplay","displayConfig","setPileupDisplay","snpCoverageDisplayConfig","setConfig","pileupDisplayConfig","filterBy","setFilterBy","setColorBy","pileupHeight","PileupConfigFactory","PileupRendererConfigSchema","SvgFeatureRendererConfigSchema","PileupRenderer","SvgFeatureRenderer","colorScheme","getUniqueTagValues","getUniqueModificationValues","ColorByTagDlg","FilterByTagDlg","SortByTagDlg","SetFeatureHeightDlg","ModificationsDlg","showSoftClipping","featureHeight","noSpacing","fadeLikelihood","mismatchAlpha","flagInclude","flagExclude","readName","tagFilter","colorTagMap","modificationTagMap","currBpPerPx","setReady","flag","setCurrBpPerPx","setFeatureHeight","setNoSpacing","setColorScheme","updateModificationColorMap","uniqueModifications","colorPalette","totalKeys","newColor","updateColorTagMap","uniqueTag","uniqueTagSet","uniqueModificationsSet","clearSelected","copyFeatureToClipboard","copiedFeature","toggleSoftClipping","toggleMismatchAlpha","setSortedBy","centerRefName","ContentCopyIcon","LinearPileupDisplayBlurb","SortIcon","PaletteIcon","FilterListIcon","mismatchAlphaSetting","info","entry","drawInterbaseCounts","drawIndicators","modificationsReady","toggleDrawIndicators","drawIndicatorsSetting","toggleDrawInterbaseCounts","drawInterbaseCountsSetting","vals","highlightOverlayCanvas","mouseIsDown","setMouseIsDown","movedDuringLastMouseDown","setMovedDuringLastMouseDown","featIdUnderMouse","callMouseHandler","handlerName","featureHandler","canvasHandler","clearRect","selectedRect","leftBp","topPx","rightBp","bottomPx","bpSpanPx","rectTop","rectHeight","shadowColor","shadowBlur","lineJoin","strokeRect","highlightedFeature","highlightedRect","canvasWidth","onMouseEnter","onFocus","orientationType","minSubfeatureWidth","maxClippingSize","largeInsertionIndicatorScale","PileupLayoutSession","getColorBaseMap","deletion","alignmentColoring","color_fwd_strand_not_proper","color_rev_strand_not_proper","color_fwd_strand","color_rev_strand","color_fwd_missing_mate","color_rev_missing_mate","color_fwd_diff_chr","color_rev_diff_chr","color_pair_lr","color_pair_rr","color_pair_rl","color_pair_ll","color_nostrand","color_interchrom","color_longinsert","color_shortinsert","shouldDrawMismatches","charWidth","charHeight","expansionBefore","expansionAfter","heightPx","getOrientation","LR","RR","RL","LL","orientationTypes","_config","flags","flipper","scores","layoutFeature","modifications","col","hsl","regionSequence","rstart","rend","leftPx2","rightPx2","flip","closePath","colorType","colorByInsertSize","colorByOrientation","colorByStranded","tags","foundValue","drawRect","colorByPerBaseQuality","colorByModifications","colorByMethylation","colorForBase","drawSNPs","drawIndels","getCharWidthHeight","minFeatWidth","insertionScale","pxPerBp","heightLim","getAlphaColor","baseColor","mismatchLeftPx","mismatchRightPx","mismatchWidthPx","getContrastText","fillText","txt","softClipLength","softClipStart","softClipLeftPx","softClipRightPx","softClipWidthPx","layoutRecords","configTheme","drawAlignmentRect","drawMismatches","drawSoftClipping","featureMap","featureArray","featuresInCenterLine","featuresOutsideCenter","innerArray","isCram","getTag","localeCompare","baseSortArray","baseMap","aMismatch","bMismatch","acode","bcode","sortFeature","layoutFeats","makeImageData","indicatorThreshold","SNPCoverageRenderer","cfg","viewScale","snpViewScale","snpOriginY","snpToY","snpToHeight","insertion","softclip","hardclip","meth","unmeth","totalScore","interbaseEvents","PileupGetGlobalValueForTag","featuresArray","uniqueValues","PileupGetVisibleModifications","AlignmentsPlugin","linearAlignmentsDisplay","linearPileupDisplayConfigSchemaFactory","linearPileupDisplayModelFactory","SNPCoverageRendererConfigSchema","linearSNPCoverageDisplayConfigSchemaFactory","linearSNPCoverageDisplayModelFactory","linearAligmentsDisplayConfigSchemaFactory","linearAlignmentsDisplayModelFactory","LinearAlignmentsDisplayReactComponent","alignmentsFeatureDetailConfigSchema","alignmentsFeatureDetailStateModelFactory","BamAdapterF","SNPCoverageAdapterF","CramAdapterF","HtsgetBamAdapterF","PileupRendererReactComponent","pileupRendererConfigSchema","SNPCoverageRendererReactComponent","columnNames","scoreColumn","autoSql","BedPlugin","bigBedAdapterConfigSchema","bedTabixAdapterConfigSchema","intersect","a1","a2","a12","jbrequiredTypes","onAction","getPath","showIntraviewLinks","linkViews","interactToggled","getMatchedTracks","trackConfigId","hasPairedReads","getTrackFeatures","hasTranslocations","getMatchedTranslocationFeatures","alreadySeen","getMatchedBreakendFeatures","candidates","cur","MatePosition","getMatchedAlignmentFeatures","unmapped","getBadlyPairedAlignments","correctlyPaired","getMatchedFeaturesInLayout","calc","onSubviewAction","actionName","lastIndexOf","setHeaderHeight","toggleInteract","toggleIntraviewLinks","toggleLinkViews","TOP","BOTTOM","getPxFromCoordinate","yPos","heightFromSpecificLevel","useNextFrame","variable","setNextFrameState","AlignmentConnections","parentRef","totalFeatures","layoutMatches","mouseoverElt","setMouseoverElt","yOffset","c1","f1","level1","c2","f2","level2","f1origref","f2origref","f1ref","f2ref","reversed1","reversed2","Path","curveTo","feature1","feature2","Breakends","yoff","relevantAlt","feat1","feat2","findMatchingAlt","Join","MateDirection","gridArea","emphasis","hovered","InteractWithSquiggles","LinkViews","Sync","withSize","monitorHeight","Translocations","CHR2","end2","STRANDS","myDirection","mateDirection","breakpointMarker","viewDivider","Overlay","BreakpointSplitView","viewComponent","matchedTracks","BreakpointSplitViewType","endPos","mateRefName","featureRefName","topRegion","startMod","endMod","bottomRegion","topMarkedRegion","bottomMarkedRegion","BreakpointSplitViewModel","BreakpointSplitViewComponent","BreakpointSplitViewPlugin","BreakpointSplitViewFactory","alignmentsFeatureDetailStateModel","hubTxtLocation","baseConnectionConfig","hubFileText","genomesFileText","trackDbFileText","generateTracks","trackDb","trackKeys","parentTrackKeys","parentTracks","currentTrackName","baseTrackType","bigDataLocation","trackDbFileLocation","bigDataIndexLocation","makeTrackConfig","UCSCTrackHubConnection","BaseConnectionModelFactory","connect","connectionName","hubFileLocation","fetchHubFile","hubFile","genomesFileLocation","fetchGenomesFile","genomesFile","trackDbData","genomeName","genome","assemblyConf","fetchTrackDbFile","trackDbFile","isAbsoluteUrl","trackSource","trackData","indexTrackData","altAssemblyName","altTrackName","altTrackType","setAdapterHint","setTrackSource","setTrackData","setIndexTrackData","setAssembly","setTrackName","setTrackType","clearData","isRelativeIndexUrl","isRelativeTrackUrl","trackHttp","indexHttp","trackAdapter","isFtp","isRelativeUrl","wrongProtocol","hasAnyOverlap","generateHierarchy","trackConfigurations","collapsed","hierarchy","regexp","cat","passesFilter","currLevel","expanded","collapsedCategories","setView","toggleCategory","getRefSeqTrackConf","refseq","trackConfAssemblies","allAliases","trackDisplays","connectionTrackConfigurations","connection","hier","conns","conn","configAssemblyNames","connectionHierarchy","allTracksInCategoryPath","currentHier","pathItem","contents","newText","SetDefaultSession","AssemblyManager","addConnectionType","ucscConfigSchema","ucscModelFactory","HierarchicalTrackSelectorConfigSchema","HierarchicalTrackSelectorStateModelFactory","AddTrackConfigSchema","AddTrackStateModelFactory","AddConnectionConfigSchema","AddConnectionStateModel","PluginStoreConfigSchema","PluginStoreStateModelFactory","appendToMenu","NoteAddIcon","InputIcon","ExtensionIcon","DotplotDisplay","vview","hview","ReactComponent2","viewHeight","borderSize","borderX","borderY","drawMode","ComparativeServerSideRenderer","approxPixelStringLen","Dotplot1DView","box","DotplotHView","DotplotVView","tickSize","vtextRotation","htextRotation","viewTrackConfigs","viewAssemblyConfigs","axis","regionsSnapshot","setBorderY","setBorderX","newHeight","zoomOutButton","zoomInButton","setAssemblyNames","setViews","getCoords","mousedown","mouseup","minmax","xmin","xmax","ymin","ymax","onDotplotView","d1","d2","viewSnapshot","MismatchParser","DotplotRenderer","db1","db2","mateRef","b10","b20","e10","e20","b1","b2","e1","e2","currX","currY","prevY","dimensions","realizedViews","ComparativeServerSideRendererType","AbortablePromiseCache","maxSize","encoding","pafRecords","line","chr1","start1","end1","start2","numMatches","blockLen","mappingQual","fields","fromEntries","records","syntenyId","ComparativeRender","getLength","getLengthSansClipping","DotplotPlugin","dotplotDisplayConfigSchemaFactory","dotplotDisplayStateModelFactory","DotplotDisplayReactComponent","dotplotRendererConfigSchema","DotplotRendererReactComponent","PAFAdapterConfigSchema","TimelineIcon","AddIcon","clipPos","SA","readAssembly","trackAssembly","supplementaryAlignments","aln","saRef","saStart","saStrand","saCigar","saLengthOnRef","lengthOnRef","getLengthOnRef","saLength","saLengthSansClipping","saClipPos","getClip","saRealStart","seqLength","CIGAR","totalLength","refLength","addContextMenu","hideExpressions","filterControlsHeight","dragHandleHeight","filterOut","attrName","makeFilters","setFilterControlsHeight","resizeFilterControls","toggleFilter","styles","AttributeFilter","withStyles","formControl","ReactPropTypes","FilterControls","seenAttributes","reaction","newSeenAttributes","visibleValues","gutterBottom","Component","innerDisplay","filterControls","innerDisplayHeight","filterAttributes","linearFilteringDisplayConfigSchemaFactory","linearFilteringDisplayModelFactory","LinearFilteringDisplayReactComponent","dontRedispatch","gff3TabixAdapterConfigSchema","crc32Table","stringToBytes","ch","st","re","HttpMap","hash_hex_characters","compress","loadFile","meta","track_names","hashHexCharacters","hash_bits","readMeta","getBucket","bucket","bucketIdent","hash","hexToDirPath","getHashHexCharacters","getCompress","dirpath","crc","table","iTop","crc32","JBrowse1TextSearchAdapter","httpMap","tracksNames","namesIndexLocation","bucketContents","getTrackNames","loadIndexFile","formatResults","trackIndex","locstring","defaultLabel","dataDirLocation","isTrack","deepUpdate","prop","prototype","nodeType","cloneNode","getTime","dest","copyFunc","empty","mixin","parseJB1Json","parsedConf","regularizeConf","parseJB1Conf","keyPath","operation","lineNumber","section","recordVal","parsedValue","existing","getValue","textLine","varName","isAlwaysArray","trackMetadata","sources","sourceDef","newSourceDef","typeMatch","sourceUrl","baseUrl","addBase","stores","names","refSeqs","nameUrl","trackConfig","trackClassName","store","regularizeClass","synthesizeTrackStoreConfig","histograms","mainConf","storeClass","urlTemplate","backendVersion","guessStoreClass","storeConf","useAsRefSeqStore","refseqs","dataRoot","baseConfig","include","baseConfigRoot","dataRootReg","dataRootLocation","baseProtocol","baseConfigLocation","newConfig","fetchedConfig","fetchConfigFile","mergeConfigs","createFinalConfig","defaults","configDefaults","configWithDefaults","loadIncludes","fillTemplates","finalConfig","validateConfig","parseJb1","aTracks","bTracks","mergeTrackConfigs","bT","aT","inputConfig","loadRecur","upstreamConf","newUpstreamConf","regularizeIncludes","loads","cacheBuster","includedData","subconfig","template","fillWith","fillTemplate","containerID","show_tracklist","show_nav","show_menu","show_overview","show_fullviewlink","update_browser_title","updateBrowserURL","datasets","_DEFAULT_EXAMPLES","volvox","modencode","yeast","highlightSearchedRegions","highResolutionMode","convertTrackConfig","jb1TrackConfig","jb2TrackConfig","trackIdentifier","jb2Features","jb2Feature","seq_id","generateFromConfigTrackConfig","resolveUrlTemplate","baiUrlTemplate","csiUrlTemplate","craiUrlTemplate","tbiUrlTemplate","faiUrlTemplate","gziUrlTemplate","fetchJb1","jb2Tracks","jb1Track","jb2Track","LegacyJBrowsePlugin","ncListAdapterConfigSchema","addTextSearchAdapterType","jbrowse1AdapterConfigSchema","JBrowse1TextSearchAdapterClass","jbrowse1ConfigSchema","jbrowse1ModelFactory","LinearComparativeDisplay","param","removeAssembly","modelFactory","baseModelFactory","parentView","generateMatches","interstitialYPos","cond","trackIds","f1s","f1e","f2s","f2e","offsets","ref1","ref2","v1","v2","length1","length2","x11","x12","x21","x22","currX1","currX2","rev1","rev2","prevX1","prevX2","LinearSyntenyRenderer","serializedFeatures","_level","baseModel","MCScanAnchorsAdapter","geneNameToRows","rowToGeneName","subadapters","mcscanAnchorsLocation","name1","name2","WindowSizeDlg","preFeature","setWindowSize","windowSize","primaryFeature","setPrimaryFeature","qualTrack","setQualTrack","primaryAln","primaryFeat","featSeq","configFeatureStore","expand","seqTrackId","sequenceTrackConf","lgvRegions","addAssembly","noAssemblyManager","random","showReverse","showTranslation","LinearComparativeViewFactory","LinearSyntenyViewFactory","linearComparativeDisplayConfigSchemaFactory","linearComparativeDisplayStateModelFactory","LinearComparativeDisplayReactComponent","middle","baseConfigFactory","linearSyntenyDisplayConfigSchemaFactory","linearSyntenyDisplayStateModelFactory","MCScanAnchorsConfigSchema","linearSyntenyRendererConfigSchema","LinearSyntenyRendererReactComponent","CalendarIcon","checkCallback","addCallback","ScoreText","layoutRecord","anchorX","radiusPx","innerColor","scoreString","fontHeight","dominantBaseline","Lollipop","onFeatureMouseDown","handler","onFeatureMouseEnter","onFeatureMouseOut","onFeatureMouseOver","onFeatureMouseUp","onFeatureMouseLeave","onFeatureMouseMove","anchorLocation","styleOuter","styleInner","cx","cy","Stick","LollipopRendering","sticksRendered","lollipopsRendered","layoutFeat","caption","minStickLength","stickColor","stickWidth","FloatingLayout","items","layoutDirty","sorted","maxBottom","layoutEntries","currentItem","previouslyLayedOutItem","prevStart","prevTop","prevEnd","prevBottom","pairs","getLayout","PrecomputedFloatingLayout","FloatingLayoutSession","LollipopRenderer","LollipopRendererReactComponent","lollipopRendererConfigSchema","linearLollipopDisplayConfigSchemaFactory","LinearLollipopDisplayStateModelFactory","aboutConfigSchema","aboutStateModel","helpConfigSchema","helpStateModel","importSessionConfigSchema","importSessionStateModel","sessionManagerConfigSchema","sessionManagerStateModel","InfoIcon","HelpIcon","insertInMenu","GetAppIcon","sessionBlob","PublishIcon","SaveIcon","saveSessionToLocalStorage","FileCopyIcon","duplicateCurrentSession","SPARQLAdapter","queryTemplate","refNamesQueryTemplate","additionalQueryParams","configRefNames","encodeURIComponent","querySparql","resultsToRefNames","filledTemplate","resultsToFeatures","accept","bindings","head","vars","requiredField","seenFeatures","rawData","rd","parentUniqueId","pid","sf","subfeature","seenFeature","RdfPlugin","sparqlAdapterConfigSchema","SPARQLAdapterClass","chromSizesLocation","Translation","frame","tilt","effectiveFrame","seqSliced","translated","codon","normalizedCodon","aminoAcid","letter","drop","defaultStarts","defaultStops","DNA","SequenceSVG","showForward","complement","Wrapper","divSequenceRendererConfigSchema","DivSequenceRenderer","SequencePlugin","twoBitAdapterConfigSchema","chromSizesAdapterConfigSchema","indexedFastaAdapterConfigSchema","bgzipFastaAdapterConfigSchema","GCContentAdapterF","createReferenceSeqTrackConfig","linearReferenceSequenceDisplayConfigSchema","toggleShowForward","toggleShowReverse","toggleShowTranslation","DivSequenceRendererReactComponent","SceneGraph","absoluteCache","inDevelopment","isNaN","dirty","nameOrSceneGraph","absolute","childLeft","childRight","childTop","childBottom","newLeft","newRight","newTop","newBottom","diff","walkParents","walkChildren","xOffset","Label","featureWidth","allowedWidthExpansion","fontWidthScaleFactor","fontWidth","totalWidth","Infinity","measuredTextWidth","FeatureGlyph","rootLayout","shouldShowName","shouldShowDescription","featureLayout","GlyphComponent","glyphComponents","OverlayRect","rectProps","screenWidth","leftWithinBlock","widthWithinBlock","handlers","mouseoverFeatureId","Box","color1","emphasizedColor1","color2","Chevron","isUTR","emphasizedColor","Segments","emphasizedColor2","subfeatureId","subfeatureLayout","ProcessedTranscript","getSubparts","filterSubpart","confKey","makeSubpartsFilter","hasUTRs","isTranscript","subs","subparts","codeStart","codeEnd","haveLeftUTR","haveRightUTR","makeUTRs","layOutFeature","layOutSubfeatures","Subfeatures","topOffset","SubfeatureGlyphComponent","chooseGlyphComponent","subfeatureHeight","subSubLayout","layOut","layoutParent","addChild","renderingStyle","RenderedFeatureGlyph","labelsAllowed","expansion","nameWidth","descriptionWidth","aboveLayout","RenderedFeatures","featuresRendered","SvgFeatureRendering","useCallback","mouseEnter","mouseLeave","mouseOver","featureIdCurrentlyUnderMouse","click","color3","labels","nameColor","descriptionColor","subParts","impliedUTRs","SVGPlugin","SvgFeatureRendererReactComponent","svgFeatureRendererConfigSchema","trackDbId","trackPath","subTrack","getSubtracks","members","bigDataUrl","trackDbUrl","bigDataIndex","connectionConf","rawResponse","TrackHubRegistryPlugin","DataCellReactComponent","FilterModelType","compare","categoryName","compareLocs","MakeSpreadsheetColumnType","textFilterControlAdornment","textFilterControl","FilterReactComponent","filterModel","operationChoices","OPERATIONS","OPERATION_PREDICATES","cellLocation","specifiedLocation","spreadsheet","cell","newViewId","cellA","cellB","columnNumber","parsed","sheet","parsedCellText","setLocString","setOperation","locationLinkClick","contains","textInCell","equals","stringToFind","ColumnTextFilter","setString","TextColumn","NumberFilterModel","numberInCell","between","firstNumber","secondNumber","setFirstNumber","setSecondNumber","NumberColumn","ColumnTypes","NumberFactory","TextFactory","LocString","LocStringFactory","LocRef","LocRefFactory","LocStart","LocStartFactory","LocEnd","LocEndFactory","allColumnTypes","AnyColumnType","freeze","AnyFilterModelType","columnType","properties","CellModel","extendedData","cells","isSelected","toggleSelect","unSelect","setExtendedData","column","isDerived","StaticRowSetComponentF","RowModel","Row","isLoaded","sortedFilteredRows","selectedRows","selectedFilteredRows","rowSortingComparisonFunction","rowPassesFilters","unselectAll","SpreadsheetModelF","ColumnDataTypes","StaticRowSetModel","StaticRowSetF","ColumnDefinition","dataType","derivationFunctionText","rowSet","columnDisplayOrder","hasColumnNames","sortColumns","descending","switchDirection","defaultDataType","rowMenuPosition","hideRowSelection","rowA","rowB","cellsWithDerived","setLoaded","setRowMenuPosition","newPosition","setSortColumns","newSort","setColumnType","newTypeName","IMPORT_SIZE_LIMIT","fileTypes","fileTypeParsers","CSV","parseCsvBuffer","TSV","parseTsvBuffer","VCF","parseVcfBuffer","BED","parseBedBuffer","BEDPE","parseBedPEBuffer","parseSTARFusionBuffer","fileTypesRegexp","fileType","hasColumnNameLine","columnNameLineNumber","fileSource","readyToDisplay","setFileSource","newSource","toggleHasColumnNameLine","setColumnNameLineNumber","newnumber","setFileType","cancelButton","import","typeParser","unzip","requiresUnzip","displaySpreadsheet","AnyColumnFilter","RowFullTextFilter","_sheet","rowFullText","columnFilters","setRowFullTextFilter","addBlankColumnFilter","removeColumnFilter","clearAllFilters","defaultRowMenuItems","DoneIcon","_view","rowNumber","SpreadsheetViewModelF","SpreadsheetModel","Spreadsheet","ImportWizardModel","ImportWizard","FilterControlsModel","hideViewControls","hideVerticalResizeHandle","hideFilterControls","importWizard","rowMenuItems","setRowMenuItems","newItems","resizeWidth","oldWidth","setImportMode","SpreadsheetViewPlugin","ViewComfyIcon","viewControls","viewsContainer","spreadsheetViewContainer","borderRight","circularViewOptions","ViewControls","CircularViewOptions","svInspector","circularViewOptionsBarHeight","SpreadsheetViewReactComponent","CircularViewReactComponent","showCircularView","spreadsheetView","ret1","circularView","otherData","columnsAlreadyUsedInLocations","loc1","loc2","locationColumnNumbers","makeAdHocFeature","textOf","colno","locRefColumnNumbers","locStartColumnNumbers","locEndColumnNumbers","makeAdHocSvFeature","columnTypes","columnDefinition","makeAdHocSvFeatureFromTwoLocations","makeAdHocSvFeatureFromTwoRefStartEndSets","adhocFeature","getSerializedFeatureForRow","svInspectorView","breakpointSplitViewSnapshotFromTableRow","canOpenBreakpointSplitViewFromTableRow","openBreakpointSplitViewFromTableRow","defaultOnChordClick","chordTrack","SpreadsheetViewType","CircularViewType","onlyDisplayRelevantRegionsInCircularView","hideTrackSelectorButton","disableImportForm","FromConfigAdapter","spreadsheetWidth","circularViewWidth","featuresRefNamesP","featureRefNames","canonicalFeatureRefNames","generatedTrackConf","setOnlyDisplayRelevantRegionsInCircularView","SvInspectorViewPlugin","SvInspectorViewTypeFactory","TableChartIcon","HicRenderer","getResolution","minBin","maxBin","bin2","counts","rotate","PI","HicTrackConfigFactory","HicRendererConfigSchema","HicPlugin","hicAdapterConfigSchema","HicRendererReactComponent","hicRendererConfigSchema","linearHicdisplayConfigSchemaFactory","linearHicdisplayModelFactory","addFunction","shareDiv","shareButton","SHARE_URL_LOCALSTORAGE_KEY","SettingsDialog","currentSetting","setSetting","infoDialogOpen","setInfoDialogOpen","InfoDialog","ShareDialog","shortUrl","setShortUrl","settingsDialogOpen","setSettingsDialogOpen","cancelled","locationUrl","shareSessionToDynamo","longUrl","longParams","DataManagementPlugin","isAssemblyEditing","isDefaultSessionEditing","setDefaultSessionEditing","setAssemblyEditing","currentDefault","deleteBaseUris","useQueryParam","adminKey","adminServer","setSessionId","currentSessionId","onSnapshot","payload","refNameColors","loadRefNameMap","adapterConf","refNameAliases","refNameMap","checkRefName","canon","canonicalName","adapterName","forwardMap","reverseMap","assemblyFactory","assemblyConfigType","adapterLoads","abortSignal","adapterRegionsWithAssembly","setRegions","setRefNameAliases","sequenceAdapterConfig","refNameAliasesAdapterConfig","makeLoadAssemblyData","loadAssemblyReaction","getAdapterMapEntry","adapterId","getAdapterId","getRefNameMapForAdapter","getReverseRefNameMapForAdapter","getRegions","adapterRegions","adapterRegion","refAliasAdapterType","RefAdapterClass","getRefAdapterClass","REFCLASS","refNameAliasAdapter","getRefNameAliases","alias","assemblyManagerFactory","Assembly","sessionAssemblies","allRefNames","allPossibleRefNames","assemblyConfigs","replaceAssembly","BaseAssemblyConfigSchema","AssemblyConfigSchema","assemblyConfigSchemas","dispatcher","snapshot","MainThreadRpcDriverConfigSchema","WebWorkerRpcDriverConfigSchema","ElectronRpcDriverConfigSchema","defaultDriver","drivers","MainThreadRpcDriver","addDriverConfig","configName","configSnapshot","isClonable","worker","pingTime","_resolve","LazyWorker","driver","makeWorker","watchWorker","maxPingTime","destroy","BaseRpcDriver","lastWorkerAssignment","workerAssignments","workerCount","workerPool","workerCheckFrequency","filterArgs","callfunc","signalId","serializeAbortSignal","remoteAbort","File","functionName","getWorker","hardwareConcurrency","mainThread","canDetect","navigator","detectHardwareConcurrency","createWorkerPool","workers","getWorkerPool","workerNumber","workerAssignment","rpcMethod","getRpcMethodType","serializeArguments","filteredAndSerializedArgs","callP","killedP","killedCheckInterval","setInterval","finally","clearInterval","resultP","race","deserializeReturn","WebWorkerHandle","terminate","channel","listener","on","off","Rpc","Client","WebWorkerRpcDriver","workerBootConfiguration","WorkerClass","postMessage","DummyHandle","_functionName","_filteredArgs","DriverClasses","execute","RpcManager","mainConfiguration","backendConfigurations","driverObjects","backendName","backendConfiguration","DriverClassImpl","newDriver","_sessionId","getDriver","getDriverForCall","rpcConfigSchema","textSearchAdapters","adaptersToUse","relevantAdapters","adapterFromCache","getTextSearchAdapterType","aggregateTextSearchAdapters","trackTextSearchAdapters","trackTextSearchAdapter","textSearchAdapterId","rootTextSearchAdapters","getAdaptersWithAssembly","searchScopeAssemblyName","adapterList","adapterAssemblies","loadTextSearchAdapters","searchIndex","currentResults","relevantResults","sortResults","result1","result2","JBrowseWeb","JBrowseModel","rpc","shareURL","featureDetails","disableAnalytics","connections","defaultSession","afterCreate","addAssemblyConf","removeAssemblyConf","toRemove","addConnectionConf","deleteConnectionConf","deleteTrackConf","setDefaultSessionConf","newDefault","sessionConf","toJS","removeAttr","AboutDialog","sessionModelFactory","assemblyConfigSchemasType","minDrawerWidth","sessionModel","widgets","connectionInstances","sessionConnections","task","DialogComponent","DialogProps","getReferring","refs","walk","getMembers","isReferenceType","setName","makeConnection","connectionType","connectionData","removeReferring","referring","dereferenced","callbacks","dereferenceTypeCount","prepareToBreakConnection","callbacksToDereferenceTrack","breakConnection","deleteConnection","deletedConn","connectionId","updateDrawerWidth","newDrawerWidth","resizeDrawer","oldDrawerWidth","initialState","typeDefinition","hideWidget","addLinearGenomeViewOfAssembly","addViewOfAssembly","addViewFromAnotherView","otherView","hasWidget","minimizeWidgetDrawer","showWidgetDrawer","hideAllWidgets","clearConnections","addSavedSession","removeSavedSession","renameCurrentSession","activateSession","setDefaultSession","loadAutosaveSession","setSession","pushSnackbarMessage","editConfiguration","editableConfigSession","editor","canEdit","isRefSeqTrack","SettingsIcon","DeleteIcon","trackSnapshot","CopyIcon","preProcessor","filterSessionInPlace","childType","getChildType","isValidReference","el","getPropertyMembers","pname","ptype","RootModel","AssemblyConfigSchemasFactory","Session","assemblyManagerType","TextSearchManager","jbrowseWebFactory","configPath","pluginsUpdated","RenderWorker","savedSessionsVolatile","localStorageId","alert","sessionStorage","oldSession","setPluginsUpdated","newSession","newSnapshotName","newSnapshotCopyNumber","localId","newSessionSnapshot","previousAutosave","autosavedSession","history","lastAutosave","setHistory","setMenus","appendMenu","insertMenu","insertPosition","topMenu","menuPath","pathSoFar","menuName","sm","mi","insertInSubMenu","SessionWarningDialog","ConfigWarningDialog","StartScreen","NoConfigMessage","link","checkPlugins","allowedPluginUrls","pluginsToCheck","SessionLoader","blankSession","sessionTriaged","shareWarningOpen","sessionSnapshot","runtimePlugins","sessionError","configError","bc1","bc2","setSessionQuery","setConfigError","setSessionError","setRuntimePlugins","setSessionPlugins","setConfigSnapshot","setBlankSession","setSessionTriaged","setSessionSnapshotSuccess","fetchPlugins","pluginLoader","fetchSessionPlugins","setSessionSnapshot","origin","fetchConfig","configUri","addRelativeUris","configPlugins","fetchSessionStorageSession","sessionStr","sessionSnap","msg","fetchSharedSession","readConf","readSessionFromDynamo","decryptedSession","fromUrlSafeB64","decodeEncodedUrlSession","decodeJsonUrlSession","localSession","encodedSession","sharedSession","jsonSession","Loader","initialTimestamp","loader","initialSessionQuery","Renderer","setPassword","setPluginManager","snapshotError","setSnapshotError","P","JBrowseRootModel","JBrowseRootModelFactory","packagedef","defaultJBrowseSession","writeAWSAnalytics","writeGAAnalytics","onConfirm","onCancel","factoryReset","PlatformSpecificFatalErrorDialog","fr","F1R2","F2R1","F1F2","F2F1","R1R2","R2R1","R1F2","R2F1","rf","ff","SyntaxHighlighter","callbackEditor","syntaxHighlighter","setContents","debouncedJson","onValueChange","highlight","newCode","language","customStyle","shim","process","inProduction","TextEncoder","encode","deflated","deflate","encoded","fromByteArray","b64","originalB64","repeat","b64PadSuffix","toByteArray","inflated","inflate","TextDecoder","decode","debouncedValue","setDebouncedValue","wait","argsRef","findParentThat","hasParent","fromValue","toValue","animationFrameId","onFinish","precision","tension","friction","mass","time","lastPosition","lastTime","velocity","lastVelocity","numSteps","isVelocity","isDisplacement","cancelAnimationFrame","findParentThatIs","startString","endString","assemblyNameString","parseLocStringOneBased","assemblyMatch","lastColonIdx","rangeMatch","singleMatch","separator","locA","locB","assemblyComp","refComp","startComp","endComp","compareLocStrings","roundToNearestPointOne","oneEightyOverPi","piOverOneEighty","radToDeg","radians","degToRad","degrees","rho","theta","cos","sin","cartesianToPolar","atan","iterable","sizeHint","counter","B","merged","dataFunction","asyncReactionFunction","reactionOptions","startedFunction","successFunction","errorFunction","inProgress","handleError","reactionDisposer","mobxReactionHandle","thisInProgress","renameRegionIfNeeded","newRef","originalRefName","assemblyMaps","userAgent","seqString","complementRegex","complementTable","S","N","K","Y","V","M","g","W","X","H","D","R","FileReader","readAsDataURL","requestIdleCallback","widths","avg","TCA","TCC","TCG","TCT","TTC","TTT","TTA","TTG","TAC","TAT","TAA","TAG","TGC","TGT","TGA","TGG","CTA","CTC","CTG","CTT","CCA","CCC","CCG","CCT","CAC","CAT","CAA","CAG","CGA","CGC","CGG","CGT","ATA","ATC","ATT","ATG","ACA","ACC","ACG","ACT","AAC","AAT","AAA","AAG","AGC","AGT","AGA","AGG","GTA","GTC","GTG","GTT","GCA","GCC","GCG","GCT","GAC","GAT","GAA","GAG","GGA","GGC","GGG","GGT","tempCodonTable","aa","nucs","nuc","n0","n1","n2","statusMsg","fn","findCircleIntersectionX","resultArray","solution","findCircleIntersectionY","cartesianToTheta","twoPi","Slice","currentRadianOffset","radianWidth","offsetRadians","bpPerRadian","flipped","widthBp","totalRadians","elided","sliceIsVisible","r1start","r1length","r2start","r2length","visibleSection","visibleThetaMin","visibleThetaMax","CircularView","lockedFitToWindow","minimumRadiusPx","spacingPx","paddingPx","lockedPaddingPx","minVisibleWidth","scrollX","scrollY","slices","elidedRegions","pxPerRadian","calculateStaticSlices","staticSlices","viewSides","circleCenter","circleRadius","viewL","viewR","viewT","viewB","vertices","maxRho","reflect","rhoMin","rhoMax","thetaMin","thetaMax","vx","vy","viewportVisibleSection","centerXY","elidedBp","circumferencePx","minCircumferencePx","maxCircumferencePx","maximumRadiusPx","figureDimensions","visible","lastVisible","setModelViewWhenAdjust","tooSmallToLock","rotateClockwiseButton","rotateClockwise","rotateCounterClockwiseButton","rotateCounterClockwise","secondCondition","previouslyEmpty","toggleFitToWindowLock","atMinBpPerPx","strokeDasharray","strokeDashoffset","patternTransform","patternUnits","strokeLinecap","errorBackground","errorText","mainThreadRendering","Loading","ChordDisplayLoadingFactory","DisplayError","ChordDisplayErrorFactory","RpcRenderedSvgGroup","RpcRenderedSvgGroupF","renderReactionData","renderReactionEffect","BaseChordDisplayModel","bezierRadiusRatio","origSlices","renamed","ThisRendererType","isCompatibleWithRenderer","renderStarted","renderSuccess","renderError","setRefNameMap","renderReactionFactory","baseChordDisplayConfig","CircularViewPlugin","DataUsageIcon","setTarget","makeFeatures","SVTYPE","fdata","makeFeature","FromConfigRegionsAdapter","currentRegion","FromSequenceConfigAdapter","superGetFeatures","featureClass","regionsConfigSchema","sequenceConfigSchema","RefNameAliasAdapter","promise","downloadResults","ConfigurationEditorComponent","fromConfigAdapterConfigSchema","FromConfigAdapterClass","fromConfigRegionsAdapterConfigSchema","FromConfigRegionsAdapterClass","fromConfigSequenceAdapterConfigSchema","FromConfigSequenceAdapterClass","refNameAliasAdapterConfigSchema","RefNameAliasAdapterClass","ConfigurationEditorHeadingComponent","ConfigurationEditorConfigSchema","ConfigurationEditorStateModelFactory","getter","whenPromise","mobxWhen","finishTimeout","cancel","whenPresent","Jexl","char","codePointAt","searchStr","targetLength","padString","padEnd","fillString","padStart","newSubStr","replaceAll","trimStart","addBinaryOp"],"mappings":"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","file":"static/js/16.8b88da00.chunk.js","sourcesContent":["import { Observable } from 'rxjs'\nimport { reduce } from 'rxjs/operators'\nimport { NoAssemblyRegion } from './types'\nimport { Feature } from './simpleFeature'\n\nexport interface UnrectifiedFeatureStats {\n  scoreMin: number\n  scoreMax: number\n  scoreSum: number\n  scoreSumSquares: number\n  featureCount: number\n  basesCovered: number\n}\nexport interface FeatureStats extends UnrectifiedFeatureStats {\n  scoreMean: number\n  scoreStdDev: number\n  featureDensity: number\n}\n\n/*\n * calculate standard deviation using the 'shortcut method' that accepts\n * the sum and the sum squares of the elements\n *\n * @param sum - sum(i, 1..n)\n * @param sumSquares - sum(i^2, 1..n)\n * @param n - number of elements\n * @param population - boolean: use population instead of sample correction\n * @return the estimated std deviation\n */\n\nexport function calcStdFromSums(\n  sum: number,\n  sumSquares: number,\n  n: number,\n  population = false,\n): number {\n  if (n === 0) {\n    return 0\n  }\n  let variance\n  if (population) {\n    variance = sumSquares / n - (sum * sum) / (n * n)\n  } else {\n    // sample correction is n-1\n    variance = sumSquares - (sum * sum) / n\n    if (n > 1) {\n      variance /= n - 1\n    }\n  }\n\n  return variance < 0 ? 0 : Math.sqrt(variance)\n}\n\n/*\n * @param stats - a summary stats object with scoreSum, featureCount, scoreSumSquares, and basesCovered\n * @return - a summary stats object with scoreMean, scoreStdDev, and featureDensity added\n */\nexport function rectifyStats(s: UnrectifiedFeatureStats): FeatureStats {\n  return {\n    ...s,\n    scoreMean: (s.scoreSum || 0) / (s.featureCount || s.basesCovered || 1),\n    scoreStdDev: calcStdFromSums(\n      s.scoreSum,\n      s.scoreSumSquares,\n      s.featureCount || s.basesCovered,\n    ),\n    featureDensity: (s.featureCount || 1) / s.basesCovered,\n  }\n}\n\n/*\n * calculates per-base scores for variable width features over a region\n * @param region - object contains start, end\n * @param features - list of features with start, end, score\n * @return array of numeric scores\n */\nexport function calcPerBaseStats(\n  region: NoAssemblyRegion,\n  features: Feature[],\n): number[] {\n  const { start, end } = region\n  const scores = []\n  const feats = features.sort((a, b) => a.get('start') - b.get('start'))\n  let pos = start\n  let currentFeat = 0\n  let i = 0\n\n  while (pos < end) {\n    while (currentFeat < feats.length && pos >= feats[currentFeat].get('end')) {\n      currentFeat += 1\n    }\n    const f = feats[currentFeat]\n    if (!f) {\n      scores[i] = 0\n    } else if (pos >= f.get('start') && pos < f.get('end')) {\n      scores[i] = f.get('score')\n    } else {\n      scores[i] = 0\n    }\n    i += 1\n    pos += 1\n  }\n  return scores\n}\n\n/*\n * transform a list of scores to summary statistics\n * @param region - object with start, end\n * @param feats - array of features which are possibly summary features\n * @return - object with scoreMax, scoreMin, scoreSum, scoreSumSquares, etc\n */\nexport async function scoresToStats(\n  region: NoAssemblyRegion,\n  features: Observable<Feature>,\n): Promise<FeatureStats> {\n  const { start, end } = region\n\n  const {\n    scoreMin,\n    scoreMax,\n    scoreSum,\n    scoreSumSquares,\n    featureCount,\n  } = await features\n    .pipe(\n      reduce(\n        (\n          seed: {\n            scoreMin: number\n            scoreMax: number\n            scoreSum: number\n            scoreSumSquares: number\n            featureCount: number\n          },\n          f: Feature,\n        ) => {\n          const score = f.get('score')\n          seed.scoreMax = Math.max(\n            seed.scoreMax,\n            f.get('summary') ? f.get('maxScore') : score,\n          )\n          seed.scoreMin = Math.min(\n            seed.scoreMin,\n            f.get('summary') ? f.get('minScore') : score,\n          )\n          seed.scoreSum += score\n          seed.scoreSumSquares += score * score\n          seed.featureCount += 1\n\n          return seed\n        },\n        {\n          scoreMin: Number.MAX_VALUE,\n          scoreMax: Number.MIN_VALUE,\n          scoreSum: 0,\n          scoreSumSquares: 0,\n          featureCount: 0,\n        },\n      ),\n    )\n    .toPromise()\n\n  return rectifyStats({\n    scoreMax,\n    scoreMin,\n    scoreSum,\n    scoreSumSquares,\n    featureCount,\n    basesCovered: end - start + 1,\n  })\n}\n\nexport function blankStats(): FeatureStats {\n  return {\n    scoreMin: 0,\n    scoreMax: 0,\n    scoreMean: 0,\n    scoreStdDev: 0,\n    scoreSum: 0,\n    scoreSumSquares: 0,\n    featureCount: 0,\n    featureDensity: 0,\n    basesCovered: 0,\n  }\n}\n","import { assembleLocString } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\nimport { Region } from './types'\n\nexport interface Base1DViewModel {\n  offsetPx: number\n  width: number\n  displayedRegions: Region[]\n  bpPerPx: number\n  minimumBlockWidth: number\n  interRegionPaddingWidth: number\n}\n\nexport default function calculateStaticBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n  extra = 0,\n\n  // on the main thread, window.innerWidth is used because this reduces\n  // recalculating the blocks, otherwise, model.width for cases such as\n  // off-main-thread. also this is not a ternary because our window.innerWidth\n  // might be undefined on off-main-thread, so instead use || model.width\n  width = (typeof window !== 'undefined' && window.innerWidth) || model.width,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n  } = model\n\n  const windowLeftBp = offsetPx * bpPerPx\n  const windowRightBp = (offsetPx + width) * bpPerPx\n  const blockSizePx = width\n  const blockSizeBp = Math.ceil(blockSizePx * bpPerPx)\n  // for each displayed region\n  let regionBpOffset = 0\n  const blocks = new BlockSet()\n  displayedRegions.forEach((region, regionNumber) => {\n    // find the block numbers of the left and right window sides,\n    // clamp those to the region range, and then make blocks for that range\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region\n    const regionBlockCount = Math.ceil((regionEnd - regionStart) / blockSizeBp)\n\n    let windowRightBlockNum =\n      Math.floor((windowRightBp - regionBpOffset) / blockSizeBp) + extra\n    if (windowRightBlockNum >= regionBlockCount) {\n      windowRightBlockNum = regionBlockCount - 1\n    }\n\n    let windowLeftBlockNum =\n      Math.floor((windowLeftBp - regionBpOffset) / blockSizeBp) - extra\n    if (windowLeftBlockNum < 0) {\n      windowLeftBlockNum = 0\n    }\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n\n    for (\n      let blockNum = windowLeftBlockNum;\n      blockNum <= windowRightBlockNum;\n      blockNum += 1\n    ) {\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      if (reversed) {\n        start = Math.max(regionStart, regionEnd - (blockNum + 1) * blockSizeBp)\n        end = regionEnd - blockNum * blockSizeBp\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n      } else {\n        start = regionStart + blockNum * blockSizeBp\n        end = Math.min(regionEnd, regionStart + (blockNum + 1) * blockSizeBp)\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: (regionBpOffset + blockNum * blockSizeBp) / bpPerPx,\n        parentRegion: region,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocString(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && regionNumber === 0 && blockNum === 0) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: width,\n            offsetPx: blockData.offsetPx - width,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n        }\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    regionBpOffset += regionEnd - regionStart\n  })\n  return blocks\n}\n","import FeatureRenderer from './FeatureRendererType'\n\nexport default class CircularChordRendererType extends FeatureRenderer {}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { BaseLayout, SerializedLayout } from './BaseLayout'\n\nexport default class MultiLayout<SUB_LAYOUT_CLASS extends BaseLayout<T>, T> {\n  subLayouts: Map<string, SUB_LAYOUT_CLASS> = new Map()\n\n  SubLayoutClass: new (...args: any[]) => SUB_LAYOUT_CLASS\n\n  subLayoutConstructorArgs: Record<string, any> = {}\n\n  /**\n   * layout class that just keeps a number of named sub-layouts.\n   * basically just a fancier\n   * `{ layout1: new GranularRectLayout(), layout2: new GranularRectLayout() ...}`\n   */\n  constructor(\n    SubLayoutClass: new (...args: any[]) => SUB_LAYOUT_CLASS,\n    layoutArgs: Record<string, any> = {},\n  ) {\n    this.subLayouts = new Map()\n    this.SubLayoutClass = SubLayoutClass\n    this.subLayoutConstructorArgs = layoutArgs\n  }\n\n  getSublayout(layoutName: string): SUB_LAYOUT_CLASS {\n    let subLayout = this.subLayouts.get(layoutName)\n    if (subLayout === undefined) {\n      subLayout = new this.SubLayoutClass(this.subLayoutConstructorArgs)\n      this.subLayouts.set(layoutName, subLayout)\n      return subLayout\n    }\n\n    return subLayout\n  }\n\n  addRect(\n    layoutName: string,\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data: Record<string, T> = {},\n  ) {\n    return this.getSublayout(layoutName).addRect(id, left, right, height, data)\n  }\n\n  discardRange(layoutName: string, left: number, right: number) {\n    const layout = this.subLayouts.get(layoutName)\n    return layout && layout.discardRange(left, right)\n  }\n\n  toJSON() {\n    const data: Record<string, SerializedLayout> = {}\n    for (const [layoutName, sublayout] of this.subLayouts.entries()) {\n      data[layoutName] = sublayout.toJSON()\n    }\n    return data\n  }\n}\n","// takes an array or Map or Set (anything iterable with values()) of Maps\n// and lets you query them as one Map\nexport default class CompositeMap<T, U> {\n  private submaps: Map<T, U>[]\n\n  constructor(submaps: Map<T, U>[]) {\n    this.submaps = submaps\n  }\n\n  has(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  get(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return submap.get(id)\n      }\n    }\n    return undefined\n  }\n\n  *values() {\n    for (const key of this.keys()) {\n      yield this.get(key) as U\n    }\n  }\n\n  *keys() {\n    const keys = new Set<T>()\n    for (const submap of this.submaps.values()) {\n      for (const key of submap.keys()) {\n        keys.add(key)\n      }\n    }\n    for (const key of keys) {\n      yield key\n    }\n  }\n\n  find<V>(f: (arg0: U) => V) {\n    for (const submap of this.submaps.values()) {\n      for (const value of submap.values()) {\n        const found = f(value)\n        if (found) {\n          return value\n        }\n      }\n    }\n    return undefined\n  }\n\n  *[Symbol.iterator]() {\n    for (const key of this.keys()) {\n      yield [key, this.get(key)]\n    }\n  }\n\n  *entries() {\n    for (const k of this.keys()) {\n      yield [k, this.get(k)]\n    }\n  }\n}\n","import TextSearchAdapterType from '../pluggableElementTypes/TextSearchAdapterType'\nimport { SearchType } from '../data_adapters/BaseAdapter'\n\nexport interface BaseResultArgs {\n  label: string\n\n  renderingComponent?: JSX.Element\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  locString?: string\n\n  refName?: string\n\n  trackId?: string\n\n  score?: number\n}\nexport default class BaseResult {\n  label: string\n\n  renderingComponent?: JSX.Element\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  trackId?: string\n\n  score: number\n  constructor(args: BaseResultArgs) {\n    this.label = args.label\n    this.renderingComponent = args.renderingComponent\n    this.matchedAttribute = args.matchedAttribute\n    this.matchedObject = args.matchedObject\n    this.textSearchAdapter = args.textSearchAdapter\n    this.relevance = args.relevance\n    this.trackId = args.trackId\n    this.score = args.score || 1\n  }\n\n  getLabel() {\n    return this.label\n  }\n\n  getLocation() {\n    return this.label\n  }\n\n  getRenderingComponent() {\n    return this.renderingComponent\n  }\n\n  getTrackId() {\n    return this.trackId\n  }\n\n  getScore() {\n    return this.score\n  }\n  updateScore(newScore: number) {\n    this.score = newScore\n    return this.score\n  }\n}\n\n/**\n * Future types of results\n * e.g: reference sequence results, track results,\n * feature results\n */\nexport class LocStringResult extends BaseResult {\n  locString: string\n\n  constructor(args: BaseResultArgs) {\n    super(args)\n    if (!args.locString) {\n      throw new Error('must provide locString')\n    }\n    this.locString = args.locString ?? ''\n  }\n\n  getLocation() {\n    return this.locString\n  }\n}\n\nexport class RefSequenceResult extends BaseResult {\n  refName: string\n\n  constructor(args: BaseResultArgs) {\n    super(args)\n    if (!args.refName) {\n      throw new Error('must provide refName')\n    }\n    this.refName = args.refName ?? ''\n  }\n\n  getLocation() {\n    return this.refName\n  }\n}\n","import { BigWig, Feature as BBIFeature } from '@gmod/bbi'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { map, mergeAll } from 'rxjs/operators'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport { rectifyStats, UnrectifiedFeatureStats } from '@jbrowse/core/util/stats'\n\nimport configSchema from './configSchema'\n\ninterface WiggleOptions extends BaseOptions {\n  resolution?: number\n}\n\nexport default class BigWigAdapter extends BaseFeatureDataAdapter {\n  private bigwig: BigWig\n\n  public static capabilities = [\n    'hasResolution',\n    'hasLocalStats',\n    'hasGlobalStats',\n  ]\n\n  public constructor(config: Instance<typeof configSchema>) {\n    super(config)\n    this.bigwig = new BigWig({\n      filehandle: openLocation(readConfObject(config, 'bigWigLocation')),\n    })\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    statusCallback('Downloading bigwig header')\n    const result = await this.bigwig.getHeader(opts)\n    statusCallback('')\n    return result\n  }\n\n  public async getRefNames(opts?: BaseOptions) {\n    const header = await this.setup(opts)\n    return Object.keys(header.refsByName)\n  }\n\n  public async refIdToName(refId: number) {\n    const h = await this.setup()\n    return (h.refsByNumber[refId] || { name: undefined }).name\n  }\n\n  public async getGlobalStats(opts?: BaseOptions) {\n    const header = await this.setup(opts)\n    return rectifyStats(header.totalSummary as UnrectifiedFeatureStats)\n  }\n\n  public getFeatures(region: NoAssemblyRegion, opts: WiggleOptions = {}) {\n    const { refName, start, end } = region\n    const {\n      bpPerPx = 0,\n      signal,\n      resolution = 1,\n      statusCallback = () => {},\n    } = opts\n    return ObservableCreate<Feature>(async observer => {\n      statusCallback('Downloading bigwig data')\n      const ob = await this.bigwig.getFeatureStream(refName, start, end, {\n        ...opts,\n        basesPerSpan: bpPerPx / resolution,\n      })\n      ob.pipe(\n        mergeAll(),\n        map((record: BBIFeature) => {\n          return new SimpleFeature({\n            id: `${refName}:${record.start}-${record.end}`,\n            data: { ...record, refName },\n          })\n        }),\n      ).subscribe(observer)\n    }, signal)\n  }\n\n  public freeResources(): void {}\n}\nconst adapterCapabilities = BigWigAdapter.capabilities\nexport { adapterCapabilities }\n","import shortid from 'shortid'\nimport { types } from 'mobx-state-tree'\nimport propTypes from 'prop-types'\nimport { PropTypes as MxPropTypes } from 'mobx-react'\n\nexport const ElementId = types.optional(types.identifier, shortid.generate)\n\n// PropTypes that are useful when working with instances of these in react components\nexport const PropTypes = {\n  Region: propTypes.shape({\n    refName: propTypes.string.isRequired,\n    start: propTypes.number.isRequired,\n    end: propTypes.number.isRequired,\n  }),\n  ConfigSchema: MxPropTypes.objectOrObservableObject,\n  Feature: propTypes.shape({\n    get: propTypes.func.isRequired,\n    id: propTypes.func.isRequired,\n  }),\n}\n\nexport const NoAssemblyRegion = types\n  .model('NoAssemblyRegion', {\n    refName: types.string,\n    start: types.number,\n    end: types.number,\n    reversed: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    setRefName(newRefName: string): void {\n      self.refName = newRefName\n    },\n  }))\n\nexport const Region = types.compose(\n  'Region',\n  NoAssemblyRegion,\n  types.model({\n    assemblyName: types.string,\n  }),\n)\n\nexport const LocalPathLocation = types.model('LocalPathLocation', {\n  localPath: types.string, // TODO: refine\n})\n\nexport const BlobLocation = types.model('BlobLocation', {\n  name: types.string, // TODO: refine\n  blobId: types.string,\n})\n\nexport const UriLocationRaw = types.model('UriLocation', {\n  uri: types.string, // TODO: refine\n  baseUri: types.maybe(types.string),\n})\n\nexport const UriLocation = types.snapshotProcessor(UriLocationRaw, {\n  postProcessor: snap => {\n    const { baseUri, ...rest } = snap\n    if (!baseUri) {\n      return rest\n    }\n    return snap\n  },\n})\n\nexport const FileLocation = types.union(\n  LocalPathLocation,\n  UriLocation,\n  BlobLocation,\n)\n","import { getParent, isRoot, IAnyStateTreeNode } from 'mobx-state-tree'\nimport { objectHash } from './index'\nimport { PreFileLocation, FileLocation } from './types'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\nimport { readConfObject } from '../configuration'\n\n/* utility functions for use by track models and so forth */\n\nexport function getTrackAssemblyNames(\n  track: IAnyStateTreeNode & { configuration: AnyConfigurationModel },\n) {\n  const trackConf = track.configuration\n  const trackAssemblyNames = readConfObject(trackConf, 'assemblyNames')\n  if (!trackAssemblyNames) {\n    // Check if it's an assembly sequence track\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parent = getParent<any>(track.configuration)\n    if ('sequence' in parent) {\n      return [readConfObject(parent, 'name')]\n    }\n  }\n  return trackAssemblyNames as string[]\n}\n\n/** return the rpcSessionId of the highest parent node in the tree that has an rpcSessionId */\n\nexport function getRpcSessionId(thisNode: IAnyStateTreeNode) {\n  interface NodeWithRpcSessionId extends IAnyStateTreeNode {\n    rpcSessionId: string\n  }\n  let highestRpcSessionId\n  for (let node = thisNode; !isRoot(node); node = getParent(node)) {\n    if ('rpcSessionId' in node) {\n      highestRpcSessionId = (node as NodeWithRpcSessionId).rpcSessionId\n    }\n  }\n  if (!highestRpcSessionId) {\n    throw new Error(\n      'getRpcSessionId failed, no parent node in the state tree has an `rpcSessionId` attribute',\n    )\n  }\n  return highestRpcSessionId\n}\n\n/**\n * given an MST node, get the renderprops of the first parent container that has\n * renderProps\n * @param node -\n * @returns renderprops, or empty object if none found\n */\nexport function getParentRenderProps(node: IAnyStateTreeNode) {\n  for (\n    let currentNode = getParent(node);\n    !isRoot(currentNode);\n    currentNode = getParent(currentNode)\n  ) {\n    if ('renderProps' in currentNode) {\n      return currentNode.renderProps\n    }\n  }\n\n  return {}\n}\n\nexport const UNKNOWN = 'UNKNOWN'\nexport const UNSUPPORTED = 'UNSUPPORTED'\n\nlet blobMap: { [key: string]: File } = {}\n\n// get a specific blob\nexport function getBlob(id: string) {\n  return blobMap[id]\n}\n\n// used to export entire context to webworker\nexport function getBlobMap() {\n  return blobMap\n}\n\n// used in new contexts like webworkers\nexport function setBlobMap(map: { [key: string]: File }) {\n  blobMap = map\n}\n\n// blob files are stored in a global map\nexport function storeBlobLocation(location: PreFileLocation) {\n  if (location && 'blob' in location) {\n    // possibly we should be more clear about when this is not undefined, and\n    // also allow mix of blob and url for index and file\n    // @ts-ignore\n    const blobId = `b${+Date.now()}`\n    blobMap[blobId] = location.blob\n    return { name: location?.blob.name, blobId }\n  }\n  return location\n}\n\nexport function guessAdapter(\n  file: FileLocation,\n  index: FileLocation | undefined,\n  getFileName: (f: FileLocation) => string,\n  adapterHint?: string,\n) {\n  function makeIndex(location: FileLocation, suffix: string) {\n    if ('uri' in location) {\n      return { uri: location.uri + suffix }\n    }\n    if ('localPath' in location) {\n      return { localPath: location.localPath + suffix }\n    }\n    return location\n  }\n\n  const fileName = getFileName(file)\n  const indexName = index && getFileName(index)\n  function makeIndexType(\n    name: string | undefined,\n    typeA: string,\n    typeB: string,\n  ) {\n    return name?.toUpperCase().endsWith(typeA) ? typeA : typeB\n  }\n\n  if (/\\.bam$/i.test(fileName) || adapterHint === 'BamAdapter') {\n    return {\n      type: 'BamAdapter',\n      bamLocation: file,\n      index: {\n        location: index || makeIndex(file, '.bai'),\n        indexType: makeIndexType(indexName, 'CSI', 'BAI'),\n      },\n    }\n  }\n\n  if (/\\.cram$/i.test(fileName) || adapterHint === 'CramAdapter') {\n    return {\n      type: 'CramAdapter',\n      cramLocation: file,\n      craiLocation: index || makeIndex(file, '.crai'),\n    }\n  }\n\n  if (/\\.gff3?$/i.test(fileName)) {\n    return {\n      type: 'UNSUPPORTED',\n    }\n  }\n\n  if (/\\.gff3?\\.b?gz$/i.test(fileName) || adapterHint === 'Gff3TabixAdapter') {\n    return {\n      type: 'Gff3TabixAdapter',\n      gffGzLocation: file,\n      index: {\n        location: index || makeIndex(file, '.tbi'),\n        indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n      },\n    }\n  }\n\n  if (/\\.gtf?$/i.test(fileName)) {\n    return {\n      type: 'UNSUPPORTED',\n    }\n  }\n\n  if (/\\.vcf$/i.test(fileName)) {\n    return {\n      type: 'VcfAdapter',\n      vcfLocation: file,\n    }\n  }\n\n  if (/\\.vcf\\.b?gz$/i.test(fileName) || adapterHint === 'VcfTabixAdapter') {\n    return {\n      type: 'VcfTabixAdapter',\n      vcfGzLocation: file,\n      index: {\n        location: index || makeIndex(file, '.tbi'),\n        indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n      },\n    }\n  }\n\n  if (/\\.vcf\\.idx$/i.test(fileName)) {\n    return {\n      type: 'UNSUPPORTED',\n    }\n  }\n\n  if (/\\.bed$/i.test(fileName)) {\n    return {\n      type: 'UNSUPPORTED',\n    }\n  }\n\n  if (/\\.bed\\.b?gz$/i.test(fileName) || adapterHint === 'BedTabixAdapter') {\n    return {\n      type: 'BedTabixAdapter',\n      bedGzLocation: file,\n      index: {\n        location: index || makeIndex(file, '.tbi'),\n        indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n      },\n    }\n  }\n\n  if (/\\.(bb|bigbed)$/i.test(fileName) || adapterHint === 'BigBedAdapter') {\n    return {\n      type: 'BigBedAdapter',\n      bigBedLocation: file,\n    }\n  }\n\n  if (/\\.(bw|bigwig)$/i.test(fileName) || adapterHint === 'BigWigAdapter') {\n    return {\n      type: 'BigWigAdapter',\n      bigWigLocation: file,\n    }\n  }\n\n  if (\n    /\\.(fa|fasta|fas|fna|mfa)$/i.test(fileName) ||\n    adapterHint === 'IndexedFastaAdapter'\n  ) {\n    return {\n      type: 'IndexedFastaAdapter',\n      fastaLocation: file,\n      faiLocation: index || makeIndex(file, '.fai'),\n    }\n  }\n\n  if (\n    /\\.(fa|fasta|fas|fna|mfa)\\.b?gz$/i.test(fileName) ||\n    adapterHint === 'BgzipFastaAdapter'\n  ) {\n    return {\n      type: 'BgzipFastaAdapter',\n      fastaLocation: file,\n      faiLocation: makeIndex(file, '.fai'),\n      gziLocation: makeIndex(file, '.gzi'),\n    }\n  }\n\n  if (/\\.2bit$/i.test(fileName) || adapterHint === 'TwoBitAdapter') {\n    return {\n      type: 'TwoBitAdapter',\n      twoBitLocation: file,\n    }\n  }\n\n  if (/\\.sizes$/i.test(fileName)) {\n    return {\n      type: 'UNSUPPORTED',\n    }\n  }\n\n  if (\n    /\\/trackData.jsonz?$/i.test(fileName) ||\n    adapterHint === 'NCListAdapter'\n  ) {\n    return {\n      type: 'NCListAdapter',\n      rootUrlTemplate: file,\n    }\n  }\n\n  if (/\\/sparql$/i.test(fileName) || adapterHint === 'SPARQLAdapter') {\n    return {\n      type: 'SPARQLAdapter',\n      endpoint: file,\n    }\n  }\n\n  if (/\\.hic/i.test(fileName) || adapterHint === 'HicAdapter') {\n    return {\n      type: 'HicAdapter',\n      hicLocation: file,\n    }\n  }\n\n  if (/\\.paf/i.test(fileName) || adapterHint === 'PAFAdapter') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: file,\n    }\n  }\n\n  return {\n    type: UNKNOWN,\n  }\n}\n\nexport function guessTrackType(adapterType: string): string {\n  const known: { [key: string]: string | undefined } = {\n    BamAdapter: 'AlignmentsTrack',\n    CramAdapter: 'AlignmentsTrack',\n    BgzipFastaAdapter: 'ReferenceSequenceTrack',\n    BigWigAdapter: 'QuantitativeTrack',\n    IndexedFastaAdapter: 'ReferenceSequenceTrack',\n    TwoBitAdapter: 'ReferenceSequenceTrack',\n    VcfAdapter: 'VariantTrack',\n    VcfTabixAdapter: 'VariantTrack',\n    HicAdapter: 'HicTrack',\n    PAFAdapter: 'SyntenyTrack',\n  }\n  return known[adapterType] || 'FeatureTrack'\n}\n\nexport function generateUnsupportedTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories: string[] | undefined,\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unsupported)`,\n    description: `Support not yet implemented for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n\nexport function generateUnknownTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories: string[] | undefined,\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unknown)`,\n    description: `Could not determine track type for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n","import {\n  baseChordDisplayConfig,\n  BaseChordDisplayModel,\n} from '@jbrowse/plugin-circular-view'\n\nconst ChordVariantDisplayF = pluginManager => {\n  const { jbrequire } = pluginManager\n\n  const { types } = jbrequire('mobx-state-tree')\n  const { ConfigurationSchema, ConfigurationReference } = jbrequire(\n    '@jbrowse/core/configuration',\n  )\n  const { getContainingView } = jbrequire('@jbrowse/core/util')\n  const { getParentRenderProps } = jbrequire('@jbrowse/core/util/tracks')\n  const configSchema = ConfigurationSchema(\n    'ChordVariantDisplay',\n    {\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'StructuralVariantChordRenderer' },\n      ),\n    },\n    { baseConfiguration: baseChordDisplayConfig, explicitlyTyped: true },\n  )\n\n  const stateModel = types\n    .compose(\n      'ChordVariantDisplay',\n      BaseChordDisplayModel,\n      types.model({\n        type: types.literal('ChordVariantDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n      get renderProps() {\n        const view = getContainingView(self)\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n          radius: view.radiusPx,\n          blockDefinitions: this.blockDefinitions,\n          config: self.configuration.renderer,\n          onChordClick: self.onChordClick,\n        }\n      },\n    }))\n\n  return { stateModel, configSchema }\n}\n\n// http://localhost:3000/test_data/hs37d5.HG002-SequelII-CCS.sv.vcf.gz.tbi\n\n// render request is for 1.5x the current viewing window\n\n// tracks all have a height\n//\nexport default ChordVariantDisplayF\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseChordDisplayComponentFactory } from '@jbrowse/plugin-circular-view'\nimport ChordVariantDisplay from './models/ChordVariantDisplay'\n\nexport default (pluginManager: PluginManager) => {\n  const { lib, load } = pluginManager\n  const DisplayType = lib['@jbrowse/core/pluggableElementTypes/DisplayType']\n\n  const { stateModel, configSchema } = load(ChordVariantDisplay)\n\n  return new DisplayType({\n    name: 'ChordVariantDisplay',\n    configSchema,\n    stateModel,\n    trackType: 'VariantTrack',\n    viewType: 'CircularView',\n    ReactComponent: BaseChordDisplayComponentFactory(pluginManager),\n  })\n}\n","import { getConf, ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport {\n  getContainingTrack,\n  getSession,\n  getContainingView,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { linearBasicDisplayModelFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport { LinearVariantDisplayConfigModel } from './configSchema'\n\nexport default function (configSchema: LinearVariantDisplayConfigModel) {\n  return types\n    .compose(\n      'LinearVariantDisplay',\n      linearBasicDisplayModelFactory(configSchema),\n      types.model({\n        type: types.literal('LinearVariantDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .actions(self => ({\n      async selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const { rpcManager } = session\n          const sessionId = getRpcSessionId(self)\n          const track = getContainingTrack(self)\n          const adapterConfig = getConf(track, 'adapter')\n          const header = await rpcManager.call(sessionId, 'CoreGetMetadata', {\n            adapterConfig,\n          })\n          const featureWidget = session.addWidget(\n            'VariantFeatureWidget',\n            'variantFeature',\n            {\n              featureData: feature.toJSON(),\n              view: getContainingView(self),\n              descriptions: header,\n            },\n          )\n          session.showWidget(featureWidget)\n        }\n\n        session.setSelection(feature)\n      },\n    }))\n}\n","const ChordRendererF = ({ jbrequire }) => {\n  const React = jbrequire('react')\n  const { useMemo } = jbrequire('react')\n  const { observer, PropTypes: MobxPropTypes } = jbrequire('mobx-react')\n  const { polarToCartesian } = jbrequire('@jbrowse/core/util')\n  const { readConfObject } = jbrequire('@jbrowse/core/configuration')\n\n  const { PropTypes: CommonPropTypes } = jbrequire(\n    '@jbrowse/core/util/types/mst',\n  )\n  const PropTypes = jbrequire('prop-types')\n\n  function bpToRadians(block, pos) {\n    const blockStart = block.region.elided ? 0 : block.region.start\n    const blockEnd = block.region.elided ? 0 : block.region.end\n    const bpOffset = block.flipped ? blockEnd - pos : pos - blockStart\n    const radians = bpOffset / block.bpPerRadian + block.startRadians\n    return radians\n  }\n\n  const Chord = observer(function Chord({\n    feature,\n    blocksForRefs,\n    radius,\n    config,\n    bezierRadius,\n    selected,\n    onClick,\n  }) {\n    // find the blocks that our start and end points belong to\n    const startBlock = blocksForRefs[feature.get('refName')]\n    if (!startBlock) {\n      return null\n    }\n    let svType\n    if (feature.get('INFO')) {\n      ;[svType] = feature.get('INFO').SVTYPE || []\n    } else if (feature.get('mate')) {\n      svType = 'mate'\n    }\n    let endPosition\n    let endBlock\n    if (svType === 'BND') {\n      // VCF BND\n      const breakendSpecification = (feature.get('ALT') || [])[0]\n      const matePosition = breakendSpecification.MatePosition.split(':')\n      endPosition = parseInt(matePosition[1], 10)\n      endBlock = blocksForRefs[matePosition[0]]\n    } else if (svType === 'TRA') {\n      // VCF TRA\n      const chr2 = ((feature.get('INFO') || {}).CHR2 || [])[0]\n      const end = ((feature.get('INFO') || {}).END || [])[0]\n      endPosition = parseInt(end, 10)\n      endBlock = blocksForRefs[chr2]\n    } else if (svType === 'mate') {\n      // generic simplefeatures arcs\n      const mate = feature.get('mate')\n      const chr2 = mate.refName\n      endPosition = mate.start\n      endBlock = blocksForRefs[chr2]\n    }\n    if (endBlock) {\n      const startPos = feature.get('start')\n      const startRadians = bpToRadians(startBlock, startPos)\n      const endRadians = bpToRadians(endBlock, endPosition)\n      const startXY = polarToCartesian(radius, startRadians)\n      const endXY = polarToCartesian(radius, endRadians)\n      const controlXY = polarToCartesian(\n        bezierRadius,\n        (endRadians + startRadians) / 2,\n      )\n\n      let strokeColor\n      if (selected) {\n        strokeColor = readConfObject(config, 'strokeColorSelected', { feature })\n      } else {\n        strokeColor = readConfObject(config, 'strokeColor', { feature })\n      }\n      const hoverStrokeColor = readConfObject(config, 'strokeColorHover', {\n        feature,\n      })\n      return (\n        <path\n          data-testid={`chord-${feature.id()}`}\n          d={['M', ...startXY, 'Q', ...controlXY, ...endXY].join(' ')}\n          style={{ stroke: strokeColor }}\n          onClick={evt =>\n            onClick(feature, startBlock.region, endBlock.region, evt)\n          }\n          onMouseOver={evt => {\n            if (!selected) {\n              evt.target.style.stroke = hoverStrokeColor\n            }\n          }}\n          onMouseOut={evt => {\n            if (!selected) {\n              evt.target.style.stroke = strokeColor\n            }\n          }}\n        />\n      )\n    }\n\n    return null\n  })\n\n  function StructuralVariantChords(props) {\n    const {\n      features,\n      config,\n      displayModel,\n      blockDefinitions,\n      radius,\n      bezierRadius,\n      displayModel: { selectedFeatureId },\n\n      onChordClick,\n    } = props\n    // make a map of refName -> blockDefinition\n    const blocksForRefsMemo = useMemo(() => {\n      const blocksForRefs = {}\n      blockDefinitions.forEach(block => {\n        const regions = block.region.elided\n          ? block.region.regions\n          : [block.region]\n        regions.forEach(region => {\n          blocksForRefs[region.refName] = block\n        })\n      })\n      return blocksForRefs\n    }, [blockDefinitions])\n    // console.log(blocksForRefs)\n    const chords = []\n    for (const [id, feature] of features) {\n      const selected = String(selectedFeatureId) === String(feature.id())\n      chords.push(\n        <Chord\n          key={id}\n          feature={feature}\n          config={config}\n          displayModel={displayModel}\n          radius={radius}\n          bezierRadius={bezierRadius}\n          blocksForRefs={blocksForRefsMemo}\n          selected={selected}\n          onClick={onChordClick}\n        />,\n      )\n    }\n    const trackStyleId = `chords-${displayModel.id}`\n    return (\n      <g id={trackStyleId} data-testid=\"structuralVariantChordRenderer\">\n        <style\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: `\n          #${trackStyleId} > path {\n            cursor: crosshair;\n            fill: none;\n          }\n`,\n          }}\n        />\n        {chords}\n      </g>\n    )\n  }\n\n  StructuralVariantChords.propTypes = {\n    features: PropTypes.instanceOf(Map).isRequired,\n    config: CommonPropTypes.ConfigSchema.isRequired,\n    displayModel: MobxPropTypes.objectOrObservableObject,\n    blockDefinitions: PropTypes.arrayOf(MobxPropTypes.objectOrObservableObject)\n      .isRequired,\n    radius: PropTypes.number.isRequired,\n    bezierRadius: PropTypes.number.isRequired,\n    selectedFeatureId: PropTypes.string,\n    onChordClick: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  }\n\n  StructuralVariantChords.defaultProps = {\n    displayModel: undefined,\n    selectedFeatureId: '',\n    onChordClick: undefined,\n  }\n\n  return observer(StructuralVariantChords)\n}\n\nexport default ChordRendererF\n","import ReactComponentFactory from './ReactComponent'\n\nconst ChordRendererConfigF = pluginManager => {\n  const { jbrequire } = pluginManager\n  const ChordRendererType = jbrequire(\n    '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType',\n  )\n  const { ConfigurationSchema } = jbrequire('@jbrowse/core/configuration')\n\n  const ReactComponent = jbrequire(ReactComponentFactory)\n  const configSchema = ConfigurationSchema(\n    'StructuralVariantChordRenderer',\n    {\n      strokeColor: {\n        type: 'color',\n        description: 'the line color of each arc',\n        defaultValue: 'rgba(255,133,0,0.32)',\n        contextVariable: ['feature'],\n      },\n      strokeColorSelected: {\n        type: 'color',\n        description: 'the line color of an arc that has been selected',\n        defaultValue: 'black',\n        contextVariable: ['feature'],\n      },\n      strokeColorHover: {\n        type: 'color',\n        description:\n          'the line color of an arc that is being hovered over with the mouse',\n        defaultValue: '#555',\n        contextVariable: ['feature'],\n      },\n    },\n    { explicitlyTyped: true },\n  )\n  return new ChordRendererType({\n    name: 'StructuralVariantChordRenderer',\n    ReactComponent,\n    configSchema,\n    pluginManager,\n  })\n}\n\nexport default ChordRendererConfigF\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('VariantFeatureWidget', {})\n\nexport function stateModelFactory(pluginManager) {\n  return types\n    .model('VariantFeatureWidget', {\n      id: ElementId,\n      type: types.literal('VariantFeatureWidget'),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      featureData: types.frozen(),\n      descriptions: types.frozen(),\n    })\n    .actions(self => ({\n      setFeatureData(data) {\n        self.featureData = data\n      },\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n    }))\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'VcfTabixAdapter',\n  {\n    vcfGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.vcf.gz' },\n    },\n    index: ConfigurationSchema('VcfIndex', {\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      location: {\n        type: 'fileLocation',\n        defaultValue: { uri: '/path/to/my.vcf.gz.tbi' },\n      },\n    }),\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'VcfAdapter',\n  {\n    vcfLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.vcf' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport ChordVariantDisplay from './ChordVariantDisplay'\nimport {\n  configSchemaFactory as linearVariantDisplayConfigSchemaFactory,\n  modelFactory as linearVariantDisplayModelFactory,\n} from './LinearVariantDisplay'\nimport StructuralVariantChordRendererFactory from './StructuralVariantChordRenderer'\nimport {\n  configSchema as variantFeatureWidgetConfigSchema,\n  stateModelFactory as variantFeatureWidgetStateModelFactory,\n} from './VariantFeatureWidget'\nimport { configSchema as vcfTabixAdapterConfigSchema } from './VcfTabixAdapter'\nimport { configSchema as vcfAdapterConfigSchema } from './VcfAdapter'\n\nexport default class VariantsPlugin extends Plugin {\n  name = 'VariantsPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'VcfTabixAdapter',\n          configSchema: vcfTabixAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./VcfTabixAdapter/VcfTabixAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'VcfAdapter',\n          configSchema: vcfAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./VcfAdapter/VcfAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addRendererType(() =>\n      pluginManager.jbrequire(StructuralVariantChordRendererFactory),\n    )\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'VariantTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      return new TrackType({\n        name: 'VariantTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'VariantTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() =>\n      pluginManager.jbrequire(ChordVariantDisplay),\n    )\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearVariantDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearVariantDisplay',\n        configSchema,\n        stateModel: linearVariantDisplayModelFactory(configSchema),\n        trackType: 'VariantTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n\n    pluginManager.addWidgetType(\n      () =>\n        new WidgetType({\n          name: 'VariantFeatureWidget',\n          heading: 'Feature details',\n          configSchema: variantFeatureWidgetConfigSchema,\n          stateModel: variantFeatureWidgetStateModelFactory(pluginManager),\n          ReactComponent: lazy(\n            () => import('./VariantFeatureWidget/VariantFeatureWidget'),\n          ),\n        }),\n    )\n  }\n}\n\nexport { default as VcfFeature } from './VcfTabixAdapter/VcfFeature'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\nexport function LinearVariantDisplayConfigFactory(\n  pluginManager: PluginManager,\n) {\n  const configSchema = linearBasicDisplayConfigSchemaFactory(pluginManager)\n\n  return ConfigurationSchema(\n    'LinearVariantDisplay',\n    {},\n    { baseConfiguration: configSchema, explicitlyTyped: true },\n  )\n}\n\nexport type LinearVariantDisplayConfigModel = ReturnType<\n  typeof LinearVariantDisplayConfigFactory\n>\nexport type LinearVariantDisplayConfig = Instance<LinearVariantDisplayConfigModel>\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  IconButton,\n  ListItem,\n  Tooltip,\n  Typography,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport LockIcon from '@material-ui/icons/Lock'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSession } from '@jbrowse/core/util'\nimport { BasePlugin } from '@jbrowse/core/util/types'\nimport { isSessionWithSessionPlugins } from '@jbrowse/core/util/types'\nimport { PluginStoreModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  closeDialog: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  dialogContainer: {\n    margin: 15,\n  },\n}))\n\nfunction LockedPlugin() {\n  return (\n    <Tooltip\n      style={{ marginRight: '0.5rem' }}\n      title=\"This plugin was installed by an admin. It cannot be removed.\"\n    >\n      <LockIcon />\n    </Tooltip>\n  )\n}\n\nfunction PluginDialog({\n  onClose,\n  plugin,\n}: {\n  plugin: string\n  onClose: (s?: string) => void\n}) {\n  const classes = useStyles()\n  return (\n    <Dialog open onClose={() => onClose()}>\n      <DialogTitle>\n        <IconButton\n          className={classes.closeDialog}\n          aria-label=\"close-dialog\"\n          onClick={() => onClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Please confirm that you want to remove {plugin}:\n        </Typography>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              // avoid showing runtime plugin warning\n              window.setTimeout(() => {\n                onClose(plugin)\n              }, 500)\n            }}\n          >\n            Confirm\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              onClose()\n            }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nfunction InstalledPlugin({\n  plugin,\n  model,\n  pluginManager,\n}: {\n  plugin: BasePlugin\n  model: PluginStoreModel\n  pluginManager: PluginManager\n}) {\n  const [dialogPlugin, setDialogPlugin] = useState<string>()\n\n  const session = getSession(model)\n\n  // @ts-ignore\n  const { sessionPlugins } = session\n  const isSessionPlugin = sessionPlugins?.some(\n    (p: BasePlugin) => pluginManager.pluginMetadata[plugin.name].url === p.url,\n  )\n\n  const rootModel = getParent(model, 3)\n  const { jbrowse, adminMode } = rootModel\n\n  return (\n    <>\n      {dialogPlugin ? (\n        <PluginDialog\n          plugin={dialogPlugin}\n          onClose={name => {\n            if (name) {\n              const pluginMetadata = pluginManager.pluginMetadata[plugin.name]\n              const pluginUrl = pluginMetadata.url\n              if (adminMode) {\n                jbrowse.removePlugin(pluginUrl)\n              } else if (isSessionWithSessionPlugins(session)) {\n                session.removeSessionPlugin(pluginUrl)\n              }\n            }\n            setDialogPlugin(undefined)\n          }}\n        />\n      ) : null}\n      <ListItem key={plugin.name}>\n        {adminMode || isSessionPlugin ? (\n          <IconButton\n            aria-label=\"removePlugin\"\n            data-testid={`removePlugin-${plugin.name}`}\n            onClick={() => setDialogPlugin(plugin.name)}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : (\n          <LockedPlugin />\n        )}\n        <Typography>{plugin.name}</Typography>\n      </ListItem>\n    </>\n  )\n}\n\nexport default observer(InstalledPlugin)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { List, Typography } from '@material-ui/core'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { PluginStoreModel } from '../model'\nimport InstalledPlugin from './InstalledPlugin'\n\nfunction InstalledPluginsList({\n  pluginManager,\n  model,\n}: {\n  pluginManager: PluginManager\n  model: PluginStoreModel\n}) {\n  const { plugins } = pluginManager as PluginManager\n\n  const corePlugins = plugins\n    .filter(p => pluginManager.pluginMetadata[p.name]?.isCore)\n    .map(p => p.name)\n\n  const externalPlugins = plugins.filter(\n    plugin => !corePlugins.includes(plugin.name),\n  )\n\n  return (\n    <List>\n      {externalPlugins.length ? (\n        externalPlugins\n          .filter(plugin =>\n            plugin.name.toLowerCase().includes(model.filterText.toLowerCase()),\n          )\n          .map(plugin => (\n            <InstalledPlugin\n              key={plugin.name}\n              plugin={plugin}\n              model={model}\n              pluginManager={pluginManager}\n            />\n          ))\n      ) : (\n        <Typography>No plugins currently installed</Typography>\n      )}\n    </List>\n  )\n}\n\nexport default observer(InstalledPluginsList)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv, getParent } from 'mobx-state-tree'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Link,\n  Typography,\n} from '@material-ui/core'\n\nimport PersonIcon from '@material-ui/icons/Person'\nimport AddIcon from '@material-ui/icons/Add'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSession } from '@jbrowse/core/util'\nimport type { JBrowsePlugin } from '@jbrowse/core/util/types'\nimport { isSessionWithSessionPlugins } from '@jbrowse/core/util/types'\n\nimport type { PluginStoreModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    margin: '1em',\n  },\n  icon: {\n    marginLeft: '0.5em',\n    marginRight: '0.5em',\n  },\n  bold: {\n    fontWeight: 600,\n  },\n  dataField: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '0.4em 0em',\n  },\n}))\n\nfunction PluginCard({\n  plugin,\n  model,\n  adminMode,\n}: {\n  plugin: JBrowsePlugin\n  model: PluginStoreModel\n  adminMode: boolean\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { pluginManager } = getEnv(model) as { pluginManager: PluginManager }\n  const isInstalled = Boolean(\n    pluginManager.runtimePluginDefinitions.find(\n      pluginDefinition => pluginDefinition.url === plugin.url,\n    ),\n  )\n  const [tempDisabled, setTempDisabled] = useState(false)\n  const disableButton = isInstalled || tempDisabled\n\n  const rootModel = getParent(model, 3)\n  const { jbrowse } = rootModel\n\n  return (\n    <Card variant=\"outlined\" key={plugin.name} className={classes.card}>\n      <CardContent>\n        <div className={classes.dataField}>\n          <Typography variant=\"h5\">\n            <Link\n              href={`${plugin.location}#readme`}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {plugin.name}\n            </Link>\n          </Typography>\n        </div>\n        <div className={classes.dataField}>\n          <PersonIcon style={{ marginRight: '0.5em' }} />\n          <Typography>{plugin.authors.join(', ')}</Typography>\n        </div>\n        <Typography className={classes.bold}>Description:</Typography>\n        <Typography>{plugin.description}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disableButton}\n          startIcon={isInstalled ? <CheckIcon /> : <AddIcon />}\n          onClick={() => {\n            if (adminMode) {\n              jbrowse.addPlugin({ name: plugin.name, url: plugin.url })\n            } else if (isSessionWithSessionPlugins(session)) {\n              session.addSessionPlugin(plugin)\n            }\n            setTempDisabled(true)\n          }}\n        >\n          {isInstalled ? 'Installed' : 'Install'}\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default observer(PluginCard)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getRoot } from 'mobx-state-tree'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { PluginStoreModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  closeDialog: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  dialogContainer: {\n    margin: 15,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}))\n\nfunction CustomPluginForm({\n  open,\n  onClose,\n  model,\n}: {\n  open: boolean\n  onClose: Function\n  model: PluginStoreModel\n}) {\n  const classes = useStyles()\n  const [formInput, setFormInput] = useState({\n    name: '',\n    url: '',\n  })\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setFormInput({\n      ...formInput,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const rootModel = getRoot(model)\n  const { jbrowse } = rootModel\n\n  const handleSubmit = () => {\n    jbrowse.addPlugin({ name: formInput.name, url: formInput.url })\n  }\n\n  return (\n    <Dialog open={open} onClose={() => onClose(false)}>\n      <DialogTitle>\n        <IconButton\n          className={classes.closeDialog}\n          aria-label=\"close-dialog\"\n          onClick={() => onClose(false)}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n\n      <div className={classes.dialogContainer}>\n        <TextField\n          id=\"name-input\"\n          name=\"name\"\n          label=\"Plugin name\"\n          variant=\"outlined\"\n          value={formInput.name}\n          onChange={handleChange}\n          multiline\n        />\n        <TextField\n          id=\"url-input\"\n          name=\"url\"\n          label=\"Plugin URL\"\n          variant=\"outlined\"\n          value={formInput.url}\n          onChange={handleChange}\n          multiline\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: '1.5rem' }}\n          onClick={handleSubmit}\n        >\n          Add plugin\n        </Button>\n      </div>\n    </Dialog>\n  )\n}\n\nexport default observer(CustomPluginForm)\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\n\nimport {\n  Accordion,\n  AccordionSummary,\n  TextField,\n  InputAdornment,\n  Button,\n  IconButton,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\n\nimport type { JBrowsePlugin } from '@jbrowse/core/util/types'\n\nimport { getSession, isElectron } from '@jbrowse/core/util'\nimport InstalledPluginsList from './InstalledPluginsList'\nimport PluginCard from './PluginCard'\nimport CustomPluginForm from './CustomPluginForm'\n\nimport { PluginStoreModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  accordion: {\n    marginTop: '1em',\n  },\n  expandIcon: {\n    color: '#fff',\n  },\n  searchBox: {\n    marginBottom: theme.spacing(2),\n  },\n  adminBadge: {\n    margin: '0.5em',\n    borderRadius: 3,\n    // this is the quaternary color in JB2 palette\n    backgroundColor: '#FFB11D',\n    padding: '1em',\n    display: 'flex',\n    alignContent: 'center',\n  },\n  customPluginButton: {\n    margin: '0.5em',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}))\n\nfunction PluginStoreWidget({ model }: { model: PluginStoreModel }) {\n  const classes = useStyles()\n  const [pluginArray, setPluginArray] = useState<JBrowsePlugin[]>([])\n  const [error, setError] = useState<Error>()\n  const [customPluginFormOpen, setCustomPluginFormOpen] = useState(false)\n  const { adminMode } = getSession(model)\n  const { pluginManager } = getEnv(model)\n\n  useEffect(() => {\n    let killed = false\n\n    ;(async () => {\n      try {\n        const fetchResult = await fetch(\n          'https://jbrowse.org/plugin-store/plugins.json',\n        )\n        if (!fetchResult.ok) {\n          throw new Error('Failed to fetch plugin data')\n        }\n        const array = await fetchResult.json()\n        if (!killed) {\n          setPluginArray(array.plugins)\n        }\n      } catch (e) {\n        setError(e)\n      }\n    })()\n\n    return () => {\n      killed = true\n    }\n  }, [])\n\n  return (\n    <div>\n      {adminMode && (\n        <>\n          {!isElectron && (\n            <div className={classes.adminBadge}>\n              <InfoOutlinedIcon style={{ marginRight: '0.3em' }} />\n              <Typography>\n                You are using the <code>admin-server</code>. Any changes you\n                make will be saved to your configuration file. You also have the\n                ability to add custom plugins that are not in the store.\n              </Typography>\n            </div>\n          )}\n          <div className={classes.customPluginButton}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setCustomPluginFormOpen(true)}\n            >\n              Add custom plugin\n            </Button>\n          </div>\n          <CustomPluginForm\n            open={customPluginFormOpen}\n            onClose={setCustomPluginFormOpen}\n            model={model}\n          />\n        </>\n      )}\n      <TextField\n        className={classes.searchBox}\n        label=\"Filter plugins\"\n        value={model.filterText}\n        onChange={event => model.setFilterText(event.target.value)}\n        fullWidth\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                color=\"secondary\"\n                onClick={() => model.clearFilterText()}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Accordion defaultExpanded>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography variant=\"h5\">Installed plugins</Typography>\n        </AccordionSummary>\n        <div style={{ margin: '1em' }}>\n          <InstalledPluginsList pluginManager={pluginManager} model={model} />\n        </div>\n      </Accordion>\n      <Accordion defaultExpanded>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography variant=\"h5\">Available plugins</Typography>\n        </AccordionSummary>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : pluginArray.length ? (\n          pluginArray\n            .filter(plugin =>\n              plugin.name\n                .toLowerCase()\n                .includes(model.filterText.toLowerCase()),\n            )\n            .map(plugin => (\n              <PluginCard\n                key={(plugin as JBrowsePlugin).name}\n                plugin={plugin}\n                model={model}\n                adminMode={!!adminMode}\n              />\n            ))\n        ) : (\n          <Typography>Loading...</Typography>\n        )}\n      </Accordion>\n    </div>\n  )\n}\n\nexport default observer(PluginStoreWidget)\n","import { blue, green, red, amber } from '@material-ui/core/colors'\nimport { ThemeOptions, createTheme } from '@material-ui/core/styles'\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette'\nimport deepmerge from 'deepmerge'\n\n// use this if we ever want to add some top-level thing to the theme\n// declare module '@material-ui/core/styles/createMuiTheme' {\n//   interface Theme {\n//     status: {\n//       topLevelThing: string\n//     }\n//   }\n//   interface ThemeOptions {\n//     status?: {\n//       topLevelThing?: string\n//     }\n//   }\n// }\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface Palette {\n    tertiary: Palette['primary']\n    quaternary: Palette['primary']\n    bases: {\n      A: Palette['primary']\n      C: Palette['primary']\n      G: Palette['primary']\n      T: Palette['primary']\n    }\n  }\n  interface PaletteOptions {\n    tertiary?: PaletteOptions['primary']\n    quaternary?: PaletteOptions['primary']\n    bases?: {\n      A?: PaletteOptions['primary']\n      C?: PaletteOptions['primary']\n      G?: PaletteOptions['primary']\n      T?: PaletteOptions['primary']\n    }\n  }\n}\n\nconst midnight = '#0D233F'\nconst grape = '#721E63'\nconst forest = '#135560'\nconst mandarin = '#FFB11D'\n\nconst refTheme = createTheme()\n\nexport const jbrowseDefaultPalette = {\n  // type: 'dark',\n  primary: { main: midnight },\n  secondary: { main: grape },\n  tertiary: refTheme.palette.augmentColor({ main: forest }),\n  quaternary: refTheme.palette.augmentColor({ main: mandarin }),\n  stopCodon: '#e22',\n  startCodon: '#3e3',\n  bases: {\n    A: refTheme.palette.augmentColor(green),\n    C: refTheme.palette.augmentColor(blue),\n    G: refTheme.palette.augmentColor(amber),\n    T: refTheme.palette.augmentColor(red),\n  },\n}\n\nexport function createJBrowseDefaultProps(/* palette: PaletteOptions = {} */) {\n  return {\n    MuiButton: {\n      size: 'small' as 'small',\n    },\n    MuiFilledInput: {\n      margin: 'dense' as 'dense',\n    },\n    MuiFormControl: {\n      margin: 'dense' as 'dense',\n    },\n    MuiFormHelperText: {\n      margin: 'dense' as 'dense',\n    },\n    MuiIconButton: {\n      size: 'small' as 'small',\n    },\n    MuiInputBase: {\n      margin: 'dense' as 'dense',\n    },\n    MuiList: {\n      dense: true,\n    },\n    MuiListItem: {\n      dense: true,\n    },\n    MuiOutlinedInput: {\n      margin: 'dense' as 'dense',\n    },\n    MuiFab: {\n      size: 'small' as 'small',\n    },\n    MuiTable: {\n      size: 'small' as 'small',\n    },\n    MuiTextField: {\n      margin: 'dense' as 'dense',\n      size: 'small' as 'small',\n    },\n    MuiToolbar: {\n      variant: 'dense' as 'dense',\n    },\n    MuiSvgIcon: {\n      fontSize: 'small' as 'small',\n    },\n    MuiToggleButtonGroup: {\n      size: 'small' as 'small',\n    },\n    MuiCheckbox: {\n      size: 'small' as 'small',\n    },\n    MuiLink: {\n      underline: 'always' as 'always',\n    },\n  }\n}\n\nexport function createJBrowseDefaultOverrides(palette: PaletteOptions = {}) {\n  const generatedPalette = deepmerge(jbrowseDefaultPalette, palette)\n  return {\n    MuiIconButton: {\n      colorSecondary: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiButton: {\n      textSecondary: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiFab: {\n      secondary: {\n        backgroundColor: generatedPalette.quaternary.main,\n      },\n    },\n    MuiLink: {\n      root: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiAccordionSummary: {\n      root: {\n        // !important needed to combat the MuiButton being applied to\n        // accordions in mui4.12.2 having a background:'transparent' that\n        // otherwise overrides this other\n        backgroundColor: generatedPalette.tertiary.main + ' !important',\n\n        // width:100% added in 4.12.2 also\n        width: '100%',\n        '&$expanded': {\n          // overrides the subclass e.g. .MuiAccordionSummary-root-311.MuiAccordionSummary-expanded-312\n          minHeight: 0,\n          color: generatedPalette.tertiary.contrastText,\n          backgroundColor: generatedPalette.tertiary.main,\n        },\n        minHeight: 0,\n      },\n      content: {\n        '&$expanded': {\n          margin: '8px 8px',\n        },\n        margin: '8px 8px',\n        color: generatedPalette.tertiary.contrastText,\n      },\n    },\n    // makes menus more compact\n    MuiMenuItem: {\n      root: {\n        paddingTop: 3,\n        paddingBottom: 3,\n      },\n    },\n\n    // the below two are linked to make menus more compact\n    MuiListItemIcon: {\n      root: {\n        minWidth: 32,\n      },\n    },\n    MuiListItemText: {\n      inset: {\n        paddingLeft: 32,\n      },\n    },\n  }\n}\n\nexport const jbrowseBaseTheme: ThemeOptions = {\n  palette: jbrowseDefaultPalette,\n  typography: { fontSize: 12 },\n  spacing: 4,\n  props: createJBrowseDefaultProps(),\n  overrides: createJBrowseDefaultOverrides(),\n}\n\nexport function createJBrowseTheme(theme?: ThemeOptions) {\n  if (!theme) {\n    return createTheme(jbrowseBaseTheme)\n  }\n  if (theme.palette?.tertiary) {\n    theme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        tertiary: refTheme.palette.augmentColor(theme.palette.tertiary),\n      },\n    }\n  }\n  if (theme.palette?.quaternary) {\n    theme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        quaternary: refTheme.palette.augmentColor(theme.palette.quaternary),\n      },\n    }\n  }\n  theme = {\n    ...theme,\n    props: deepmerge(createJBrowseDefaultProps(), theme.props || {}),\n    overrides: deepmerge(\n      createJBrowseDefaultOverrides(theme.palette),\n      theme.overrides || {},\n    ),\n  }\n  return createTheme(deepmerge(jbrowseBaseTheme, theme))\n}\n","import React from 'react'\n\ntype LogoVariant = 'color' | 'black' | 'white'\n\ninterface LogoProps {\n  variant?: LogoVariant\n}\n\nfunction getColors(variant?: LogoVariant) {\n  if (variant === 'black') {\n    return {\n      midnight: '#808080',\n      forrest: '#666666',\n      grape: '#4d4d4d',\n      mandarin: '#333333',\n      gray: '#1a1a1a',\n    }\n  }\n  if (variant === 'white') {\n    return {\n      midnight: '#ffffff',\n      forrest: '#e6e6e6',\n      grape: '#cccccc',\n      mandarin: '#b3b3b3',\n      gray: '#999999',\n    }\n  }\n  return {\n    midnight: '#0d233f',\n    forrest: '#135560',\n    grape: '#721e63',\n    mandarin: '#ffb11d',\n    gray: '#dadada',\n  }\n}\n\nexport function Logomark({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 175 175\">\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nexport function LogoFull({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 641 175\">\n      <Text variant={variant} />\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nfunction Icon({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <>\n      <path\n        style={{ fill: colors.midnight }}\n        d=\"M120.5,57.5c.168,0,.333.012.5.013V40.506c-.167,0-.333-.006-.5-.006a98.325,98.325,0,0,0-77.4,37.565q-2.664,3.378-5.023,6.994l14.206,9.327Q54.043,91.709,56,89.179A81.363,81.363,0,0,1,120.5,57.5Z\"\n      />\n      <path\n        style={{ fill: colors.forrest }}\n        d=\"M148.668,86.223c.308.133.6.283.908.42l6.746-15.618c-.153-.067-.3-.143-.454-.21a81.36,81.36,0,0,0-71.777,3.5q-2.8,1.544-5.469,3.309l9.249,14.054A63.93,63.93,0,0,1,148.668,86.223Z\"\n      />\n      <path\n        style={{ fill: colors.grape }}\n        d=\"M170.894,109.37A63.929,63.929,0,0,0,113.4,88.861l2.336,15.474a48.456,48.456,0,0,1,44.322,15.42c.111.125.214.255.324.381l11.16-10C171.323,109.879,171.118,109.62,170.894,109.37Z\"\n      />\n      <path\n        style={{ fill: colors.mandarin }}\n        d=\"M150.921,150.314c.04.163.07.326.107.489l16.509-4.058c-.039-.163-.067-.326-.107-.489A48.457,48.457,0,0,0,135.575,111.8l-5.515,15.591A32.466,32.466,0,0,1,150.921,150.314Z\"\n      />\n      <path\n        style={{ fill: colors.gray }}\n        d=\"M134.1,138.129l-9.779,13.213a32.486,32.486,0,0,1,7.823,14.463l15.147.852c.012-.166.032-.331.041-.5A32.464,32.464,0,0,0,134.1,138.129Z\"\n      />\n    </>\n  )\n}\n\nfunction Text({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <g\n      aria-label=\"JBrowse\"\n      transform=\"translate(213.084 144.241)\"\n      style={{ fill: colors.midnight }}\n    >\n      <path d=\"m 26.355,-71.505 v 54.075 2.835 q 0,6.825 -0.42,10.185 -0.735,5.67 -2.835,9.135 -3.255,5.355 -8.505,8.4 -4.83,2.73 -11.55,3.57 L 1.47,11.76 Q 7.35,10.185 9.24,4.2 10.605,-0.105 10.605,-9.975 v -5.565 -55.965 q 1.785,0 4.62,0.315 2.835,0.21 3.255,0.21 1.785,0 2.94,-0.105 4.515,-0.42 4.935,-0.42 z\" />\n      <path d=\"m 60.68836,-65.415 v 24.78 h 3.255 q 2.94,0 4.935,-0.525 2.1,-0.525 3.885,-2.1 2.31,-1.995 3.36,-4.83 1.155,-2.835 1.155,-6.09 0,-5.565 -2.94,-8.61 -2.94,-3.045 -8.295,-3.045 -2.52,0 -5.355,0.42 z m 0,30.87 V -6.09 h 5.25 q 4.725,0 8.505,-3.675 3.885,-3.78 3.885,-10.08 0,-8.19 -4.62,-11.655 -4.095,-3.045 -13.02,-3.045 z M 44.93836,0 v -71.505 h 27.09 q 9.135,0 14.385,3.255 6.51,3.99 6.51,12.6 0,7.035 -5.25,11.655 -4.62,4.095 -11.97,5.145 v 0.945 q 7.56,0.735 12.285,3.99 6.615,4.62 6.615,13.335 0,10.185 -7.98,15.75 -6.93,4.83 -17.43,4.83 z\" />\n      <path d=\"M 109.44281,0.525 V -50.4 q 1.785,0.21 3.99,0.42 2.31,0.105 3.255,0.105 2.31,0 4.2,-0.21 1.89,-0.21 3.045,-0.315 v 13.02 q 1.89,-6.51 5.46,-9.87 4.41,-4.095 11.655,-4.095 -0.315,2.73 -0.42,6.825 -0.105,3.99 -0.105,7.455 l -0.945,0.84 q -0.945,-0.735 -2.415,-1.05 -1.47,-0.315 -2.94,-0.315 -3.57,0 -6.195,1.89 -2.52,1.785 -3.465,5.04 -0.42,1.155 -0.525,3.15 -0.105,1.89 -0.105,4.515 v 4.515 19.005 q -1.785,-0.21 -2.625,-0.21 -3.675,-0.315 -4.62,-0.315 -2.31,0 -4.2,0.21 -1.89,0.21 -3.045,0.315 z\" />\n      <path d=\"m 173.77337,1.47 q -11.655,0 -18.585,-6.825 -6.93,-6.825 -6.93,-18.48 0,-12.6 6.72,-20.055 6.825,-7.455 18.9,-7.455 11.97,0 18.9,6.72 6.93,6.72 6.93,18.48 0,12.285 -6.72,19.74 -7.14,7.875 -19.215,7.875 z m 0.735,-48.09 q -5.88,0 -8.505,6.51 -2.205,5.565 -2.205,15.96 0,8.19 1.47,12.915 2.415,7.98 8.505,7.98 5.565,0 8.19,-7.875 2.205,-6.51 2.205,-16.695 0,-8.505 -2.1,-13.23 -2.52,-5.565 -7.56,-5.565 z\" />\n      <path d=\"m 222.03563,-50.4 10.5,36.015 q 3.675,-11.235 5.67,-17.85 2.415,-8.085 5.04,-18.165 1.05,0.105 3.045,0.315 2.1,0.21 2.835,0.21 1.995,0 3.15,-0.105 1.26,-0.21 2.73,-0.42 l 10.71,36.015 q 5.88,-17.43 10.71,-36.015 l 4.2,0.315 4.095,-0.315 q -5.145,13.125 -9.135,24.57 -5.04,14.28 -8.505,26.355 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.205,-0.105 -1.89,0 -3.36,0.21 -1.365,0.21 -2.31,0.315 l -10.605,-34.755 q -4.41,13.65 -6.72,21.105 -2.31,7.35 -4.095,13.65 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.31,-0.105 -1.995,0 -3.465,0.21 -1.365,0.21 -2.31,0.315 -3.78,-12.81 -5.04,-17.01 -2.205,-7.245 -5.46,-17.01 -2.835,-8.4 -5.88,-16.905 1.575,0 4.305,0.315 2.73,0.21 3.36,0.21 1.47,0 4.305,-0.21 2.835,-0.315 3.465,-0.315 z\" />\n      <path d=\"m 292.84172,-12.81 h 2.625 q 1.47,4.095 4.62,6.51 3.15,2.415 7.35,2.415 2.94,0 5.46,-1.785 2.625,-1.89 2.625,-4.62 0,-3.885 -6.195,-6.615 -10.395,-4.62 -11.655,-5.46 -6.405,-4.515 -6.405,-12.285 0,-7.77 5.25,-12.18 5.25,-4.515 12.81,-4.515 3.99,0 8.085,1.365 4.095,1.26 7.14,3.57 l -2.52,9.24 h -2.94 q -0.63,-3.57 -3.57,-6.195 -2.835,-2.625 -6.405,-2.625 -3.15,0 -5.46,1.575 -2.31,1.47 -2.31,4.515 0,3.885 6.405,6.51 10.185,4.095 11.865,5.25 6.405,4.41 6.405,12.81 0,7.455 -5.46,12.18 -5.355,4.62 -14.805,4.62 -8.19,0 -14.49,-4.305 z\" />\n      <path d=\"m 349.61228,-29.925 h 15.54 q 0,-6.51 -1.05,-10.395 -1.68,-6.3 -5.88,-6.3 -5.04,0 -7.14,6.195 -1.47,4.305 -1.47,10.5 z m 30.03,5.04 h -30.03 q 0,9.135 3.045,13.86 3.57,5.67 11.55,5.67 3.255,0 6.405,-1.26 3.15,-1.26 5.88,-3.465 l 1.26,0.945 -2.31,5.88 q -6.72,4.725 -15.015,4.725 -12.915,0 -19.635,-7.245 -6.72,-7.245 -6.72,-20.37 0,-11.235 6.405,-18.165 6.51,-7.035 17.64,-7.035 11.655,0 16.905,7.56 4.62,6.615 4.62,18.9 z\" />\n    </g>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport React, { useEffect, useState, useRef } from 'react'\n\nconst useStyles = makeStyles({\n  horizontalHandle: {\n    cursor: 'row-resize',\n    width: '100%',\n  },\n  verticalHandle: {\n    cursor: 'col-resize',\n    height: '100%',\n  },\n  flexbox_verticalHandle: {\n    cursor: 'col-resize',\n    alignSelf: 'stretch', // the height: 100% is actually unable to function inside flexbox\n  },\n  flexbox_horizontalHandle: {\n    cursor: 'row-resize',\n    alignSelf: 'stretch', // similar to above\n  },\n})\n\ninterface ResizeHandleProps {\n  onDrag: (arg: number) => number\n  vertical?: boolean\n  flexbox?: boolean\n  className?: string\n  [props: string]: unknown\n}\n\nfunction ResizeHandle({\n  onDrag,\n  vertical = false,\n  flexbox = false,\n  className: originalClassName,\n  ...props\n}: ResizeHandleProps) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  const prevPos = useRef(0)\n  const classes = useStyles()\n\n  useEffect(() => {\n    function mouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const pos = event[vertical ? 'clientX' : 'clientY']\n      const distance = pos - prevPos.current\n      if (distance) {\n        const actualDistance = onDrag(distance)\n        prevPos.current += actualDistance\n      }\n    }\n\n    function mouseUp() {\n      setMouseDragging(false)\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', mouseMove, true)\n      window.addEventListener('mouseup', mouseUp, true)\n      return () => {\n        window.removeEventListener('mousemove', mouseMove, true)\n        window.removeEventListener('mouseup', mouseUp, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, onDrag, vertical])\n\n  let className\n  if (flexbox) {\n    if (vertical) {\n      className = classes.flexbox_verticalHandle\n    } else {\n      className = classes.flexbox_horizontalHandle\n    }\n  } else if (vertical) {\n    className = classes.verticalHandle\n  } else {\n    className = classes.horizontalHandle\n  }\n\n  return (\n    <div\n      data-resizer=\"true\"\n      onMouseDown={event => {\n        event.preventDefault()\n        const pos = event[vertical ? 'clientX' : 'clientY']\n        prevPos.current = pos\n        setMouseDragging(true)\n      }}\n      role=\"presentation\"\n      className={clsx(className, originalClassName)}\n      {...props}\n    />\n  )\n}\n\nexport default ResizeHandle\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nfunction Drawer({ children, session }) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.paper} elevation={16} square>\n      <ResizeHandle\n        onDrag={session.resizeDrawer}\n        className={classes.resizeHandle}\n        vertical\n      />\n      {children}\n    </Paper>\n  )\n}\n\nDrawer.propTypes = {\n  children: PropTypes.node,\n  session: MobxPropTypes.observableObject.isRequired,\n}\n\nDrawer.defaultProps = {\n  children: null,\n}\n\nexport default observer(Drawer)\n","import React, { Suspense, useState } from 'react'\nimport {\n  AppBar,\n  IconButton,\n  ListItemSecondaryAction,\n  MenuItem,\n  Select,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MinimizeIcon from '@material-ui/icons/Minimize'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\nimport { useTheme, alpha } from '@material-ui/core/styles'\nimport Drawer from './Drawer'\n\nconst useStyles = makeStyles(theme => ({\n  drawerActions: {\n    float: 'right',\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.secondary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  drawerToolbar: {\n    paddingLeft: theme.spacing(2),\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  drawerSelect: {\n    color: theme.palette.secondary.contrastText,\n  },\n  drawerLoading: {\n    margin: theme.spacing(2),\n  },\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nconst DrawerHeader = observer(props => {\n  const { session, setToolbarHeight } = props\n  const { visibleWidget, activeWidgets } = session\n  const classes = useStyles()\n  const handleChange = (e, option) => {\n    session.showWidget(option.props.value)\n  }\n  const theme = useTheme()\n  return (\n    <AppBar\n      position=\"sticky\"\n      ref={ref => setToolbarHeight(ref?.getBoundingClientRect().height || 0)}\n      style={{ background: theme.palette.secondary.main }}\n    >\n      <Toolbar disableGutters className={classes.drawerToolbar}>\n        <Select\n          value={visibleWidget || ''}\n          data-testid=\"widget-drawer-selects\"\n          className={classes.drawerSelect}\n          classes={{ icon: classes.dropDownIcon }}\n          renderValue={selected => {\n            const {\n              HeadingComponent: HeadingComp,\n              heading: headingText,\n            } = getEnv(session).pluginManager.getWidgetType(selected.type)\n            return (\n              <Typography variant=\"h6\" color=\"inherit\">\n                {HeadingComp ? (\n                  <HeadingComp model={selected} />\n                ) : (\n                  headingText || undefined\n                )}\n              </Typography>\n            )\n          }}\n          onChange={(e, value) => {\n            handleChange(e, value)\n          }}\n        >\n          {Array.from(activeWidgets.values()).map((widget, index) => {\n            const {\n              HeadingComponent: HeadingComp,\n              heading: headingText,\n            } = getEnv(session).pluginManager.getWidgetType(widget.type)\n            return (\n              <MenuItem\n                data-testid={`widget-drawer-selects-item-${widget.type}`}\n                key={`${widget.id}-${index}`}\n                value={widget}\n              >\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {HeadingComp ? (\n                    <HeadingComp model={widget} />\n                  ) : (\n                    headingText || undefined\n                  )}\n                </Typography>\n                <ListItemSecondaryAction>\n                  <IconButton\n                    className={classes.drawerCloseButton}\n                    data-testid={`${widget.type}-drawer-delete`}\n                    color=\"inherit\"\n                    aria-label=\"Delete\"\n                    onClick={() => {\n                      session.hideWidget(widget)\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </MenuItem>\n            )\n          })}\n        </Select>\n        <div className={classes.spacer} />\n        <div className={classes.drawerCloseButton}>\n          <IconButton\n            className={classes.drawerCloseButton}\n            data-testid=\"drawer-minimize\"\n            color=\"inherit\"\n            onClick={() => {\n              session.minimizeWidgetDrawer()\n            }}\n          >\n            <MinimizeIcon />\n          </IconButton>\n          <IconButton\n            data-testid=\"drawer-close\"\n            color=\"inherit\"\n            onClick={() => {\n              session.hideWidget(visibleWidget)\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n})\n\nconst DrawerWidget = observer(({ session }) => {\n  const { visibleWidget, activeWidgets } = session\n  const { pluginManager } = getEnv(session)\n  const { ReactComponent } = pluginManager.getWidgetType(visibleWidget.type)\n\n  // we track the toolbar height because components that use virtualized height\n  // want to be able to fill the contained, minus the toolbar height (the\n  // position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n\n  return (\n    <Drawer session={session} open={Boolean(activeWidgets.size)}>\n      <DrawerHeader session={session} setToolbarHeight={setToolbarHeight} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <ReactComponent\n          model={visibleWidget}\n          session={session}\n          toolbarHeight={toolbarHeight}\n        />\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n","import React, { useRef, useState } from 'react'\nimport { Button } from '@material-ui/core'\nimport { alpha, makeStyles } from '@material-ui/core/styles'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport Menu, { MenuItem } from './Menu'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  buttonRoot: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.primary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n}))\n\nfunction DropDownMenu({\n  menuTitle,\n  session,\n  menuItems,\n}: {\n  menuTitle: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  session: any\n  menuItems: MenuItem[]\n}) {\n  const [open, setOpen] = useState(false)\n  const anchorEl = useRef(null)\n  const classes = useStyles()\n\n  function handleToggle() {\n    setOpen(!open)\n  }\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(session)\n    handleClose()\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        ref={anchorEl}\n        onClick={handleToggle}\n        color=\"inherit\"\n        data-testid=\"dropDownMenuButton\"\n        classes={{ root: classes.buttonRoot }}\n      >\n        {menuTitle}\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        anchorEl={anchorEl.current}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        onMenuItemClick={handleMenuItemClick}\n        open={open}\n        onClose={handleClose}\n        menuItems={menuItems}\n      />\n    </div>\n  )\n}\n\nDropDownMenu.propTypes = {\n  menuTitle: PropTypes.string.isRequired,\n  menuItems: MobxPropTypes.arrayOrObservableArray.isRequired,\n  session: MobxPropTypes.objectOrObservableObject.isRequired,\n}\n\nexport default observer(DropDownMenu)\n","import InputBase from '@material-ui/core/InputBase'\nimport Typography, { TypographyProps } from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\n\ntype Variant = TypographyProps['variant']\n\ntype EditableTypographyClassKey =\n  | 'input'\n  | 'inputBase'\n  | 'inputRoot'\n  | 'inputFocused'\n\nconst useStyles = makeStyles(theme => ({\n  input: {},\n  inputBase: {},\n  typography: {\n    top: 6,\n    left: 2,\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    visibility: 'hidden',\n  },\n  inputRoot: {\n    padding: theme.spacing(0.5),\n  },\n  inputFocused: {\n    borderStyle: 'solid',\n    borderRadius: theme.shape.borderRadius,\n    borderWidth: 2,\n  },\n}))\n\ninterface EditableTypographyPropTypes {\n  value: string\n  setValue: (value: string) => void\n  variant: Variant\n  classes?: Partial<Record<EditableTypographyClassKey, string>>\n}\n\n// using forwardRef so that MUI Tooltip can wrap this component\nconst EditableTypography = React.forwardRef(\n  (props: EditableTypographyPropTypes, ref: React.Ref<HTMLDivElement>) => {\n    const { value, setValue, variant, ...other } = props\n    const [editedValue, setEditedValue] = useState<string | undefined>()\n    const [width, setWidth] = useState(0)\n    const [sizerNode, setSizerNode] = useState<HTMLSpanElement | null>(null)\n    const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null)\n    const [blur, setBlur] = useState(false)\n\n    useEffect(() => {\n      if (blur) {\n        inputNode && inputNode.blur()\n        setBlur(false)\n      }\n    }, [blur, inputNode])\n\n    const classes = useStyles(props)\n    const theme = useTheme()\n\n    const clientWidth = sizerNode && sizerNode.clientWidth\n    if (clientWidth && clientWidth !== width) {\n      setWidth(clientWidth)\n    }\n\n    const sizerRef = (node: HTMLSpanElement) => {\n      setSizerNode(node)\n    }\n\n    const inputRef = (node: HTMLInputElement) => {\n      setInputNode(node)\n    }\n\n    function handleBlur() {\n      if (editedValue && editedValue !== value) {\n        setValue(editedValue)\n      }\n      setEditedValue(undefined)\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n      if (event.key === 'Enter') {\n        inputNode && inputNode.blur()\n      } else if (event.key === 'Escape') {\n        setEditedValue(undefined)\n        setBlur(true)\n      }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n      setEditedValue(event.target.value)\n    }\n\n    return (\n      <div {...other} ref={ref}>\n        <div style={{ position: 'relative' }}>\n          <Typography\n            ref={sizerRef}\n            component=\"span\"\n            variant={variant}\n            className={classes.typography}\n          >\n            {editedValue === undefined ? value : editedValue}\n          </Typography>\n        </div>\n        <InputBase\n          inputRef={inputRef}\n          className={classes.inputBase}\n          inputProps={{\n            style: {\n              width,\n              ...(variant && variant !== 'inherit' && variant !== 'srOnly'\n                ? theme.typography[variant]\n                : {}),\n            },\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputRoot,\n            focused: classes.inputFocused,\n          }}\n          value={editedValue === undefined ? value : editedValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          onBlur={handleBlur}\n        />\n      </div>\n    )\n  },\n)\n\nexport default EditableTypography\n","import IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Alert from '@material-ui/lab/Alert'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport React, { useEffect, useState } from 'react'\nimport { AbstractSessionModel, NotificationLevel } from '../util'\n\ntype SnackbarMessage = [string, NotificationLevel]\n\ninterface SnackbarSession extends AbstractSessionModel {\n  snackbarMessages: SnackbarMessage[]\n  popSnackbarMessage: () => unknown\n}\n\nfunction MessageSnackbar({\n  session,\n}: {\n  session: SnackbarSession & IAnyStateTreeNode\n}) {\n  const [open, setOpen] = useState(false)\n  const [snackbarMessage, setSnackbarMessage] = useState<\n    SnackbarMessage | undefined\n  >()\n\n  const { popSnackbarMessage, snackbarMessages } = session\n\n  const latestMessage = snackbarMessages.length\n    ? snackbarMessages[snackbarMessages.length - 1]\n    : null\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timer\n\n    if (snackbarMessage) {\n      if (!latestMessage) {\n        setSnackbarMessage(undefined)\n      } else if (snackbarMessage[0] !== latestMessage[0]) {\n        setOpen(false)\n        timeoutId = setTimeout(() => {\n          setSnackbarMessage(latestMessage)\n          setOpen(true)\n        }, 100)\n      }\n    } else if (latestMessage) {\n      setSnackbarMessage(latestMessage)\n      setOpen(true)\n    }\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [latestMessage, snackbarMessage])\n\n  const handleClose = (_event: unknown, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    popSnackbarMessage()\n    setOpen(false)\n  }\n\n  const [message, level] = snackbarMessage || []\n  return (\n    <Snackbar\n      open={open && !!message}\n      onClose={handleClose}\n      action={\n        <IconButton aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      }\n    >\n      <Alert onClose={handleClose} severity={level || 'warning'}>\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default observer(MessageSnackbar)\n","import {\n  SvgIconProps,\n  IconButton,\n  IconButtonProps as IconButtonPropsType,\n  Paper,\n  makeStyles,\n  useTheme,\n  Tooltip,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { alpha } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { ContentRect, withContentRect } from 'react-measure'\n\nimport { IBaseViewModel } from '../pluggableElementTypes/models'\nimport EditableTypography from './EditableTypography'\nimport Menu from './Menu'\n\nconst useStyles = makeStyles(theme => ({\n  viewContainer: {\n    overflow: 'hidden',\n    background: theme.palette.secondary.main,\n    margin: theme.spacing(0.5),\n  },\n  icon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  iconRoot: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.secondary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  listItemIconRoot: {\n    minWidth: 28,\n  },\n  listItemInset: {\n    paddingLeft: 28,\n  },\n  menuItemDense: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: 26,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  secondaryActionRoot: {\n    right: theme.spacing(1),\n  },\n  input: {\n    paddingBottom: 0,\n    paddingTop: 2,\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\n\nconst ViewMenu = observer(\n  ({\n    model,\n    IconButtonProps,\n    IconProps,\n  }: {\n    model: IBaseViewModel\n    IconButtonProps: IconButtonPropsType\n    IconProps: SvgIconProps\n  }) => {\n    const [anchorEl, setAnchorEl] = useState<HTMLElement>()\n\n    if (!(model.menuItems && model.menuItems.length)) {\n      return null\n    }\n\n    return (\n      <>\n        <IconButton\n          {...IconButtonProps}\n          aria-label=\"more\"\n          aria-controls=\"view-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => {\n            setAnchorEl(event.currentTarget)\n          }}\n          data-testid=\"view_menu_icon\"\n        >\n          <MenuIcon {...IconProps} />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setAnchorEl(undefined)\n          }}\n          onClose={() => {\n            setAnchorEl(undefined)\n          }}\n          menuItems={model.menuItems}\n        />\n      </>\n    )\n  },\n)\n\nexport default withContentRect('bounds')(\n  observer(\n    ({\n      view,\n      onClose,\n      style,\n      children,\n      contentRect,\n      measureRef,\n    }: {\n      view: IBaseViewModel\n      onClose: () => void\n      style: React.CSSProperties\n      children: React.ReactNode\n      contentRect: ContentRect\n      measureRef: React.RefObject<HTMLDivElement>\n    }) => {\n      const classes = useStyles()\n      const theme = useTheme()\n      const padWidth = theme.spacing(1)\n\n      let width = 0\n      if (contentRect.bounds) {\n        ;({ width } = contentRect.bounds)\n      }\n      useEffect(() => {\n        if (width) {\n          if (isAlive(view)) {\n            view.setWidth(width - padWidth * 2)\n          }\n        }\n      }, [padWidth, view, width])\n\n      const scrollRef = useRef<HTMLDivElement>(null)\n      // scroll the view into view when first mounted\n      // note that this effect will run only once, because of\n      // the empty array second param\n      useEffect(() => {\n        if (scrollRef?.current?.scrollIntoView) {\n          scrollRef.current.scrollIntoView({ block: 'center' })\n        }\n      }, [])\n\n      return (\n        <Paper\n          elevation={12}\n          ref={measureRef}\n          className={classes.viewContainer}\n          style={{ ...style, padding: `0px ${padWidth}px ${padWidth}px` }}\n        >\n          <div ref={scrollRef} style={{ display: 'flex' }}>\n            <ViewMenu\n              model={view}\n              IconButtonProps={{\n                classes: { root: classes.iconRoot },\n                edge: 'start',\n              }}\n              IconProps={{ className: classes.icon }}\n            />\n            <div className={classes.grow} />\n            <Tooltip title=\"Rename view\" arrow>\n              <EditableTypography\n                value={\n                  view.displayName ||\n                  // @ts-ignore\n                  (view.assemblyNames\n                    ? // @ts-ignore\n                      view.assemblyNames.join(',')\n                    : 'Untitled view')\n                }\n                setValue={val => {\n                  view.setDisplayName(val)\n                }}\n                variant=\"body2\"\n                classes={{\n                  input: classes.input,\n                  inputBase: classes.inputBase,\n                  inputRoot: classes.inputRoot,\n                  inputFocused: classes.inputFocused,\n                }}\n              />\n            </Tooltip>\n            <div className={classes.grow} />\n            <IconButton\n              data-testid=\"close_view\"\n              classes={{ root: classes.iconRoot }}\n              edge=\"end\"\n              onClick={onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          </div>\n          <Paper>{children}</Paper>\n        </Paper>\n      )\n    },\n  ),\n)\n","import React, { Suspense } from 'react'\nimport { AppBar, Fab, Toolbar, Tooltip, makeStyles } from '@material-ui/core'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\nimport DrawerWidget from './DrawerWidget'\nimport DropDownMenu from './DropDownMenu'\nimport EditableTypography from './EditableTypography'\nimport { LogoFull } from './Logo'\nimport Snackbar from './Snackbar'\nimport ViewContainer from './ViewContainer'\nimport { readConfObject } from '../configuration'\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    html: {\n      'font-family': 'Roboto',\n    },\n    /* Based on: https://www.digitalocean.com/community/tutorials/css-scrollbars */\n    /* The emerging W3C standard\n       that is currently Firefox-only */\n    '*': {\n      'scrollbar-width': 'auto',\n      'scrollbar-color': 'rgba(0,0,0,.5) rgba(128,128,128)',\n    },\n    /* Works on Chrome/Edge/Safari */\n    '*::-webkit-scrollbar': {\n      '-webkit-appearance': 'none',\n      width: '12px',\n    },\n    '*::-webkit-scrollbar-thumb': {\n      'background-color': 'rgba(0,0,0,.5)',\n      '-webkit-box-shadow': '0 0 1px rgba(255,255,255,.5)',\n    },\n  },\n  root: {\n    display: 'grid',\n    height: '100vh',\n    width: '100%',\n  },\n  fab: {\n    float: 'right',\n    position: 'sticky',\n    marginTop: theme.spacing(2),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  menuBarAndComponents: {\n    gridColumn: 'main',\n    display: 'grid',\n    gridTemplateRows: '[menubar] min-content [components] auto',\n    height: '100vh',\n  },\n  menuBar: {\n    gridRow: 'menubar',\n  },\n  components: {\n    overflowY: 'auto',\n    gridRow: 'components',\n  },\n  appBar: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  inputBase: {\n    color: theme.palette.primary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.light,\n  },\n}))\n\nconst Logo = observer(({ session }) => {\n  const { configuration } = session\n  const logoPath = readConfObject(configuration, 'logoPath')\n  if (!logoPath?.uri) {\n    return <LogoFull variant=\"white\" />\n  } else {\n    return <img src={logoPath.uri} alt=\"Custom logo\" />\n  }\n})\n\nconst App = observer(({ session, HeaderButtons }) => {\n  const classes = useStyles()\n  const { pluginManager } = getEnv(session)\n  const {\n    visibleWidget,\n    drawerWidth,\n    minimized,\n    activeWidgets,\n    savedSessionNames,\n    name,\n    menus,\n    views,\n  } = session\n\n  function handleNameChange(newName) {\n    if (savedSessionNames && savedSessionNames.includes(newName)) {\n      session.notify(\n        `Cannot rename session to \"${newName}\", a saved session with that name already exists`,\n        'warning',\n      )\n    } else {\n      session.renameCurrentSession(newName)\n    }\n  }\n\n  return (\n    <div\n      className={classes.root}\n      style={{\n        gridTemplateColumns: `[main] 1fr${\n          visibleWidget && !minimized ? ` [drawer] ${drawerWidth}px` : ''\n        }`,\n      }}\n    >\n      {session.DialogComponent ? (\n        <Suspense fallback={<div />}>\n          <session.DialogComponent\n            handleClose={() => session.setDialogComponent(undefined, undefined)}\n            {...session.DialogProps}\n          />\n        </Suspense>\n      ) : null}\n      <div className={classes.menuBarAndComponents}>\n        <div className={classes.menuBar}>\n          <AppBar className={classes.appBar} position=\"static\">\n            <Toolbar>\n              {menus.map(menu => (\n                <DropDownMenu\n                  key={menu.label}\n                  menuTitle={menu.label}\n                  menuItems={menu.menuItems}\n                  session={session}\n                />\n              ))}\n              <div className={classes.grow} />\n              <Tooltip title=\"Rename Session\" arrow>\n                <EditableTypography\n                  value={name}\n                  setValue={handleNameChange}\n                  variant=\"body1\"\n                  classes={{\n                    inputBase: classes.inputBase,\n                    inputRoot: classes.inputRoot,\n                    inputFocused: classes.inputFocused,\n                  }}\n                />\n              </Tooltip>\n              {HeaderButtons}\n              <div className={classes.grow} />\n              <div style={{ width: 150, maxHeight: 48 }}>\n                <Logo session={session} />\n              </div>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div className={classes.components}>\n          {views.map(view => {\n            const viewType = pluginManager.getViewType(view.type)\n            if (!viewType) {\n              throw new Error(`unknown view type ${view.type}`)\n            }\n            const { ReactComponent } = viewType\n            return (\n              <ViewContainer\n                key={`view-${view.id}`}\n                view={view}\n                onClose={() => session.removeView(view)}\n              >\n                <Suspense fallback={<div>Loading...</div>}>\n                  <ReactComponent\n                    model={view}\n                    session={session}\n                    getTrackType={pluginManager.getTrackType}\n                  />\n                </Suspense>\n              </ViewContainer>\n            )\n          })}\n\n          {/* blank space at the bottom of screen allows scroll */}\n          <div style={{ height: 300 }} />\n        </div>\n      </div>\n\n      {activeWidgets.size > 0 && minimized ? (\n        <div className={classes.fab}>\n          <Fab\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"show\"\n            data-testid=\"drawer-maximize\"\n            style={{ float: 'right' }}\n            onClick={() => {\n              session.showWidgetDrawer()\n            }}\n          >\n            <LaunchIcon />\n          </Fab>\n        </div>\n      ) : null}\n\n      {visibleWidget && !minimized ? <DrawerWidget session={session} /> : null}\n\n      <Snackbar session={session} />\n    </div>\n  )\n})\n\nexport default App\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport ReactPropTypes from 'prop-types'\nimport React, { useRef, useEffect } from 'react'\nimport { ImageBitmapType } from '../util/offscreenCanvasPonyfill'\n\nfunction PrerenderedCanvas(props: {\n  width: number\n  height: number\n  highResolutionScaling: number\n  style: any\n  imageData: any\n  showSoftClip?: boolean\n}) {\n  const {\n    width,\n    height,\n    highResolutionScaling,\n    style,\n    imageData,\n    showSoftClip,\n  } = props\n  const featureCanvas = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    if (!imageData) {\n      return\n    }\n    const canvas = featureCanvas.current\n    if (!canvas) {\n      return\n    }\n    const context = canvas.getContext('2d')\n    if (!context) {\n      return\n    }\n    if (imageData.commands) {\n      imageData.commands.forEach((command: any) => {\n        if (command.type === 'strokeStyle') {\n          context.strokeStyle = command.style\n        } else if (command.type === 'fillStyle') {\n          context.fillStyle = command.style\n        } else if (command.type === 'font') {\n          context.font = command.style\n        } else {\n          // @ts-ignore\n          context[command.type](...command.args)\n        }\n      })\n    } else if (imageData instanceof ImageBitmapType) {\n      context.drawImage(imageData, 0, 0)\n    } else if (imageData.dataURL) {\n      const img = new Image()\n      img.onload = () => context.drawImage(img, 0, 0)\n      img.src = imageData.dataURL\n    }\n  }, [imageData])\n\n  const softClipString = showSoftClip ? '_softclipped' : ''\n  return (\n    <canvas\n      data-testid={`prerendered_canvas${softClipString}`}\n      ref={featureCanvas}\n      width={width * highResolutionScaling}\n      height={height * highResolutionScaling}\n      style={{ width, height, ...style }}\n    />\n  )\n}\n\nPrerenderedCanvas.propTypes = {\n  height: ReactPropTypes.number.isRequired,\n  width: ReactPropTypes.number.isRequired,\n  highResolutionScaling: ReactPropTypes.number,\n  style: ReactPropTypes.objectOf(ReactPropTypes.any),\n  imageData: ReactPropTypes.any,\n  // config: ReactPropTypes.objectOf(ReactPropTypes.any),\n}\nPrerenderedCanvas.defaultProps = {\n  imageData: undefined,\n  highResolutionScaling: 1,\n  style: {},\n  // config: {},\n}\n\nexport default PrerenderedCanvas\n","import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport React from 'react'\n\nexport default ({\n  onClose,\n  open,\n  onFactoryReset,\n}: {\n  onClose: Function\n  open: boolean\n  onFactoryReset: Function\n}) => {\n  function handleDialogClose(action?: string) {\n    if (action === 'reset') {\n      onFactoryReset()\n    }\n    onClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={() => handleDialogClose()}>\n      <DialogTitle id=\"alert-dialog-title\">Reset</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to reset? This will restore the default\n          configuration.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleDialogClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleDialogClose('reset')}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { Feature } from '../util/simpleFeature'\nimport { readConfObject } from '../configuration'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nconst useStyles = makeStyles({\n  hoverLabel: {\n    border: '1px solid black',\n    position: 'absolute',\n    background: '#fffa',\n    pointerEvents: 'none',\n    zIndex: 10000,\n  },\n})\n\nconst Tooltip = ({\n  offsetX,\n  offsetY,\n  configuration,\n  feature,\n  timeout = 300,\n}: {\n  offsetX: number\n  offsetY: number\n  configuration: AnyConfigurationModel\n  feature?: Feature\n  timeout?: number\n}) => {\n  const classes = useStyles()\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    // only show the loading message after short timeout to prevent excessive\n    // flickering\n    const handle = setTimeout(() => setShown(true), timeout)\n    return () => clearTimeout(handle)\n  })\n  if (feature && shown) {\n    const text = readConfObject(configuration, 'mouseover', { feature })\n    return (\n      <div\n        className={classes.hoverLabel}\n        style={{ left: offsetX, top: offsetY }}\n      >\n        {text}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default observer(Tooltip)\n","import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport FactoryResetDialog from './FactoryResetDialog'\n\nconst ResetComponent = ({\n  onFactoryReset,\n  resetButtonText,\n}: {\n  onFactoryReset: Function\n  resetButtonText: string\n}) => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  return (\n    <>\n      <Button\n        data-testid=\"fatal-error\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => setDialogOpen(true)}\n      >\n        {resetButtonText}\n      </Button>\n      <FactoryResetDialog\n        onClose={() => setDialogOpen(false)}\n        open={dialogOpen}\n        onFactoryReset={onFactoryReset}\n      />\n    </>\n  )\n}\nResetComponent.propTypes = {\n  onFactoryReset: PropTypes.func.isRequired,\n  resetButtonText: PropTypes.string.isRequired,\n}\n\nconst FatalErrorDialog = ({\n  componentStack,\n  error,\n  onFactoryReset,\n  resetButtonText,\n}: {\n  componentStack: string\n  error: Error\n  onFactoryReset: Function\n  resetButtonText: string\n}) => {\n  return (\n    <Dialog open>\n      <DialogTitle style={{ backgroundColor: '#e88' }}>Fatal error</DialogTitle>\n      <DialogContent>\n        <pre>\n          {error.toString()}\n          {componentStack}\n        </pre>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => window.location.reload()}\n        >\n          Refresh\n        </Button>\n        <ResetComponent\n          onFactoryReset={onFactoryReset}\n          resetButtonText={resetButtonText}\n        />\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nFatalErrorDialog.propTypes = {\n  componentStack: PropTypes.string,\n  error: PropTypes.shape({}),\n  onFactoryReset: PropTypes.func.isRequired,\n  resetButtonText: PropTypes.string,\n}\n\nFatalErrorDialog.defaultProps = {\n  error: { message: 'No error message provided' },\n  componentStack: '',\n  resetButtonText: 'Factory Reset',\n}\n\nexport default FatalErrorDialog\n","// this is all the stuff that the pluginManager re-exports for plugins to use\nimport React from 'react'\nimport * as ReactDom from 'react-dom'\nimport * as mobx from 'mobx'\nimport * as mst from 'mobx-state-tree'\nimport * as mxreact from 'mobx-react'\nimport PropTypes from 'prop-types'\n\nimport * as MUIStyles from '@material-ui/core/styles'\n\n// @material-ui components\nimport * as MUICore from '@material-ui/core'\nimport * as MUIUtils from '@material-ui/core/utils'\nimport MUISvgIcon from '@material-ui/core/SvgIcon'\nimport * as MUILab from '@material-ui/lab'\nimport * as MUIDataGrid from '@material-ui/data-grid'\nimport MUIBox from '@material-ui/core/Box'\nimport MUIButton from '@material-ui/core/Button'\nimport MUIButtonGroup from '@material-ui/core/ButtonGroup'\nimport MUICard from '@material-ui/core/Card'\nimport MUICardContent from '@material-ui/core/CardContent'\nimport MUICheckbox from '@material-ui/core/Checkbox'\nimport MUIContainer from '@material-ui/core/Container'\nimport MUIDialog from '@material-ui/core/Dialog'\nimport MUIFormLabel from '@material-ui/core/FormLabel'\nimport MUIFormControl from '@material-ui/core/FormControl'\nimport MUIFormControlLabel from '@material-ui/core/FormControlLabel'\nimport MUIFormGroup from '@material-ui/core/FormGroup'\nimport MUIGrid from '@material-ui/core/Grid'\nimport MUIIcon from '@material-ui/core/Icon'\nimport MUIIconButton from '@material-ui/core/IconButton'\nimport MUIInputAdornment from '@material-ui/core/InputAdornment'\nimport MUILinearProgress from '@material-ui/core/LinearProgress'\nimport MUIListItemIcon from '@material-ui/core/ListItemIcon'\nimport MUIListItemText from '@material-ui/core/ListItemText'\nimport MUIMenu from '@material-ui/core/Menu'\nimport MUIMenuItem from '@material-ui/core/MenuItem'\nimport MUIRadio from '@material-ui/core/Radio'\nimport MUIRadioGroup from '@material-ui/core/RadioGroup'\nimport MUISelect from '@material-ui/core/Select'\nimport MUISnackbar from '@material-ui/core/Snackbar'\nimport MUISnackbarContent from '@material-ui/core/SnackbarContent'\nimport MUITextField from '@material-ui/core/TextField'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport MUITypography from '@material-ui/core/Typography'\n\n// material-ui lab\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nimport * as BaseAdapterExports from '../data_adapters/BaseAdapter'\n\nimport * as BaseFeatureDetail from '../BaseFeatureWidget/BaseFeatureDetail'\n\nimport Base1DView from '../util/Base1DViewModel'\nimport ViewType from '../pluggableElementTypes/ViewType'\nimport AdapterType from '../pluggableElementTypes/AdapterType'\nimport DisplayType from '../pluggableElementTypes/DisplayType'\nimport TrackType from '../pluggableElementTypes/TrackType'\nimport WidgetType from '../pluggableElementTypes/WidgetType'\n\nimport * as pluggableElementTypeModels from '../pluggableElementTypes/models'\nimport * as ServerSideRendererType from '../pluggableElementTypes/renderers/ServerSideRendererType'\nimport CircularChordRendererType from '../pluggableElementTypes/renderers/CircularChordRendererType'\nimport * as BoxRendererType from '../pluggableElementTypes/renderers/BoxRendererType'\nimport * as FeatureRendererType from '../pluggableElementTypes/renderers/FeatureRendererType'\nimport * as RendererType from '../pluggableElementTypes/renderers/RendererType'\n\nimport * as Configuration from '../configuration'\nimport * as Plugin from '../Plugin'\nimport * as coreUi from '../ui'\nimport * as coreUtil from '../util'\nimport * as coreColor from '../util/color'\nimport * as trackUtils from '../util/tracks'\nimport * as coreIo from '../util/io'\nimport * as coreMstReflection from '../util/mst-reflection'\nimport * as rxjs from '../util/rxjs'\nimport * as MUIColors from './material-ui-colors'\nimport * as mstTypes from '../util/types/mst'\n\nimport ReExportsList from './list'\n\nconst libs = {\n  mobx,\n  'mobx-state-tree': mst,\n  react: React,\n  'react-dom': ReactDom,\n  'mobx-react': mxreact,\n  'prop-types': PropTypes,\n\n  // material-ui 1st-level components\n  '@material-ui/core': MUICore,\n  // special case so plugins can easily use @material-ui/icons; don't remove\n  '@material-ui/core/SvgIcon': MUISvgIcon,\n  '@material-ui/core/utils': MUIUtils,\n  // end special case\n  '@material-ui/lab': MUILab,\n  '@material-ui/data-grid': MUIDataGrid,\n\n  // material-ui subcomponents, should get rid of these\n  '@material-ui/core/colors': MUIColors,\n  '@material-ui/core/styles': MUIStyles,\n  '@material-ui/core/Box': MUIBox,\n  '@material-ui/core/Button': MUIButton,\n  '@material-ui/core/ButtonGroup': MUIButtonGroup,\n  '@material-ui/core/Card': MUICard,\n  '@material-ui/core/CardContent': MUICardContent,\n  '@material-ui/core/Container': MUIContainer,\n  '@material-ui/core/Checkbox': MUICheckbox,\n  '@material-ui/core/Dialog': MUIDialog,\n  '@material-ui/core/FormGroup': MUIFormGroup,\n  '@material-ui/core/FormLabel': MUIFormLabel,\n  '@material-ui/core/FormControl': MUIFormControl,\n  '@material-ui/core/FormControlLabel': MUIFormControlLabel,\n  '@material-ui/core/Grid': MUIGrid,\n  '@material-ui/core/Icon': MUIIcon,\n  '@material-ui/core/IconButton': MUIIconButton,\n  '@material-ui/core/InputAdornment': MUIInputAdornment,\n  '@material-ui/core/LinearProgress': MUILinearProgress,\n  '@material-ui/core/ListItemIcon': MUIListItemIcon,\n  '@material-ui/core/ListItemText': MUIListItemText,\n  '@material-ui/core/Menu': MUIMenu,\n  '@material-ui/core/MenuItem': MUIMenuItem,\n  '@material-ui/core/RadioGroup': MUIRadioGroup,\n  '@material-ui/core/Radio': MUIRadio,\n  '@material-ui/core/Select': MUISelect,\n  '@material-ui/core/Snackbar': MUISnackbar,\n  '@material-ui/core/SnackbarContent': MUISnackbarContent,\n  '@material-ui/core/TextField': MUITextField,\n  '@material-ui/core/Tooltip': MUITooltip,\n  '@material-ui/core/Typography': MUITypography,\n\n  // @material-ui lab\n  '@material-ui/lab/ToggleButton': ToggleButton,\n  '@material-ui/lab/ToggleButtonGroup': ToggleButtonGroup,\n\n  '@jbrowse/core/Plugin': Plugin,\n  '@jbrowse/core/pluggableElementTypes/ViewType': ViewType,\n  '@jbrowse/core/pluggableElementTypes/AdapterType': AdapterType,\n  '@jbrowse/core/pluggableElementTypes/DisplayType': DisplayType,\n  '@jbrowse/core/pluggableElementTypes/TrackType': TrackType,\n  '@jbrowse/core/pluggableElementTypes/WidgetType': WidgetType,\n\n  '@jbrowse/core/pluggableElementTypes/models': pluggableElementTypeModels,\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType': ServerSideRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType': CircularChordRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType': BoxRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType': FeatureRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType': RendererType,\n  '@jbrowse/core/configuration': Configuration,\n  '@jbrowse/core/util/types/mst': mstTypes,\n  '@jbrowse/core/ui': coreUi,\n  '@jbrowse/core/util': coreUtil,\n  '@jbrowse/core/util/color': coreColor,\n  '@jbrowse/core/util/tracks': trackUtils,\n  '@jbrowse/core/util/Base1DViewModel': Base1DView,\n  '@jbrowse/core/util/io': coreIo,\n  '@jbrowse/core/util/mst-reflection': coreMstReflection,\n  '@jbrowse/core/util/rxjs': rxjs,\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail': BaseFeatureDetail,\n\n  '@jbrowse/core/data_adapters/BaseAdapter': BaseAdapterExports,\n}\n\n// make sure that all the items in the ReExports/list array (used by build systems and such)\n// are included here. it's OK if there are some additional ones that are not in the list\nReExportsList.forEach(name => {\n  if (!(name in libs)) {\n    throw new Error(`ReExports/modules is missing ${name}`)\n  }\n})\n\nexport default libs\n","export default [\n  'mobx',\n  'mobx-state-tree',\n  'react',\n  'react-dom',\n  'mobx-react',\n  'prop-types',\n\n  '@material-ui/core',\n  '@material-ui/core/SvgIcon',\n  '@material-ui/core/utils',\n  '@material-ui/lab',\n  '@material-ui/data-grid',\n\n  '@jbrowse/core/Plugin',\n  '@jbrowse/core/pluggableElementTypes/ViewType',\n  '@jbrowse/core/pluggableElementTypes/AdapterType',\n  '@jbrowse/core/pluggableElementTypes/DisplayType',\n  '@jbrowse/core/pluggableElementTypes/TrackType',\n  '@jbrowse/core/pluggableElementTypes/WidgetType',\n\n  '@jbrowse/core/pluggableElementTypes/models',\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType',\n  '@jbrowse/core/configuration',\n  '@jbrowse/core/util/types/mst',\n  '@jbrowse/core/ui',\n  '@jbrowse/core/util',\n  '@jbrowse/core/util/color',\n  '@jbrowse/core/util/tracks',\n  '@jbrowse/core/util/Base1DViewModel',\n  '@jbrowse/core/util/io',\n  '@jbrowse/core/util/mst-reflection',\n  '@jbrowse/core/util/rxjs',\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail',\n\n  '@jbrowse/core/data_adapters/BaseAdapter',\n]\n","import modules from './modules'\n\nexport default modules\n","import { Observable, merge } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\nimport { isStateTreeNode, getSnapshot } from 'mobx-state-tree'\nimport { ObservableCreate } from '../util/rxjs'\nimport { checkAbortSignal, hashCode, observeAbortSignal } from '../util'\nimport { Feature } from '../util/simpleFeature'\nimport {\n  AnyConfigurationModel,\n  ConfigurationSchema,\n} from '../configuration/configurationSchema'\nimport { getSubAdapterType } from './dataAdapterCache'\nimport { Region, NoAssemblyRegion } from '../util/types'\nimport { blankStats, rectifyStats, scoresToStats } from '../util/stats'\nimport BaseResult from '../TextSearch/BaseResults'\n\nexport interface BaseOptions {\n  signal?: AbortSignal\n  bpPerPx?: number\n  sessionId?: string\n  statusCallback?: (message: string) => void\n  headers?: Record<string, string>\n  [key: string]: unknown\n}\n\nexport type SearchType = 'full' | 'prefix' | 'exact'\n\nexport interface BaseArgs {\n  searchType?: SearchType\n  queryString: string\n  signal?: AbortSignal\n  limit?: number\n  pageNumber?: number\n}\n// see\n// https://www.typescriptlang.org/docs/handbook/2/classes.html#abstract-construct-signatures\n// for why this is the abstract construct signature\nexport interface AnyAdapter {\n  new (\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n  ): AnyDataAdapter\n}\n\nexport type AnyDataAdapter =\n  | BaseAdapter\n  | BaseFeatureDataAdapter\n  | BaseRefNameAliasAdapter\n  | BaseTextSearchAdapter\n  | RegionsAdapter\n  | SequenceAdapter\n\n// generates a short \"id fingerprint\" from the config passed to the base\n// feature adapter by recursively enumerating props, but if config is too big\n// does not process entire config (FromConfigAdapter for example can be large)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction idMaker(args: any, id = '') {\n  const keys = Object.keys(args)\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    if (id.length > 5000) {\n      break\n    }\n    if (typeof args[key] === 'object' && args[key]) {\n      id += idMaker(args[key], id)\n    } else {\n      id += `${key}-${args[key]};`\n    }\n  }\n  return hashCode(id)\n}\n\nexport abstract class BaseAdapter {\n  public id: string\n\n  static capabilities = [] as string[]\n\n  config: AnyConfigurationModel\n\n  getSubAdapter?: getSubAdapterType\n\n  constructor(\n    config: AnyConfigurationModel = ConfigurationSchema('empty', {}).create(),\n    getSubAdapter?: getSubAdapterType,\n  ) {\n    this.config = config\n    this.getSubAdapter = getSubAdapter\n    // note: we use switch on jest here for more simple feature IDs\n    // in test environment\n    if (typeof jest === 'undefined') {\n      const data = isStateTreeNode(config) ? getSnapshot(config) : config\n      this.id = `${idMaker(data)}`\n    } else {\n      this.id = 'test'\n    }\n  }\n\n  /**\n   * Called to provide a hint that data tied to a certain region will not be\n   * needed for the forseeable future and can be purged from caches, etc\n   * @param region - Region\n   */\n  public abstract freeResources(region: Region): void\n}\n\n/**\n * Base class for feature adapters to extend. Defines some methods that\n * subclasses must implement.\n */\nexport abstract class BaseFeatureDataAdapter extends BaseAdapter {\n  /**\n   * Get all reference sequence names used in the data source\n   *\n   * NOTE: If an adapter is unable to determine the reference sequence names,\n   * the array will be empty\n   * @param opts - Feature adapter options\n   */\n  public abstract async getRefNames(opts?: BaseOptions): Promise<string[]>\n  // public abstract async getRefNames(opts?: BaseOptions): Promise<string[]>\n  //   await this.setup()\n  //   const { refNames } = this.metadata\n  //   return refNames\n  // }\n\n  /**\n   * Get features from the data source that overlap a region\n   * @param region - Region\n   * @param options - Feature adapter options\n   * @returns Observable of Feature objects in the region\n   */\n  public abstract getFeatures(\n    region: Region,\n    opts?: BaseOptions,\n  ): Observable<Feature>\n  // public abstract getFeatures(\n  //   region: Region,\n  //   opts: BaseOptions,\n  // ): Observable<Feature> {\n  //   return ObservableCreate(observer => {\n  //     const records = getRecords(assembly, refName, start, end)\n  //     records.forEach(record => {\n  //       observer.next(this.recordToFeature(record))\n  //     })\n  //     observer.complete()\n  //   })\n  // }\n\n  /**\n   * Return \"header info\" that is fetched from the data file, or other info\n   * that would not simply be in the config of the file. The return value can\n   * be `{tag:string, data: any}[]` e.g. list of tags with their values which\n   * is how VCF,BAM,CRAM return values for getInfo or it can be a nested JSON\n   * object\n   */\n  public async getHeader(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Return info that is primarily used for interpreting the data that is there,\n   * primarily in reference to being used for augmenting feature details panels\n   */\n  public async getMetadata(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   */\n  public getFeaturesInRegion(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const hasData = await this.hasDataForRefName(region.refName, opts)\n      checkAbortSignal(opts.signal)\n      if (!hasData) {\n        // console.warn(`no data for ${region.refName}`)\n        observer.complete()\n      } else {\n        this.getFeatures(region, opts)\n          .pipe(takeUntil(observeAbortSignal(opts.signal)))\n          .subscribe(observer)\n      }\n    })\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters\n   * that are frequently called on multiple regions simultaneously may\n   * want to implement a more efficient custom version of this method.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters that\n   * are frequently called on multiple regions simultaneously may want to\n   * implement a more efficient custom version of this method.\n   * @param regions - Regions\n   * @param opts - Feature adapter options\n   * @returns Observable of Feature objects in the regions\n   */\n  public getFeaturesInMultipleRegions(\n    regions: Region[],\n    opts: BaseOptions = {},\n  ) {\n    const obs = merge(\n      ...regions.map(region => {\n        return ObservableCreate<Feature>(async observer => {\n          const hasData = await this.hasDataForRefName(region.refName, opts)\n          checkAbortSignal(opts.signal)\n          if (!hasData) {\n            // console.warn(`no data for ${region.refName}`)\n            observer.complete()\n          } else {\n            this.getFeatures(region, opts).subscribe(observer)\n          }\n        })\n      }),\n    )\n\n    if (opts.signal) {\n      return obs.pipe(takeUntil(observeAbortSignal(opts.signal)))\n    }\n    return obs\n  }\n\n  /**\n   * Check if the store has data for the given reference name.\n   * @param refName - Name of the reference sequence\n   * @returns Whether data source has data for the given reference name\n   */\n  public async hasDataForRefName(refName: string, opts: BaseOptions = {}) {\n    const refNames = await this.getRefNames(opts)\n    return refNames.includes(refName)\n  }\n\n  public async getRegionStats(region: Region, opts?: BaseOptions) {\n    const feats = this.getFeatures(region, opts)\n    return scoresToStats(region, feats)\n  }\n\n  public async getMultiRegionStats(regions: Region[] = [], opts?: BaseOptions) {\n    if (!regions.length) {\n      return blankStats()\n    }\n    const feats = await Promise.all(\n      regions.map(region => this.getRegionStats(region, opts)),\n    )\n\n    const scoreMax = feats\n      .map(s => s.scoreMax)\n      .reduce((acc, curr) => Math.max(acc, curr))\n    const scoreMin = feats\n      .map(s => s.scoreMin)\n      .reduce((acc, curr) => Math.min(acc, curr))\n    const scoreSum = feats.map(s => s.scoreSum).reduce((a, b) => a + b, 0)\n    const scoreSumSquares = feats\n      .map(s => s.scoreSumSquares)\n      .reduce((a, b) => a + b, 0)\n    const featureCount = feats\n      .map(s => s.featureCount)\n      .reduce((a, b) => a + b, 0)\n    const basesCovered = feats\n      .map(s => s.basesCovered)\n      .reduce((a, b) => a + b, 0)\n\n    return rectifyStats({\n      scoreMin,\n      scoreMax,\n      featureCount,\n      basesCovered,\n      scoreSumSquares,\n      scoreSum,\n    })\n  }\n}\n\nexport interface RegionsAdapter extends BaseAdapter {\n  getRegions(opts: BaseOptions): Promise<NoAssemblyRegion[]>\n}\n\nexport interface SequenceAdapter\n  extends BaseFeatureDataAdapter,\n    RegionsAdapter {}\n\nexport function isSequenceAdapter(\n  thing: AnyDataAdapter,\n): thing is SequenceAdapter {\n  return 'getRegions' in thing && 'getFeatures' in thing\n}\n\nexport function isRegionsAdapter(\n  thing: AnyDataAdapter,\n): thing is RegionsAdapter {\n  return 'getRegions' in thing\n}\n\nexport function isFeatureAdapter(\n  thing: AnyDataAdapter,\n): thing is BaseFeatureDataAdapter {\n  return 'getFeatures' in thing\n}\n\nexport interface Alias {\n  refName: string\n  aliases: string[]\n}\nexport interface BaseRefNameAliasAdapter extends BaseAdapter {\n  getRefNameAliases(opts: BaseOptions): Promise<Alias[]>\n}\nexport function isRefNameAliasAdapter(\n  thing: object,\n): thing is BaseRefNameAliasAdapter {\n  return 'getRefNameAliases' in thing\n}\nexport interface BaseTextSearchAdapter extends BaseAdapter {\n  searchIndex(args: BaseArgs): Promise<BaseResult[]>\n}\nexport function isTextSearchAdapter(\n  thing: AnyDataAdapter,\n): thing is BaseTextSearchAdapter {\n  return 'searchIndex' in thing\n}\n","import PluginManager from './PluginManager'\nimport { AnyConfigurationSchemaType } from './configuration/configurationSchema'\n\n/**\n * base class for a JBrowse plugin\n */\nexport default abstract class Plugin {\n  abstract name: string\n\n  url?: string\n\n  version?: string\n\n  install(_pluginManager: PluginManager): void {}\n\n  configure(_pluginManager: PluginManager): void {}\n\n  configurationSchema: AnyConfigurationSchemaType | undefined = undefined\n}\n\nexport type PluginConstructor = new (...args: unknown[]) => Plugin\n","import { GenericFilehandle, FilehandleOptions } from 'generic-filehandle'\n\nexport default class LocalFile implements GenericFilehandle {\n  private fdPromise?: Promise<number>\n  private filename: string\n  private fsOpenPromise: Promise<typeof import('fs').open.__promisify__>\n  private fsReadPromise: Promise<typeof import('fs').read.__promisify__>\n  private fsReadFilePromise: Promise<typeof import('fs').readFile.__promisify__>\n  private fsStatPromise: Promise<typeof import('fs').stat.__promisify__>\n\n  public constructor(source: string, _opts: FilehandleOptions = {}) {\n    this.filename = source\n    const utilPromise = import('util')\n    const fsPromise = import('fs')\n    this.fsOpenPromise = Promise.all([\n      utilPromise,\n      fsPromise,\n    ]).then(([util, fs]) => util.promisify(fs.open))\n    this.fsReadPromise = Promise.all([\n      utilPromise,\n      fsPromise,\n    ]).then(([util, fs]) => util.promisify(fs.read))\n    this.fsReadFilePromise = Promise.all([\n      utilPromise,\n      fsPromise,\n    ]).then(([util, fs]) => util.promisify(fs.readFile))\n    this.fsStatPromise = Promise.all([\n      utilPromise,\n      fsPromise,\n    ]).then(([util, fs]) => util.promisify(fs.stat))\n  }\n\n  private async getFd(): Promise<number> {\n    if (!this.fdPromise) {\n      this.fdPromise = (await this.fsOpenPromise)(this.filename, 'r')\n    }\n    return this.fdPromise\n  }\n\n  public async read(\n    buffer: Buffer,\n    offset = 0,\n    length: number,\n    position = 0,\n  ): Promise<{ bytesRead: number; buffer: Buffer }> {\n    const fetchLength = Math.min(buffer.length - offset, length)\n    const fd = await this.getFd()\n    return (await this.fsReadPromise)(fd, buffer, offset, fetchLength, position)\n  }\n\n  public async readFile(\n    options?: FilehandleOptions | string,\n  ): Promise<Buffer | string> {\n    return (await this.fsReadFilePromise)(\n      this.filename,\n      options as BufferEncoding,\n    )\n  }\n  // todo memoize\n  public async stat(): Promise<import('fs').Stats> {\n    return (await this.fsStatPromise)(this.filename)\n  }\n}\n","// import tenaciousFetch from 'tenacious-fetch'\n\nimport { HttpRangeFetcher } from 'http-range-fetcher'\nimport { Buffer } from 'buffer'\nimport { RemoteFile, GenericFilehandle } from 'generic-filehandle'\n\n// function unReplacePath() {\n//   throw new Error('unimplemented') // TODO\n// }\n\nfunction getfetch(url: RequestInfo, opts: RequestInit = {}): Promise<Response> {\n  return fetch(url, {\n    method: 'GET',\n    credentials: 'same-origin',\n    // retries: 5,\n    // retryDelay: 1000, // 1 sec, 2 sec, 3 sec\n    // retryStatus: [500, 404, 503],\n    // onRetry: ({ retriesLeft }: { retriesLeft: number }) => {\n    //   console.warn(\n    //     `${url} request failed, retrying (${retriesLeft} retries left)`,\n    //   )\n    // },\n    ...opts,\n  })\n}\n\nasync function fetchBinaryRange(\n  url: string,\n  start: number,\n  end: number,\n  options: { headers?: HeadersInit; signal?: AbortSignal } = {},\n) {\n  const requestDate = new Date()\n  const requestHeaders = { ...options.headers, range: `bytes=${start}-${end}` }\n  const res = await getfetch(url, {\n    ...options,\n    headers: requestHeaders,\n    // onRetry: ({ retriesLeft }: { retriesLeft: number }) => {\n    //   console.warn(\n    //     `${url} bytes ${start}-${end} request failed, retrying (${retriesLeft} retries left)`,\n    //   )\n    // },\n  })\n  const responseDate = new Date()\n  if (res.status !== 206 && res.status !== 200) {\n    throw new Error(\n      `HTTP ${res.status} when fetching ${url} bytes ${start}-${end}`,\n    )\n  }\n\n  // translate the Headers object into a regular key -> value object.\n  // will miss duplicate headers of course\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const headers: Record<string, any> = {}\n  for (const [k, v] of res.headers.entries()) {\n    headers[k] = v\n  }\n\n  if (res.status === 200) {\n    throw new Error(\n      `HTTP ${res.status} when fetching ${url} bytes ${start}-${end}`,\n    )\n  }\n\n  // return the response headers, and the data buffer\n  const arrayBuffer = await res.arrayBuffer()\n  return {\n    headers,\n    requestDate,\n    responseDate,\n    buffer: Buffer.from(arrayBuffer),\n  }\n}\n\nconst globalRangeCache = new HttpRangeFetcher({\n  fetch: fetchBinaryRange,\n  size: 500 * 1024 * 1024, // 500MB\n  chunkSize: 2 ** 17, // 128KB\n  maxFetchSize: 100 * 1024 * 1024,\n  minimumTTL: 300000000,\n})\n\nasync function globalCacheFetch(\n  url: RequestInfo,\n  opts?: RequestInit,\n): Promise<Response> {\n  // if it is a range request, route it through the global range cache\n  const requestHeaders = opts && opts.headers\n  let range\n  if (requestHeaders) {\n    if (requestHeaders instanceof Headers) {\n      range = requestHeaders.get('range')\n    } else if (Array.isArray(requestHeaders)) {\n      ;[, range] = requestHeaders.find(([key]) => key === 'range') || [\n        undefined,\n        undefined,\n      ]\n    } else {\n      range = requestHeaders.range\n    }\n  }\n  if (range) {\n    const rangeParse = /bytes=(\\d+)-(\\d+)/.exec(range)\n    if (rangeParse) {\n      const [, start, end] = rangeParse\n      const s = parseInt(start, 10)\n      const e = parseInt(end, 10)\n      const response = await (globalRangeCache.getRange(url, s, e - s + 1, {\n        signal: opts && opts.signal,\n      }) as ReturnType<typeof fetchBinaryRange>)\n      const { headers } = response\n      return new Response(response.buffer, { status: 206, headers })\n    }\n  }\n\n  return getfetch(url, opts)\n}\nexport function clearCache() {\n  globalRangeCache.reset()\n}\n\nexport function openUrl(url: string): GenericFilehandle {\n  return new RemoteFile(String(url), {\n    fetch: globalCacheFetch,\n  })\n}\n","import { BlobFile, GenericFilehandle } from 'generic-filehandle'\nimport LocalFile from './LocalFile'\nimport { openUrl as rangeFetcherOpenUrl } from './rangeFetcher'\nimport {\n  FileLocation,\n  LocalPathLocation,\n  UriLocation,\n  BlobLocation,\n} from '../types'\nimport { getBlob } from '../tracks'\nimport { isElectron } from '../../util'\n\nexport const openUrl = (arg: string) => {\n  return rangeFetcherOpenUrl(arg)\n}\n\nfunction isUriLocation(location: FileLocation): location is UriLocation {\n  return 'uri' in location\n}\n\nfunction isLocalPathLocation(\n  location: FileLocation,\n): location is LocalPathLocation {\n  return 'localPath' in location\n}\n\nfunction isBlobLocation(location: FileLocation): location is BlobLocation {\n  return 'blobId' in location\n}\n\nexport function openLocation(location: FileLocation): GenericFilehandle {\n  if (!location) {\n    throw new Error('must provide a location to openLocation')\n  }\n  if (isLocalPathLocation(location)) {\n    if (!location.localPath) {\n      throw new Error('No local path provided')\n    }\n    if (isElectron || typeof jest !== 'undefined') {\n      return new LocalFile(location.localPath)\n    } else {\n      throw new Error(\"can't use local files in the browser\")\n    }\n  }\n  if (isUriLocation(location)) {\n    if (!location.uri) {\n      throw new Error('No URI provided')\n    }\n    return openUrl(\n      location.baseUri\n        ? new URL(location.uri, location.baseUri).href\n        : location.uri,\n    )\n  }\n  if (isBlobLocation(location)) {\n    // special case where blob is not directly stored on the model, use a getter\n    const blob = getBlob(location.blobId)\n    if (!blob) {\n      throw new Error(\n        `file (\"${location.name}\") was opened locally from a previous session. To restore it, go to track settings and reopen the file`,\n      )\n    }\n    return new BlobFile(blob)\n  }\n  throw new Error('invalid fileLocation')\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const baseLinearDisplayConfigSchema = ConfigurationSchema(\n  'BaseLinearDisplay',\n  {\n    maxDisplayedBpPerPx: {\n      type: 'number',\n      description: 'maximum bpPerPx that is displayed in the view',\n      defaultValue: Number.MAX_VALUE,\n    },\n  },\n  { explicitIdentifier: 'displayId' },\n)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observer, PropTypes } from 'mobx-react'\nimport React from 'react'\nimport {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from './Block'\n\nconst useStyles = makeStyles({\n  linearBlocks: {\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    position: 'absolute',\n    minHeight: '100%',\n    display: 'flex',\n  },\n  heightOverflowed: {\n    position: 'absolute',\n    color: 'rgb(77,77,77)',\n    borderBottom: '2px solid rgb(77,77,77)',\n    textShadow: 'white 0px 0px 1px',\n    whiteSpace: 'nowrap',\n    width: '100%',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    zIndex: 2000,\n    boxSizing: 'border-box',\n  },\n})\nconst RenderedBlocks = observer(\n  ({ model }: { model: BaseLinearDisplayModel }) => {\n    const classes = useStyles()\n    const { blockDefinitions, blockState } = model\n    return (\n      <>\n        {blockDefinitions.map(block => {\n          if (block instanceof ContentBlock) {\n            const state = blockState.get(block.key)\n\n            return (\n              <ContentBlockComponent\n                block={block}\n                key={`${model.id}-${block.key}`}\n              >\n                {state && state.ReactComponent ? (\n                  <state.ReactComponent model={state} />\n                ) : null}\n                {state && state.maxHeightReached ? (\n                  <div\n                    className={classes.heightOverflowed}\n                    style={{\n                      top: state.layout.getTotalHeight() - 16,\n                      pointerEvents: 'none',\n                      height: 16,\n                    }}\n                  >\n                    Max height reached\n                  </div>\n                ) : null}\n              </ContentBlockComponent>\n            )\n          }\n          if (block instanceof ElidedBlock) {\n            return (\n              <ElidedBlockComponent\n                key={`${model.id}-${block.key}`}\n                width={block.widthPx}\n              />\n            )\n          }\n          if (block instanceof InterRegionPaddingBlock) {\n            return (\n              <InterRegionPaddingBlockComponent\n                key={block.key}\n                width={block.widthPx}\n                style={{ background: 'none' }}\n                boundary={block.variant === 'boundary'}\n              />\n            )\n          }\n          throw new Error(`invalid block type ${typeof block}`)\n        })}\n      </>\n    )\n  },\n)\nfunction LinearBlocks({ model }: { model: BaseLinearDisplayModel }) {\n  const classes = useStyles()\n  const { blockDefinitions } = model\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const viewModel = getContainingView(model) as any\n  return (\n    <div\n      data-testid=\"Blockset\"\n      className={classes.linearBlocks}\n      style={{\n        left: blockDefinitions.offsetPx - viewModel.offsetPx,\n      }}\n    >\n      <RenderedBlocks model={model} />\n    </div>\n  )\n}\n\nLinearBlocks.propTypes = {\n  model: PropTypes.observableObject.isRequired,\n}\n\nexport { RenderedBlocks, useStyles }\nexport default observer(LinearBlocks)\n","import { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport React, { useState, useRef } from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport LinearBlocks from './LinearBlocks'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nconst useStyles = makeStyles({\n  display: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    width: '100%',\n    minHeight: '100%',\n  },\n})\nconst Tooltip = observer(\n  (props: { model: BaseLinearDisplayModel; mouseCoord: [number, number] }) => {\n    const { model, mouseCoord } = props\n    const { featureUnderMouse } = model\n    const mouseover = featureUnderMouse\n      ? getConf(model, 'mouseover', { feature: featureUnderMouse })\n      : undefined\n    return mouseover ? (\n      <MUITooltip title={mouseover} open placement=\"right\">\n        <div\n          style={{\n            position: 'absolute',\n            left: mouseCoord[0],\n            top: mouseCoord[1],\n          }}\n        >\n          {' '}\n        </div>\n      </MUITooltip>\n    ) : null\n  },\n)\n\ntype Coord = [number, number]\nconst BaseLinearDisplay = observer(\n  (props: { model: BaseLinearDisplayModel; children?: React.ReactNode }) => {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const [mouseCoord, setMouseCoord] = useState<Coord>([0, 0])\n    const [contextCoord, setContextCoord] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const { model, children } = props\n    const {\n      TooltipComponent,\n      DisplayMessageComponent,\n      contextMenuItems,\n      height,\n      setContextMenuFeature,\n    } = model\n\n    return (\n      <div\n        ref={ref}\n        data-testid={`display-${getConf(model, 'displayId')}`}\n        className={classes.display}\n        onContextMenu={event => {\n          event.preventDefault()\n          if (contextCoord) {\n            // There's already a context menu open, so close it\n            setContextCoord(undefined)\n          } else if (ref.current) {\n            setContextCoord([event.clientX, event.clientY])\n          }\n        }}\n        onMouseMove={event => {\n          if (ref.current) {\n            const rect = ref.current.getBoundingClientRect()\n            setMouseCoord([event.clientX - rect.left, event.clientY - rect.top])\n          }\n        }}\n        role=\"presentation\"\n      >\n        {DisplayMessageComponent ? (\n          <DisplayMessageComponent model={model} />\n        ) : (\n          <LinearBlocks {...props} />\n        )}\n        {children}\n        <TooltipComponent\n          model={model}\n          height={height}\n          mouseCoord={mouseCoord}\n        />\n\n        <Menu\n          open={Boolean(contextCoord) && Boolean(contextMenuItems.length)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setContextCoord(undefined)\n          }}\n          onClose={() => {\n            setContextCoord(undefined)\n            setContextMenuFeature(undefined)\n          }}\n          TransitionProps={{\n            onExit: () => {\n              setContextCoord(undefined)\n              setContextMenuFeature(undefined)\n            },\n          }}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={\n            contextCoord\n              ? { top: contextCoord[1], left: contextCoord[0] }\n              : undefined\n          }\n          style={{ zIndex: theme.zIndex.tooltip }}\n          menuItems={contextMenuItems}\n          data-testid=\"base_linear_display_context_menu\"\n        />\n      </div>\n    )\n  },\n)\n\nexport default BaseLinearDisplay\nexport { Tooltip }\n","import React, { useEffect, useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport Button from '@material-ui/core/Button'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\nconst useStyles = makeStyles(theme => ({\n  loading: {\n    paddingLeft: '0.6em',\n    backgroundColor: theme.palette.action.disabledBackground,\n    backgroundImage:\n      'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n    height: '100%',\n    width: '100%',\n    pointerEvents: 'none',\n    textAlign: 'center',\n  },\n  blockMessage: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    padding: theme.spacing(2),\n    pointerEvents: 'none',\n    textAlign: 'center',\n  },\n  blockError: {\n    padding: theme.spacing(2),\n    width: '100%',\n    whiteSpace: 'normal',\n    color: theme.palette.error.main,\n    overflowY: 'auto',\n  },\n  blockReactNodeMessage: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  dots: {\n    '&::after': {\n      display: 'inline-block',\n      animation: '$ellipsis 1.5s infinite',\n      content: '\".\"',\n      width: '1em',\n      textAlign: 'left',\n    },\n  },\n  '@keyframes ellipsis': {\n    '0%': {\n      content: '\".\"',\n    },\n    '33%': {\n      content: '\"..\"',\n    },\n    '66%': {\n      content: '\"...\"',\n    },\n  },\n}))\n\nfunction Repeater({ children }: { children: React.ReactNode }) {\n  return (\n    <div style={{ display: 'flex' }}>\n      {children}\n      {children}\n    </div>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LoadingMessage = observer(({ model }: { model: any }) => {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const classes = useStyles()\n  useEffect(() => {\n    let killed = false\n    const timeout = setTimeout(() => {\n      if (!killed) {\n        setShown(true)\n      }\n    }, 300)\n    return () => {\n      clearTimeout(timeout)\n      killed = true\n    }\n  }, [])\n\n  const { status: blockStatus } = model\n  const { message: displayStatus } = getParent(model, 2)\n  const status = displayStatus || blockStatus\n  return (\n    <>\n      {shown ? (\n        <div className={classes.loading}>\n          <Typography className={classes.dots} variant=\"body2\">\n            {status ? `${status}` : 'Loading'}\n          </Typography>\n        </div>\n      ) : null}\n    </>\n  )\n})\n\nfunction BlockMessage({\n  messageContent,\n}: {\n  messageContent: string | React.ReactNode\n}) {\n  const classes = useStyles()\n\n  return React.isValidElement(messageContent) ? (\n    <div className={classes.blockReactNodeMessage}>{messageContent}</div>\n  ) : (\n    <Typography variant=\"body2\" className={classes.blockMessage}>\n      {messageContent}\n    </Typography>\n  )\n}\n\nfunction BlockError({\n  error,\n  reload,\n  displayHeight,\n}: {\n  error: Error\n  reload: () => void\n  displayHeight: number\n}) {\n  const classes = useStyles()\n  return (\n    <div className={classes.blockError} style={{ height: displayHeight }}>\n      {reload ? (\n        <Button\n          data-testid=\"reload_button\"\n          onClick={reload}\n          startIcon={<RefreshIcon />}\n        >\n          Reload\n        </Button>\n      ) : null}\n      <Typography color=\"error\" variant=\"body2\" display=\"inline\">\n        {`${error}`}\n      </Typography>\n    </div>\n  )\n}\n\nconst ServerSideRenderedBlockContent = observer(\n  ({\n    model,\n  }: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    model: any\n  }) => {\n    if (model.error) {\n      return (\n        <Repeater>\n          <BlockError\n            error={model.error}\n            reload={model.reload}\n            displayHeight={getParentRenderProps(model).displayModel.height}\n          />\n        </Repeater>\n      )\n    }\n    if (model.message) {\n      return (\n        <Repeater>\n          <BlockMessage messageContent={model.message} />\n        </Repeater>\n      )\n    }\n    if (!model.filled) {\n      return (\n        <Repeater>\n          <LoadingMessage model={model} />\n        </Repeater>\n      )\n    }\n    return model.reactElement\n  },\n)\n\nexport default ServerSideRenderedBlockContent\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types, getParent, isAlive, cast, Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport { AbstractDisplayModel } from '@jbrowse/core/util/types'\nimport React from 'react'\n\nimport {\n  assembleLocString,\n  makeAbortableReaction,\n  getSession,\n  getContainingDisplay,\n} from '@jbrowse/core/util'\nimport {\n  getTrackAssemblyNames,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\n\nimport ServerSideRenderedBlockContent from '../components/ServerSideRenderedBlockContent'\n\n// the MST state of a single server-side-rendered block in a display\nconst blockState = types\n  .model('BlockState', {\n    key: types.string,\n    region: Region,\n    reloadFlag: 0,\n    isLeftEndOfDisplayedRegion: false,\n    isRightEndOfDisplayedRegion: false,\n  })\n  // NOTE: all this volatile stuff has to be filled in at once, so that it stays consistent\n  .volatile(() => ({\n    renderInProgress: undefined as AbortController | undefined,\n    filled: false,\n    reactElement: undefined as React.ReactElement | undefined,\n    features: undefined as Map<string, Feature> | undefined,\n    layout: undefined as any,\n    status: '',\n    error: undefined as Error | undefined,\n    message: undefined as string | undefined,\n    maxHeightReached: false,\n    ReactComponent: ServerSideRenderedBlockContent,\n    renderProps: undefined as any,\n  }))\n  .actions(self => {\n    let renderInProgress: undefined | AbortController\n    return {\n      doReload() {\n        self.reloadFlag = self.reloadFlag + 1\n      },\n      afterAttach() {\n        const display = getContainingDisplay(self)\n        makeAbortableReaction(\n          self as any,\n          renderBlockData,\n          renderBlockEffect as any, // reaction doesn't expect async here\n          {\n            name: `${display.id}/${assembleLocString(self.region)} rendering`,\n            delay: display.renderDelay,\n            fireImmediately: true,\n          },\n          this.setLoading,\n          this.setRendered,\n          this.setError,\n        )\n      },\n      setStatus(message: string) {\n        self.status = message\n      },\n      setLoading(abortController: AbortController) {\n        if (renderInProgress !== undefined) {\n          if (!renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n        }\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = abortController\n      },\n      setMessage(messageText: string) {\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        self.filled = false\n        self.message = messageText\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = undefined\n      },\n      setRendered(\n        props:\n          | {\n              reactElement: React.ReactElement\n              features: Map<string, Feature>\n              layout: any\n              maxHeightReached: boolean\n              renderProps: any\n            }\n          | undefined,\n      ) {\n        if (!props) {\n          return\n        }\n        const {\n          reactElement,\n          features,\n          layout,\n          maxHeightReached,\n          renderProps,\n        } = props\n        self.filled = true\n        self.message = undefined\n        self.reactElement = reactElement\n        self.features = features\n        self.layout = layout\n        self.error = undefined\n        self.maxHeightReached = maxHeightReached\n        self.renderProps = renderProps\n        renderInProgress = undefined\n      },\n      setError(error: Error) {\n        console.error(error)\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        // the rendering failed for some reason\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.maxHeightReached = false\n        self.error = error\n        self.renderProps = undefined\n        renderInProgress = undefined\n      },\n      reload() {\n        self.renderInProgress = undefined\n        self.filled = false\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.message = undefined\n        self.maxHeightReached = false\n        self.ReactComponent = ServerSideRenderedBlockContent\n        self.renderProps = undefined\n        getParent(self, 2).reload()\n      },\n      beforeDestroy() {\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        const display = getContainingDisplay(self)\n        const { rpcManager } = getSession(self)\n        const { rendererType } = display\n        const { renderArgs } = renderBlockData(cast(self))\n        // renderArgs can be undefined if an error occured in this block\n        if (renderArgs) {\n          rendererType\n            .freeResourcesInClient(\n              rpcManager,\n              JSON.parse(JSON.stringify(renderArgs)),\n            )\n            .catch((e: Error) => {\n              // just console.error if it's something while it's being destroyed\n              console.warn('Error while destroying block', e)\n            })\n        }\n      },\n    }\n  })\n\nexport default blockState\nexport type BlockStateModel = typeof blockState\nexport type BlockModel = Instance<BlockStateModel>\n\n// calls the render worker to render the block content not using a flow for\n// this, because the flow doesn't work with autorun\nexport function renderBlockData(\n  self: Instance<BlockStateModel>,\n  optDisplay?: AbstractDisplayModel,\n) {\n  try {\n    const display = optDisplay || (getContainingDisplay(self) as any)\n    const { assemblyManager, rpcManager } = getSession(display)\n    const {\n      adapterConfig,\n      renderProps,\n      rendererType,\n      error: displayError,\n      parentTrack,\n    } = display\n    const assemblyNames = getTrackAssemblyNames(parentTrack)\n    const regionAsm = self.region.assemblyName\n    if (\n      !assemblyNames.includes(regionAsm) &&\n      !assemblyNames.find(name => assemblyManager.get(name)?.hasName(regionAsm))\n    ) {\n      throw new Error(\n        `region assembly (${regionAsm}) does not match track assemblies (${assemblyNames})`,\n      )\n    }\n\n    const { config } = renderProps\n    // This line is to trigger the mobx reaction when the config changes\n    // It won't trigger the reaction if it doesn't think we're accessing it\n    readConfObject(config)\n\n    const sessionId = getRpcSessionId(display)\n    const cannotBeRenderedReason = display.regionCannotBeRendered(self.region)\n\n    return {\n      rendererType,\n      rpcManager,\n      renderProps,\n      cannotBeRenderedReason,\n      displayError,\n      renderArgs: {\n        statusCallback: (message: string) => {\n          if (isAlive(self)) {\n            self.setStatus(message)\n          }\n        },\n        assemblyName: self.region.assemblyName,\n        regions: [self.region],\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId,\n        blockKey: self.key,\n        reloadFlag: self.reloadFlag,\n        timeout: 1000000, // 10000,\n      },\n    }\n  } catch (e) {\n    return { displayError: e }\n  }\n}\n\ninterface RenderProps {\n  displayError: Error\n  rendererType: any\n  renderProps: { [key: string]: any }\n  rpcManager: { call: Function }\n  cannotBeRenderedReason: string\n  renderArgs: { [key: string]: any }\n}\n\ninterface ErrorProps {\n  displayError: string\n}\n\nasync function renderBlockEffect(\n  props: RenderProps | ErrorProps,\n  signal: AbortSignal,\n  self: Instance<BlockStateModel>,\n) {\n  const {\n    rendererType,\n    renderProps,\n    rpcManager,\n    renderArgs,\n    cannotBeRenderedReason,\n    displayError,\n  } = props as RenderProps\n  if (!isAlive(self)) {\n    return undefined\n  }\n\n  if (displayError) {\n    self.setError(displayError)\n    return undefined\n  }\n  if (cannotBeRenderedReason) {\n    self.setMessage(cannotBeRenderedReason)\n    return undefined\n  }\n\n  if (renderProps.notReady) {\n    return undefined\n  }\n\n  const {\n    reactElement,\n    features,\n    layout,\n    maxHeightReached,\n  } = await rendererType.renderInClient(rpcManager, {\n    ...renderArgs,\n    ...renderProps,\n    signal,\n  })\n  return {\n    reactElement,\n    features,\n    layout,\n    maxHeightReached,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any,react/no-danger */\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  getContainingView,\n  getSession,\n  isSelectionContainer,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { Region } from '@jbrowse/core/util/types'\nimport CompositeMap from '@jbrowse/core/util/compositeMap'\nimport { Feature, isFeature } from '@jbrowse/core/util/simpleFeature'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport { autorun } from 'mobx'\nimport { addDisposer, Instance, isAlive, types, getEnv } from 'mobx-state-tree'\nimport React from 'react'\nimport { Tooltip } from '../components/BaseLinearDisplay'\nimport BlockState, { renderBlockData } from './serverSideRenderedBlock'\n\nimport { LinearGenomeViewModel, ExportSvgOptions } from '../../LinearGenomeView'\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\ntype LayoutRecord = [number, number, number, number]\n\nconst minDisplayHeight = 20\nconst defaultDisplayHeight = 100\nexport const BaseLinearDisplay = types\n  .compose(\n    'BaseLinearDisplay',\n    BaseDisplay,\n    types.model({\n      height: types.optional(\n        types.refinement(\n          'displayHeight',\n          types.number,\n          n => n >= minDisplayHeight,\n        ),\n        defaultDisplayHeight,\n      ),\n      blockState: types.map(BlockState),\n      userBpPerPxLimit: types.maybe(types.number),\n    }),\n  )\n  .volatile(() => ({\n    message: '',\n    featureIdUnderMouse: undefined as undefined | string,\n    contextMenuFeature: undefined as undefined | Feature,\n    additionalContextMenuItemCallbacks: [] as Function[],\n    scrollTop: 0,\n  }))\n  .views(self => ({\n    get blockType(): 'staticBlocks' | 'dynamicBlocks' {\n      return 'staticBlocks'\n    },\n    get blockDefinitions() {\n      const { blockType } = this\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (!view.initialized) {\n        throw new Error('view not initialized yet')\n      }\n      return view[blockType]\n    },\n  }))\n  .views(self => ({\n    /**\n     * set limit to config amount, or user amount if they force load,\n     */\n    get maxViewBpPerPx() {\n      return self.userBpPerPxLimit || getConf(self, 'maxDisplayedBpPerPx')\n    },\n\n    /**\n     * how many milliseconds to wait for the display to\n     * \"settle\" before re-rendering a block\n     */\n    get renderDelay() {\n      return 50\n    },\n\n    get TooltipComponent(): React.FC<any> {\n      return (Tooltip as unknown) as React.FC\n    },\n\n    /**\n     * returns a string feature ID if the globally-selected object\n     * is probably a feature\n     */\n    get selectedFeatureId() {\n      if (isAlive(self)) {\n        const session = getSession(self)\n        const { selection } = session\n        // does it quack like a feature?\n        if (isFeature(selection)) {\n          return selection.id()\n        }\n      }\n      return undefined\n    },\n    /**\n     * if a display-level message should be displayed instead of the blocks,\n     * make this return a react component\n     */\n    get DisplayMessageComponent() {\n      return undefined as undefined | React.FC<any>\n    },\n  }))\n  .views(self => {\n    return {\n      /**\n       * a CompositeMap of `featureId -> feature obj` that\n       * just looks in all the block data for that feature\n       */\n      get features() {\n        const featureMaps = []\n        for (const block of self.blockState.values()) {\n          if (block && block.features) {\n            featureMaps.push(block.features)\n          }\n        }\n        return new CompositeMap<string, Feature>(featureMaps)\n      },\n\n      get featureUnderMouse() {\n        return self.featureIdUnderMouse\n          ? this.features.get(self.featureIdUnderMouse)\n          : undefined\n      },\n\n      getFeatureOverlapping(blockKey: string, x: number, y: number) {\n        return self.blockState.get(blockKey)?.layout?.getByCoord(x, y)\n      },\n\n      getFeatureByID(id: string): [number, number, number, number] | undefined {\n        let ret\n        self.blockState.forEach(block => {\n          const val = block?.layout?.getByID(id)\n          if (val) {\n            ret = val\n          }\n        })\n        return ret\n      },\n    }\n  })\n  .actions(self => ({\n    afterAttach() {\n      // watch the parent's blocks to update our block state when they change\n      const blockWatchDisposer = autorun(() => {\n        // create any blocks that we need to create\n        const blocksPresent: { [key: string]: boolean } = {}\n        const view = getContainingView(self) as LinearGenomeViewModel\n        if (view.initialized) {\n          self.blockDefinitions.contentBlocks.forEach(block => {\n            blocksPresent[block.key] = true\n            if (!self.blockState.has(block.key)) {\n              this.addBlock(block.key, block)\n            }\n          })\n          // delete any blocks we need go delete\n          self.blockState.forEach((_, key) => {\n            if (!blocksPresent[key]) {\n              this.deleteBlock(key)\n            }\n          })\n        }\n      })\n\n      addDisposer(self, blockWatchDisposer)\n    },\n    setHeight(displayHeight: number) {\n      if (displayHeight > minDisplayHeight) {\n        self.height = displayHeight\n      } else {\n        self.height = minDisplayHeight\n      }\n      return self.height\n    },\n    resizeHeight(distance: number) {\n      const oldHeight = self.height\n      const newHeight = this.setHeight(self.height + distance)\n      return newHeight - oldHeight\n    },\n    setScrollTop(scrollTop: number) {\n      self.scrollTop = scrollTop\n    },\n    // sets the new bpPerPxLimit if user chooses to force load\n    setUserBpPerPxLimit(limit: number) {\n      self.userBpPerPxLimit = limit\n    },\n    // base display reload does nothing, see specialized displays for details\n    setMessage(message: string) {\n      self.message = message\n    },\n    addBlock(key: string, block: BaseBlock) {\n      self.blockState.set(\n        key,\n        BlockState.create({\n          key,\n          region: block.toRegion(),\n        }),\n      )\n    },\n    deleteBlock(key: string) {\n      self.blockState.delete(key)\n    },\n    selectFeature(feature: Feature) {\n      const session = getSession(self)\n      if (isSessionModelWithWidgets(session)) {\n        const featureWidget = session.addWidget(\n          'BaseFeatureWidget',\n          'baseFeature',\n          { featureData: feature.toJSON(), view: getContainingView(self) },\n        )\n        session.showWidget(featureWidget)\n      }\n      if (isSelectionContainer(session)) {\n        session.setSelection(feature)\n      }\n    },\n    clearFeatureSelection() {\n      const session = getSession(self)\n      session.clearSelection()\n    },\n    setFeatureIdUnderMouse(feature: string | undefined) {\n      self.featureIdUnderMouse = feature\n    },\n    reload() {\n      ;[...self.blockState.values()].map(val => val.doReload())\n    },\n    addAdditionalContextMenuItemCallback(callback: Function) {\n      self.additionalContextMenuItemCallbacks.push(callback)\n    },\n    setContextMenuFeature(feature?: Feature) {\n      self.contextMenuFeature = feature\n    },\n  }))\n  .views(self => ({\n    regionCannotBeRenderedText(_region: Region) {\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (view && view.bpPerPx > self.maxViewBpPerPx) {\n        return 'Zoom in to see features'\n      }\n      return ''\n    },\n\n    /**\n     * @param region -\n     * @returns falsy if the region is fine to try rendering. Otherwise,\n     *  return a react node + string of text.\n     *  string of text describes why it cannot be rendered\n     *  react node allows user to force load at current setting\n     */\n    regionCannotBeRendered(_region: Region) {\n      const view = getContainingView(self) as LinearGenomeViewModel\n      if (view && view.bpPerPx > self.maxViewBpPerPx) {\n        return (\n          <>\n            <Typography component=\"span\" variant=\"body2\">\n              Zoom in to see features or{' '}\n            </Typography>\n            <Button\n              data-testid=\"reload_button\"\n              onClick={() => {\n                self.setUserBpPerPxLimit(view.bpPerPx)\n                self.reload()\n              }}\n              variant=\"outlined\"\n            >\n              Force Load\n            </Button>\n            <Typography component=\"span\" variant=\"body2\">\n              (force load may be slow)\n            </Typography>\n          </>\n        )\n      }\n      return undefined\n    },\n\n    get trackMenuItems(): MenuItem[] {\n      return []\n    },\n    // distinct set of display items that are particular to this display type.\n    // for base, there are none\n    //\n    // note: this attribute is helpful when composing together multiple\n    // subdisplays so that you don't repeat the \"about this track\" from each\n    // child display\n    get composedTrackMenuItems(): MenuItem[] {\n      return []\n    },\n    get contextMenuItems() {\n      const { pluginManager } = getEnv(self)\n      const contextMenuItems = self.contextMenuFeature\n        ? [\n            {\n              label: 'Open feature details',\n              icon: MenuOpenIcon,\n              onClick: () => {\n                if (self.contextMenuFeature) {\n                  self.selectFeature(self.contextMenuFeature)\n                }\n              },\n            },\n          ]\n        : []\n\n      self.additionalContextMenuItemCallbacks.forEach(callback => {\n        const menuItems = callback(self.contextMenuFeature, self, pluginManager)\n        contextMenuItems.push(...menuItems)\n      })\n      return contextMenuItems\n    },\n    get composedRenderProps() {\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n        onFeatureClick(_: unknown, featureId: string | undefined) {\n          const f = featureId || self.featureIdUnderMouse\n          if (!f) {\n            self.clearFeatureSelection()\n          } else {\n            const feature = self.features.get(f)\n            self.selectFeature(feature as Feature)\n          }\n        },\n        onClick() {\n          self.clearFeatureSelection()\n        },\n        // similar to click but opens a menu with further options\n        onFeatureContextMenu(_: unknown, featureId: string | undefined) {\n          const f = featureId || self.featureIdUnderMouse\n          if (!f) {\n            self.clearFeatureSelection()\n          } else {\n            // feature id under mouse passed to context menu\n            self.setContextMenuFeature(self.features.get(f))\n          }\n        },\n\n        onMouseMove(_: unknown, featureId: string | undefined) {\n          self.setFeatureIdUnderMouse(featureId)\n        },\n\n        onMouseLeave(_: unknown) {\n          self.setFeatureIdUnderMouse(undefined)\n        },\n\n        onContextMenu() {\n          self.setContextMenuFeature(undefined)\n          self.clearFeatureSelection()\n        },\n      }\n    },\n    get renderProps() {\n      return this.composedRenderProps\n    },\n  }))\n  .actions(self => ({\n    async renderSvg(opts: ExportSvgOptions & { overrideHeight: number }) {\n      const { height, id } = self\n      const { overrideHeight } = opts\n      const view = getContainingView(self) as LinearGenomeViewModel\n      const {\n        offsetPx: viewOffsetPx,\n        roundedDynamicBlocks: dynamicBlocks,\n        width,\n      } = view\n\n      const renderings = await Promise.all(\n        dynamicBlocks.map(block => {\n          const blockState = BlockState.create({\n            key: block.key,\n            region: block,\n          })\n\n          // regionCannotBeRendered can return jsx so look for plaintext\n          // version, or just get the default if none available\n          const cannotBeRenderedReason =\n            self.regionCannotBeRenderedText(block) ||\n            self.regionCannotBeRendered(block)\n\n          if (cannotBeRenderedReason) {\n            return {\n              reactElement: (\n                <>\n                  <rect x={0} y={0} width={width} height={20} fill=\"#aaa\" />\n                  <text x={0} y={15}>\n                    {cannotBeRenderedReason}\n                  </text>\n                </>\n              ),\n            }\n          }\n\n          const {\n            rpcManager,\n            renderArgs,\n            renderProps,\n            rendererType,\n          } = renderBlockData(blockState, self)\n\n          return rendererType.renderInClient(rpcManager, {\n            ...renderArgs,\n            ...renderProps,\n            exportSVG: opts,\n          })\n        }),\n      )\n\n      return (\n        <>\n          {renderings.map((rendering, index) => {\n            const { offsetPx } = dynamicBlocks[index]\n            const offset = offsetPx - viewOffsetPx\n            // stabalize clipid under test for snapshot\n            const clipid = `clip-${\n              typeof jest === 'undefined' ? id : 'jest'\n            }-${index}`\n            return (\n              <React.Fragment key={`frag-${index}`}>\n                <defs>\n                  <clipPath id={clipid}>\n                    <rect\n                      x={0}\n                      y={0}\n                      width={width}\n                      height={overrideHeight || height}\n                    />\n                  </clipPath>\n                </defs>\n                <g transform={`translate(${offset} 0)`}>\n                  <g clipPath={`url(#${clipid})`}>\n                    {React.isValidElement(rendering.reactElement) ? (\n                      rendering.reactElement\n                    ) : (\n                      <g dangerouslySetInnerHTML={{ __html: rendering.html }} />\n                    )}\n                  </g>\n                </g>\n              </React.Fragment>\n            )\n          })}\n        </>\n      )\n    },\n  }))\n  .postProcessSnapshot(self => {\n    const { blockState, ...rest } = self\n    return rest\n  })\n\nexport type BaseLinearDisplayStateModel = typeof BaseLinearDisplay\nexport type BaseLinearDisplayModel = Instance<BaseLinearDisplayStateModel>\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBareDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearBareDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => ({\n      get renderProps() {\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          config: self.configuration.renderer,\n        }\n      },\n\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n}\n","import { lazy } from 'react'\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport { types, getEnv, Instance } from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\n\nconst stateModelFactory = (configSchema: AnyConfigurationSchemaType) =>\n  types\n    .compose(\n      'LinearBasicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearBasicDisplay'),\n        trackShowLabels: types.maybe(types.boolean),\n        trackDisplayMode: types.maybe(types.string),\n        trackMaxHeight: types.maybe(types.number),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n\n      get showLabels() {\n        const showLabels = getConf(self, ['renderer', 'showLabels'])\n        return self.trackShowLabels !== undefined\n          ? self.trackShowLabels\n          : showLabels\n      },\n\n      get maxHeight() {\n        const maxHeight = getConf(self, ['renderer', 'maxHeight'])\n        return self.trackMaxHeight !== undefined\n          ? self.trackMaxHeight\n          : maxHeight\n      },\n\n      get displayMode() {\n        const displayMode = getConf(self, ['renderer', 'displayMode'])\n        return self.trackDisplayMode !== undefined\n          ? self.trackDisplayMode\n          : displayMode\n      },\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            showLabels: this.showLabels,\n            displayMode: this.displayMode,\n            maxHeight: this.maxHeight,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n\n    .actions(self => ({\n      toggleShowLabels() {\n        self.trackShowLabels = !self.showLabels\n      },\n      setDisplayMode(val: string) {\n        self.trackDisplayMode = val\n      },\n      setMaxHeight(val: number) {\n        self.trackMaxHeight = val\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get renderProps() {\n          const config = self.rendererConfig\n\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            config,\n          }\n        },\n        get trackMenuItems(): MenuItem[] {\n          const displayModes = [\n            'compact',\n            'reducedRepresentation',\n            'normal',\n            'collapse',\n          ]\n          return [\n            ...trackMenuItems,\n            {\n              label: 'Show labels',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showLabels,\n              onClick: () => {\n                self.toggleShowLabels()\n              },\n            },\n            {\n              label: 'Display mode',\n              icon: VisibilityIcon,\n              subMenu: displayModes.map(val => ({\n                label: val,\n                onClick: () => {\n                  self.setDisplayMode(val)\n                },\n              })),\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMaxHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n          ]\n        },\n      }\n    })\n\nexport type FeatureTrackStateModel = ReturnType<typeof stateModelFactory>\nexport type FeatureTrackModel = Instance<FeatureTrackStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nexport default function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBasicDisplay',\n    {\n      mouseover: {\n        type: 'string',\n        description: 'what to display in a given mouseover',\n        defaultValue: `jexl:get(feature,'name')`,\n\n        contextVariable: ['feature'],\n      },\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n      // overrides base\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 1000,\n      },\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport LineStyleIcon from '@material-ui/icons/LineStyle'\nimport {\n  BaseLinearDisplay,\n  BaseLinearDisplayComponent,\n  baseLinearDisplayConfigSchema,\n  BlockModel,\n} from './BaseLinearDisplay'\nimport {\n  configSchemaFactory as linearBareDisplayConfigSchemaFactory,\n  stateModelFactory as LinearBareDisplayStateModelFactory,\n} from './LinearBareDisplay'\nimport {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n  stateModelFactory as linearGenomeViewStateModelFactory,\n  renderToSvg,\n} from './LinearGenomeView'\n\nimport {\n  configSchema as linearBasicDisplayConfigSchemaFactory,\n  modelFactory as linearBasicDisplayModelFactory,\n} from './LinearBasicDisplay'\n\nexport default class LinearGenomeViewPlugin extends Plugin {\n  name = 'LinearGenomeViewPlugin'\n\n  exports = {\n    BaseLinearDisplayComponent,\n    BaseLinearDisplay,\n    baseLinearDisplayConfigSchema,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'FeatureTrack',\n        {},\n        {\n          baseConfiguration: createBaseTrackConfig(pluginManager),\n          explicitIdentifier: 'trackId',\n        },\n      )\n      return new TrackType({\n        name: 'FeatureTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'FeatureTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'BasicTrack',\n        {},\n        {\n          baseConfiguration: createBaseTrackConfig(pluginManager),\n          explicitIdentifier: 'trackId',\n        },\n      )\n      return new TrackType({\n        name: 'BasicTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'BasicTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearBareDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearBareDisplay',\n        configSchema,\n        stateModel: LinearBareDisplayStateModelFactory(configSchema),\n        trackType: 'BasicTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearBasicDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearBasicDisplay',\n        configSchema,\n        stateModel: linearBasicDisplayModelFactory(configSchema),\n        trackType: 'FeatureTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n\n    pluginManager.addViewType(\n      () =>\n        new ViewType({\n          name: 'LinearGenomeView',\n          stateModel: linearGenomeViewStateModelFactory(pluginManager),\n          ReactComponent: lazy(\n            () => import('./LinearGenomeView/components/LinearGenomeView'),\n          ),\n        }),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Linear genome view',\n        icon: LineStyleIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearGenomeView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  BaseLinearDisplayComponent,\n  BaseLinearDisplay,\n  baseLinearDisplayConfigSchema,\n  linearBareDisplayConfigSchemaFactory,\n  linearBasicDisplayConfigSchemaFactory,\n  linearBasicDisplayModelFactory,\n  renderToSvg,\n}\n\nexport type { LinearGenomeViewModel, LinearGenomeViewStateModel, BlockModel }\n\nexport type { BaseLinearDisplayModel } from './BaseLinearDisplay'\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBareDisplay',\n    { renderer: pluginManager.pluggableConfigSchemaType('renderer') },\n    {\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","/**\n * Abstract feature object\n */\nexport interface Feature {\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(name: string): any\n\n  /**\n   * Set an item of data.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  set(name: string, val: any): void\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  tags(): string[]\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  id(): string\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  parent(): Feature | undefined\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  children(): Feature[] | undefined\n\n  /*\n   * Convert to JSON\n   */\n  toJSON(): SimpleFeatureSerialized\n}\n\nexport function isFeature(thing: unknown): thing is Feature {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    typeof (thing as Feature).get === 'function' &&\n    typeof (thing as Feature).id === 'function'\n  )\n}\n\nexport interface SimpleFeatureArgs {\n  /** key-value data, must include 'start' and 'end' */\n  data: {}\n  /** optional parent feature */\n  parent?: Feature\n  /** unique identifier. can also be in data.uniqueId */\n  id: string | number // thing that can be stringified easily\n}\n\n// subfeatures do not have to have uniqueId\ninterface SimpleFeatureSerializedNoId {\n  [key: string]: unknown\n  parentId?: string\n  subfeatures?: SimpleFeatureSerializedNoId[]\n}\n\n// base serialized feature has to have a uniqueId\nexport interface SimpleFeatureSerialized extends SimpleFeatureSerializedNoId {\n  subfeatures?: SimpleFeatureSerializedNoId[]\n  uniqueId: string\n}\n\nfunction isSimpleFeatureSerialized(\n  args: SimpleFeatureSerialized | SimpleFeatureArgs,\n): args is SimpleFeatureSerialized {\n  return 'uniqueId' in args && typeof args.data !== 'object'\n}\n\n/**\n * Simple implementation of a feature object.\n */\nexport default class SimpleFeature implements Feature {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private data: Record<string, any>\n\n  private subfeatures?: SimpleFeature[]\n\n  private parentHandle?: Feature\n\n  private uniqueId: string\n\n  /**\n   * @param args - SimpleFeature args\n   *\n   * Note: args.data.subfeatures can be an array of these same args,\n   * which will be inflated to more instances of this class.\n   */\n  public constructor(args: SimpleFeatureArgs | SimpleFeatureSerialized) {\n    if (isSimpleFeatureSerialized(args)) {\n      this.data = args\n    } else {\n      this.data = args.data || {}\n      // load handle from args.parent (not args.data.parent)\n      // this reason is because if args is an object, it likely isn't properly loaded with\n      // parent as a Feature reference (probably a raw parent ID or something instead)\n      this.parentHandle = args.parent\n    }\n\n    // the feature id comes from\n    // args.id, args.data.uniqueId, or args.uniqueId due to this initialization\n    const id = isSimpleFeatureSerialized(args) ? args.uniqueId : args.id\n    if (id === undefined || id === null) {\n      throw new Error(\n        'SimpleFeature requires a unique `id` or `data.uniqueId` attribute',\n      )\n    }\n    this.uniqueId = String(id)\n\n    if (!(this.data.aliases || this.data.end - this.data.start >= 0)) {\n      throw new Error(\n        `invalid feature data, end less than start. end: ${this.data.end} start: ${this.data.start}`,\n      )\n    }\n\n    if (this.data.subfeatures) {\n      this.subfeatures = this.data.subfeatures?.map(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (f: any, i: number) =>\n          typeof f.get !== 'function'\n            ? new SimpleFeature({\n                id: f.uniqueId || `${id}-${i}`,\n                data: {\n                  strand: this.data.strand,\n                  ...f,\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                } as Record<string, any>,\n                parent: this,\n              })\n            : f,\n      )\n    }\n  }\n\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public get(name: string): any {\n    return name === 'subfeatures' ? this.subfeatures : this.data[name]\n  }\n\n  /**\n   * Set an item of data.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public set(name: string, val: any): void {\n    this.data[name] = val\n  }\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  public tags(): string[] {\n    return Object.keys(this.data)\n  }\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  public id(): string {\n    return this.uniqueId\n  }\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  public parent(): Feature | undefined {\n    return this.parentHandle\n  }\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  public children(): Feature[] | undefined {\n    return this.get('subfeatures')\n  }\n\n  public toJSON(): SimpleFeatureSerialized {\n    const d = { ...this.data, uniqueId: this.id() } as SimpleFeatureSerialized\n    const p = this.parent()\n    if (p) {\n      d.parentId = p.id()\n    }\n    const c = this.children()\n    if (c) {\n      d.subfeatures = c.map(child => child.toJSON())\n    }\n    return d\n  }\n\n  public static fromJSON(json: SimpleFeatureSerialized) {\n    return new SimpleFeature({ ...json })\n  }\n}\n","import { Observable, Observer } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\nimport { observeAbortSignal } from '.'\n\n/**\n * Wrapper for rxjs Observable.create with improved error handling and\n * aborting support\n * @param func - observer function, could be async\n */\nexport function ObservableCreate<T>(\n  func: (arg: Observer<T>) => void | Promise<void>,\n  signal?: AbortSignal,\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    try {\n      const ret = func(observer)\n      // catch async errors\n      if (ret && ret.catch) {\n        ret.catch((error: Error) => observer.error(error))\n      }\n    } catch (error) {\n      // catch sync errors\n      observer.error(error)\n    }\n  }).pipe(takeUntil(observeAbortSignal(signal)))\n}\n","import { ConfigurationSchema } from '../../configuration'\n\nexport default ConfigurationSchema(\n  'BaseConnection',\n  {\n    name: {\n      type: 'string',\n      defaultValue: 'nameOfConnection',\n      description: 'a unique name for this connection',\n    },\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'optional list of names of assemblies in this connection',\n    },\n  },\n  { explicitlyTyped: true, explicitIdentifier: 'connectionId' },\n)\n","import { types } from 'mobx-state-tree'\n\nexport default pluginManager => {\n  return types\n    .model('Connection', {\n      name: types.identifier,\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n    })\n    .actions(self => ({\n      afterAttach() {\n        if (!self.tracks.length) {\n          self.connect(self.configuration)\n        }\n      },\n      addTrackConf(trackConf) {\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      addTrackConfs(trackConfs) {\n        const length = self.tracks.push(...trackConfs)\n        return self.tracks.slice(length - 1 - trackConfs.length, length - 1)\n      },\n      setTrackConfs(trackConfs) {\n        self.tracks = trackConfs\n        return self.tracks\n      },\n      clear() {},\n    }))\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { getParent, Instance, types, isRoot, getEnv } from 'mobx-state-tree'\nimport React from 'react'\nimport { getConf } from '../../configuration'\nimport { MenuItem } from '../../ui'\nimport { getParentRenderProps } from '../../util/tracks'\nimport { ElementId } from '../../util/types/mst'\n\nexport const BaseDisplay = types\n  .model('BaseDisplay', {\n    id: ElementId,\n    type: types.string,\n    rpcDriverName: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    rendererTypeName: '',\n    error: undefined as Error | undefined,\n  }))\n  .views(self => ({\n    get RenderingComponent(): React.FC<{\n      model: typeof self\n      onHorizontalScroll?: Function\n      blockState?: Record<string, any>\n    }> {\n      const { pluginManager } = getEnv(self)\n      const displayType = pluginManager.getDisplayType(self.type)\n      return displayType.ReactComponent as React.FC<{\n        model: typeof self\n        onHorizontalScroll?: Function\n        blockState?: Record<string, any>\n      }>\n    },\n\n    get DisplayBlurb(): React.FC<{ model: typeof self }> | null {\n      return null\n    },\n\n    get adapterConfig() {\n      return getConf(this.parentTrack, 'adapter')\n    },\n\n    get parentTrack() {\n      let track = getParent(self)\n      while (!(track.configuration && getConf(track, 'trackId'))) {\n        if (isRoot(track)) {\n          throw new Error(`No parent track found for ${self.type} ${self.id}`)\n        }\n        track = getParent(track)\n      }\n      return track\n    },\n\n    /**\n     * the react props that are passed to the Renderer when data\n     * is rendered in this display\n     */\n    get renderProps() {\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n      }\n    },\n\n    /**\n     * the pluggable element type object for this display's\n     * renderer\n     */\n    get rendererType() {\n      const { pluginManager } = getEnv(self)\n      const RendererType = pluginManager.getRendererType(self.rendererTypeName)\n      if (!RendererType) {\n        throw new Error(`renderer \"${self.rendererTypeName}\" not found`)\n      }\n      if (!RendererType.ReactComponent) {\n        throw new Error(\n          `renderer ${self.rendererTypeName} has no ReactComponent, it may not be completely implemented yet`,\n        )\n      }\n      return RendererType\n    },\n\n    /**\n     * if a display-level message should be displayed instead,\n     * make this return a react component\n     */\n    get DisplayMessageComponent() {\n      return undefined as undefined | React.FC<any>\n    },\n\n    get trackMenuItems(): MenuItem[] {\n      return []\n    },\n\n    get viewMenuActions(): MenuItem[] {\n      return []\n    },\n    /**\n     * @param region -\n     * @returns falsy if the region is fine to try rendering. Otherwise,\n     *  return a react node + string of text.\n     *  string of text describes why it cannot be rendered\n     *  react node allows user to force load at current setting\n     */\n    regionCannotBeRendered(/* region */) {\n      return undefined\n    },\n  }))\n  .actions(self => ({\n    setError(error?: Error) {\n      self.error = error\n    },\n    setRpcDriverName(rpcDriverName: string) {\n      self.rpcDriverName = rpcDriverName\n    },\n    // base display reload does nothing, see specialized displays for details\n    reload() {},\n  }))\n\nexport type BaseDisplayStateModel = typeof BaseDisplay\nexport type BaseDisplayModel = Instance<BaseDisplayStateModel>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { transaction } from 'mobx'\nimport {\n  getRoot,\n  Instance,\n  resolveIdentifier,\n  types,\n  getEnv,\n} from 'mobx-state-tree'\nimport { getConf } from '../../configuration'\nimport {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '../../configuration/configurationSchema'\nimport PluginManager from '../../PluginManager'\nimport { MenuItem } from '../../ui'\nimport { getContainingView, getSession } from '../../util'\nimport { isSessionModelWithConfigEditing } from '../../util/types'\nimport { ElementId } from '../../util/types/mst'\n\n// these MST models only exist for tracks that are *shown*.\n// they should contain only UI state for the track, and have\n// a reference to a track configuration (stored under\n// session.configuration.assemblies.get(assemblyName).tracks).\n\n// note that multiple displayed tracks could use the same configuration.\nexport function createBaseTrackModel(\n  pluginManager: PluginManager,\n  trackType: string,\n  baseTrackConfig: AnyConfigurationSchemaType,\n) {\n  return types\n    .model(trackType, {\n      id: ElementId,\n      type: types.literal(trackType),\n      configuration: ConfigurationReference(baseTrackConfig),\n      displays: types.array(\n        pluginManager.pluggableMstType('display', 'stateModel'),\n      ),\n    })\n    .views(self => ({\n      get rpcSessionId() {\n        return self.configuration.trackId\n      },\n\n      get name() {\n        return getConf(self, 'name')\n      },\n\n      get textSearchAdapter() {\n        return getConf(self, 'textSearchAdapter')\n      },\n\n      /**\n       * the PluggableElementType for the currently defined adapter\n       */\n      get adapterType() {\n        const adapterConfig = getConf(self, 'adapter')\n        const { pluginManager: pm } = getEnv(self)\n        if (!adapterConfig) {\n          throw new Error(`no adapter configuration provided for ${self.type}`)\n        }\n        const adapterType = pm.getAdapterType(adapterConfig.type)\n        if (!adapterType) {\n          throw new Error(`unknown adapter type ${adapterConfig.type}`)\n        }\n        return adapterType\n      },\n\n      get viewMenuActions(): MenuItem[] {\n        const menuItems: MenuItem[] = []\n        self.displays.forEach(display => {\n          menuItems.push(...display.viewMenuActions)\n        })\n        return menuItems\n      },\n      get canConfigure() {\n        const session = getSession(self)\n        return (\n          isSessionModelWithConfigEditing(session) &&\n          // @ts-ignore\n          (session.adminMode ||\n            // @ts-ignore\n            session.sessionTracks.find(track => {\n              return track.trackId === self.configuration.trackId\n            }))\n        )\n      },\n      // distinct set of track items that are particular to this track type.\n      // for base, there are none\n      //\n      // note: this attribute is helpful when composing together multiple\n      // subtracks\n      get composedTrackMenuItems(): MenuItem[] {\n        return []\n      },\n    }))\n    .actions(self => ({\n      activateConfigurationUI() {\n        const session = getSession(self)\n        const view = getContainingView(self)\n        if (isSessionModelWithConfigEditing(session)) {\n          // @ts-ignore\n          const trackConf = session.editTrackConfiguration(self.configuration)\n          if (trackConf && trackConf !== self.configuration) {\n            // @ts-ignore\n            view.hideTrack(self.configuration)\n            // @ts-ignore\n            view.showTrack(trackConf)\n          }\n        }\n      },\n      showDisplay(displayId: string, initialSnapshot = {}) {\n        const displayTypeConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'display',\n        )\n        const configuration = resolveIdentifier(\n          displayTypeConfigSchema,\n          getRoot(self),\n          displayId,\n        )\n        const displayType = pluginManager.getDisplayType(configuration.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${configuration.type}`)\n        }\n        const display = displayType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.displays.push(display)\n      },\n\n      hideDisplay(displayId: string) {\n        const displayTypeConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'display',\n        )\n        const configuration = resolveIdentifier(\n          displayTypeConfigSchema,\n          getRoot(self),\n          displayId,\n        )\n        // if we have any displays with that configuration, turn them off\n        const shownDisplays = self.displays.filter(\n          d => d.configuration === configuration,\n        )\n        transaction(() => shownDisplays.forEach(d => self.displays.remove(d)))\n        return shownDisplays.length\n      },\n      replaceDisplay(\n        oldDisplayId: string,\n        newDisplayId: string,\n        initialSnapshot = {},\n      ) {\n        const displayIdx = self.displays.findIndex(\n          d => d.configuration.displayId === oldDisplayId,\n        )\n        if (displayIdx === -1) {\n          throw new Error(\n            `could not find display id ${oldDisplayId} to replace`,\n          )\n        }\n        const displayTypeConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'display',\n        )\n        const configuration = resolveIdentifier(\n          displayTypeConfigSchema,\n          getRoot(self),\n          newDisplayId,\n        )\n        const displayType = pluginManager.getDisplayType(configuration.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${configuration.type}`)\n        }\n        self.displays.splice(displayIdx, 1, {\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n      },\n    }))\n    .views(self => ({\n      get trackMenuItems(): MenuItem[] {\n        const menuItems: MenuItem[] = []\n        self.displays.forEach(display => {\n          menuItems.push(...display.trackMenuItems)\n        })\n        const displayChoices: MenuItem[] = []\n        const view = getContainingView(self)\n        const viewType = pluginManager.getViewType(view.type)\n        const compatibleDisplayTypes = viewType.displayTypes.map(\n          displayType => displayType.name,\n        )\n        const compatibleDisplays = self.configuration.displays.filter(\n          (displayConf: any) =>\n            compatibleDisplayTypes.includes(displayConf.type),\n        )\n        const shownId = self.displays[0].configuration.displayId\n        if (compatibleDisplays.length > 1) {\n          displayChoices.push(\n            { type: 'divider' },\n            { type: 'subHeader', label: 'Display types' },\n          )\n          compatibleDisplays.forEach((displayConf: any) => {\n            displayChoices.push({\n              type: 'radio',\n              label: `${displayConf.type}`,\n              onClick: () => {\n                self.replaceDisplay(shownId, displayConf.displayId)\n              },\n              checked: displayConf.displayId === shownId,\n            })\n          })\n        }\n        return [...menuItems, ...displayChoices]\n      },\n    }))\n}\n\nexport type BaseTrackStateModel = ReturnType<typeof createBaseTrackModel>\nexport type BaseTrackModel = Instance<BaseTrackStateModel>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types, Instance } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../../configuration'\nimport PluginManager from '../../PluginManager'\n\nexport function createBaseTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'BaseTrack',\n    {\n      name: {\n        description: 'descriptive name of the track',\n        type: 'string',\n        defaultValue: 'Track',\n      },\n      assemblyNames: {\n        description: 'name of the assembly (or assemblies) track belongs to',\n        type: 'stringArray',\n        defaultValue: ['assemblyName'],\n      },\n      description: {\n        description: 'a description of the track',\n        type: 'string',\n        defaultValue: '',\n      },\n      category: {\n        description: 'the category and sub-categories of a track',\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n      textSearchIndexingAttributes: {\n        type: 'stringArray',\n        description:\n          'list of which feature attributes to index for text searching',\n        defaultValue: ['Name', 'ID', 'Description'],\n      },\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      textSearchAdapter: pluginManager.pluggableConfigSchemaType(\n        'text search adapter',\n      ),\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n      // see corresponding entry in circular-view ChordTrack\n      // no config slot editor exists for this at the time being\n      // configRelationships: {\n      //   type: 'configRelationships',\n      //   model: types.array(\n      //     types.model('Relationship', {\n      //       type: types.string,\n      //       target: types.maybe(types.reference(base)),\n      //     }),\n      //   ),\n      //   defaultValue: [],\n      // },\n    },\n    {\n      preProcessSnapshot: s => {\n        const snap = JSON.parse(JSON.stringify(s))\n        const displayTypes = new Set()\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          displays.forEach((d: any) => d && displayTypes.add(d.type))\n          const trackType = pluginManager.getTrackType(snap.type)\n          trackType.displayTypes.forEach(displayType => {\n            if (!displayTypes.has(displayType.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${displayType.name}`,\n                type: displayType.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n      actions: (self: any) => ({\n        addDisplayConf(displayConf: { type: string; displayId: string }) {\n          const { type } = displayConf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            (d: any) => d && d.displayId === displayConf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(displayConf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n\nexport type BaseTrackConfigModel = ReturnType<typeof createBaseTrackConfig>\nexport type BaseTrackConfig = Instance<BaseTrackConfigModel>\n","/* eslint-disable no-restricted-globals */\nimport url from 'url'\nimport domLoadScript from 'load-script2'\n\nimport { PluginConstructor } from './Plugin'\nimport { ConfigurationSchema } from './configuration'\n\nimport ReExports from './ReExports'\n\nexport const PluginSourceConfigurationSchema = ConfigurationSchema(\n  'PluginSource',\n  {\n    name: {\n      type: 'string',\n      defaultValue: '',\n    },\n    url: {\n      type: 'string',\n      defaultValue: '',\n    },\n  },\n)\n\nexport interface PluginDefinition {\n  name?: string\n  url: string\n}\n\nexport interface PluginRecord {\n  plugin: PluginConstructor\n  definition: PluginDefinition\n}\n\nexport default class PluginLoader {\n  definitions: PluginDefinition[] = []\n\n  constructor(pluginDefinitions: PluginDefinition[] = []) {\n    this.definitions = JSON.parse(JSON.stringify(pluginDefinitions))\n  }\n\n  loadScript(scriptUrl: string): Promise<void> {\n    if (document && document.getElementsByTagName) {\n      return domLoadScript(scriptUrl)\n    }\n    // @ts-ignore\n    if (self && self.importScripts) {\n      return new Promise((resolve, reject) => {\n        try {\n          // @ts-ignore\n          self.importScripts(scriptUrl)\n        } catch (error) {\n          reject(error || new Error(`failed to load ${scriptUrl}`))\n          return\n        }\n        resolve()\n      })\n    }\n    throw new Error(\n      'cannot figure out how to load external JS scripts in this environment',\n    )\n  }\n\n  async loadPlugin(definition: PluginDefinition): Promise<PluginConstructor> {\n    const parsedUrl = url.parse(definition.url)\n    if (\n      !parsedUrl.protocol ||\n      parsedUrl.protocol === 'http:' ||\n      parsedUrl.protocol === 'https:'\n    ) {\n      await this.loadScript(definition.url)\n      const moduleName = definition.name\n      const umdName = `JBrowsePlugin${moduleName}`\n      // Based on window-or-global\n      // https://github.com/purposeindustries/window-or-global/blob/322abc71de0010c9e5d9d0729df40959e1ef8775/lib/index.js\n      const scope =\n        (typeof self === 'object' && self.self === self && self) ||\n        (typeof global === 'object' && global.global === global && global) ||\n        this\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const plugin = (scope as any)[umdName] as { default: PluginConstructor }\n      if (!plugin) {\n        throw new Error(\n          `plugin ${moduleName} failed to load, ${scope.constructor.name}.${umdName} is undefined`,\n        )\n      }\n\n      return plugin.default\n    }\n    throw new Error(\n      `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n    )\n  }\n\n  installGlobalReExports(target: WindowOrWorkerGlobalScope | NodeJS.Global) {\n    // @ts-ignore\n    target.JBrowseExports = {}\n    Object.entries(ReExports).forEach(([moduleName, module]) => {\n      // @ts-ignore\n      target.JBrowseExports[moduleName] = module\n    })\n  }\n\n  async load(): Promise<PluginRecord[]> {\n    return Promise.all(\n      this.definitions.map(async definition => ({\n        plugin: await this.loadPlugin(definition),\n        definition,\n      })),\n    )\n  }\n}\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { reduce, filter, toArray } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\nimport { getTagAlt } from '../util'\nimport {\n  parseCigar,\n  getNextRefPos,\n  getModificationPositions,\n  Mismatch,\n} from '../BamAdapter/MismatchParser'\n\ninterface SNPCoverageOptions extends BaseOptions {\n  filters?: SerializableFilterChain\n}\n\nfunction mismatchLen(mismatch: Mismatch) {\n  return !isInterbase(mismatch.type) ? mismatch.length : 1\n}\n\nfunction isInterbase(type: string) {\n  return type === 'softclip' || type === 'hardclip' || type === 'insertion'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction inc(bin: any, strand: number, type: string, field: string) {\n  if (!bin[type][field]) {\n    bin[type][field] = { total: 0, strands: { '-1': 0, '0': 0, '1': 0 } }\n  }\n  bin[type][field].total++\n  bin[type][field].strands[strand]++\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dec(bin: any, strand: number, type: string, field: string) {\n  if (!bin[type][field]) {\n    bin[type][field] = { total: 0, strands: { '-1': 0, '0': 0, '1': 0 } }\n  }\n  bin[type][field].total--\n  bin[type][field].strands[strand]--\n}\n\nexport default class SNPCoverageAdapter extends BaseFeatureDataAdapter {\n  protected async configure() {\n    const subadapterConfig = readConfObject(this.config, 'subadapter')\n    const sequenceConf = readConfObject(this.config, [\n      'subadapter',\n      'sequenceAdapter',\n    ])\n    const dataAdapter = await this.getSubAdapter?.(subadapterConfig)\n\n    const sequenceAdapter = sequenceConf\n      ? await this.getSubAdapter?.(sequenceConf)\n      : undefined\n\n    if (!dataAdapter) {\n      throw new Error('Failed to get subadapter')\n    }\n\n    return {\n      subadapter: dataAdapter.dataAdapter as BaseFeatureDataAdapter,\n      sequenceAdapter: sequenceAdapter?.dataAdapter as\n        | BaseFeatureDataAdapter\n        | undefined,\n    }\n  }\n\n  getFeatures(region: Region, opts: SNPCoverageOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { subadapter } = await this.configure()\n      let stream = subadapter.getFeatures(region, opts)\n\n      if (opts.filters) {\n        const { filters } = opts\n        stream = stream.pipe(filter(f => filters.passes(f, opts)))\n      }\n\n      const bins = await this.generateCoverageBins(stream, region, opts)\n\n      bins.forEach((bin, index) => {\n        if (bin.total) {\n          observer.next(\n            new SimpleFeature({\n              id: `${this.id}-${region.start}-${index}`,\n              data: {\n                score: bin.total,\n                snpinfo: bin,\n                start: region.start + index,\n                end: region.start + index + 1,\n                refName: region.refName,\n              },\n            }),\n          )\n        }\n      })\n\n      observer.complete()\n    }, opts.signal)\n  }\n\n  async getRefNames(opts: BaseOptions = {}) {\n    const { subadapter } = await this.configure()\n    return subadapter.getRefNames(opts)\n  }\n\n  freeResources(/* { region } */): void {}\n\n  /**\n   * Generates coverage bins from features which details\n   * the reference, mismatches, strands, and coverage info\n   * @param features - Features of region to be passed in\n   * @param region - Region\n   * @param bpPerPx - base pairs per pixel\n   * @returns Array of nested frequency tables\n   */\n  async generateCoverageBins(\n    features: Observable<Feature>,\n    region: Region,\n    opts: { bpPerPx?: number; colorBy?: { type: string; tag?: string } },\n  ) {\n    const { colorBy } = opts\n    const { sequenceAdapter } = await this.configure()\n    const { refName, start, end } = region\n    const binMax = Math.ceil(region.end - region.start)\n\n    // bins contain cov feature if they contribute to coverage, or noncov which\n    // are interbase or other features that don't contribute to coverage.\n    // delskips are elements that don't contribute to coverage, but should be\n    // reported also (and are not interbase)\n    type BinType = { total: number; strands: { [key: string]: number } }\n    const initBins = Array.from({ length: binMax }, () => ({\n      total: 0,\n      lowqual: {} as BinType,\n      cov: {} as BinType,\n      delskips: {} as BinType,\n      noncov: {} as BinType,\n      ref: {} as BinType,\n    }))\n\n    // request an extra +1 on the end to get CpG crossing region boundary\n    let regionSeq: string | undefined\n\n    if (sequenceAdapter) {\n      const [feat] = await sequenceAdapter\n        .getFeatures({ refName, start, end: end + 1, assemblyName: 'na' })\n        .pipe(toArray())\n        .toPromise()\n      regionSeq = feat?.get('seq')\n    }\n\n    return features\n      .pipe(\n        reduce((bins, feature) => {\n          const cigar = feature.get('CIGAR')\n          const fstart = feature.get('start')\n          const fend = feature.get('end')\n          const fstrand = feature.get('strand')\n          const cigarOps = parseCigar(cigar)\n\n          for (let j = fstart; j < fend; j++) {\n            const i = j - region.start\n            if (i >= 0 && i < bins.length) {\n              const bin = bins[i]\n              bin.total++\n              inc(bin, fstrand, 'ref', 'ref')\n            }\n          }\n\n          if (colorBy?.type === 'modifications') {\n            const seq = feature.get('seq')\n            const mm = getTagAlt(feature, 'MM', 'Mm') || ''\n\n            const ml =\n              (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n\n            const probabilities = ml\n              ? (typeof ml === 'string' ? ml.split(',').map(e => +e) : ml).map(\n                  e => e / 255,\n                )\n              : (getTagAlt(feature, 'MP', 'Mp') as string)\n                  .split('')\n                  .map(s => s.charCodeAt(0) - 33)\n                  .map(elt => Math.min(1, elt / 50))\n\n            let probIndex = 0\n            getModificationPositions(mm, seq, fstrand).forEach(\n              ({ type, positions }) => {\n                const mod = `mod_${type}`\n                for (const pos of getNextRefPos(cigarOps, positions)) {\n                  const epos = pos + fstart - region.start\n                  if (epos >= 0 && epos < bins.length && pos + fstart < fend) {\n                    const bin = bins[epos]\n                    if (probabilities[probIndex] > 0.5) {\n                      inc(bin, fstrand, 'cov', mod)\n                    } else {\n                      inc(bin, fstrand, 'lowqual', mod)\n                    }\n                  }\n                  probIndex++\n                }\n              },\n            )\n          }\n\n          // methylation based coloring takes into account both reference\n          // sequence CpG detection and reads\n          else if (colorBy?.type === 'methylation') {\n            if (!regionSeq) {\n              throw new Error(\n                'no region sequence detected, need sequenceAdapter configuration',\n              )\n            }\n            const seq = feature.get('seq')\n            const mm = getTagAlt(feature, 'MM', 'Mm') || ''\n            const methBins = new Array(region.end - region.start).fill(0)\n\n            getModificationPositions(mm, seq, fstrand).forEach(\n              ({ type, positions }) => {\n                // we are processing methylation\n                if (type === 'm') {\n                  for (const pos of getNextRefPos(cigarOps, positions)) {\n                    const epos = pos + fstart - region.start\n                    if (epos >= 0 && epos < methBins.length) {\n                      methBins[epos] = 1\n                    }\n                  }\n                }\n              },\n            )\n\n            for (let j = fstart; j < fend; j++) {\n              const i = j - region.start\n              if (i >= 0 && i < bins.length - 1) {\n                const l1 = regionSeq[i].toLowerCase()\n                const l2 = regionSeq[i + 1].toLowerCase()\n                const bin = bins[i]\n                const bin1 = bins[i + 1]\n\n                // color\n                if (l1 === 'c' && l2 === 'g') {\n                  if (methBins[i] || methBins[i + 1]) {\n                    inc(bin, fstrand, 'cov', 'meth')\n                    inc(bin1, fstrand, 'cov', 'meth')\n                    dec(bin, fstrand, 'ref', 'ref')\n                    dec(bin1, fstrand, 'ref', 'ref')\n                  } else {\n                    inc(bin, fstrand, 'cov', 'unmeth')\n                    inc(bin1, fstrand, 'cov', 'unmeth')\n                    dec(bin, fstrand, 'ref', 'ref')\n                    dec(bin1, fstrand, 'ref', 'ref')\n                  }\n                }\n              }\n            }\n          }\n\n          // normal SNP based coloring\n          else {\n            const mismatches = feature.get('mismatches')\n            for (let i = 0; i < mismatches?.length; i++) {\n              const mismatch = mismatches[i] as Mismatch\n              const mstart = fstart + mismatch.start\n              for (let j = mstart; j < mstart + mismatchLen(mismatch); j++) {\n                const epos = j - region.start\n                if (epos >= 0 && epos < bins.length) {\n                  const bin = bins[epos]\n                  const { base, type } = mismatch\n                  const interbase = isInterbase(type)\n                  if (!interbase) {\n                    dec(bin, fstrand, 'ref', 'ref')\n                  } else {\n                    inc(bin, fstrand, 'noncov', type)\n                  }\n\n                  if (type === 'deletion' || type === 'skip') {\n                    inc(bin, fstrand, 'delskips', type)\n                    bin.total--\n                  } else if (!interbase) {\n                    inc(bin, fstrand, 'cov', base)\n                  }\n                }\n              }\n            }\n          }\n\n          return bins\n        }, initBins),\n      )\n      .toPromise()\n  }\n}\n\nconst { capabilities } = SNPCoverageAdapter\nexport { capabilities }\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"755b57b40b029263b59b.worker.js\");\n};","/* eslint curly:error */\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\nimport { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport default class AdapterType extends PluggableElementBase {\n  AdapterClass?: AnyAdapter\n\n  getAdapterClass?: () => Promise<AnyAdapter>\n\n  configSchema: AnyConfigurationSchemaType\n\n  adapterCapabilities: string[]\n\n  constructor(\n    stuff: {\n      name: string\n      configSchema: AnyConfigurationSchemaType\n      adapterCapabilities?: string[]\n    } & (\n      | { AdapterClass: AnyAdapter }\n      | { getAdapterClass: () => Promise<AnyAdapter> }\n    ),\n  ) {\n    super(stuff)\n    if ('AdapterClass' in stuff) {\n      this.AdapterClass = stuff.AdapterClass\n    } else if ('getAdapterClass' in stuff) {\n      this.getAdapterClass = stuff.getAdapterClass\n    } else {\n      throw new Error(\n        `no AdapterClass or getAdapterClass is defined for adapter type ${this.name}`,\n      )\n    }\n    this.configSchema = stuff.configSchema\n    this.adapterCapabilities = stuff.adapterCapabilities || []\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyReactComponentType } from '../util'\nimport { getDefaultValue } from '../util/mst-reflection'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\n\nexport default class DisplayType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  ReactComponent: AnyReactComponentType\n\n  trackType: string\n\n  viewType: string\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    trackType: string\n    viewType: string\n    configSchema: AnyConfigurationSchemaType\n    ReactComponent: AnyReactComponentType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    this.ReactComponent = stuff.ReactComponent\n    this.trackType = stuff.trackType\n    this.viewType = stuff.viewType\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for display ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema provided for display ${this.name}`)\n    }\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent provided for display ${this.name}`)\n    }\n    if (!this.trackType) {\n      throw new Error(`no trackType provided for display ${this.name}`)\n    }\n    if (!this.viewType) {\n      throw new Error(`no viewType provided for display ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      const name = this.configSchema ? this.configSchema.name : 'UNKNOWN'\n      throw new Error(`${name} is not explicitlyTyped`)\n    }\n  }\n}\n","export default abstract class PluggableElementBase {\n  [key: string]: unknown\n\n  name = ''\n\n  constructor({ name }: { name: string }) {\n    this.name = name\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { getDefaultValue } from '../util/mst-reflection'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\nimport DisplayType from './DisplayType'\n\nexport default class TrackType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  displayTypes: DisplayType[] = []\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for track ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema provided for track ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      const name = this.configSchema ? this.configSchema.name : 'UNKNOWN'\n      throw new Error(`${name} is not explicitlyTyped`)\n    }\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import { ComponentType, LazyExoticComponent } from 'react'\nimport { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\n\nexport default class WidgetType extends PluggableElementBase {\n  heading?: string\n\n  configSchema: AnyConfigurationSchemaType\n\n  HeadingComponent?: ComponentType<{ model: IAnyStateTreeNode }>\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ReactComponent: LazyExoticComponent<React.FC<any>> | React.FC<any>\n\n  stateModel: IAnyModelType\n\n  constructor(stuff: {\n    name: string\n    heading?: string\n    HeadingComponent?: ComponentType<{ model: IAnyStateTreeNode }>\n    configSchema: AnyConfigurationSchemaType\n    stateModel: IAnyModelType\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ReactComponent: LazyExoticComponent<React.FC<any>> | React.FC<any>\n  }) {\n    super(stuff)\n    this.heading = stuff.heading\n    this.HeadingComponent = stuff.HeadingComponent\n    this.configSchema = stuff.configSchema\n    this.stateModel = stuff.stateModel\n    this.ReactComponent = stuff.ReactComponent\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for widget ${this.name}`)\n    }\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for widget ${this.name}`)\n    }\n  }\n}\n","import SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport React from 'react'\n\n// Icons below come from https://material.io/resources/icons/?icon=line_style&style=baseline\nexport function ContentCopy(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentCut(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentPaste(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,20H5V4H7V7H17V4H19M12,2A1,1 0 0,1 13,3A1,1 0 0,1 12,4A1,1 0 0,1 11,3A1,1 0 0,1 12,2M19,2H14.82C14.4,0.84 13.3,0 12,0C10.7,0 9.6,0.84 9.18,2H5A2,2 0 0,0 3,4V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V4A2,2 0 0,0 19,2Z\" />\n    </SvgIcon>\n  )\n}\n\n//  format-list-checkbox from https://materialdesignicons.com/\nexport function TrackSelector(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21 19v-2H8v2h13m0-6v-2H8v2h13M8 7h13V5H8v2M4 5v2h2V5H4M3 5a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V5m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2z\" />\n    </SvgIcon>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Divider,\n  Grow,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MenuProps as MUIMenuProps,\n  MenuItem,\n  MenuItemProps,\n  MenuList,\n  Paper,\n  Popover,\n  PopoverProps,\n  SvgIconProps,\n  makeStyles,\n} from '@material-ui/core'\n// icons\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n// other\nimport { findLastIndex } from '../util'\n\nconst useStyles = makeStyles({\n  paper: {\n    position: 'fixed',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    top: 0,\n    left: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n  },\n  menuItemEndDecoration: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)',\n    padding: 2,\n    marginRight: -12,\n    display: 'inline-flex',\n  },\n})\n\ninterface MenuItemEndDecorationSubMenuProps {\n  type: 'subMenu'\n}\n\ninterface MenuItemEndDecorationSelectorProps {\n  type: 'checkbox' | 'radio'\n  checked: boolean\n  disabled?: boolean\n}\n\ntype MenuItemEndDecorationProps =\n  | MenuItemEndDecorationSubMenuProps\n  | MenuItemEndDecorationSelectorProps\n\nfunction MenuItemEndDecoration(props: MenuItemEndDecorationProps) {\n  const classes = useStyles()\n  const { type } = props\n  let checked\n  let disabled\n  if ('checked' in props) {\n    ;({ checked, disabled } = props)\n  }\n  let icon\n  if (type === 'subMenu') {\n    icon = <ArrowRightIcon color=\"action\" />\n  } else if (type === 'checkbox') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <CheckBoxIcon color={color} />\n    } else {\n      icon = <CheckBoxOutlineBlankIcon color=\"action\" />\n    }\n  } else if (type === 'radio') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <RadioButtonCheckedIcon color={color} />\n    } else {\n      icon = <RadioButtonUncheckedIcon color=\"action\" />\n    }\n  }\n  return <div className={classes.menuItemEndDecoration}>{icon}</div>\n}\n\nexport interface MenuDivider {\n  priority?: number\n  type: 'divider'\n}\n\nexport interface MenuSubHeader {\n  type: 'subHeader'\n  priority?: number\n  label: string\n}\n\nexport interface BaseMenuItem {\n  label: string\n  priority?: number\n  subLabel?: string\n  icon?: React.ComponentType<SvgIconProps>\n  disabled?: boolean\n}\n\nexport interface NormalMenuItem extends BaseMenuItem {\n  type?: 'normal'\n  onClick: Function\n}\n\nexport interface CheckboxMenuItem extends BaseMenuItem {\n  type: 'checkbox'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface RadioMenuItem extends BaseMenuItem {\n  type: 'radio'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface SubMenuItem extends BaseMenuItem {\n  type?: 'subMenu'\n  subMenu: MenuItem[]\n}\n\nexport type MenuItem =\n  | MenuDivider\n  | MenuSubHeader\n  | NormalMenuItem\n  | CheckboxMenuItem\n  | RadioMenuItem\n  | SubMenuItem\n\ntype AnchorElProp = MUIMenuProps['anchorEl']\ntype OpenProp = MUIMenuProps['open']\ntype OnCloseProp = MUIMenuProps['onClose']\n\ninterface MenuPageProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n  anchorEl?: AnchorElProp\n  open: OpenProp\n  onClose: OnCloseProp\n  top?: boolean\n}\n\ntype MenuItemStyleProp = MenuItemProps['style']\n\nfunction findNextValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  const idx = menuItems\n    .slice(currentIdx + 1)\n    .findIndex(\n      menuItem =>\n        menuItem.type !== 'divider' &&\n        menuItem.type !== 'subHeader' &&\n        !menuItem.disabled,\n    )\n  if (idx === -1) {\n    return idx\n  }\n  return currentIdx + 1 + idx\n}\n\nfunction findPreviousValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  return findLastIndex(\n    menuItems.slice(0, currentIdx),\n    menuItem =>\n      menuItem.type !== 'divider' &&\n      menuItem.type !== 'subHeader' &&\n      !menuItem.disabled,\n  )\n}\n\nconst MenuPage = React.forwardRef((props: MenuPageProps, ref) => {\n  const [subMenuAnchorEl, setSubMenuAnchorEl] = useState<HTMLElement>()\n  const [openSubMenuIdx, setOpenSubMenuIdx] = useState<number>()\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n  const [selectedMenuItemIdx, setSelectedMenuItemIdx] = useState<number>()\n  const [position, setPosition] = useState<{\n    top?: number\n    left?: number\n  }>()\n  const paperRef = useRef<HTMLDivElement>()\n  const classes = useStyles()\n\n  const {\n    menuItems,\n    onMenuItemClick,\n    open,\n    onClose,\n    anchorEl,\n    top = false,\n  } = props\n\n  useEffect(() => {\n    if (!open) {\n      setSubMenuAnchorEl(undefined)\n      setOpenSubMenuIdx(undefined)\n    }\n  }, [open])\n\n  useEffect(() => {\n    const shouldSubMenuBeOpen = open && Boolean(subMenuAnchorEl)\n    let timer: NodeJS.Timeout\n    if (shouldSubMenuBeOpen && !isSubMenuOpen) {\n      timer = setTimeout(() => {\n        setIsSubMenuOpen(true)\n      }, 300)\n    } else if (!shouldSubMenuBeOpen && isSubMenuOpen) {\n      timer = setTimeout(() => {\n        setIsSubMenuOpen(false)\n      }, 300)\n    }\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [isSubMenuOpen, open, subMenuAnchorEl])\n\n  useEffect(() => {\n    if (anchorEl) {\n      const rect = (anchorEl as HTMLElement).getBoundingClientRect()\n      if (position) {\n        if (\n          rect.top !== position.top ||\n          rect.left + rect.width !== position.left\n        ) {\n          setPosition({ top: rect.top, left: rect.left + rect.width })\n        }\n      } else {\n        setPosition({ top: rect.top, left: rect.left + rect.width })\n      }\n    } else if (!position) {\n      setPosition({})\n    }\n  }, [position, anchorEl])\n\n  const hasEndDecoration = menuItems.some(\n    menuItem =>\n      'subMenu' in menuItem ||\n      menuItem.type === 'checkbox' ||\n      menuItem.type === 'radio',\n  )\n  const hasIcon = menuItems.some(\n    menuItem => 'icon' in menuItem && menuItem.icon,\n  )\n  const menuItemStyle: MenuItemStyleProp = {}\n  if (hasEndDecoration) {\n    menuItemStyle.paddingRight = 48\n  }\n\n  function handleClick(callback: Function) {\n    return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n      onMenuItemClick(event, callback)\n    }\n  }\n\n  const ListContents = (\n    <>\n      <MenuList autoFocusItem={open && !isSubMenuOpen}>\n        {menuItems\n          .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n          .map((menuItem, idx) => {\n            if (menuItem.type === 'divider') {\n              return <Divider key={`divider-${idx}`} component=\"li\" />\n            }\n            if (menuItem.type === 'subHeader') {\n              return (\n                <ListSubheader key={`subHeader-${menuItem.label}-${idx}`}>\n                  {menuItem.label}\n                </ListSubheader>\n              )\n            }\n            let icon = null\n            let endDecoration = null\n            if (menuItem.icon) {\n              const Icon = menuItem.icon\n              icon = (\n                <ListItemIcon>\n                  <Icon />\n                </ListItemIcon>\n              )\n            }\n            if ('subMenu' in menuItem) {\n              endDecoration = <MenuItemEndDecoration type=\"subMenu\" />\n            } else if (\n              menuItem.type === 'checkbox' ||\n              menuItem.type === 'radio'\n            ) {\n              endDecoration = (\n                <MenuItemEndDecoration\n                  type={menuItem.type}\n                  checked={menuItem.checked}\n                  disabled={menuItem.disabled}\n                />\n              )\n            }\n            const onClick =\n              'onClick' in menuItem ? handleClick(menuItem.onClick) : undefined\n            return (\n              <MenuItem\n                key={menuItem.label}\n                style={menuItemStyle}\n                selected={idx === selectedMenuItemIdx}\n                onClick={onClick}\n                onMouseMove={e => {\n                  if (e.currentTarget !== document.activeElement) {\n                    e.currentTarget.focus()\n                    setSelectedMenuItemIdx(idx)\n                  }\n                  if ('subMenu' in menuItem) {\n                    if (openSubMenuIdx !== idx) {\n                      setSubMenuAnchorEl(e.currentTarget)\n                      setOpenSubMenuIdx(idx)\n                    }\n                  } else {\n                    setSubMenuAnchorEl(undefined)\n                    setOpenSubMenuIdx(undefined)\n                  }\n                }}\n                onKeyDown={e => {\n                  if (e.key === 'ArrowLeft' || e.key === 'Escape') {\n                    onClose && onClose(e, 'escapeKeyDown')\n                  } else if (e.key === 'ArrowUp') {\n                    setSelectedMenuItemIdx(findPreviousValidIdx(menuItems, idx))\n                  } else if (e.key === 'ArrowDown') {\n                    const a = findNextValidIdx(menuItems, idx)\n                    setSelectedMenuItemIdx(a)\n                  } else if ('subMenu' in menuItem) {\n                    if (e.key === 'ArrowRight' || e.key === 'Enter') {\n                      setSubMenuAnchorEl(e.currentTarget)\n                      setOpenSubMenuIdx(idx)\n                      setIsSubMenuOpen(true)\n                    }\n                  }\n                }}\n                disabled={Boolean(menuItem.disabled)}\n              >\n                {icon}\n                <ListItemText\n                  primary={menuItem.label}\n                  secondary={menuItem.subLabel}\n                  inset={hasIcon && !menuItem.icon}\n                />\n                {endDecoration}\n              </MenuItem>\n            )\n          })}\n      </MenuList>\n      {menuItems.map((menuItem, idx) => {\n        let subMenu = null\n        if ('subMenu' in menuItem) {\n          subMenu = (\n            <MenuPage\n              key={menuItem.label}\n              anchorEl={subMenuAnchorEl}\n              open={isSubMenuOpen && openSubMenuIdx === idx}\n              onClose={() => {\n                setIsSubMenuOpen(false)\n                setSubMenuAnchorEl(undefined)\n              }}\n              onMenuItemClick={onMenuItemClick}\n              menuItems={menuItem.subMenu}\n            />\n          )\n        }\n        return subMenu\n      })}\n    </>\n  )\n\n  if (top) {\n    return ListContents\n  }\n\n  return (\n    <Grow in={open} style={{ transformOrigin: `0 0 0` }} ref={ref}>\n      <Paper\n        elevation={8}\n        ref={paperRef}\n        className={classes.paper}\n        style={{ ...position }}\n      >\n        {ListContents}\n      </Paper>\n    </Grow>\n  )\n})\n\ninterface MenuProps extends PopoverProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n}\n\nfunction Menu(props: MenuProps) {\n  const { open, onClose, menuItems, onMenuItemClick, ...other } = props\n\n  return (\n    <Popover\n      transitionDuration={0}\n      open={open}\n      onClose={onClose}\n      BackdropProps={{ invisible: true }}\n      {...other}\n    >\n      <MenuPage\n        open={open}\n        onClose={onClose}\n        menuItems={menuItems}\n        onMenuItemClick={onMenuItemClick}\n        top\n      />\n    </Popover>\n  )\n}\n\nexport default Menu\n","import { revcom } from '@jbrowse/core/util'\nexport interface Mismatch {\n  qual?: number\n  start: number\n  length: number\n  type: string\n  base: string\n  altbase?: string\n  seq?: string\n  cliplen?: number\n}\n\nexport function parseCigar(cigar: string) {\n  return (cigar || '').split(/([MIDNSHPX=])/)\n}\nexport function cigarToMismatches(\n  ops: string[],\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  let currOffset = 0\n  let seqOffset = 0\n  const mismatches: Mismatch[] = []\n  for (let i = 0; i < ops.length - 1; i += 2) {\n    const len = +ops[i]\n    const op = ops[i + 1]\n    if (op === 'M' || op === '=' || op === 'E') {\n      seqOffset += len\n    }\n    if (op === 'I') {\n      mismatches.push({\n        start: currOffset,\n        type: 'insertion',\n        base: `${len}`,\n        length: 0,\n      })\n      seqOffset += len\n    } else if (op === 'D') {\n      mismatches.push({\n        start: currOffset,\n        type: 'deletion',\n        base: '*',\n        length: len,\n      })\n    } else if (op === 'N') {\n      mismatches.push({\n        start: currOffset,\n        type: 'skip',\n        base: 'N',\n        length: len,\n      })\n    } else if (op === 'X') {\n      const r = seq.slice(seqOffset, seqOffset + len)\n      const q = qual?.slice(seqOffset, seqOffset + len) || []\n\n      for (let j = 0; j < len; j++) {\n        mismatches.push({\n          start: currOffset + j,\n          type: 'mismatch',\n          base: r[j],\n          qual: q[j],\n          length: 1,\n        })\n      }\n      seqOffset += len\n    } else if (op === 'H') {\n      mismatches.push({\n        start: currOffset,\n        type: 'hardclip',\n        base: `H${len}`,\n        cliplen: len,\n        length: 1,\n      })\n    } else if (op === 'S') {\n      mismatches.push({\n        start: currOffset,\n        type: 'softclip',\n        base: `S${len}`,\n        cliplen: len,\n        length: 1,\n      })\n      seqOffset += len\n    }\n\n    if (op !== 'I' && op !== 'S' && op !== 'H') {\n      currOffset += len\n    }\n  }\n  return mismatches\n}\n\n/**\n * parse a SAM MD tag to find mismatching bases of the template versus the reference\n * @returns array of mismatches and their positions\n */\nexport function mdToMismatches(\n  mdstring: string,\n  cigarOps: string[],\n  cigarMismatches: Mismatch[],\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  const mismatchRecords: Mismatch[] = []\n  let curr: Mismatch = { start: 0, base: '', length: 0, type: 'mismatch' }\n  const skips = cigarMismatches.filter(cigar => cigar.type === 'skip')\n  let lastCigar = 0\n  let lastTemplateOffset = 0\n  let lastRefOffset = 0\n  let lastSkipPos = 0\n\n  // convert a position on the reference sequence to a position\n  // on the template sequence, taking into account hard and soft\n  // clipping of reads\n\n  function nextRecord(): void {\n    mismatchRecords.push(curr)\n\n    // get a new mismatch record ready\n    curr = {\n      start: curr.start + curr.length,\n      length: 0,\n      base: '',\n      type: 'mismatch',\n    }\n  }\n\n  function getTemplateCoordLocal(refCoord: number): number {\n    let templateOffset = lastTemplateOffset\n    let refOffset = lastRefOffset\n    for (\n      let i = lastCigar;\n      i < cigarOps.length && refOffset <= refCoord;\n      i += 2, lastCigar = i\n    ) {\n      const len = +cigarOps[i]\n      const op = cigarOps[i + 1]\n      if (op === 'S' || op === 'I') {\n        templateOffset += len\n      } else if (op === 'D' || op === 'P' || op === 'N') {\n        refOffset += len\n      } else if (op !== 'H') {\n        templateOffset += len\n        refOffset += len\n      }\n    }\n    lastTemplateOffset = templateOffset\n    lastRefOffset = refOffset\n\n    return templateOffset - (refOffset - refCoord)\n  }\n\n  // now actually parse the MD string\n  const md = mdstring.match(/(\\d+|\\^[a-z]+|[a-z])/gi) || []\n  for (let i = 0; i < md.length; i++) {\n    const token = md[i]\n    if (token.match(/^\\d/)) {\n      curr.start += parseInt(token, 10)\n    } else if (token.match(/^\\^/)) {\n      curr.length = token.length - 1\n      curr.base = '*'\n      curr.type = 'deletion'\n      curr.seq = token.substring(1)\n      nextRecord()\n    } else if (token.match(/^[a-z]/i)) {\n      // mismatch\n      for (let j = 0; j < token.length; j += 1) {\n        curr.length = 1\n\n        while (lastSkipPos < skips.length) {\n          const mismatch = skips[lastSkipPos]\n          if (curr.start >= mismatch.start) {\n            curr.start += mismatch.length\n            lastSkipPos++\n          } else {\n            break\n          }\n        }\n        const s = cigarOps ? getTemplateCoordLocal(curr.start) : curr.start\n        curr.base = seq ? seq.substr(s, 1) : 'X'\n        const qualScore = qual?.slice(s, s + 1)[0]\n        if (qualScore) {\n          curr.qual = qualScore\n        }\n        curr.altbase = token\n        nextRecord()\n      }\n    }\n  }\n  return mismatchRecords\n}\n\nexport function getTemplateCoord(refCoord: number, cigarOps: string[]): number {\n  let templateOffset = 0\n  let refOffset = 0\n  for (let i = 0; i < cigarOps.length && refOffset <= refCoord; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'S' || op === 'I') {\n      templateOffset += len\n    } else if (op === 'D' || op === 'P') {\n      refOffset += len\n    } else if (op !== 'H') {\n      templateOffset += len\n      refOffset += len\n    }\n  }\n  return templateOffset - (refOffset - refCoord)\n}\n\nexport function getMismatches(\n  cigarString: string,\n  mdString: string,\n  seq: string,\n  qual?: Buffer,\n): Mismatch[] {\n  let mismatches: Mismatch[] = []\n  let cigarOps: string[] = []\n\n  // parse the CIGAR tag if it has one\n  if (cigarString) {\n    cigarOps = parseCigar(cigarString)\n    mismatches = mismatches.concat(cigarToMismatches(cigarOps, seq, qual))\n  }\n\n  // now let's look for CRAM or MD mismatches\n  if (mdString) {\n    mismatches = mismatches.concat(\n      mdToMismatches(mdString, cigarOps, mismatches, seq, qual),\n    )\n  }\n\n  // uniqify the mismatches\n  const seen: { [index: string]: boolean } = {}\n  return mismatches.filter(m => {\n    const key = `${m.type},${m.start},${m.length}`\n    const s = seen[key]\n    seen[key] = true\n    return !s\n  })\n}\n\n// adapted from minimap2 code static void write_MD_core function\nexport function generateMD(target: string, query: string, cigar: string) {\n  let queryOffset = 0\n  let targetOffset = 0\n  let lengthMD = 0\n  if (!target) {\n    console.warn('no ref supplied to generateMD')\n    return ''\n  }\n  const cigarOps = parseCigar(cigar)\n  let str = ''\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'M' || op === 'X' || op === '=') {\n      for (let j = 0; j < len; j++) {\n        if (\n          query[queryOffset + j].toLowerCase() !==\n          target[targetOffset + j].toLowerCase()\n        ) {\n          str += `${lengthMD}${target[targetOffset + j].toUpperCase()}`\n          lengthMD = 0\n        } else {\n          lengthMD++\n        }\n      }\n      queryOffset += len\n      targetOffset += len\n    } else if (op === 'I') {\n      queryOffset += len\n    } else if (op === 'D') {\n      let tmp = ''\n      for (let j = 0; j < len; j++) {\n        tmp += target[targetOffset + j].toUpperCase()\n      }\n      str += `${lengthMD}^${tmp}`\n      lengthMD = 0\n      targetOffset += len\n    } else if (op === 'N') {\n      targetOffset += len\n    } else if (op === 'S') {\n      queryOffset += len\n    }\n  }\n  if (lengthMD > 0) {\n    str += lengthMD\n  }\n  return str\n}\n\n// get relative reference sequence positions for positions given relative to\n// the read sequence\nexport function* getNextRefPos(cigarOps: string[], positions: number[]) {\n  let cigarIdx = 0\n  let readPos = 0\n  let refPos = 0\n\n  for (let i = 0; i < positions.length; i++) {\n    const pos = positions[i]\n    for (; cigarIdx < cigarOps.length && readPos < pos; cigarIdx += 2) {\n      const len = +cigarOps[cigarIdx]\n      const op = cigarOps[cigarIdx + 1]\n      if (op === 'S' || op === 'I') {\n        readPos += len\n      } else if (op === 'D' || op === 'N') {\n        refPos += len\n      } else if (op === 'M' || op === 'X' || op === '=') {\n        readPos += len\n        refPos += len\n      }\n    }\n\n    yield positions[i] - readPos + refPos\n  }\n}\n\nexport function getModificationPositions(\n  mm: string,\n  fseq: string,\n  fstrand: number,\n) {\n  const seq = fstrand === -1 ? revcom(fseq) : fseq\n  return mm\n    .split(';')\n    .filter(mod => !!mod)\n    .map(mod => {\n      const [basemod, ...skips] = mod.split(',')\n\n      // regexes based on parse_mm.pl from hts-specs\n      const matches = basemod.match(/([A-Z])([-+])([^,]+)/)\n      if (!matches) {\n        throw new Error('bad format for MM tag')\n      }\n      const [, base, strand, typestr] = matches\n\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      const types = typestr.split(/(\\d+|.)/).filter(f => !!f)\n\n      if (strand === '-') {\n        console.warn('unsupported negative strand modifications')\n        // make sure to return a somewhat matching type even in this case\n        return { type: 'unsupported', positions: [] }\n      }\n\n      // this logic also based on parse_mm.pl from hts-specs is that in the\n      // sequence of the read, if we have a modification type e.g. C+m;2 and a\n      // sequence ACGTACGTAC we skip the two instances of C and go to the last\n      // C\n      return types.map(type => {\n        let i = 0\n        return {\n          type,\n          positions: skips\n            .map(score => +score)\n            .map(delta => {\n              do {\n                if (base === 'N' || base === seq[i]) {\n                  delta--\n                }\n                i++\n              } while (delta >= 0 && i < seq.length)\n              const temp = i - 1\n              return fstrand === -1 ? seq.length - 1 - temp : temp\n            })\n            .sort((a, b) => a - b),\n        }\n      })\n    })\n    .flat()\n}\n\nexport function getModificationTypes(mm: string) {\n  const mods = mm.split(';')\n  return mods\n    .filter(mod => !!mod)\n    .map(mod => {\n      const [basemod] = mod.split(',')\n\n      const matches = basemod.match(/([A-Z])([-+])([^,]+)/)\n      if (!matches) {\n        throw new Error('bad format for MM tag')\n      }\n      const [, , , typestr] = matches\n\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      return typestr.split(/(\\d+|.)/).filter(f => !!f)\n    })\n    .flat()\n}\n","import { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport DisplayType from './DisplayType'\n\ntype BasicView = React.ComponentType<{\n  // TODO: can we use AbstractViewModel here?\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: any\n  session?: IAnyStateTreeNode\n}>\ntype ViewReactComponent = React.LazyExoticComponent<BasicView> | BasicView\n\nexport default class ViewType extends PluggableElementBase {\n  ReactComponent: ViewReactComponent\n\n  stateModel: IAnyModelType\n\n  displayTypes: DisplayType[] = []\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: ViewReactComponent\n    stateModel: IAnyModelType\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.stateModel = stuff.stateModel\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for view ${this.name}`)\n    }\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for view ${this.name}`)\n    }\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n  Typography,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { LinearGenomeViewModel as LGV } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function ExportSvgDlg({\n  model,\n  handleClose,\n}: {\n  model: LGV\n  handleClose: () => void\n}) {\n  const [rasterizeLayers, setRasterizeLayers] = useState(\n    typeof OffscreenCanvas !== 'undefined',\n  )\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<Error>()\n  const classes = useStyles()\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Export SVG\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        {error ? (\n          <div style={{ color: 'red' }}>{`${error}`}</div>\n        ) : loading ? (\n          <div>\n            <CircularProgress size={20} style={{ marginRight: 20 }} />\n            <Typography display=\"inline\">Creating SVG</Typography>\n          </div>\n        ) : null}\n\n        {typeof OffscreenCanvas !== 'undefined' ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rasterizeLayers}\n                onChange={() => setRasterizeLayers(val => !val)}\n              />\n            }\n            label=\"Rasterize canvas based tracks? File may be much larger if this is turned off\"\n          />\n        ) : (\n          <Typography>\n            Note: rasterizing layers not yet supported in this browser, so SVG\n            size may be large\n          </Typography>\n        )}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={async () => {\n            setLoading(true)\n            setError(undefined)\n            try {\n              await model.exportSvg({ rasterizeLayers })\n              handleClose()\n            } catch (e) {\n              setError(e)\n            } finally {\n              setLoading(false)\n            }\n          }}\n        >\n          Submit\n        </Button>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction ReturnToImportFormDialog({\n  model,\n  handleClose,\n}: {\n  model: { clearView: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose}>\n      <DialogTitle>\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        <Typography>\n          Are you sure you want to return to the import form? This will lose\n          your current view\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.clearView()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"secondary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ReturnToImportFormDialog)\n","import { getConf } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { Region } from '@jbrowse/core/util/types'\nimport { ElementId, Region as MUIRegion } from '@jbrowse/core/util/types/mst'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  assembleLocString,\n  clamp,\n  findLastIndex,\n  getContainingView,\n  getSession,\n  isViewContainer,\n  parseLocString,\n  springAnimate,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { BlockSet, BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport calculateStaticBlocks from '@jbrowse/core/util/calculateStaticBlocks'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\n// misc\nimport { transaction, autorun } from 'mobx'\nimport {\n  getSnapshot,\n  types,\n  cast,\n  Instance,\n  getRoot,\n  resolveIdentifier,\n  addDisposer,\n} from 'mobx-state-tree'\n\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport SyncAltIcon from '@material-ui/icons/SyncAlt'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport LabelIcon from '@material-ui/icons/Label'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport clone from 'clone'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { saveAs } from 'file-saver'\nimport { renderToSvg } from './components/LinearGenomeView'\nimport ExportSvgDlg from './components/ExportSvgDialog'\nimport ReturnToImportFormDlg from './components/ReturnToImportFormDialog'\n\nexport { default as ReactComponent } from './components/LinearGenomeView'\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n  coord?: number\n  reversed?: boolean\n  assemblyName?: string\n  oob?: boolean\n}\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n}\n\nfunction calculateVisibleLocStrings(contentBlocks: BaseBlock[]) {\n  if (!contentBlocks.length) {\n    return ''\n  }\n  const isSingleAssemblyName = contentBlocks.every(\n    block => block.assemblyName === contentBlocks[0].assemblyName,\n  )\n  const locs = contentBlocks.map(block =>\n    assembleLocString({\n      ...block,\n      start: Math.round(block.start),\n      end: Math.round(block.end),\n      assemblyName: isSingleAssemblyName ? undefined : block.assemblyName,\n    }),\n  )\n  return locs.join(';')\n}\n\nexport interface NavLocation {\n  refName: string\n  start?: number\n  end?: number\n  assemblyName?: string\n}\n\nexport const HEADER_BAR_HEIGHT = 48\nexport const HEADER_OVERVIEW_HEIGHT = 20\nexport const SCALE_BAR_HEIGHT = 17\nexport const RESIZE_HANDLE_HEIGHT = 3\nexport const INTER_REGION_PADDING_WIDTH = 2\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('LinearGenomeView', {\n        id: ElementId,\n        type: types.literal('LinearGenomeView'),\n        offsetPx: 0,\n        bpPerPx: 1,\n        displayedRegions: types.array(MUIRegion),\n\n        // we use an array for the tracks because the tracks are displayed in a\n        // specific order that we need to keep.\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n        hideHeader: false,\n        hideHeaderOverview: false,\n        trackSelectorType: types.optional(\n          types.enumeration(['hierarchical']),\n          'hierarchical',\n        ),\n        trackLabels: 'overlapping' as 'overlapping' | 'hidden' | 'offset',\n        showCenterLine: false,\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      minimumBlockWidth: 3,\n      draggingTrackId: undefined as undefined | string,\n      error: undefined as undefined | Error,\n\n      // array of callbacks to run after the next set of the displayedRegions,\n      // which is basically like an onLoad\n      afterDisplayedRegionsSetCallbacks: [] as Function[],\n      scaleFactor: 1,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      trackRefs: {} as { [key: string]: any },\n      coarseDynamicBlocks: [] as BaseBlock[],\n      coarseTotalBp: 0,\n      leftOffset: undefined as undefined | BpOffset,\n      rightOffset: undefined as undefined | BpOffset,\n      searchResults: undefined as undefined | BaseResult[],\n      searchQuery: undefined as undefined | string,\n    }))\n    .views(self => ({\n      get width(): number {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'width undefined, make sure to check for model.initialized',\n          )\n        }\n        return self.volatileWidth\n      },\n    }))\n    .views(self => ({\n      get initialized() {\n        const { assemblyManager } = getSession(self)\n\n        // if the assemblyManager is tracking a given assembly name, wait for\n        // it to be loaded. this is done by looking in the assemblyManager's\n        // assembly list, and then waiting on it's initialized state which is\n        // updated later\n        const assembliesInitialized = this.assemblyNames.every(assemblyName => {\n          if (\n            assemblyManager.assemblyList\n              ?.map(asm => asm.name)\n              .includes(assemblyName)\n          ) {\n            return (assemblyManager.get(assemblyName) || {}).initialized\n          }\n          return true\n        })\n\n        return self.volatileWidth !== undefined && assembliesInitialized\n      },\n      get hasDisplayedRegions() {\n        return self.displayedRegions.length > 0\n      },\n      get isSeqDialogDisplayed() {\n        return self.leftOffset && self.rightOffset\n      },\n      get isSearchDialogDisplayed() {\n        return self.searchResults !== undefined\n      },\n      get scaleBarHeight() {\n        return SCALE_BAR_HEIGHT + RESIZE_HANDLE_HEIGHT\n      },\n      get headerHeight() {\n        if (self.hideHeader) {\n          return 0\n        }\n        if (self.hideHeaderOverview) {\n          return HEADER_BAR_HEIGHT\n        }\n        return HEADER_BAR_HEIGHT + HEADER_OVERVIEW_HEIGHT\n      },\n      get trackHeights() {\n        return self.tracks\n          .map(t => t.displays[0].height)\n          .reduce((a, b) => a + b, 0)\n      },\n\n      get trackHeightsWithResizeHandles() {\n        return this.trackHeights + self.tracks.length * RESIZE_HANDLE_HEIGHT\n      },\n      get height() {\n        return (\n          this.trackHeightsWithResizeHandles +\n          this.headerHeight +\n          this.scaleBarHeight\n        )\n      },\n      get interRegionPaddingWidth() {\n        return INTER_REGION_PADDING_WIDTH\n      },\n      get totalBp() {\n        let totalbp = 0\n        self.displayedRegions.forEach(region => {\n          totalbp += region.end - region.start\n        })\n        return totalbp\n      },\n\n      get maxBpPerPx() {\n        return this.totalBp / (self.width * 0.9)\n      },\n\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      get maxOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const leftPadding = 10\n        return this.displayedRegionsTotalPx - leftPadding\n      },\n\n      get minOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const rightPadding = 30\n        return -self.width + rightPadding\n      },\n\n      get displayedRegionsTotalPx() {\n        return this.totalBp / self.bpPerPx\n      },\n\n      get renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          bpPerPx: self.bpPerPx,\n          highResolutionScaling: getConf(\n            getSession(self),\n            'highResolutionScaling',\n          ),\n        }\n      },\n      get assemblyNames() {\n        return [\n          ...new Set(self.displayedRegions.map(region => region.assemblyName)),\n        ]\n      },\n      searchScope(assemblyName: string) {\n        return {\n          assemblyName,\n          includeAggregateIndexes: true,\n          tracks: self.tracks,\n        }\n      },\n\n      /**\n       * @param refName - refName of the displayedRegion\n       * @param coord - coordinate at the displayed Region\n       * @param regionNumber - optional param used as identifier when\n       * there are multiple displayedRegions with the same refName\n       * @returns offsetPx of the displayed region that it lands in\n       */\n      bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      }: {\n        refName: string\n        coord: number\n        regionNumber?: number\n      }) {\n        let offsetBp = 0\n\n        const interRegionPaddingBp = this.interRegionPaddingWidth * self.bpPerPx\n        const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n        const index = self.displayedRegions.findIndex((region, idx) => {\n          const len = region.end - region.start\n          if (\n            refName === region.refName &&\n            coord >= region.start &&\n            coord <= region.end\n          ) {\n            if (regionNumber ? regionNumber === idx : true) {\n              offsetBp += region.reversed\n                ? region.end - coord\n                : coord - region.start\n              return true\n            }\n          }\n\n          // add the interRegionPaddingWidth if the boundary is in the screen\n          // e.g. offset>=0 && offset<width\n          if (\n            len > minimumBlockBp &&\n            offsetBp / self.bpPerPx >= 0 &&\n            offsetBp / self.bpPerPx < self.width\n          ) {\n            offsetBp += len + interRegionPaddingBp\n          } else {\n            offsetBp += len\n          }\n          return false\n        })\n        const foundRegion = self.displayedRegions[index]\n        if (foundRegion) {\n          return {\n            index,\n            offsetPx: Math.round(offsetBp / self.bpPerPx),\n          }\n        }\n\n        return undefined\n      },\n      /**\n       *\n       * @param px - px in the view area, return value is the displayed regions\n       * @returns BpOffset of the displayed region that it lands in\n       */\n      pxToBp(px: number) {\n        let bpSoFar = 0\n        const bp = (self.offsetPx + px) * self.bpPerPx\n        const n = self.displayedRegions.length\n        if (bp < 0) {\n          const region = self.displayedRegions[0]\n          const offset = bp\n          return {\n            ...getSnapshot(region),\n            oob: true,\n            coord: region.reversed\n              ? Math.floor(region.end - offset) + 1\n              : Math.floor(region.start + offset) + 1,\n            offset,\n            index: 0,\n          }\n        }\n\n        const interRegionPaddingBp = this.interRegionPaddingWidth * self.bpPerPx\n        const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n\n        for (let index = 0; index < self.displayedRegions.length; index += 1) {\n          const region = self.displayedRegions[index]\n          const len = region.end - region.start\n          const offset = bp - bpSoFar\n          if (len + bpSoFar > bp && bpSoFar <= bp) {\n            return {\n              ...getSnapshot(region),\n              oob: false,\n              offset,\n              coord: region.reversed\n                ? Math.floor(region.end - offset) + 1\n                : Math.floor(region.start + offset) + 1,\n              index,\n            }\n          }\n\n          // add the interRegionPaddingWidth if the boundary is in the screen\n          // e.g. offset>0 && offset<width\n          if (\n            region.end - region.start > minimumBlockBp &&\n            offset / self.bpPerPx > 0 &&\n            offset / self.bpPerPx < self.width\n          ) {\n            bpSoFar += len + interRegionPaddingBp\n          } else {\n            bpSoFar += len\n          }\n        }\n\n        if (bp >= bpSoFar) {\n          const region = self.displayedRegions[n - 1]\n          const len = region.end - region.start\n          const offset = bp - bpSoFar + len\n          return {\n            ...getSnapshot(region),\n            oob: true,\n            offset,\n            coord: region.reversed\n              ? Math.floor(region.end - offset) + 1\n              : Math.floor(region.start + offset) + 1,\n            index: n - 1,\n          }\n        }\n        return {\n          coord: 0,\n          index: 0,\n          refName: '',\n          oob: true,\n          assemblyName: '',\n          offset: 0,\n          start: 0,\n          end: 0,\n          reversed: false,\n        }\n      },\n\n      getTrack(id: string) {\n        return self.tracks.find(t => t.configuration.trackId === id)\n      },\n\n      rankSearchResults(results: BaseResult[]) {\n        // order of rank\n        const openTrackIds = self.tracks.map(\n          track => track.configuration.trackId,\n        )\n        results.forEach(result => {\n          if (openTrackIds !== []) {\n            if (openTrackIds.includes(result.trackId)) {\n              result.updateScore(result.getScore() + 1)\n            }\n          }\n        })\n        return results\n      },\n\n      // modifies view menu action onClick to apply to all tracks of same type\n      rewriteOnClicks(trackType: string, viewMenuActions: MenuItem[]) {\n        viewMenuActions.forEach((action: MenuItem) => {\n          // go to lowest level menu\n          if ('subMenu' in action) {\n            this.rewriteOnClicks(trackType, action.subMenu)\n          }\n          if ('onClick' in action) {\n            const holdOnClick = action.onClick\n            action.onClick = (...args: unknown[]) => {\n              self.tracks.forEach(track => {\n                if (track.type === trackType) {\n                  holdOnClick.apply(track, [track, ...args])\n                }\n              })\n            }\n          }\n        })\n      },\n\n      get trackTypeActions() {\n        const allActions: Map<string, MenuItem[]> = new Map()\n        self.tracks.forEach(track => {\n          const trackInMap = allActions.get(track.type)\n          if (!trackInMap) {\n            const viewMenuActions = clone(track.viewMenuActions)\n            this.rewriteOnClicks(track.type, viewMenuActions)\n            allActions.set(track.type, viewMenuActions)\n          }\n        })\n\n        return allActions\n      },\n\n      get centerLineInfo() {\n        return self.displayedRegions.length\n          ? this.pxToBp(self.width / 2)\n          : undefined\n      },\n    }))\n    .actions(self => ({\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n      },\n      setError(error: Error | undefined) {\n        self.error = error\n      },\n\n      toggleHeader() {\n        self.hideHeader = !self.hideHeader\n      },\n\n      toggleHeaderOverview() {\n        self.hideHeaderOverview = !self.hideHeaderOverview\n      },\n\n      scrollTo(offsetPx: number) {\n        const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n        self.offsetPx = newOffsetPx\n        return newOffsetPx\n      },\n\n      zoomTo(bpPerPx: number) {\n        const newBpPerPx = clamp(bpPerPx, self.minBpPerPx, self.maxBpPerPx)\n        if (newBpPerPx === self.bpPerPx) {\n          return newBpPerPx\n        }\n        const oldBpPerPx = self.bpPerPx\n        self.bpPerPx = newBpPerPx\n\n        if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n          console.warn('zoomTo bpPerPx rounding error')\n          return oldBpPerPx\n        }\n\n        // tweak the offset so that the center of the view remains at the same coordinate\n        const viewWidth = self.width\n        this.scrollTo(\n          Math.round(\n            ((self.offsetPx + viewWidth / 2) * oldBpPerPx) / newBpPerPx -\n              viewWidth / 2,\n          ),\n        )\n        return newBpPerPx\n      },\n\n      setOffsets(left: undefined | BpOffset, right: undefined | BpOffset) {\n        // sets offsets used in the get sequence dialog\n        self.leftOffset = left\n        self.rightOffset = right\n      },\n\n      setSearchResults(\n        results: BaseResult[] | undefined,\n        query: string | undefined,\n      ) {\n        self.searchResults = results\n        self.searchQuery = query\n      },\n\n      setNewView(bpPerPx: number, offsetPx: number) {\n        this.zoomTo(bpPerPx)\n        this.scrollTo(offsetPx)\n      },\n\n      horizontallyFlip() {\n        self.displayedRegions = cast(\n          self.displayedRegions\n            .slice()\n            .reverse()\n            .map(region => ({ ...region, reversed: !region.reversed })),\n        )\n        this.scrollTo(self.totalBp / self.bpPerPx - self.offsetPx - self.width)\n      },\n\n      showTrack(\n        trackId: string,\n        initialSnapshot = {},\n        displayInitialSnapshot = {},\n      ) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        const trackType = pluginManager.getTrackType(configuration.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${configuration.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = viewType.displayTypes.map(\n          displayType => displayType.name,\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n          displays: [\n            {\n              type: displayConf.type,\n              configuration: displayConf,\n              ...displayInitialSnapshot,\n            },\n          ],\n        })\n        self.tracks.push(track)\n        return track\n      },\n\n      hideTrack(trackId: string) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        // if we have any tracks with that configuration, turn them off\n        const shownTracks = self.tracks.filter(\n          t => t.configuration === configuration,\n        )\n        transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n        return shownTracks.length\n      },\n    }))\n    .actions(self => ({\n      moveTrack(movingTrackId: string, targetTrackId: string) {\n        const oldIndex = self.tracks.findIndex(\n          track => track.id === movingTrackId,\n        )\n        if (oldIndex === -1) {\n          throw new Error(`Track ID ${movingTrackId} not found`)\n        }\n        const newIndex = self.tracks.findIndex(\n          track => track.id === targetTrackId,\n        )\n        if (newIndex === -1) {\n          throw new Error(`Track ID ${targetTrackId} not found`)\n        }\n        const track = getSnapshot(self.tracks[oldIndex])\n        self.tracks.splice(oldIndex, 1)\n        self.tracks.splice(newIndex, 0, track)\n      },\n\n      closeView() {\n        const parent = getContainingView(self)\n        if (parent) {\n          // I am embedded in a some other view\n          if (isViewContainer(parent)) {\n            parent.removeView(self)\n          }\n        } else {\n          // I am part of a session\n          getSession(self).removeView(self)\n        }\n      },\n\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = self.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          self.showTrack(trackId)\n        }\n      },\n\n      setTrackLabels(setting: 'overlapping' | 'offset' | 'hidden') {\n        self.trackLabels = setting\n      },\n\n      toggleCenterLine() {\n        self.showCenterLine = !self.showCenterLine\n      },\n\n      setDisplayedRegions(regions: Region[]) {\n        self.displayedRegions = cast(regions)\n        self.zoomTo(self.bpPerPx)\n      },\n\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n      navToLocString(locString: string, optAssemblyName?: string) {\n        const { assemblyManager } = getSession(self)\n        const { isValidRefName } = assemblyManager\n        const locStrings = locString.split(';')\n        if (self.displayedRegions.length > 1) {\n          const locations = locStrings.map(ls =>\n            parseLocString(ls, isValidRefName),\n          )\n          this.navToMultiple(locations)\n          return\n        }\n        let assemblyName = optAssemblyName\n        let defaultRefName = ''\n        if (self.displayedRegions.length !== 0) {\n          // defaults\n          assemblyName = self.displayedRegions[0].assemblyName\n          defaultRefName = self.displayedRegions[0].refName\n        }\n        let assembly = assemblyName && assemblyManager.get(assemblyName)\n        if (!assembly) {\n          throw new Error(`Could not find assembly ${assemblyName}`)\n        }\n        let { regions } = assembly\n        if (!regions) {\n          throw new Error(`Regions for assembly ${assemblyName} not yet loaded`)\n        }\n        if (locStrings.length > 1) {\n          throw new Error(\n            'Navigating to multiple locations is not allowed when viewing a whole chromosome',\n          )\n        }\n        const parsedLocString = parseLocString(locStrings[0], refName =>\n          isValidRefName(refName, assemblyName),\n        )\n        let changedAssembly = false\n        if (\n          parsedLocString.assemblyName &&\n          parsedLocString.assemblyName !== assemblyName\n        ) {\n          const newAssembly = assemblyManager.get(parsedLocString.assemblyName)\n          if (!newAssembly) {\n            throw new Error(\n              `Could not find assembly ${parsedLocString.assemblyName}`,\n            )\n          }\n          assembly = newAssembly\n          changedAssembly = true\n          const newRegions = newAssembly.regions\n          if (!newRegions) {\n            throw new Error(\n              `Regions for assembly ${parsedLocString.assemblyName} not yet loaded`,\n            )\n          }\n          regions = newRegions\n        }\n        const canonicalRefName = assembly.getCanonicalRefName(\n          parsedLocString.refName,\n        )\n\n        if (!canonicalRefName) {\n          throw new Error(\n            `Could not find refName ${parsedLocString.refName} in ${assembly.name}`,\n          )\n        }\n        if (changedAssembly || canonicalRefName !== defaultRefName) {\n          const newDisplayedRegion = regions.find(\n            region => region.refName === canonicalRefName,\n          )\n          if (newDisplayedRegion) {\n            this.setDisplayedRegions([newDisplayedRegion])\n          } else {\n            throw new Error(\n              `Could not find refName ${parsedLocString.refName} in ${assembly.name}`,\n            )\n          }\n        }\n        const displayedRegion = regions.find(\n          region => region.refName === canonicalRefName,\n        )\n        if (displayedRegion) {\n          const start = clamp(\n            parsedLocString?.start ?? 0,\n            0,\n            displayedRegion.end,\n          )\n          const end = clamp(\n            parsedLocString?.end ?? displayedRegion.end,\n            0,\n            displayedRegion.end,\n          )\n\n          this.navTo({\n            ...parsedLocString,\n            start,\n            end,\n          })\n        }\n      },\n\n      /**\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Can handle if there are multiple displayedRegions\n       * from same refName. Only navigates to a location if it is entirely\n       * within a displayedRegion. Navigates to the first matching location\n       * encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param location - a proposed location to navigate to\n       */\n      navTo(query: NavLocation) {\n        this.navToMultiple([query])\n      },\n\n      navToMultiple(locations: NavLocation[]) {\n        const firstLocation = locations[0]\n        let { refName } = firstLocation\n        const {\n          start,\n          end,\n          assemblyName = self.assemblyNames[0],\n        } = firstLocation\n\n        if (start !== undefined && end !== undefined && start > end) {\n          throw new Error(`start \"${start + 1}\" is greater than end \"${end}\"`)\n        }\n        const session = getSession(self)\n        const { assemblyManager } = session\n        const assembly = assemblyManager.get(assemblyName)\n        if (assembly) {\n          const canonicalRefName = assembly.getCanonicalRefName(refName)\n          if (canonicalRefName) {\n            refName = canonicalRefName\n          }\n        }\n        let s = start\n        let e = end\n        let refNameMatched = false\n        const predicate = (r: Region) => {\n          if (refName === r.refName) {\n            refNameMatched = true\n            if (s === undefined) {\n              s = r.start\n            }\n            if (e === undefined) {\n              e = r.end\n            }\n            if (s >= r.start && s <= r.end && e <= r.end && e >= r.start) {\n              return true\n            }\n            s = start\n            e = end\n          }\n          return false\n        }\n\n        const lastIndex = findLastIndex(self.displayedRegions, predicate)\n        let index\n        while (index !== lastIndex) {\n          try {\n            const previousIndex: number | undefined = index\n            index = self.displayedRegions\n              .slice(previousIndex === undefined ? 0 : previousIndex + 1)\n              .findIndex(predicate)\n            if (previousIndex !== undefined) {\n              index += previousIndex + 1\n            }\n            if (!refNameMatched) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\"`,\n              )\n            }\n            if (s === undefined) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\" that contained an end position ${e}`,\n              )\n            }\n            if (e === undefined) {\n              throw new Error(\n                `could not find a region with refName \"${refName}\" that contained a start position ${\n                  s + 1\n                }`,\n              )\n            }\n            if (index === -1) {\n              throw new Error(\n                `could not find a region that completely contained \"${assembleLocString(\n                  firstLocation,\n                )}\"`,\n              )\n            }\n            if (locations.length === 1) {\n              const f = self.displayedRegions[index]\n              this.moveTo(\n                { index, offset: f.reversed ? f.end - e : s - f.start },\n                { index, offset: f.reversed ? f.end - s : e - f.start },\n              )\n              return\n            }\n            let locationIndex = 0\n            let locationStart = 0\n            let locationEnd = 0\n            for (\n              locationIndex;\n              locationIndex < locations.length;\n              locationIndex++\n            ) {\n              const location = locations[locationIndex]\n              const region = self.displayedRegions[index + locationIndex]\n              locationStart = location.start || region.start\n              locationEnd = location.end || region.end\n              if (location.refName !== region.refName) {\n                throw new Error(\n                  `Entered location ${assembleLocString(\n                    location,\n                  )} does not match with displayed regions`,\n                )\n              }\n              if (locationIndex > 0) {\n                // does it reach the left side?\n                const matchesLeft = region.reversed\n                  ? locationEnd === region.end\n                  : locationStart === region.start\n                if (!matchesLeft) {\n                  throw new Error(\n                    `${\n                      region.reversed ? 'End' : 'Start'\n                    } of region ${assembleLocString(\n                      location,\n                    )} should be ${(region.reversed\n                      ? region.end\n                      : region.start + 1\n                    ).toLocaleString('en-US')}, but it is not`,\n                  )\n                }\n              }\n              const isLast = locationIndex === locations.length - 1\n              if (!isLast) {\n                // does it reach the right side?\n                const matchesRight = region.reversed\n                  ? locationStart === region.start\n                  : locationEnd === region.end\n                if (!matchesRight) {\n                  throw new Error(\n                    `${\n                      region.reversed ? 'Start' : 'End'\n                    } of region ${assembleLocString(\n                      location,\n                    )} should be ${(region.reversed\n                      ? region.start + 1\n                      : region.end\n                    ).toLocaleString('en-US')}, but it is not`,\n                  )\n                }\n              }\n            }\n            locationIndex -= 1\n            const startDisplayedRegion = self.displayedRegions[index]\n            const endDisplayedRegion =\n              self.displayedRegions[index + locationIndex]\n            this.moveTo(\n              {\n                index,\n                offset: startDisplayedRegion.reversed\n                  ? startDisplayedRegion.end - e\n                  : s - startDisplayedRegion.start,\n              },\n              {\n                index: index + locationIndex,\n                offset: endDisplayedRegion.reversed\n                  ? endDisplayedRegion.end - locationStart\n                  : locationEnd - endDisplayedRegion.start,\n              },\n            )\n            return\n          } catch (error) {\n            if (index === lastIndex) {\n              throw error\n            }\n          }\n        }\n      },\n\n      /**\n       * Navigate to a location based on user clicking and dragging on the\n       * overview scale bar to select a region to zoom into.\n       * Can handle if there are multiple displayedRegions from same refName.\n       * Only navigates to a location if it is entirely within a displayedRegion.\n       *\n       * @param leftPx- `object as {start, end, index, offset}`, offset = start of user drag\n       * @param rightPx- `object as {start, end, index, offset}`, offset = end of user drag\n       */\n      zoomToDisplayedRegions(leftPx: BpOffset, rightPx: BpOffset) {\n        if (leftPx === undefined || rightPx === undefined) {\n          return\n        }\n\n        const singleRefSeq =\n          leftPx.refName === rightPx.refName && leftPx.index === rightPx.index\n        // zooming into one displayed Region\n        if (\n          (singleRefSeq && rightPx.offset < leftPx.offset) ||\n          leftPx.index > rightPx.index\n        ) {\n          ;[leftPx, rightPx] = [rightPx, leftPx]\n        }\n        const startOffset = {\n          start: leftPx.start,\n          end: leftPx.end,\n          index: leftPx.index,\n          offset: leftPx.offset,\n        }\n        const endOffset = {\n          start: rightPx.start,\n          end: rightPx.end,\n          index: rightPx.index,\n          offset: rightPx.offset,\n        }\n        if (startOffset && endOffset) {\n          this.moveTo(startOffset, endOffset)\n        } else {\n          const session = getSession(self)\n          session.notify('No regions found to navigate to', 'warning')\n        }\n      },\n      /**\n       * Helper method for the fetchSequence.\n       * Retrieves the corresponding regions that were selected by the rubberband\n       *\n       * @param leftOffset - `object as {start, end, index, offset}`, offset = start of user drag\n       * @param rightOffset - `object as {start, end, index, offset}`, offset = end of user drag\n       * @returns array of Region[]\n       */\n      getSelectedRegions(\n        leftOffset: BpOffset | undefined,\n        rightOffset: BpOffset | undefined,\n      ) {\n        const simView = Base1DView.create({\n          ...getSnapshot(self),\n          interRegionPaddingWidth: self.interRegionPaddingWidth,\n        })\n\n        simView.setVolatileWidth(self.width)\n        simView.zoomToDisplayedRegions(leftOffset, rightOffset)\n\n        return simView.dynamicBlocks.contentBlocks.map(region => {\n          return {\n            ...region,\n            start: Math.floor(region.start),\n            end: Math.ceil(region.end),\n          }\n        })\n      },\n\n      // schedule something to be run after the next time displayedRegions is set\n      afterDisplayedRegionsSet(cb: Function) {\n        self.afterDisplayedRegionsSetCallbacks.push(cb)\n      },\n      /**\n       * offset is the base-pair-offset in the displayed region, index is the index of the\n       * displayed region in the linear genome view\n       *\n       * @param start - object as `{start, end, offset, index}`\n       * @param end - object as `{start, end, offset, index}`\n       */\n      moveTo(start: BpOffset, end: BpOffset) {\n        // find locations in the modellist\n        let bpSoFar = 0\n\n        if (start.index === end.index) {\n          bpSoFar += end.offset - start.offset\n        } else {\n          const s = self.displayedRegions[start.index]\n          bpSoFar += s.end - s.start - start.offset\n          if (end.index - start.index >= 2) {\n            for (let i = start.index + 1; i < end.index; i += 1) {\n              bpSoFar +=\n                self.displayedRegions[i].end - self.displayedRegions[i].start\n            }\n          }\n          bpSoFar += end.offset\n        }\n        const targetBpPerPx =\n          bpSoFar /\n          (self.width -\n            self.interRegionPaddingWidth * (end.index - start.index))\n        const newBpPerPx = self.zoomTo(targetBpPerPx)\n        // If our target bpPerPx was smaller than the allowed minBpPerPx, adjust\n        // the scroll so the requested range is in the middle of the screen\n        let extraBp = 0\n        if (targetBpPerPx < newBpPerPx) {\n          extraBp = ((newBpPerPx - targetBpPerPx) * self.width) / 2\n        }\n\n        let bpToStart = -extraBp\n        for (let i = 0; i < self.displayedRegions.length; i += 1) {\n          const region = self.displayedRegions[i]\n          if (start.index === i) {\n            bpToStart += start.offset\n            break\n          } else {\n            bpToStart += region.end - region.start\n          }\n        }\n        self.scrollTo(\n          Math.round(bpToStart / self.bpPerPx) +\n            self.interRegionPaddingWidth * start.index,\n        )\n      },\n\n      horizontalScroll(distance: number) {\n        const oldOffsetPx = self.offsetPx\n        // newOffsetPx is the actual offset after the scroll is clamped\n        const newOffsetPx = self.scrollTo(self.offsetPx + distance)\n        return newOffsetPx - oldOffsetPx\n      },\n\n      /**\n       * scrolls the view to center on the given bp. if that is not in any\n       * of the displayed regions, does nothing\n       * @param bp - basepair at which you want to center the view\n       * @param refName - refName of the displayedRegion you are centering at\n       * @param regionIndex - index of the displayedRegion\n       */\n      centerAt(bp: number, refName: string, regionIndex: number) {\n        const centerPx = self.bpToPx({\n          refName,\n          coord: bp,\n          regionNumber: regionIndex,\n        })\n        if (centerPx) {\n          self.scrollTo(Math.round(centerPx.offsetPx - self.width / 2))\n        }\n      },\n\n      center() {\n        const centerBp = self.totalBp / 2\n        self.scrollTo(Math.round(centerBp / self.bpPerPx - self.width / 2))\n      },\n\n      showAllRegions() {\n        self.zoomTo(self.maxBpPerPx)\n        this.center()\n      },\n\n      showAllRegionsInAssembly(assemblyName?: string) {\n        const session = getSession(self)\n        const { assemblyManager } = session\n        if (!assemblyName) {\n          const assemblyNames = [\n            ...new Set(\n              self.displayedRegions.map(region => region.assemblyName),\n            ),\n          ]\n          if (assemblyNames.length > 1) {\n            session.notify(\n              `Can't perform this with multiple assemblies currently`,\n            )\n            return\n          }\n\n          ;[assemblyName] = assemblyNames\n        }\n        const assembly = assemblyManager.get(assemblyName)\n        if (assembly) {\n          const { regions } = assembly\n          if (regions) {\n            this.setDisplayedRegions(regions)\n            self.zoomTo(self.maxBpPerPx)\n            this.center()\n          }\n        }\n      },\n\n      setDraggingTrackId(idx?: string) {\n        self.draggingTrackId = idx\n      },\n\n      setScaleFactor(factor: number) {\n        self.scaleFactor = factor\n      },\n    }))\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      function slide(viewWidths: number) {\n        const [animate, cancelAnimation] = springAnimate(\n          self.offsetPx,\n          self.offsetPx + self.width * viewWidths,\n          self.scrollTo,\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { slide }\n    })\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      function zoom(targetBpPerPx: number) {\n        self.zoomTo(self.bpPerPx)\n        if (\n          // already zoomed all the way in\n          (targetBpPerPx < self.bpPerPx && self.bpPerPx === self.minBpPerPx) ||\n          // already zoomed all the way out\n          (targetBpPerPx > self.bpPerPx && self.bpPerPx === self.maxBpPerPx)\n        ) {\n          return\n        }\n        const factor = self.bpPerPx / targetBpPerPx\n        const [animate, cancelAnimation] = springAnimate(\n          1,\n          factor,\n          self.setScaleFactor,\n          () => {\n            self.zoomTo(targetBpPerPx)\n            self.setScaleFactor(1)\n          },\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { zoom }\n    })\n    .views(self => {\n      let currentlyCalculatedStaticBlocks: BlockSet | undefined\n      let stringifiedCurrentlyCalculatedStaticBlocks = ''\n      return {\n        get menuItems(): MenuItem[] {\n          const menuItems: MenuItem[] = [\n            {\n              label: 'Return to import form',\n              onClick: () => {\n                getSession(self).setDialogComponent(ReturnToImportFormDlg, {\n                  model: self,\n                })\n              },\n              icon: FolderOpenIcon,\n            },\n            {\n              label: 'Export SVG',\n              onClick: () => {\n                getSession(self).setDialogComponent(ExportSvgDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Open track selector',\n              onClick: self.activateTrackSelector,\n              icon: TrackSelectorIcon,\n            },\n            {\n              label: 'Horizontally flip',\n              icon: SyncAltIcon,\n              onClick: self.horizontallyFlip,\n            },\n            {\n              label: 'Show all regions in assembly',\n              icon: VisibilityIcon,\n              onClick: self.showAllRegionsInAssembly,\n            },\n            {\n              label: 'Show center line',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showCenterLine,\n              onClick: self.toggleCenterLine,\n            },\n            { type: 'divider' },\n            {\n              label: 'Show header',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: !self.hideHeader,\n              onClick: self.toggleHeader,\n            },\n            {\n              label: 'Show header overview',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: !self.hideHeaderOverview,\n              onClick: self.toggleHeaderOverview,\n              disabled: self.hideHeader,\n            },\n            {\n              label: 'Track labels',\n              icon: LabelIcon,\n              subMenu: [\n                {\n                  label: 'Overlapping',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'overlapping',\n                  onClick: () => self.setTrackLabels('overlapping'),\n                },\n                {\n                  label: 'Offset',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'offset',\n                  onClick: () => self.setTrackLabels('offset'),\n                },\n                {\n                  label: 'Hidden',\n                  icon: VisibilityIcon,\n                  type: 'radio',\n                  checked: self.trackLabels === 'hidden',\n                  onClick: () => self.setTrackLabels('hidden'),\n                },\n              ],\n            },\n          ]\n\n          // add track's view level menu options\n          for (const [key, value] of self.trackTypeActions.entries()) {\n            if (value.length) {\n              menuItems.push(\n                { type: 'divider' },\n                { type: 'subHeader', label: key },\n              )\n              value.forEach(action => {\n                menuItems.push(action)\n              })\n            }\n          }\n\n          return menuItems\n        },\n\n        get staticBlocks() {\n          const ret = calculateStaticBlocks(self)\n          const sret = JSON.stringify(ret)\n          if (stringifiedCurrentlyCalculatedStaticBlocks !== sret) {\n            currentlyCalculatedStaticBlocks = ret\n            stringifiedCurrentlyCalculatedStaticBlocks = sret\n          }\n          return currentlyCalculatedStaticBlocks as BlockSet\n        },\n\n        get dynamicBlocks() {\n          return calculateDynamicBlocks(self)\n        },\n\n        get roundedDynamicBlocks() {\n          return this.dynamicBlocks.contentBlocks.map(block => {\n            return {\n              ...block,\n              start: Math.floor(block.start),\n              end: Math.ceil(block.end),\n            }\n          })\n        },\n        get visibleLocStrings() {\n          return calculateVisibleLocStrings(this.dynamicBlocks.contentBlocks)\n        },\n        get coarseVisibleLocStrings() {\n          return calculateVisibleLocStrings(self.coarseDynamicBlocks)\n        },\n      }\n    })\n    .actions(self => ({\n      // this \"clears the view\" and makes the view return to the import form\n      clearView() {\n        self.setDisplayedRegions([])\n        self.tracks.clear()\n        // it is necessary to run these after setting displayed regions empty\n        // or else model.offsetPx gets set to Infinity and breaks\n        // mobx-state-tree snapshot\n        self.scrollTo(0)\n        self.zoomTo(10)\n      },\n      setCoarseDynamicBlocks(blocks: BlockSet) {\n        self.coarseDynamicBlocks = blocks.contentBlocks\n        self.coarseTotalBp = blocks.totalBp\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.initialized) {\n                this.setCoarseDynamicBlocks(self.dynamicBlocks)\n              }\n            },\n            { delay: 150 },\n          ),\n        )\n      },\n    }))\n    .actions(self => ({\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const html = await renderToSvg(self as any, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, 'image.svg')\n      },\n    }))\n}\n\nexport { renderToSvg }\nexport type LinearGenomeViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearGenomeViewModel = Instance<LinearGenomeViewStateModel>\n","import {\n  isStateTreeNode,\n  Instance,\n  SnapshotIn,\n  IAnyStateTreeNode,\n} from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '../../configuration/configurationSchema'\n\nimport assemblyManager from '../../assemblyManager'\nimport textSearchManager from '../../TextSearch/TextSearchManager'\nimport { MenuItem } from '../../ui'\nimport {\n  NoAssemblyRegion as MUNoAssemblyRegion,\n  Region as MUIRegion,\n  LocalPathLocation as MULocalPathLocation,\n  UriLocation as MUUriLocation,\n  BlobLocation as MUBlobLocation,\n} from './mst'\nimport RpcManager from '../../rpc/RpcManager'\nimport { Feature } from '../simpleFeature'\n\nexport * from './util'\n\n/** abstract type for a model that contains multiple views */\nexport interface AbstractViewContainer {\n  views: AbstractViewModel[]\n  removeView(view: AbstractViewModel): void\n  addView(typeName: string, initialState: Record<string, unknown>): void\n}\nexport function isViewContainer(\n  thing: unknown,\n): thing is AbstractViewContainer {\n  return (\n    isStateTreeNode(thing) &&\n    'removeView' in thing &&\n    'addView' in thing &&\n    'views' in thing\n  )\n}\n\nexport type NotificationLevel = 'error' | 'info' | 'warning' | 'success'\n\nexport type AssemblyManager = Instance<ReturnType<typeof assemblyManager>>\nexport type TextSearchManager = Instance<ReturnType<typeof textSearchManager>>\nexport interface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nexport interface JBrowsePlugin {\n  name: string\n  authors: string[]\n  description: string\n  location: string\n  url: string\n  license: string\n  image?: string\n}\n\nexport type DialogComponentType =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.LazyExoticComponent<React.FC<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.FC<any>\n\n/** minimum interface that all session state models must implement */\nexport interface AbstractSessionModel extends AbstractViewContainer {\n  setSelection(feature: Feature): void\n  clearSelection(): void\n  configuration: AnyConfigurationModel\n  rpcManager: RpcManager\n  assemblyNames: string[]\n  assemblies: AnyConfigurationModel[]\n  selection?: unknown\n  duplicateCurrentSession?(): void\n  notify(message: string, level?: NotificationLevel): void\n  assemblyManager: AssemblyManager\n  version: string\n  getTrackActionMenuItems?: Function\n  addAssembly?: Function\n  removeAssembly?: Function\n  textSearchManager?: TextSearchManager\n  connections: AnyConfigurationModel[]\n  deleteConnection?: Function\n  sessionConnections?: AnyConfigurationModel[]\n  connectionInstances?: { name: string }[]\n  makeConnection?: Function\n  adminMode?: boolean\n  showWidget?: Function\n  addWidget?: Function\n\n  addTrackConf?: Function\n  DialogComponent?: DialogComponentType\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DialogProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setDialogComponent: (dlg?: DialogComponentType, props?: any) => void\n}\nexport function isSessionModel(thing: unknown): thing is AbstractSessionModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'rpcManager' in thing &&\n    'configuration' in thing\n  )\n}\n\n/** abstract interface for a session allows editing configurations */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  editConfiguration(configuration: AnyConfigurationModel): void\n}\nexport function isSessionModelWithConfigEditing(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'editConfiguration' in thing\n}\n\n/** abstract interface for a session that manages widgets */\nexport interface SessionWithWidgets extends AbstractSessionModel {\n  visibleWidget?: { id: string }\n  widgets?: unknown[]\n  addWidget(\n    typeName: string,\n    id: string,\n    initialState?: Record<string, unknown>,\n    configuration?: { type: string },\n  ): void\n  showWidget(widget: unknown): void\n}\nexport function isSessionModelWithWidgets(\n  thing: unknown,\n): thing is SessionWithWidgets {\n  return isSessionModel(thing) && 'widgets' in thing\n}\n\nexport interface SessionWithSessionPlugins extends AbstractSessionModel {\n  sessionPlugins: JBrowsePlugin[]\n  addSessionPlugin: Function\n  removeSessionPlugin: Function\n}\nexport function isSessionWithSessionPlugins(\n  thing: unknown,\n): thing is SessionWithSessionPlugins {\n  return isSessionModel(thing) && 'sessionPlugins' in thing\n}\n\n/** abstract interface for a session that manages a global selection */\nexport interface SelectionContainer extends AbstractSessionModel {\n  selection?: unknown\n  setSelection(thing: unknown): void\n}\nexport function isSelectionContainer(\n  thing: unknown,\n): thing is SelectionContainer {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'selection' in thing &&\n    'setSelection' in thing\n  )\n}\n\n/** minimum interface that all view state models must implement */\nexport interface AbstractViewModel {\n  id: string\n  type: string\n  width: number\n  setWidth(width: number): void\n}\nexport function isViewModel(thing: unknown): thing is AbstractViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'width' in thing &&\n    'setWidth' in thing\n  )\n}\n\ntype AbstractTrackModel = {}\nexport function isTrackModel(thing: unknown): thing is AbstractTrackModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.trackId\n  )\n}\n\nexport interface AbstractDisplayModel {\n  id: string\n  parentTrack: AbstractTrackModel\n  renderDelay: number\n  rendererType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  cannotBeRenderedReason?: string\n}\nexport function isDisplayModel(thing: unknown): thing is AbstractDisplayModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.displayId\n  )\n}\n\nexport interface TrackViewModel extends AbstractViewModel {\n  showTrack(trackId: string): void\n  hideTrack(trackId: string): void\n}\nexport function isTrackViewModel(thing: unknown): thing is TrackViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'showTrack' in thing &&\n    'hideTrack' in thing\n  )\n}\n\n/** minimum interface for the root MST model of a JBrowse app */\nexport interface AbstractRootModel {\n  jbrowse: IAnyStateTreeNode\n  session?: AbstractSessionModel\n  setDefaultSession?(): void\n  adminMode?: boolean\n}\n\n/** root model with more included for the heavier JBrowse web and desktop app */\nexport interface AppRootModel extends AbstractRootModel {\n  isAssemblyEditing: boolean\n  isDefaultSessionEditing: boolean\n  setAssemblyEditing: (arg: boolean) => boolean\n  setDefaultSessionEditing: (arg: boolean) => boolean\n}\n\n/** a root model that manages global menus */\nexport interface AbstractMenuManager {\n  appendMenu(menuName: string): void\n  insertMenu(menuName: string, position: number): number\n  insertInMenu(menuName: string, menuItem: MenuItem, position: number): number\n  appendToMenu(menuName: string, menuItem: MenuItem): number\n  appendToSubMenu(menuPath: string[], menuItem: MenuItem): number\n  insertInSubMenu(\n    menuPath: string[],\n    menuItem: MenuItem,\n    position: number,\n  ): number\n}\nexport function isAbstractMenuManager(\n  thing: unknown,\n): thing is AbstractMenuManager {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'appendMenu' in thing &&\n    'appendToSubMenu' in thing\n  )\n}\n\n// Empty interfaces required by mobx-state-tree\n// See https://mobx-state-tree.js.org/tips/typescript#using-a-mst-type-at-design-time\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nexport interface NoAssemblyRegion\n  extends SnapshotIn<typeof MUNoAssemblyRegion> {}\n\nexport interface Region extends SnapshotIn<typeof MUIRegion> {}\n\nexport interface LocalPathLocation\n  extends SnapshotIn<typeof MULocalPathLocation> {}\n\nexport interface UriLocation extends SnapshotIn<typeof MUUriLocation> {}\n\nexport interface BlobLocation extends SnapshotIn<typeof MUBlobLocation> {}\n\nexport type FileLocation = LocalPathLocation | UriLocation | BlobLocation\n\n/* eslint-enable @typescript-eslint/no-empty-interface */\n\n// These types are slightly different than the MST models representing a\n// location because a blob cannot be stored in a MST, so this is the\n// pre-processed file location\nexport type PreUriLocation = { uri: string }\nexport type PreLocalPathLocation = { localPath: string }\nexport type PreBlobLocation = { blob: File }\nexport type PreFileLocation =\n  | PreUriLocation\n  | PreLocalPathLocation\n  | PreBlobLocation\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types, IAnyModelType, IAnyComplexType, getEnv } from 'mobx-state-tree'\nimport { stringToJexlExpression } from '../util/jexlStrings'\nimport { FileLocation } from '../util/types/mst'\n\nfunction isValidColorString(/* str */) {\n  // TODO: check all the crazy cases for whether it's a valid HTML/CSS color string\n  return true\n}\nconst typeModels: { [typeName: string]: any } = {\n  stringArray: types.array(types.string),\n  stringArrayMap: types.map(types.array(types.string)),\n  numberMap: types.map(types.number),\n  boolean: types.boolean,\n  color: types.refinement('Color', types.string, isValidColorString),\n  integer: types.integer,\n  number: types.number,\n  string: types.string,\n  text: types.string,\n  fileLocation: FileLocation,\n  frozen: types.frozen(),\n}\n\n// default values we use if the defaultValue is malformed or does not work\nconst fallbackDefaults: { [typeName: string]: any } = {\n  stringArray: [],\n  stringArrayMap: {},\n  numberMap: {},\n  boolean: true,\n  color: 'black',\n  integer: 1,\n  number: 1,\n  string: '',\n  text: '',\n  fileLocation: { uri: '/path/to/resource.txt' },\n  frozen: {},\n}\n\nconst literalJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return self.value\n    },\n  },\n})\n\nconst objectJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return JSON.stringify(self.value)\n    },\n  },\n})\n\n// custom actions for modifying the value models\nconst typeModelExtensions: { [typeName: string]: (self: any) => any } = {\n  fileLocation: objectJSON,\n  number: literalJSON,\n  integer: literalJSON,\n  boolean: literalJSON,\n  frozen: objectJSON,\n  // special actions for working with stringArray slots\n  stringArray: (self: { value: string[] }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(val: string) {\n        self.value.push(val)\n      },\n      removeAtIndex(idx: number) {\n        self.value.splice(idx, 1)\n      },\n      setAtIndex(idx: number, val: string) {\n        self.value[idx] = val\n      },\n    },\n  }),\n  stringArrayMap: (self: { value: Map<string, string[]> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: any) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n      addToKey(key: string, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.push(val)\n      },\n      removeAtKeyIndex(key: string, idx: number) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.splice(idx, 1)\n      },\n      setAtKeyIndex(key: string, idx: number, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar[idx] = val\n      },\n    },\n  }),\n  numberMap: (self: { value: Map<string, number> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: number) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n    },\n  }),\n}\n\n// const FunctionStringType = types.refinement(\n//   'FunctionString',\n//   types.string,\n//   str => functionRegexp.test(str),\n// )\n\nconst JexlStringType = types.refinement('JexlString', types.string, str =>\n  str.startsWith('jexl:'),\n)\n\nexport interface ConfigSlotDefinition {\n  description?: string\n  /** custom base MST model for the slot's value */\n  model?: IAnyModelType | IAnyComplexType\n  /** name of the type of slot, e.g. \"string\", \"number\", \"stringArray\" */\n  type: string\n  /** default value of the slot */\n  defaultValue: any\n  /** parameter names of the function callback */\n  contextVariable?: string[]\n}\n\n/**\n * builds a MST model for a configuration slot\n *\n * @param slotName -\n * @param  definition -\n */\nexport default function ConfigSlot(\n  slotName: string,\n  {\n    description = '',\n    model,\n    type,\n    defaultValue,\n    contextVariable = [],\n  }: ConfigSlotDefinition,\n) {\n  if (!type) {\n    throw new Error('type name required')\n  }\n  if (!model) {\n    model = typeModels[type]\n  }\n  if (!model) {\n    throw new Error(\n      `no builtin config slot type \"${type}\", and no 'model' param provided`,\n    )\n  }\n\n  if (defaultValue === undefined) {\n    throw new Error(\"no 'defaultValue' provided\")\n  }\n\n  // if the `type` is something like `color`, then the model name\n  // here will be `ColorConfigSlot`\n  const configSlotModelName = `${slotName\n    .charAt(0)\n    .toUpperCase()}${slotName.slice(1)}ConfigSlot`\n  let slot = types\n    .model(configSlotModelName, {\n      name: types.literal(slotName),\n      description: types.literal(description),\n      type: types.literal(type),\n      value: types.optional(types.union(JexlStringType, model), defaultValue),\n    })\n    .volatile(() => ({\n      contextVariable,\n    }))\n    .views(self => ({\n      get isCallback() {\n        return String(self.value).startsWith('jexl:')\n      },\n    }))\n    .views(self => ({\n      get expr() {\n        if (self.isCallback) {\n          // compile as jexl function\n          const { pluginManager } = getEnv(self)\n          if (!pluginManager && typeof jest === 'undefined') {\n            console.warn(\n              'no pluginManager detected on config env (if you dynamically instantiate a config, for example in renderProps for your display model, check that you add the env argument)',\n            )\n          }\n          return stringToJexlExpression(String(self.value), pluginManager?.jexl)\n        }\n        return { evalSync: () => self.value }\n      },\n\n      // JS representation of the value of this slot, suitable\n      // for embedding in either JSON or a JS function string.\n      // many of the data types override this in typeModelExtensions\n      get valueJSON(): any[] | Record<string, any> | string | undefined {\n        if (self.isCallback) {\n          return undefined\n        }\n        function json(value: { toJSON: Function } | any) {\n          if (value && value.toJSON) {\n            return value.toJSON()\n          }\n          return `\"${value}\"`\n        }\n        return json(self.value)\n      },\n    }))\n    .preProcessSnapshot(val =>\n      typeof val === 'object' && val.name === slotName\n        ? val\n        : {\n            name: slotName,\n            description,\n            type,\n            value: val,\n          },\n    )\n    .postProcessSnapshot(snap => {\n      if (typeof snap.value === 'object') {\n        return JSON.stringify(snap.value) !== JSON.stringify(defaultValue)\n          ? snap.value\n          : undefined\n      }\n      return snap.value !== defaultValue ? snap.value : undefined\n    })\n    .actions(self => ({\n      set(newVal: any) {\n        self.value = newVal\n      },\n      reset() {\n        self.value = defaultValue\n      },\n      convertToCallback() {\n        if (self.isCallback) {\n          return\n        }\n        self.value = `jexl:${self.valueJSON || \"''\"}`\n      },\n      convertToValue() {\n        if (!self.isCallback) {\n          return\n        }\n        // try calling it with no arguments\n        try {\n          const funcResult = self.expr.evalSync()\n          if (funcResult !== undefined) {\n            self.value = funcResult\n            return\n          }\n        } catch (e) {\n          /* ignore */\n        }\n        self.value = defaultValue\n        // if it is still a callback (happens if the defaultValue is a callback),\n        // then use the last-resort fallback default\n\n        // if defaultValue has jexl: string, run this part\n        if (self.isCallback) {\n          if (!(type in fallbackDefaults)) {\n            throw new Error(`no fallbackDefault defined for type ${type}`)\n          }\n          self.value = fallbackDefaults[type]\n        }\n      },\n    }))\n\n  // if there are any type-specific extensions (views or actions)\n  //  to the slot, add those in\n  if (typeModelExtensions[type]) {\n    slot = slot.extend(typeModelExtensions[type])\n  }\n\n  const completeModel = types.optional(slot, {\n    name: slotName,\n    type,\n    description,\n    value: defaultValue,\n  })\n  const m = completeModel\n  Object.defineProperty(m, 'isJBrowseConfigurationSlot', { value: true })\n  return m\n}\n","import {\n  types,\n  isStateTreeNode,\n  Instance,\n  IAnyType,\n  isType,\n  isLateType,\n  SnapshotOut,\n  ModelPropertiesDeclaration,\n  getSnapshot,\n} from 'mobx-state-tree'\n\nimport { ElementId } from '../util/types/mst'\n\nimport ConfigSlot, { ConfigSlotDefinition } from './configurationSlot'\nimport { isConfigurationSchemaType } from './util'\n\nfunction isEmptyObject(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    !Array.isArray(thing) &&\n    thing !== null &&\n    Object.keys(thing).length === 0\n  )\n}\n\nfunction isEmptyArray(thing: unknown) {\n  return Array.isArray(thing) && thing.length === 0\n}\n\nexport interface ConfigurationSchemaDefinition {\n  [n: string]:\n    | ConfigSlotDefinition\n    | ConfigurationSchemaDefinition\n    | string\n    | number\n    | IAnyType\n}\n\ninterface ConfigurationSchemaOptions {\n  explicitlyTyped?: boolean\n  explicitIdentifier?: string\n  implicitIdentifier?: string | boolean\n  baseConfiguration?: AnyConfigurationSchemaType\n\n  actions?: (self: unknown) => any // eslint-disable-line @typescript-eslint/no-explicit-any\n  views?: (self: unknown) => any // eslint-disable-line @typescript-eslint/no-explicit-any\n  extend?: (self: unknown) => any // eslint-disable-line @typescript-eslint/no-explicit-any\n  preProcessSnapshot?: (snapshot: {}) => {}\n}\n\nfunction preprocessConfigurationSchemaArguments(\n  modelName: string,\n  inputSchemaDefinition: ConfigurationSchemaDefinition,\n  inputOptions: ConfigurationSchemaOptions = {},\n) {\n  if (typeof modelName !== 'string') {\n    throw new Error(\n      'first arg must be string name of the model that this config schema goes with',\n    )\n  }\n\n  // if we have a base configuration schema that we are\n  // extending, grab the slot definitions from that\n  let schemaDefinition = inputSchemaDefinition\n  let options = inputOptions\n  if (\n    inputOptions.baseConfiguration &&\n    inputOptions.baseConfiguration.jbrowseSchemaDefinition\n  ) {\n    schemaDefinition = {\n      ...inputOptions.baseConfiguration.jbrowseSchemaDefinition,\n      ...schemaDefinition,\n    }\n    options = {\n      ...(inputOptions.baseConfiguration.jbrowseSchemaOptions || {}),\n      ...inputOptions,\n    }\n    delete options.baseConfiguration\n  }\n  return { schemaDefinition, options }\n}\n\nfunction makeConfigurationSchemaModel<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions\n>(modelName: string, schemaDefinition: DEFINITION, options: OPTIONS) {\n  // now assemble the MST model of the configuration schema\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const modelDefinition: Record<string, any> = {}\n  let identifier\n\n  if (options.explicitlyTyped) {\n    modelDefinition.type = types.optional(types.literal(modelName), modelName)\n  }\n\n  if (options.explicitIdentifier && options.implicitIdentifier) {\n    throw new Error(\n      `Cannot have both explicit and implicit identifiers in ${modelName}`,\n    )\n  }\n  if (options.explicitIdentifier) {\n    if (typeof options.explicitIdentifier === 'string') {\n      modelDefinition[options.explicitIdentifier] = types.identifier\n      identifier = options.explicitIdentifier\n    } else {\n      modelDefinition.id = types.identifier\n      identifier = 'id'\n    }\n  } else if (options.implicitIdentifier) {\n    if (typeof options.implicitIdentifier === 'string') {\n      modelDefinition[options.implicitIdentifier] = ElementId\n      identifier = options.implicitIdentifier\n    } else {\n      modelDefinition.id = ElementId\n      identifier = 'id'\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const volatileConstants: Record<string, any> = {\n    isJBrowseConfigurationSchema: true,\n    jbrowseSchema: {\n      modelName,\n      definition: schemaDefinition,\n      options,\n    },\n  }\n  Object.entries(schemaDefinition).forEach(([slotName, slotDefinition]) => {\n    if (\n      (isType(slotDefinition) && isLateType(slotDefinition)) ||\n      isConfigurationSchemaType(slotDefinition)\n    ) {\n      // this is either an MST late() type (which we assume to be a sub-configuration),\n      // or an actual sub-configuration\n      modelDefinition[slotName] = slotDefinition\n    } else if (\n      typeof slotDefinition === 'string' ||\n      typeof slotDefinition === 'number'\n    ) {\n      volatileConstants[slotName] = slotDefinition\n    } else if (typeof slotDefinition === 'object') {\n      // this is a slot definition\n      if (!slotDefinition.type) {\n        throw new Error(`no type set for config slot ${modelName}.${slotName}`)\n      }\n      try {\n        modelDefinition[slotName] = ConfigSlot(\n          slotName,\n          slotDefinition as ConfigSlotDefinition,\n        )\n      } catch (e) {\n        throw new Error(\n          `invalid config slot definition for ${modelName}.${slotName}: ${e.message}`,\n        )\n      }\n    } else {\n      throw new Error(\n        `invalid configuration schema definition, \"${slotName}\" must be either a valid configuration slot definition, a constant, or a nested configuration schema`,\n      )\n    }\n  })\n\n  let completeModel = types\n    .model(`${modelName}ConfigurationSchema`, modelDefinition)\n    .actions(self => ({\n      setSubschema(\n        slotName: string,\n        data: ModelPropertiesDeclaration | AnyConfigurationSchemaType,\n      ) {\n        if (!isConfigurationSchemaType(modelDefinition[slotName])) {\n          throw new Error(`${slotName} is not a subschema, cannot replace`)\n        }\n        const newSchema = isStateTreeNode(data)\n          ? data\n          : modelDefinition[slotName].create(data)\n        self[slotName] = newSchema\n        return newSchema\n      },\n    }))\n\n  if (Object.keys(volatileConstants).length) {\n    completeModel = completeModel.volatile((/* self */) => volatileConstants)\n  }\n  if (options.actions) {\n    completeModel = completeModel.actions(options.actions)\n  }\n  if (options.views) {\n    completeModel = completeModel.views(options.views)\n  }\n  if (options.extend) {\n    completeModel = completeModel.extend(options.extend)\n  }\n\n  const identifierDefault = identifier ? { [identifier]: 'placeholderId' } : {}\n  const modelDefault = options.explicitlyTyped\n    ? { type: modelName, ...identifierDefault }\n    : identifierDefault\n\n  const defaultSnap = getSnapshot(completeModel.create(modelDefault))\n  completeModel = completeModel.postProcessSnapshot(snap => {\n    const newSnap: SnapshotOut<typeof completeModel> = {}\n    let matchesDefault = true\n    // let keyCount = 0\n    for (const [key, value] of Object.entries(snap)) {\n      if (matchesDefault) {\n        if (typeof defaultSnap[key] === 'object' && typeof value === 'object') {\n          if (JSON.stringify(defaultSnap[key]) !== JSON.stringify(value)) {\n            matchesDefault = false\n          }\n        } else if (defaultSnap[key] !== value) {\n          matchesDefault = false\n        }\n      }\n      if (\n        value !== undefined &&\n        volatileConstants[key] === undefined &&\n        !isEmptyObject(value) &&\n        !isEmptyArray(value)\n      ) {\n        // keyCount += 1\n        newSnap[key] = value\n      }\n    }\n    if (matchesDefault) {\n      return {}\n    }\n    return newSnap\n  })\n\n  if (options.preProcessSnapshot) {\n    completeModel = completeModel.preProcessSnapshot(options.preProcessSnapshot)\n  }\n\n  const schemaType = types.optional(completeModel, modelDefault)\n  return schemaType\n}\n\nexport interface AnyConfigurationSchemaType\n  extends ReturnType<typeof makeConfigurationSchemaModel> {\n  isJBrowseConfigurationSchema: boolean\n  jbrowseSchemaDefinition: ConfigurationSchemaDefinition\n  jbrowseSchemaOptions: ConfigurationSchemaOptions\n}\n\nexport type AnyConfigurationModel = Instance<AnyConfigurationSchemaType>\n\nexport type ConfigurationModel<\n  SCHEMA extends AnyConfigurationSchemaType\n> = Instance<SCHEMA>\n\nexport function ConfigurationSchema<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions\n>(\n  modelName: string,\n  inputSchemaDefinition: DEFINITION,\n  inputOptions?: OPTIONS,\n): AnyConfigurationSchemaType {\n  const { schemaDefinition, options } = preprocessConfigurationSchemaArguments(\n    modelName,\n    inputSchemaDefinition,\n    inputOptions,\n  )\n  const schemaType = makeConfigurationSchemaModel(\n    modelName,\n    schemaDefinition,\n    options,\n  ) as AnyConfigurationSchemaType\n  // saving a couple of jbrowse-specific things in the type object. hope nobody gets mad.\n  schemaType.isJBrowseConfigurationSchema = true\n  schemaType.jbrowseSchemaDefinition = schemaDefinition\n  schemaType.jbrowseSchemaOptions = options\n  return schemaType\n}\n\nexport function ConfigurationReference(schemaType: IAnyType) {\n  return types.union(types.reference(schemaType), schemaType)\n}\n","// from https://www.w3.org/TR/css-color-4/#named-colors\n\nconst colors: Record<string, string> = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#00FFFF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#0000FF',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#00FFFF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgreen: '#006400',\n  darkgrey: '#A9A9A9',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#FF00FF',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  grey: '#808080',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightgrey: '#D3D3D3',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#00FF00',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#FF00FF',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#FF0000',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFFFFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FFFF00',\n  yellowgreen: '#9ACD32',\n}\n\nexport function namedColorToHex(name: string): string | undefined {\n  return colors[name]\n}\n\nexport function isNamedColor(name: string): boolean {\n  return !!colors[name]\n}\n","import {\n  darken,\n  emphasize as muiEmphasize,\n  getContrastRatio,\n  getLuminance as muiGetLuminance,\n  lighten,\n} from '@material-ui/core/styles/colorManipulator'\nimport { namedColorToHex, isNamedColor } from './cssColorsLevel4'\n\nexport { namedColorToHex, isNamedColor }\n\n/**\n * Algorithmically pick a contrasting text color that will\n * be visible on top of the given background color. Either\n * black or white.\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns 'black' or 'white'\n */\nexport function contrastingTextColor(color: string): string {\n  const luminance = getLuminance(color)\n  return luminance > 0.5 ? 'black' : 'white'\n}\n\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n * Uses MUI's `getLuminance`, but adds support for named colors\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color: string): number {\n  const convertedColor = namedColorToHex(color)\n  return muiGetLuminance(convertedColor || color)\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * Uses MUI's `emphasize`, but adds support for named colors\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n * hsl(), hsla(), or named color\n * @param coefficient - multiplier in the range 0 - 1, defaults to 0.15\n * @returns A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color: string, coefficient = 0.15): string {\n  const convertedColor = namedColorToHex(color)\n  return muiEmphasize(convertedColor || color, coefficient)\n}\n\nexport function makeContrasting(\n  foreground: string,\n  background = 'white',\n  minContrastRatio = 3,\n) {\n  let convertedForeground = namedColorToHex(foreground) || foreground\n  const convertedBackground = namedColorToHex(background) || background\n  const backgroundLuminance = getLuminance(convertedBackground)\n  let contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  const originalColor = convertedForeground\n  let coefficient = 0.05\n  while (contrastRatio < minContrastRatio) {\n    convertedForeground =\n      backgroundLuminance > 0.5\n        ? darken(originalColor, coefficient)\n        : lighten(originalColor, coefficient)\n    coefficient += 0.05\n    contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  }\n  return convertedForeground\n}\n","/* eslint-disable no-underscore-dangle */\nimport {\n  isOptionalType,\n  isUnionType,\n  isArrayType,\n  isMapType,\n  isLateType,\n} from 'mobx-state-tree'\n\n/**\n * get the inner type of an MST optional, array, or late type object\n *\n * @param {IModelType} type\n * @returns {IModelType}\n */\nexport function getSubType(type) {\n  let t\n  if (isOptionalType(type)) {\n    t = type._subtype || type.type\n  } else if (isArrayType(type) || isMapType(type)) {\n    t = type._subtype || type._subType || type.subType\n  } else if (typeof type.getSubType === 'function') {\n    return type.getSubType()\n  } else {\n    throw new TypeError('unsupported mst type')\n  }\n  if (!t) {\n    // debugger\n    throw new Error('failed to get subtype')\n  }\n  return t\n}\n\n/**\n * get the array of\n * @param {MST Union Type obj} unionType\n * @returns {Array<IModelType>}\n */\nexport function getUnionSubTypes(unionType) {\n  if (!isUnionType(unionType)) {\n    throw new TypeError('not an MST union type')\n  }\n  const t =\n    unionType._types ||\n    unionType.types ||\n    getSubType(unionType)._types ||\n    getSubType(unionType).types\n  if (!t) {\n    // debugger\n    throw new Error('failed to extract subtypes from mst union')\n  }\n  return t\n}\n\n/**\n * get the type of one of the properties of the given MST model type\n *\n * @param {IModelType} type\n * @param {string} propertyName\n * @returns {IModelType}\n */\nexport function getPropertyType(type, propertyName) {\n  const propertyType = type.properties[propertyName]\n  return propertyType\n}\n\n/**\n * get the base type from inside an MST optional type\n * @param {*} type\n */\nexport function getDefaultValue(type) {\n  if (!isOptionalType(type)) {\n    throw new TypeError('type must be an optional type')\n  }\n  return type._defaultValue || type.defaultValue\n}\n\n/** get the string values of an MST enumeration type */\nexport function getEnumerationValues(type) {\n  const subtypes = getUnionSubTypes(type)\n  // the subtypes should all be literals with a value member\n  return subtypes.map(t => t.value)\n}\n\nexport function resolveLateType(maybeLate) {\n  if (\n    !isUnionType(maybeLate) &&\n    !isArrayType(maybeLate) &&\n    isLateType(maybeLate)\n  ) {\n    return maybeLate.getSubType()\n  }\n  return maybeLate\n}\n","/**\n * fast low-level intersection of 2 coordinate ranges. assumes interbase coordinates.\n *\n * assumes `left <= right` for both ranges\n *\n * @returns array of [left, right], or [] if the ranges do not intersect. the choice of [] is because it allows destructuring array assignment without check for undefined return\n */\nexport function intersection2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  // this code is verbose because \"if\" statements are faster than Math.min and Math.max\n  if (right1 > left2 && left1 < right2 && right2 - left2 && right1 - left1) {\n    if (left1 > left2) {\n      if (right1 < right2) {\n        // 1     |-------|\n        //     |------------|\n        return [left1, right1]\n      }\n      // 2         |----|\n      //      |------|\n      return [left1, right2]\n    }\n    if (right1 < right2) {\n      // 3  |-----|\n      //       |------|\n      return [left2, right1]\n    }\n    // 4     |------------|\n    //         |-------|\n    return [left2, right2]\n  }\n  return []\n}\n\n/**\n * Return whether 2 interbase coordinate ranges intersect.\n *\n * @param left1 -\n * @param right1 -\n * @param left2 -\n * @param right2 -\n *\n * @returns true if the two ranges intersect\n */\nexport function doesIntersect2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return right1 > left2 && left1 < right2\n}\n\n/**\n * Return whether the first region is completely contained within the second region\n *\n * @param left1 - candidate inner region left\n * @param right1 - candidate inner region right\n * @param left2 - candidate outer region left\n * @param right2 - candidate outer region right\n */\nexport function isContainedWithin(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return left2 <= left1 && right2 >= right1\n}\n","type Func<T> = (value: BaseBlock, index: number, array: BaseBlock[]) => T\n\nexport class BlockSet {\n  blocks: BaseBlock[] = []\n\n  constructor(blocks: BaseBlock[] = []) {\n    this.blocks = blocks\n  }\n\n  push(block: BaseBlock) {\n    if (block instanceof ElidedBlock) {\n      if (this.blocks.length) {\n        const lastBlock = this.blocks[this.blocks.length - 1]\n        if (lastBlock instanceof ElidedBlock) {\n          lastBlock.push(block)\n          return\n        }\n      }\n    }\n\n    this.blocks.push(block)\n  }\n\n  getBlocks() {\n    return this.blocks\n  }\n\n  getRegions() {\n    return this.blocks.map(block => block.toRegion())\n  }\n\n  map<T, U = this>(func: Func<T>, thisarg?: U) {\n    return this.blocks.map(func, thisarg)\n  }\n\n  forEach<T, U = this>(func: Func<T>, thisarg?: U) {\n    return this.blocks.forEach(func, thisarg)\n  }\n\n  get length() {\n    return this.blocks.length\n  }\n\n  get totalWidthPx() {\n    return this.blocks.length\n      ? this.blocks.map(blocks => blocks.widthPx).reduce((a, b) => a + b)\n      : 0\n  }\n\n  get totalWidthPxWithoutBorders() {\n    return this.blocks.length\n      ? this.blocks\n          .filter(block => block.variant !== 'boundary')\n          .map(blocks => blocks.widthPx)\n          .reduce((a, b) => a + b)\n      : 0\n  }\n\n  get offsetPx() {\n    return this.blocks.length ? this.blocks[0].offsetPx : 0\n  }\n\n  get contentBlocks() {\n    return this.blocks.filter(block => block instanceof ContentBlock)\n  }\n\n  get totalBp() {\n    return this.contentBlocks\n      .map(block => block.end - block.start)\n      .reduce((a, b) => a + b, 0)\n  }\n}\n\nexport class BaseBlock {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n\n  public refName: string\n\n  public start: number\n\n  public end: number\n\n  public assemblyName: string\n\n  public key: string\n\n  public offsetPx: number\n\n  /**\n   * a block that should be shown as filled with data\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: any) {\n    Object.assign(this, data)\n    this.assemblyName = data.assemblyName\n    this.refName = data.refName\n    this.start = data.start\n    this.end = data.end\n    this.key = data.key\n    this.offsetPx = data.offsetPx\n  }\n\n  /**\n   * rename the reference sequence of this block and return a new one\n   *\n   * @param refName -\n   * @returns either a new block with a renamed reference sequence,\n   * or the same block, if the ref name is not actually different\n   */\n  renameReference(refName: string) {\n    if (this.refName && refName !== this.refName) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return new (this.constructor as any)({ ...this, refName })\n    }\n    return this\n  }\n\n  toRegion() {\n    return {\n      refName: this.refName,\n      start: this.start,\n      end: this.end,\n      assemblyName: this.assemblyName,\n      reversed: this.reversed,\n    }\n  }\n}\n\nexport class ContentBlock extends BaseBlock {}\n\n/**\n * marker block representing one or more blocks that are\n * too small to be shown at the current zoom level\n */\nexport class ElidedBlock extends BaseBlock {\n  public widthPx: number\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: Record<string, any>) {\n    super(data)\n    this.widthPx = data.widthPx\n  }\n\n  push(otherBlock: BaseBlock) {\n    this.elidedBlockCount += 1\n\n    if (otherBlock) {\n      this.refName = ''\n      this.start = 0\n      this.end = 0\n      this.widthPx += otherBlock.widthPx\n    }\n  }\n}\n\n/**\n * marker block that sits between two different displayed regions\n * and provides a thick border between them\n */\nexport class InterRegionPaddingBlock extends BaseBlock {}\n","/* eslint-disable no-restricted-globals */\nimport React from 'react'\nimport Path from 'svg-path-generator'\nimport Color from 'color'\nimport isNode from 'detect-node'\n\n// This is a ponyfill for the HTML5 OffscreenCanvas API.\nexport let createCanvas\nexport let createImageBitmap\nexport let ImageBitmapType\n\nconst weHave = {\n  realOffscreenCanvas: typeof OffscreenCanvas === 'function',\n  node: isNode,\n}\n\nexport class PonyfillOffscreenContext {\n  constructor(width, height) {\n    this.width = width\n    this.height = height\n    this.commands = []\n    this.currentFont = '12px Courier New, monospace'\n  }\n\n  // setters (no getters working)\n  set strokeStyle(style) {\n    if (style !== this.currentStrokeStyle) {\n      this.commands.push({ type: 'strokeStyle', style })\n      this.currentStrokeStyle = style\n    }\n  }\n\n  set fillStyle(style) {\n    if (style !== this.currentFillStyle) {\n      this.commands.push({ type: 'fillStyle', style })\n      this.currentFillStyle = style\n    }\n  }\n\n  set font(style) {\n    this.currentFont = style\n    this.commands.push({ type: 'font', style })\n  }\n\n  // methods\n  arc(...args) {\n    this.commands.push({ type: 'arc', args })\n  }\n\n  arcTo(...args) {\n    this.commands.push({ type: 'arcTo', args })\n  }\n\n  beginPath(...args) {\n    this.commands.push({ type: 'beginPath', args })\n  }\n\n  clearRect(...args) {\n    this.commands.push({ type: 'clearRect', args })\n  }\n\n  clip(...args) {\n    this.commands.push({ type: 'clip', args })\n  }\n\n  closePath(...args) {\n    this.commands.push({ type: 'closePath', args })\n  }\n\n  createLinearGradient(...args) {\n    this.commands.push({ type: 'createLinearGradient', args })\n  }\n\n  createPattern(...args) {\n    this.commands.push({ type: 'createPattern', args })\n  }\n\n  createRadialGradient(...args) {\n    this.commands.push({ type: 'createRadialGradient', args })\n  }\n\n  drawFocusIfNeeded(...args) {\n    this.commands.push({ type: 'drawFocusIfNeeded', args })\n  }\n\n  drawImage(...args) {\n    this.commands.push({ type: 'drawImage', args })\n  }\n\n  ellipse(...args) {\n    this.commands.push({ type: 'ellipse', args })\n  }\n\n  fill(...args) {\n    this.commands.push({ type: 'fill', args })\n  }\n\n  fillRect(...args) {\n    const [x, y, w, h] = args\n    if (x > this.width || x + w < 0) {\n      return\n    }\n    const nx = Math.max(x, 0)\n    const nw = nx + w > this.width ? this.width - nx : w\n    this.commands.push({ type: 'fillRect', args: [nx, y, nw, h] })\n  }\n\n  fillText(...args) {\n    // if (x > this.width || x + 1000 < 0) {\n    //   return\n    // }\n    this.commands.push({ type: 'fillText', args })\n  }\n\n  lineTo(...args) {\n    this.commands.push({ type: 'lineTo', args })\n  }\n\n  measureText(text) {\n    const height = +this.currentFont.match(/\\d+/)[0]\n    return {\n      width: (height / 2) * text.length,\n      height,\n    }\n  }\n\n  moveTo(...args) {\n    this.commands.push({ type: 'moveTo', args })\n  }\n\n  quadraticCurveTo(...args) {\n    this.commands.push({ type: 'quadraticCurveTo', args })\n  }\n\n  rect(...args) {\n    this.commands.push({ type: 'rect', args })\n  }\n\n  restore(...args) {\n    this.commands.push({ type: 'restore', args })\n  }\n\n  rotate(...args) {\n    this.commands.push({ type: 'rotate', args })\n  }\n\n  save(...args) {\n    this.commands.push({ type: 'save', args })\n  }\n\n  setLineDash(...args) {\n    this.commands.push({ type: 'setLineDash', args })\n  }\n\n  setTransform(...args) {\n    this.commands.push({ type: 'setTransform', args })\n  }\n\n  scale(...args) {\n    this.commands.push({ type: 'scale', args })\n  }\n\n  stroke(...args) {\n    this.commands.push({ type: 'stroke', args })\n  }\n\n  strokeRect(...args) {\n    this.commands.push({ type: 'strokeRect', args })\n  }\n\n  strokeText(...args) {\n    this.commands.push({ type: 'strokeText', args })\n  }\n\n  transform(...args) {\n    this.commands.push({ type: 'transform', args })\n  }\n\n  translate(...args) {\n    this.commands.push({ type: 'translate', args })\n  }\n\n  // unsupported\n  //   putImageData(...args)\n  //   createImageData(...args)\n  //   getImageData(...args)\n  //   getLineDash(...args)\n  //   getTransform(...args)\n}\n\nfunction splitColor(color) {\n  const fill = Color(color)\n  return { hex: fill.hex(), opacity: fill.alpha() }\n}\n\n// https://stackoverflow.com/a/5620441/2129219\nfunction parseFont(font) {\n  let fontFamily = null\n  let fontSize = null\n  let fontStyle = 'normal'\n  let fontWeight = 'normal'\n  let fontVariant = 'normal'\n  let lineHeight = 'normal'\n\n  const elements = font.split(/\\s+/)\n  let element\n  outer: while ((element = elements.shift())) {\n    switch (element) {\n      case 'normal':\n        break\n\n      case 'italic':\n      case 'oblique':\n        fontStyle = element\n        break\n\n      case 'small-caps':\n        fontVariant = element\n        break\n\n      case 'bold':\n      case 'bolder':\n      case 'lighter':\n      case '100':\n      case '200':\n      case '300':\n      case '400':\n      case '500':\n      case '600':\n      case '700':\n      case '800':\n      case '900':\n        fontWeight = element\n        break\n\n      default:\n        if (!fontSize) {\n          const parts = element.split('/')\n          fontSize = parts[0]\n          if (parts.length > 1) {\n            lineHeight = parts[1]\n          }\n          break\n        }\n\n        fontFamily = element\n        if (elements.length) {\n          fontFamily += ` ${elements.join(' ')}`\n        }\n        break outer\n    }\n  }\n\n  return {\n    fontStyle,\n    fontVariant,\n    fontWeight,\n    fontSize,\n    lineHeight,\n    fontFamily,\n  }\n}\nexport class PonyfillOffscreenCanvas {\n  constructor(width, height) {\n    this.width = width\n    this.height = height\n  }\n\n  getContext(type) {\n    if (type !== '2d') {\n      throw new Error(`unknown type ${type}`)\n    }\n    this.context = new PonyfillOffscreenContext(this.width, this.height)\n    return this.context\n  }\n\n  getSerializedSvg() {\n    let currentFill\n    let currentStroke\n    let currentPath = []\n    let rotation\n    let font\n\n    const nodes = []\n    this.context.commands.forEach((command, index) => {\n      if (command.type === 'font') {\n        if (command.style) {\n          // stackoverflow.com/questions/5618676\n          // skip lineHeight in the final usage\n          const { fontStyle, fontFamily, fontSize } = parseFont(command.style)\n          font = { fontStyle, fontFamily, fontSize }\n        }\n      }\n      if (command.type === 'fillStyle') {\n        if (command.style) {\n          currentFill = command.style\n        }\n      }\n      if (command.type === 'strokeStyle') {\n        if (command.style) {\n          currentStroke = command.style\n        }\n      }\n      if (command.type === 'fillRect') {\n        const [x, y, w, h] = command.args\n        const { hex, opacity } = splitColor(currentFill)\n        const ny = Math.min(y, y + h)\n        const nh = Math.abs(h)\n        nodes.push(\n          <rect\n            key={index}\n            fill={hex}\n            fillOpacity={opacity !== 1 ? opacity : undefined}\n            x={x.toFixed(3)}\n            y={ny.toFixed(3)}\n            width={w.toFixed(3)}\n            height={nh.toFixed(3)}\n          />,\n        )\n      }\n      if (command.type === 'fillText') {\n        const [text, x, y] = command.args\n        const { hex, opacity } = splitColor(currentFill)\n        nodes.push(\n          <text\n            key={index}\n            fill={hex}\n            fillOpacity={opacity !== 1 ? opacity : undefined}\n            x={x.toFixed(3)}\n            y={y.toFixed(3)}\n            {...font}\n          >\n            {text}\n          </text>,\n        )\n      }\n      if (command.type === 'beginPath') {\n        currentPath = []\n      }\n      if (command.type === 'moveTo') {\n        currentPath.push(command.args)\n      }\n      if (command.type === 'lineTo') {\n        currentPath.push(command.args)\n      }\n      if (command.type === 'closePath') {\n        /* do nothing */\n      }\n      if (command.type === 'fill') {\n        let path = Path().moveTo(...currentPath[0])\n        for (let i = 1; i < currentPath.length; i++) {\n          path = path.lineTo(...currentPath[i])\n        }\n        path.end()\n        const { hex, opacity } = splitColor(currentFill)\n        nodes.push(\n          <path\n            key={index}\n            fill={hex}\n            d={path}\n            fillOpacity={opacity !== 1 ? opacity : undefined}\n          />,\n        )\n      }\n      if (command.type === 'stroke') {\n        let path = Path().moveTo(...currentPath[0])\n        for (let i = 1; i < currentPath.length; i++) {\n          path = path.lineTo(...currentPath[i])\n        }\n        path.end()\n        const { hex, opacity } = splitColor(currentStroke)\n        nodes.push(\n          <path\n            key={index}\n            fill=\"none\"\n            stroke={hex}\n            fillOpacity={opacity !== 1 ? opacity : undefined}\n            d={path}\n          />,\n        )\n      }\n      if (command.type === 'rotate') {\n        rotation = (command.args[0] * 180) / Math.PI\n      }\n    })\n    return rotation ? (\n      <g transform={`rotate(${rotation})`}>{[...nodes]}</g>\n    ) : (\n      <>{[...nodes]}</>\n    )\n  }\n}\nif (weHave.realOffscreenCanvas) {\n  createCanvas = (width, height) => new OffscreenCanvas(width, height)\n  createImageBitmap = window.createImageBitmap || self.createImageBitmap\n  ImageBitmapType = window.ImageBitmap || self.ImageBitmap\n} else if (weHave.node) {\n  // use node-canvas if we are running in node (i.e. automated tests)\n  const { createCanvas: nodeCreateCanvas, Image } = require('canvas')\n  createCanvas = nodeCreateCanvas\n  createImageBitmap = async (canvas, ...otherargs) => {\n    if (otherargs.length) {\n      throw new Error(\n        'only one-argument uses of createImageBitmap are supported by the node offscreencanvas ponyfill',\n      )\n    }\n    const dataUri = canvas.toDataURL()\n    const img = new Image()\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(img)\n      img.onerror = reject\n      img.src = dataUri\n    })\n  }\n  ImageBitmapType = Image\n} else {\n  createCanvas = (width, height) => {\n    return new PonyfillOffscreenCanvas(width, height)\n  }\n  createImageBitmap = canvas => {\n    return canvas.context\n  }\n  ImageBitmapType = typeof 'StringArray'\n}\n","import { types, cast, getSnapshot, Instance } from 'mobx-state-tree'\nimport { clamp } from './index'\nimport { Feature } from './simpleFeature'\nimport { Region } from './types/mst'\nimport { Region as IRegion } from './types'\nimport calculateDynamicBlocks from './calculateDynamicBlocks'\nimport calculateStaticBlocks from './calculateStaticBlocks'\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n}\n\nconst Base1DView = types\n  .model('Base1DView', {\n    displayedRegions: types.array(Region),\n    bpPerPx: 0,\n    offsetPx: 0,\n    interRegionPaddingWidth: types.optional(types.number, 0),\n    minimumBlockWidth: types.optional(types.number, 0),\n  })\n  .volatile(() => ({\n    features: undefined as undefined | Feature[],\n    volatileWidth: 0,\n  }))\n  .actions(self => ({\n    setDisplayedRegions(regions: IRegion[]) {\n      self.displayedRegions = cast(regions)\n    },\n    setBpPerPx(val: number) {\n      self.bpPerPx = val\n    },\n    setVolatileWidth(width: number) {\n      self.volatileWidth = width\n    },\n  }))\n  .views(self => ({\n    get width() {\n      return self.volatileWidth\n    },\n\n    get displayedRegionsTotalPx() {\n      return this.totalBp / self.bpPerPx\n    },\n\n    get maxOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const leftPadding = 10\n      return this.displayedRegionsTotalPx - leftPadding\n    },\n\n    get minOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const rightPadding = 30\n      return -this.width + rightPadding\n    },\n    get totalBp() {\n      return self.displayedRegions\n        .map(a => a.end - a.start)\n        .reduce((a, b) => a + b, 0)\n    },\n\n    /**\n     * calculates the Px at which coord is found.\n     *\n     * @param refName - string, refName of region\n     * @param coord - number, bp to be translated to Px\n     * @param regionNumber - number, index of displayedRegion in displayedRegions array\n     */\n    bpToPx({\n      refName,\n      coord,\n      regionNumber,\n    }: {\n      refName: string\n      coord: number\n      regionNumber?: number\n    }) {\n      let offsetBp = 0\n\n      const interRegionPaddingBp = self.interRegionPaddingWidth * self.bpPerPx\n      const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n      const index = self.displayedRegions.findIndex((region, idx) => {\n        const len = region.end - region.start\n        if (\n          refName === region.refName &&\n          coord >= region.start &&\n          coord <= region.end\n        ) {\n          if (regionNumber ? regionNumber === idx : true) {\n            offsetBp += region.reversed\n              ? region.end - coord\n              : coord - region.start\n            return true\n          }\n        }\n\n        // add the interRegionPaddingWidth if the boundary is in the screen\n        // e.g. offset>0 && offset<width\n        if (\n          region.end - region.start > minimumBlockBp &&\n          offsetBp / self.bpPerPx > 0 &&\n          offsetBp / self.bpPerPx < this.width\n        ) {\n          offsetBp += len + interRegionPaddingBp\n        } else {\n          offsetBp += len\n        }\n        return false\n      })\n\n      const foundRegion = self.displayedRegions[index]\n      if (foundRegion) {\n        return Math.round(offsetBp / self.bpPerPx)\n      }\n\n      return undefined\n    },\n\n    pxToBp(px: number) {\n      let bpSoFar = 0\n      const bp = (self.offsetPx + px) * self.bpPerPx\n      const n = self.displayedRegions.length\n      if (bp < 0) {\n        const region = self.displayedRegions[0]\n        const offset = bp\n        return {\n          ...getSnapshot(region),\n          oob: true,\n          coord: region.reversed\n            ? Math.floor(region.end - offset) + 1\n            : Math.floor(region.start + offset) + 1,\n          offset,\n          index: 0,\n        }\n      }\n\n      const interRegionPaddingBp = self.interRegionPaddingWidth * self.bpPerPx\n      const minimumBlockBp = self.minimumBlockWidth * self.bpPerPx\n\n      for (let index = 0; index < self.displayedRegions.length; index += 1) {\n        const region = self.displayedRegions[index]\n        const len = region.end - region.start\n        const offset = bp - bpSoFar\n        if (len + bpSoFar > bp && bpSoFar <= bp) {\n          return {\n            ...getSnapshot(region),\n            oob: false,\n            offset,\n            coord: region.reversed\n              ? Math.floor(region.end - offset) + 1\n              : Math.floor(region.start + offset) + 1,\n            index,\n          }\n        }\n\n        // add the interRegionPaddingWidth if the boundary is in the screen\n        // e.g. offset>0 && offset<width\n        if (\n          region.end - region.start > minimumBlockBp &&\n          offset / self.bpPerPx > 0 &&\n          offset / self.bpPerPx < this.width\n        ) {\n          bpSoFar += len + interRegionPaddingBp\n        } else {\n          bpSoFar += len\n        }\n      }\n\n      if (bp >= bpSoFar) {\n        const region = self.displayedRegions[n - 1]\n        const len = region.end - region.start\n        const offset = bp - bpSoFar + len\n        return {\n          ...getSnapshot(region),\n          oob: true,\n          offset,\n          coord: region.reversed\n            ? Math.floor(region.end - offset) + 1\n            : Math.floor(region.start + offset) + 1,\n          index: n - 1,\n        }\n      }\n      return {\n        coord: 0,\n        index: 0,\n        start: 0,\n        refName: '',\n        oob: true,\n        assemblyName: '',\n        offset: 0,\n        reversed: false,\n      }\n    },\n  }))\n  .views(self => ({\n    get dynamicBlocks() {\n      return calculateDynamicBlocks(self)\n    },\n    get staticBlocks() {\n      return calculateStaticBlocks(self)\n    },\n    get currBp() {\n      return this.dynamicBlocks\n        .map(a => a.end - a.start)\n        .reduce((a, b) => a + b, 0)\n    },\n  }))\n  .actions(self => ({\n    setFeatures(features: Feature[]) {\n      self.features = features\n    },\n\n    zoomToDisplayedRegions(\n      leftPx: BpOffset | undefined,\n      rightPx: BpOffset | undefined,\n    ) {\n      if (leftPx === undefined || rightPx === undefined) {\n        return\n      }\n\n      const singleRefSeq =\n        leftPx.refName === rightPx.refName && leftPx.index === rightPx.index\n      // zooming into one displayed Region\n      if (\n        (singleRefSeq && rightPx.offset < leftPx.offset) ||\n        leftPx.index > rightPx.index\n      ) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const startOffset = {\n        start: leftPx.start,\n        end: leftPx.end,\n        index: leftPx.index,\n        offset: leftPx.offset,\n      }\n      const endOffset = {\n        start: rightPx.start,\n        end: rightPx.end,\n        index: rightPx.index,\n        offset: rightPx.offset,\n      }\n      if (startOffset && endOffset) {\n        this.moveTo(startOffset, endOffset)\n      } else {\n        throw new Error('regions not found')\n      }\n    },\n\n    // this makes a zoomed out view that shows all displayedRegions\n    // that makes the overview bar square with the scale bar\n    showAllRegions() {\n      self.bpPerPx = self.totalBp / self.width\n      self.offsetPx = 0\n    },\n    /**\n     * offset is the base-pair-offset in the displayed region, index is the index of the\n     * displayed region in the linear genome view\n     *\n     * @param start - object as `{start, end, offset, index}`\n     * @param end - object as `{start, end, offset, index}`\n     */\n    moveTo(start: BpOffset, end: BpOffset) {\n      // find locations in the modellist\n      let bpSoFar = 0\n\n      if (start.index === end.index) {\n        bpSoFar += end.offset - start.offset\n      } else {\n        const s = self.displayedRegions[start.index]\n        bpSoFar += s.end - s.start - start.offset\n        if (end.index - start.index >= 2) {\n          for (let i = start.index + 1; i < end.index; i += 1) {\n            bpSoFar +=\n              self.displayedRegions[i].end - self.displayedRegions[i].start\n          }\n        }\n        bpSoFar += end.offset\n      }\n      this.zoomTo(\n        bpSoFar /\n          (self.width -\n            self.interRegionPaddingWidth * (end.index - start.index)),\n      )\n\n      let bpToStart = 0\n      for (let i = 0; i < self.displayedRegions.length; i += 1) {\n        const region = self.displayedRegions[i]\n        if (start.index === i) {\n          bpToStart += start.offset\n          break\n        } else {\n          bpToStart += region.end - region.start\n        }\n      }\n      self.offsetPx =\n        Math.round(bpToStart / self.bpPerPx) +\n        self.interRegionPaddingWidth * start.index\n    },\n\n    zoomOut() {\n      this.zoomTo(self.bpPerPx * 2)\n    },\n\n    zoomIn() {\n      this.zoomTo(self.bpPerPx / 2)\n    },\n\n    zoomTo(newBpPerPx: number, offset = self.width / 2) {\n      const bpPerPx = newBpPerPx\n      if (bpPerPx === self.bpPerPx) {\n        return\n      }\n      const oldBpPerPx = self.bpPerPx\n      self.bpPerPx = bpPerPx\n\n      // tweak the offset so that the center of the view remains at the same coordinate\n      self.offsetPx = clamp(\n        Math.round(((self.offsetPx + offset) * oldBpPerPx) / bpPerPx - offset),\n        self.minOffset,\n        self.maxOffset,\n      )\n    },\n\n    scroll(distance: number) {\n      const oldOffsetPx = self.offsetPx\n      // the scroll is clamped to keep the linear genome on the main screen\n      const newOffsetPx = clamp(\n        self.offsetPx + distance,\n        self.minOffset,\n        self.maxOffset,\n      )\n      self.offsetPx = newOffsetPx\n      return newOffsetPx - oldOffsetPx\n    },\n  }))\n\nexport type Base1DViewStateModel = typeof Base1DView\nexport type Base1DViewModel = Instance<Base1DViewStateModel>\n\nexport default Base1DView\n","import { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { BaseFeatureDataAdapter } from '../../data_adapters/BaseAdapter'\nimport { checkAbortSignal, iterMap } from '../../util'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '../../util/simpleFeature'\nimport { Region } from '../../util/types'\nimport ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderResults as ServerSideRenderResults,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n} from './ServerSideRendererType'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  dataAdapter: BaseFeatureDataAdapter\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderResults extends ServerSideRenderResults {\n  features: Map<string, Feature>\n}\n\nexport interface ResultsSerialized extends ServerSideResultsSerialized {\n  features: SimpleFeatureSerialized[]\n}\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  features: Map<string, Feature>\n  blockKey: string\n}\n\nexport default class FeatureRendererType extends ServerSideRendererType {\n  /**\n   * replaces the `displayModel` param (which on the client is a MST model) with\n   * a stub that only contains the `selectedFeature`, since this is the only\n   * part of the track model that most renderers read. also serializes the\n   * config and regions to JSON from MST objects.\n   *\n   * @param args - the arguments passed to render\n   */\n  serializeArgsInClient(args: RenderArgs) {\n    const { displayModel, regions } = args\n    const serializedArgs = {\n      ...args,\n      displayModel: displayModel && {\n        id: displayModel.id,\n        selectedFeatureId: displayModel.selectedFeatureId,\n      },\n      regions: JSON.parse(JSON.stringify(regions)),\n    }\n    return super.serializeArgsInClient(serializedArgs)\n  }\n\n  /**\n   * Adds feature deserialization to base server-side result deserialization\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserializedFeatures = new Map<string, SimpleFeature>()\n    result.features.forEach(j => {\n      const f = SimpleFeature.fromJSON(j)\n      deserializedFeatures.set(String(f.id()), f)\n    })\n    const deserialized = super.deserializeResultsInClient(\n      {\n        ...result,\n        features: deserializedFeatures,\n      } as ServerSideResultsSerialized,\n      args,\n    )\n    return {\n      ...deserialized,\n      blockKey: args.blockKey,\n      features: deserializedFeatures,\n    }\n  }\n\n  /**\n   * Adds feature serialization to base server-side result serialization\n   *\n   * @param results - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    result: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const serialized = super.serializeResultsInWorker(result, args)\n    return {\n      ...serialized,\n      features: iterMap(result.features.values(), f => f.toJSON()),\n    }\n  }\n\n  /**\n   * will expand if soft clipping or feature glyphs are shown\n   *\n   * @param region - rendering region\n   * @param _renderArgs - render args, unused, may be used in deriving classes\n   */\n  getExpandedRegion(region: Region, _renderArgs: RenderArgsDeserialized) {\n    return region\n  }\n\n  /**\n   * use the dataAdapter to fetch the features to be rendered\n   *\n   * @param renderArgs -\n   * @returns Map of features as `{ id => feature, ... }`\n   */\n  async getFeatures(\n    renderArgs: RenderArgsDeserialized,\n  ): Promise<Map<string, Feature>> {\n    const { dataAdapter, signal, regions } = renderArgs\n    const features = new Map()\n\n    if (!regions || regions.length === 0) {\n      return features\n    }\n\n    const requestRegions = regions.map((r: Region) => {\n      // make sure the requested region's start and end are integers, if\n      // there is a region specification.\n      const requestRegion = { ...r }\n      if (requestRegion.start) {\n        requestRegion.start = Math.floor(requestRegion.start)\n      }\n      if (requestRegion.end) {\n        requestRegion.end = Math.ceil(requestRegion.end)\n      }\n      return requestRegion\n    })\n\n    const region = requestRegions[0]\n\n    const featureObservable =\n      requestRegions.length === 1\n        ? dataAdapter.getFeatures(\n            this.getExpandedRegion(region, renderArgs),\n            // @ts-ignore\n            renderArgs,\n          )\n        : // @ts-ignore\n          dataAdapter.getFeaturesInMultipleRegions(requestRegions, renderArgs)\n\n    await featureObservable\n      .pipe(\n        tap(() => checkAbortSignal(signal)),\n        filter(feature => this.featurePassesFilters(renderArgs, feature)),\n        tap(feature => {\n          const id = feature.id()\n          if (!id) {\n            throw new Error(`invalid feature id \"${id}\"`)\n          }\n          features.set(id, feature)\n        }),\n        ignoreElements(),\n      )\n      .toPromise()\n\n    return features\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    if (!renderArgs.filters) {\n      return true\n    }\n    return renderArgs.filters.passes(feature, renderArgs)\n  }\n\n  /**\n   * gets features and renders\n   *\n   * @param props - render args\n   */\n  async render(props: RenderArgsDeserialized): Promise<RenderResults> {\n    const features =\n      (props.features as undefined | Map<string, Feature>) ||\n      (await this.getFeatures(props))\n    const result = await super.render({ ...props, features })\n    return { ...result, features }\n  }\n}\n\nexport class NewFeatureRendererType extends ServerSideRendererType {}\n","/* eslint-disable no-underscore-dangle */\n/**\n * Heavily based on [quick-lru](https://www.npmjs.com/package/quick-lru)\n * (quick-lru didn't work for us because the export wouldn't compile in Webpack\n * properly)\n */\nclass QuickLRU {\n  constructor(options = {}) {\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    this.maxSize = options.maxSize\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size += 1\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key)\n    }\n\n    if (this.oldCache.has(key)) {\n      const value = this.oldCache.get(key)\n      this.oldCache.delete(key)\n      this._set(key, value)\n      return value\n    }\n\n    return undefined\n  }\n\n  set(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value)\n    } else {\n      this._set(key, value)\n    }\n\n    return this\n  }\n\n  has(key) {\n    return this.cache.has(key) || this.oldCache.has(key)\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this.oldCache.get(key)\n    }\n\n    return undefined\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size -= 1\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      yield item\n    }\n\n    for (const item of this.oldCache) {\n      const [key] = item\n      if (!this.cache.has(key)) {\n        yield item\n      }\n    }\n  }\n\n  get size() {\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize += 1\n      }\n    }\n\n    return this._size + oldCacheSize\n  }\n}\n\nexport default QuickLRU\n","import RBush from 'rbush'\nimport { objectFromEntries } from '../index'\nimport { RectTuple, SerializedLayout, BaseLayout } from './BaseLayout'\n\nfunction segmentsIntersect(\n  x1: number,\n  x2: number,\n  y1: number,\n  y2: number,\n): boolean {\n  return x2 >= y1 && y2 >= x1\n}\n\nexport default class GranularRectLayout<T> implements BaseLayout<T> {\n  private rectangles: Map<\n    string,\n    {\n      minY: number\n      maxY: number\n      minX: number\n      maxX: number\n      id: string\n    }\n  >\n\n  public maxHeightReached: boolean\n\n  private maxHeight: number\n\n  private rbush: RBush<{ id: string }>\n\n  private spacing: number\n\n  private pTotalHeight: number\n\n  private pitchX: number\n\n  constructor({\n    maxHeight = 10000,\n    spacing = 2,\n    pitchX = 1,\n  }: {\n    maxHeight?: number\n    spacing?: number\n    pitchX?: number\n  } = {}) {\n    // we keep holding onto the concept of pitchX so that when we zoom out\n    // layout is redone\n    this.pitchX = pitchX\n    this.maxHeightReached = false\n    this.rbush = new RBush()\n    this.spacing = spacing\n    this.rectangles = new Map()\n    this.maxHeight = Math.ceil(maxHeight)\n    this.pTotalHeight = 0\n  }\n\n  /**\n   * @returns top position for the rect, or Null if laying\n   *  out the rect would exceed maxHeight\n   */\n  addRect(\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data?: Record<string, T>,\n  ): number | null {\n    // add to rbush\n    const existingRecord = this.rectangles.get(id)\n    if (existingRecord) {\n      return existingRecord.minY\n    }\n\n    let currHeight = 0\n    let maxHeightReached = false\n    let found = false\n    while (\n      // 0.01 fudge factor to avoid edge-exact collision detection returning\n      // true\n      this.rbush.collides({\n        minX: left,\n        minY: currHeight + 0.01,\n        maxX: right,\n        maxY: currHeight + height - 0.01,\n      }) &&\n      currHeight <= this.maxHeight\n    ) {\n      found = true\n      currHeight += 1\n      if (currHeight + height >= this.maxHeight) {\n        maxHeightReached = true\n        break\n      }\n    }\n    if (found) {\n      currHeight += this.spacing\n    }\n\n    if (!maxHeightReached) {\n      const record = {\n        minX: left,\n        minY: currHeight,\n        maxX: right,\n        maxY: currHeight + height,\n        id,\n        data,\n      }\n      this.rbush.insert(record)\n      this.rectangles.set(id, record)\n      this.pTotalHeight = Math.min(\n        this.maxHeight,\n        Math.max(this.pTotalHeight, currHeight + height),\n      )\n    }\n    this.maxHeightReached = this.maxHeightReached || maxHeightReached\n    return maxHeightReached ? null : currHeight\n  }\n\n  collides() {\n    return false\n  }\n\n  /**\n   *  Given a range of X coordinates, deletes all data dealing with\n   *  the features.\n   */\n  discardRange(): void {}\n\n  hasSeen(id: string): boolean {\n    return this.rectangles.has(id)\n  }\n\n  getByCoord(x: number, y: number): Record<string, T> | string | undefined {\n    const rect = { minX: x, minY: y, maxX: x + 1, maxY: y + 1 }\n    return this.rbush.collides(rect) ? this.rbush.search(rect)[0].id : undefined\n  }\n\n  getByID(id: string): RectTuple | undefined {\n    const rect = this.rectangles.get(id)\n    if (rect) {\n      const { minX, maxX, minY, maxY } = rect\n      return [minX, minY, maxX, maxY]\n    }\n\n    return undefined\n  }\n\n  cleanup(): void {}\n\n  getTotalHeight(): number {\n    return this.pTotalHeight\n  }\n\n  get totalHeight() {\n    return this.getTotalHeight()\n  }\n\n  serializeRegion(region: { start: number; end: number }): SerializedLayout {\n    const regionRectangles: { [key: string]: RectTuple } = {}\n    for (const [id, rect] of this.rectangles.entries()) {\n      const { minX, maxX, minY, maxY } = rect\n      const { start, end } = region\n      if (segmentsIntersect(start, end, minX, maxX)) {\n        regionRectangles[id] = [minX, minY, maxX, maxY]\n      }\n    }\n\n    return {\n      rectangles: regionRectangles,\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached: this.maxHeightReached,\n    }\n  }\n\n  getRectangles(): Map<string, RectTuple> {\n    return new Map(\n      [...this.rectangles.entries()].map(([id, { minX, minY, maxX, maxY }]) => [\n        id,\n        [minX, minY, maxX, maxY],\n      ]),\n    )\n  }\n\n  toJSON(): SerializedLayout {\n    return {\n      rectangles: objectFromEntries(this.getRectangles()),\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached: this.maxHeightReached,\n    }\n  }\n}\n","import { objectFromEntries } from '..'\nimport {\n  RectTuple,\n  SerializedLayout,\n  BaseLayout,\n  Rectangle,\n} from './BaseLayout'\nimport RBush from 'rbush'\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\n\nexport default class PrecomputedLayout<T> implements BaseLayout<T> {\n  private rectangles: Map<string, RectTuple>\n\n  private totalHeight: number\n\n  public maxHeightReached: boolean\n\n  private rbush: RBush<Layout>\n\n  constructor({ rectangles, totalHeight, maxHeightReached }: SerializedLayout) {\n    this.rectangles = new Map(Object.entries(rectangles))\n    this.totalHeight = totalHeight\n    this.maxHeightReached = maxHeightReached\n    this.rbush = new RBush()\n    for (const [key, layout] of Object.entries(rectangles)) {\n      this.rbush.insert({\n        minX: layout[0],\n        minY: layout[1],\n        maxX: layout[2],\n        maxY: layout[3],\n        name: key,\n      })\n    }\n  }\n\n  addRect(id: string) {\n    const rect = this.rectangles.get(id)\n    if (!rect) {\n      throw new Error(`id ${id} not found in precomputed feature layout`)\n    }\n    // left, top, right, bottom\n    return rect[1]\n  }\n\n  /**\n   * returns a Map of `feature id -> rectangle`\n   */\n  getRectangles(): Map<string, RectTuple> {\n    return this.rectangles\n  }\n\n  getTotalHeight(): number {\n    return this.totalHeight\n  }\n\n  collides(_rect: Rectangle<T>, _top: number): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  getByCoord(x: number, y: number) {\n    const rect = { minX: x, minY: y, maxX: x + 1, maxY: y + 1 }\n    return this.rbush.collides(rect)\n      ? this.rbush.search(rect)[0].name\n      : undefined\n  }\n\n  getByID(id: string) {\n    return this.rectangles.get(id)\n  }\n\n  addRectToBitmap(_rect: Rectangle<T>, _data: Record<string, T>): void {\n    throw new Error('Method not implemented.')\n  }\n\n  discardRange(_left: number, _right: number): void {\n    throw new Error('Method not implemented.')\n  }\n\n  serializeRegion(_region: { start: number; end: number }): SerializedLayout {\n    throw new Error('Method not implemented.')\n  }\n\n  toJSON(): SerializedLayout {\n    return {\n      rectangles: objectFromEntries(this.rectangles),\n      totalHeight: this.totalHeight,\n      maxHeightReached: false,\n    }\n  }\n}\n","import deepEqual from 'fast-deep-equal'\nimport { AnyConfigurationModel } from '../../configuration/configurationSchema'\nimport GranularRectLayout from '../../util/layouts/GranularRectLayout'\nimport MultiLayout from '../../util/layouts/MultiLayout'\nimport PrecomputedLayout from '../../util/layouts/PrecomputedLayout'\nimport FeatureRendererType, {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsSerialized as FeatureRenderArgsSerialized,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n  RenderResults as FeatureRenderResults,\n  ResultsSerialized as FeatureResultsSerialized,\n  ResultsDeserialized as FeatureResultsDeserialized,\n} from './FeatureRendererType'\nimport { Region } from '../../util/types'\nimport { Feature } from '../../util/simpleFeature'\nimport { SerializedLayout, BaseLayout } from '../../util/layouts/BaseLayout'\nimport { readConfObject, isConfigurationModel } from '../../configuration'\nimport SerializableFilterChain from './util/serializableFilterChain'\nimport RpcManager from '../../rpc/RpcManager'\n\nexport interface LayoutSessionProps {\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters: SerializableFilterChain\n}\n\nexport type MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\nexport interface CachedLayout {\n  layout: MyMultiLayout\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n}\n\nexport class LayoutSession implements LayoutSessionProps {\n  config: AnyConfigurationModel\n\n  bpPerPx: number\n\n  filters: SerializableFilterChain\n\n  constructor(args: LayoutSessionProps) {\n    this.config = args.config\n    if (!isConfigurationModel(this.config)) {\n      throw new Error('configuration required')\n    }\n    this.bpPerPx = args.bpPerPx\n    this.filters = args.filters\n    this.update(args)\n  }\n\n  update(props: LayoutSessionProps) {\n    Object.assign(this, props)\n  }\n\n  makeLayout() {\n    return new MultiLayout(GranularRectLayout, {\n      maxHeight: readConfObject(this.config, 'maxHeight'),\n      displayMode: readConfObject(this.config, 'displayMode'),\n      pitchX: this.bpPerPx,\n      spacing: readConfObject(this.config, 'noSpacing') ? 0 : 2,\n    })\n  }\n\n  /**\n   * @param layout -\n   * @returns true if the given layout is a valid one to use for this session\n   */\n  cachedLayoutIsValid(cachedLayout: CachedLayout) {\n    return (\n      cachedLayout &&\n      cachedLayout.layout.subLayoutConstructorArgs.pitchX === this.bpPerPx &&\n      deepEqual(readConfObject(this.config), cachedLayout.config) &&\n      deepEqual(this.filters, cachedLayout.filters)\n    )\n  }\n\n  cachedLayout: CachedLayout | undefined\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        config: readConfObject(this.config),\n        filters: this.filters,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\nexport interface RenderArgs extends FeatureRenderArgs {\n  bpPerPx: number\n}\n\nexport interface RenderArgsSerialized extends FeatureRenderArgsSerialized {\n  bpPerPx: number\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n}\n\nexport interface RenderResults extends FeatureRenderResults {\n  layout: BaseLayout<Feature>\n}\n\nexport interface ResultsSerialized extends FeatureResultsSerialized {\n  maxHeightReached: boolean\n  layout: SerializedLayout\n}\n\nexport interface ResultsDeserialized extends FeatureResultsDeserialized {\n  maxHeightReached: boolean\n  layout: PrecomputedLayout<string>\n}\n\nexport default class BoxRendererType extends FeatureRendererType {\n  sessions: { [sessionId: string]: LayoutSession } = {}\n\n  getWorkerSession(props: LayoutSessionProps & { sessionId: string }) {\n    const { sessionId } = props\n    if (!this.sessions[sessionId]) {\n      this.sessions[sessionId] = this.createSession(props)\n    }\n    const session = this.sessions[sessionId]\n    session.update(props)\n    return session\n  }\n\n  // expands region for glyphs to use\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    if (!region) {\n      return region\n    }\n    const { bpPerPx, config } = renderArgs\n    const maxFeatureGlyphExpansion =\n      config === undefined\n        ? 0\n        : readConfObject(config, 'maxFeatureGlyphExpansion')\n    if (!maxFeatureGlyphExpansion) {\n      return region\n    }\n    const bpExpansion = Math.round(maxFeatureGlyphExpansion * bpPerPx)\n    return {\n      ...region,\n      start: Math.floor(Math.max(region.start - bpExpansion, 0)),\n      end: Math.ceil(region.end + bpExpansion),\n    }\n  }\n\n  createSession(props: LayoutSessionProps) {\n    return new LayoutSession(props)\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const { sessionId, regions } = args\n    let freed = 0\n    const session = this.sessions[sessionId]\n    if (!regions && session) {\n      delete this.sessions[sessionId]\n      freed = 1\n    }\n    if (session && regions) {\n      session.layout.discardRange(\n        regions[0].refName,\n        regions[0].start,\n        regions[0].end,\n      )\n    }\n    return freed + (await super.freeResourcesInClient(rpcManager, args))\n  }\n\n  deserializeLayoutInClient(json: SerializedLayout) {\n    return new PrecomputedLayout(json)\n  }\n\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const layout = this.deserializeLayoutInClient(result.layout)\n    const deserialized = super.deserializeResultsInClient(\n      { ...result, layout } as FeatureResultsSerialized,\n      args,\n    ) as ResultsDeserialized\n\n    // // debugging aid: check if there are features in `features` that are not in the layout\n    // const featureIds1 = iterMap(deserialized.features.values(), f =>\n    //   f.id(),\n    // ).sort()\n    // const featureIds2 = Object.keys(\n    //   deserialized.layout.toJSON().rectangles,\n    // ).sort()\n    // if (\n    //   featureIds1.length > featureIds2.length &&\n    //   !deserialized.layout.maxHeightReached\n    // )\n    //   debugger\n\n    return deserialized\n  }\n\n  createLayoutInWorker(args: RenderArgsDeserialized) {\n    const { regions } = args\n    const session = this.getWorkerSession(args)\n    const subLayout = session.layout.getSublayout(regions[0].refName)\n    return subLayout\n  }\n\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const serialized = super.serializeResultsInWorker(\n      results,\n      args,\n    ) as ResultsSerialized\n\n    const [region] = args.regions\n    serialized.layout = results.layout.serializeRegion(\n      this.getExpandedRegion(region, args),\n    )\n    if (serialized.layout.rectangles) {\n      serialized.features = serialized.features.filter(f => {\n        return Boolean(serialized.layout.rectangles[f.uniqueId])\n      })\n    }\n\n    serialized.maxHeightReached = serialized.layout.maxHeightReached\n    return serialized\n  }\n\n  /**\n   * gets layout and renders\n   *\n   * @param props - render args\n   */\n  async render(props: RenderArgsDeserialized): Promise<RenderResults> {\n    const layout =\n      (props.layout as undefined | BaseLayout<unknown>) ||\n      this.createLayoutInWorker(props)\n    const result = await super.render({ ...props, layout })\n    return { ...result, layout }\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { useRef, useState, useEffect } from 'react'\nimport { Button, Select, MenuItem, Typography } from '@material-ui/core'\nimport { useInView } from 'react-intersection-observer'\nimport copy from 'copy-to-clipboard'\nimport {\n  defaultCodonTable,\n  generateCodonTable,\n  revcom,\n  getSession,\n} from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\n\ninterface Feat {\n  start: number\n  end: number\n  type: string\n}\ninterface ParentFeat extends Feat {\n  strand?: number\n  subfeatures?: Feat[]\n}\n\nfunction stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter if they have the same ID\nfunction filterId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nfunction dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || filterId(item) !== filterId(ary[pos - 1]),\n  )\n}\n\nfunction revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nconst proteinColor = 'rgb(220,160,220)'\nconst intronColor = undefined\nconst cdsColor = 'rgb(220,220,180)'\nconst updownstreamColor = 'rgba(250,200,200)'\nconst utrColor = 'rgb(200,240,240)'\n\nfunction GeneCDS(props: { cds: Feat[]; sequence: string }) {\n  const { cds, sequence } = props\n\n  return <span style={{ background: cdsColor }}>{stitch(cds, sequence)}</span>\n}\n\nfunction GeneProtein(props: {\n  cds: Feat[]\n  sequence: string\n  codonTable: { [key: string]: string }\n}) {\n  const { cds, sequence, codonTable } = props\n  const str = stitch(cds, sequence)\n  let protein = ''\n  for (let i = 0; i < str.length; i += 3) {\n    // use & symbol for undefined codon, or partial slice\n    protein += codonTable[str.slice(i, i + 3)] || '&'\n  }\n\n  return <span style={{ background: proteinColor }}>{protein}</span>\n}\n\nfunction GenecDNA(props: {\n  utr: Feat[]\n  cds: Feat[]\n  exons: Feat[]\n  sequence: string\n  upstream?: string\n  downstream?: string\n  includeIntrons?: boolean\n  collapseIntron?: boolean\n}) {\n  const {\n    utr,\n    cds,\n    exons,\n    sequence,\n    upstream,\n    downstream,\n    includeIntrons,\n    collapseIntron,\n  } = props\n  const chunks = cds.length\n    ? [...cds, ...utr].sort((a, b) => a.start - b.start)\n    : exons\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      {chunks\n        .filter(f => f.start !== f.end)\n        .map((chunk, index) => {\n          const intron = sequence.slice(chunk.end, chunks[index + 1]?.start)\n          return (\n            <React.Fragment key={JSON.stringify(chunk)}>\n              <span\n                style={{\n                  background: chunk.type === 'CDS' ? cdsColor : utrColor,\n                }}\n              >\n                {sequence.slice(chunk.start, chunk.end)}\n              </span>\n              {includeIntrons && index < chunks.length - 1 ? (\n                <span style={{ background: intronColor }}>\n                  {collapseIntron && intron.length > 20\n                    ? `${intron.slice(0, 10)}...${intron.slice(-10)}`\n                    : intron}\n                </span>\n              ) : null}\n            </React.Fragment>\n          )\n        })}\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n\n// calculates UTRs using impliedUTRs logic\nfunction calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport const SequencePanel = React.forwardRef<\n  HTMLDivElement,\n  {\n    sequence: { seq: string; upstream: string; downstream: string }\n    feature: ParentFeat\n    mode: string\n  }\n>((props, ref) => {\n  const { feature, mode } = props\n  let {\n    sequence: { seq: sequence, upstream = '', downstream = '' },\n  } = props\n\n  const { subfeatures } = feature\n  const codonTable = generateCodonTable(defaultCodonTable)\n\n  if (!subfeatures) {\n    return null\n  }\n\n  const children = subfeatures\n    .sort((a, b) => a.start - b.start)\n    .map(sub => {\n      return {\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n      }\n    })\n\n  // we filter duplicate entries in cds and exon lists duplicate entries may be\n  // rare but was seen in Gencode v36 track NCList, likely a bug on GFF3 or\n  // probably worth ignoring here (produces broken protein translations if\n  // included)\n  //\n  // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n  // transcript ENST00000445597.6\n  //\n  // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n\n  let cds = dedupe(children.filter(sub => sub.type === 'CDS'))\n  let utr = dedupe(children.filter(sub => sub.type.match(/utr/i)))\n  let exons = dedupe(children.filter(sub => sub.type === 'exon'))\n\n  if (!utr.length && cds.length && exons.length) {\n    utr = calculateUTRs(cds, exons)\n  }\n\n  if (feature.strand === -1) {\n    // doing this in a single assignment is needed because downstream and\n    // upstream are swapped so this avoids a temp variable\n    ;[sequence, upstream, downstream] = [\n      revcom(sequence),\n      revcom(downstream),\n      revcom(upstream),\n    ]\n    cds = revlist(cds, sequence.length)\n    exons = revlist(exons, sequence.length)\n    utr = revlist(utr, sequence.length)\n  }\n\n  return (\n    <div ref={ref} data-testid=\"sequence_panel\">\n      {mode === 'cds' ? (\n        <GeneCDS cds={cds} sequence={sequence} />\n      ) : mode === 'cdna' ? (\n        <GenecDNA exons={exons} cds={cds} utr={utr} sequence={sequence} />\n      ) : mode === 'protein' ? (\n        <GeneProtein cds={cds} codonTable={codonTable} sequence={sequence} />\n      ) : mode === 'gene' ? (\n        <GenecDNA\n          exons={exons}\n          cds={cds}\n          utr={utr}\n          sequence={sequence}\n          includeIntrons\n        />\n      ) : mode === 'gene_collapsed_intron' ? (\n        <GenecDNA\n          exons={exons}\n          cds={cds}\n          sequence={sequence}\n          utr={utr}\n          includeIntrons\n          collapseIntron\n        />\n      ) : mode === 'gene_updownstream' ? (\n        <GenecDNA\n          exons={exons}\n          cds={cds}\n          sequence={sequence}\n          utr={utr}\n          upstream={upstream}\n          downstream={downstream}\n          includeIntrons\n        />\n      ) : mode === 'gene_updownstream_collapsed_intron' ? (\n        <GenecDNA\n          exons={exons}\n          cds={cds}\n          sequence={sequence}\n          utr={utr}\n          upstream={upstream}\n          downstream={downstream}\n          includeIntrons\n          collapseIntron\n        />\n      ) : (\n        <div>Unknown type</div>\n      )}\n    </div>\n  )\n})\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails(props: BaseProps) {\n  const { model, feature } = props\n  const parentFeature = (feature as unknown) as ParentFeat\n  const hasCDS = parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n\n  const { ref, inView } = useInView()\n  const [sequence, setSequence] = useState<{\n    seq: string\n    upstream: string\n    downstream: string\n  }>()\n  const [error, setError] = useState<string>()\n  const [mode, setMode] = useState(hasCDS ? 'cds' : 'cdna')\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    let finished = false\n    if (!model || !inView) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        region: {\n          start,\n          end,\n          refName: assembly.getCanonicalRefName(refName),\n        },\n      })\n\n      const [feat] = feats as Feature[]\n      if (!feat) {\n        throw new Error(\n          `sequence not found for feature with refName:${refName}`,\n        )\n      }\n      return feat.get('seq') as string\n    }\n    ;(async () => {\n      try {\n        const {\n          start: s,\n          end: e,\n          refName,\n        } = feature as SimpleFeatureSerialized & {\n          refName: string\n          start: number\n          end: number\n        }\n        const seq = await fetchSeq(s, e, refName)\n        const upstream = await fetchSeq(Math.max(0, s - 500), s, refName)\n        const downstream = await fetchSeq(e, e + 500, refName)\n        if (!finished) {\n          setSequence({ seq, upstream, downstream })\n        }\n      } catch (e) {\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, inView, model])\n\n  const loading = !sequence\n\n  return (\n    <div ref={ref}>\n      <Select\n        value={mode}\n        onChange={event => setMode(event.target.value as string)}\n      >\n        {hasCDS ? <MenuItem value=\"cds\">CDS</MenuItem> : null}\n        {hasCDS ? <MenuItem value=\"protein\">Protein</MenuItem> : null}\n        <MenuItem value=\"gene\">Gene w/ introns</MenuItem>\n        <MenuItem value=\"gene_collapsed_intron\">\n          Gene w/ 10bp of intron\n        </MenuItem>\n        <MenuItem value=\"gene_updownstream\">\n          Gene w/ 500bp up+down stream\n        </MenuItem>\n        <MenuItem value=\"gene_updownstream_collapsed_intron\">\n          Gene w/ 500bp up+down stream w/ 10bp intron\n        </MenuItem>\n        <MenuItem value=\"cdna\">cDNA</MenuItem>\n      </Select>\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        onClick={() => {\n          if (seqPanelRef.current) {\n            copy(seqPanelRef.current.innerHTML, { format: 'text/html' })\n            setCopied(true)\n            setTimeout(() => {\n              setCopied(false)\n            }, 1000)\n          }\n        }}\n      >\n        {copied ? 'Copied to clipboard!' : 'Copy'}\n      </Button>\n      <div data-testid=\"feature_sequence\">\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : loading ? (\n          <div>Loading gene sequence...</div>\n        ) : sequence ? (\n          <div style={{ fontFamily: 'monospace', wordWrap: 'break-word' }}>\n            <SequencePanel\n              ref={seqPanelRef}\n              feature={parentFeature}\n              mode={mode}\n              sequence={sequence}\n            />\n          </div>\n        ) : (\n          <div>No sequence found</div>\n        )}\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any,react/prop-types */\nimport React from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  Tooltip,\n} from '@material-ui/core'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { getConf } from '../configuration'\nimport { measureText, getSession } from '../util'\nimport SanitizedHTML from '../ui/SanitizedHTML'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerialized } from '../util/simpleFeature'\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: '#FFFFFF',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: '90px',\n    maxWidth: '150px',\n    borderBottom: '1px solid #0003',\n    background: theme.palette.grey[200],\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.grey[100],\n    border: `1px solid ${theme.palette.grey[300]}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const classes = useStyles()\n  return (\n    <Accordion\n      defaultExpanded={defaultExpanded}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n}) => {\n  const classes = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={clsx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName}>{val}</div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n}) => {\n  const classes = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} description={description} name={name} />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const classes = useStyles()\n  return (\n    <>\n      {value.length === 1 ? (\n        isObject(value[0]) ? (\n          <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n        ) : (\n          <div className={classes.field}>\n            <FieldName prefix={prefix} description={description} name={name} />\n            <BasicValue value={value[0]} />\n          </div>\n        )\n      ) : value.every(val => isObject(val)) ? (\n        value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))\n      ) : (\n        <div className={classes.field}>\n          <FieldName prefix={prefix} description={description} name={name} />\n          {value.map((val, i) => (\n            <div\n              key={JSON.stringify(val) + '-' + i}\n              className={classes.fieldSubvalue}\n            >\n              <BasicValue value={val} />\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const { refName, start, end, strand } = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    strand: number\n    refName: string\n  }\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const strandStr = strandMap[strand as number] ? `(${strandMap[strand]})` : ''\n  const displayStart = (start + 1).toLocaleString('en-US')\n  const displayEnd = end.toLocaleString('en-US')\n  const displayRef = refName ? `${refName}:` : ''\n  const displayedDetails: Record<string, any> = {\n    ...feature,\n    length: (end - start).toLocaleString('en-US'),\n    position: `${displayRef}${displayStart}..${displayEnd} ${strandStr}`,\n  }\n\n  const coreRenderedDetails = [\n    'Position',\n    'Description',\n    'Name',\n    'Length',\n    'Type',\n  ]\n  return (\n    <>\n      {coreRenderedDetails\n        .map(key => [key, displayedDetails[key.toLowerCase()]])\n        .filter(([, value]) => value !== null && value !== undefined)\n        .map(([key, value]) => (\n          <SimpleValue key={key} name={key} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => JSX.Element\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n}\n\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      width: Math.max(\n        ...rows.map(row => {\n          const result = String(row[val])\n          return Math.min(Math.max(measureText(result, 14) + 50, 80), 1000)\n        }),\n      ),\n    }))\n\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height:\n              Math.min(rows.length, 100) * 20 +\n              50 +\n              (rows.length < 100 ? 0 : 50),\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={20}\n            headerHeight={25}\n            rows={rows}\n            rowsPerPageOptions={[]}\n            hideFooterRowCount\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={rows.length < 100}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// arr = ['a','b'], obj = {a:{b:'hello}}, returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nexport const Attributes: React.FunctionComponent<AttributeProps> = props => {\n  const {\n    attributes,\n    omit = [],\n    descriptions,\n    formatter = val => val,\n    prefix = [],\n  } = props\n  const omits = [...omit, ...globalOmit]\n\n  return (\n    <>\n      {Object.entries(attributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          if (\n            Array.isArray(value) &&\n            value.length > 2 &&\n            value.every(val => isObject(val))\n          ) {\n            return (\n              <DataGridDetails\n                key={key}\n                prefix={prefix}\n                name={key}\n                value={value}\n              />\n            )\n          }\n\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            return (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          }\n\n          if (isObject(value)) {\n            return (\n              <Attributes\n                omit={omits}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          }\n\n          return (\n            <SimpleValue\n              key={key}\n              name={key}\n              value={formatter(value, key)}\n              description={description}\n              prefix={prefix}\n            />\n          )\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => JSX.Element\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized & { name?: string; id?: string }\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => JSX.Element\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name, id, type = '', subfeatures } = feature\n  const slug = name || id || ''\n  const shortName = slug.length > 20 ? `${slug}...` : slug\n  const title = `${shortName}${type ? ` - ${type}` : ''}`\n  const session = getSession(model)\n  const defSeqTypes = ['mRNA', 'transcript']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defSeqTypes\n\n  return (\n    <BaseCard title={title}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={[...omit, ...coreDetails]}\n      />\n\n      {sequenceTypes.includes(feature.type) ? (\n        <ErrorBoundary\n          FallbackComponent={({ error }) => (\n            <Typography color=\"error\">\n              Failed to fetch sequence for feature: {`${error}`}\n            </Typography>\n          )}\n        >\n          <SequenceFeatureDetails {...props} />\n        </ErrorBoundary>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard\n          title=\"Subfeatures\"\n          defaultExpanded={!sequenceTypes.includes(feature.type)}\n        >\n          {subfeatures.map((sub: any) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer((props: BaseInputProps) => {\n  const { model } = props\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n  const feature = JSON.parse(JSON.stringify(featureData))\n\n  if (isEmpty(feature)) {\n    return null\n  }\n  return <FeatureDetails model={model} feature={feature} />\n})\n\nexport default BaseFeatureDetails\n","import { ThemeProvider } from '@material-ui/core/styles'\nimport React, { useEffect, useRef } from 'react'\nimport { hydrate, unmountComponentAtNode } from 'react-dom'\nimport { createJBrowseTheme } from '../../ui'\nimport { rIC } from '../../util'\nimport { ResultsSerialized, RenderArgs } from './ServerSideRendererType'\n\ninterface ServerSideRenderedContentProps extends ResultsSerialized, RenderArgs {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RenderingComponent: React.ComponentType<any>\n}\n\nexport default function ServerSideRenderedContent(\n  props: ServerSideRenderedContentProps,\n) {\n  const ssrContainerNode = useRef<HTMLDivElement>(null)\n\n  const { theme, html, RenderingComponent, ...rest } = props\n\n  const jbrowseTheme = createJBrowseTheme(theme)\n\n  useEffect(() => {\n    const domNode = ssrContainerNode.current\n    function doHydrate() {\n      if (domNode) {\n        if (domNode) {\n          unmountComponentAtNode(domNode)\n        }\n        domNode.innerHTML = html\n\n        // defer main-thread rendering and hydration for when\n        // we have some free time. helps keep the framerate up.\n        //\n        // note: the timeout param to rIC below helps when you are doing\n        // a long continuous scroll, it forces it to evaluate because\n        // otherwise the continuous scroll would never give it time to do\n        // so\n        rIC(\n          () => {\n            hydrate(\n              <ThemeProvider theme={jbrowseTheme}>\n                <RenderingComponent {...rest} />\n              </ThemeProvider>,\n              domNode,\n            )\n          },\n          { timeout: 300 },\n        )\n      }\n    }\n\n    doHydrate()\n\n    return () => {\n      if (domNode) {\n        unmountComponentAtNode(domNode)\n      }\n    }\n  }, [html, jbrowseTheme, rest])\n\n  return (\n    <div\n      ref={ssrContainerNode}\n      data-html-size={html.length}\n      className=\"ssr-container\"\n    />\n  )\n}\n","import React from 'react'\nimport { ThemeOptions } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { renderToString } from 'react-dom/server'\n\nimport {\n  SnapshotOrInstance,\n  SnapshotIn,\n  getSnapshot,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport { checkAbortSignal, updateStatus } from '../../util'\nimport RendererType, { RenderProps, RenderResults } from './RendererType'\nimport SerializableFilterChain, {\n  SerializedFilterChain,\n} from './util/serializableFilterChain'\nimport { AnyConfigurationModel } from '../../configuration/configurationSchema'\nimport RpcManager from '../../rpc/RpcManager'\nimport { createJBrowseTheme } from '../../ui'\nimport ServerSideRenderedContent from './ServerSideRenderedContent'\n\ninterface BaseRenderArgs extends RenderProps {\n  sessionId: string\n  // Note that signal serialization happens after serializeArgsInClient and\n  // deserialization happens before deserializeArgsInWorker\n  signal?: AbortSignal\n  theme: ThemeOptions\n  exportSVG: { rasterizeLayers?: boolean }\n}\n\nexport interface RenderArgs extends BaseRenderArgs {\n  config: SnapshotOrInstance<AnyConfigurationModel>\n  filters: SerializableFilterChain\n}\n\nexport interface RenderArgsSerialized extends BaseRenderArgs {\n  statusCallback?: Function\n  config: SnapshotIn<AnyConfigurationModel>\n  filters: SerializedFilterChain\n}\nexport interface RenderArgsDeserialized extends BaseRenderArgs {\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n}\n\nexport type { RenderResults }\n\nexport interface ResultsSerialized extends Omit<RenderResults, 'reactElement'> {\n  html: string\n}\n\nexport type ResultsDeserialized = RenderResults\n\nexport default class ServerSideRenderer extends RendererType {\n  /**\n   * directly modifies the render arguments to prepare them to be serialized and\n   * sent to the worker.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n  serializeArgsInClient(args: RenderArgs): RenderArgsSerialized {\n    return {\n      ...args,\n      config: isStateTreeNode(args.config)\n        ? getSnapshot(args.config)\n        : args.config,\n      filters: args.filters && args.filters.toJSON().filters,\n    }\n  }\n\n  /**\n   * Deserialize the render results from the worker in the client. Includes\n   * hydrating of the React HTML string, and not hydrating the result if SVG is\n   * being rendered\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    results: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const { html, ...rest } = results\n\n    // if we are rendering svg, we skip hydration\n    if (args.exportSVG) {\n      // only return the results if the renderer explicitly has\n      // this.supportsSVG support to avoid garbage being rendered in SVG\n      // document\n      return {\n        ...results,\n        html: this.supportsSVG\n          ? results.html\n          : '<text y=\"12\" fill=\"black\">SVG export not supported for this track</text>',\n      }\n    }\n\n    // hydrate results using ServerSideRenderedContent\n    return {\n      ...rest,\n      reactElement: (\n        <ServerSideRenderedContent\n          {...args}\n          {...results}\n          RenderingComponent={this.ReactComponent}\n        />\n      ),\n    }\n  }\n\n  /**\n   * modifies the passed arguments object to inflate arguments as necessary.\n   * called in the worker process.\n   *\n   * @param args - the converted arguments to modify\n   */\n  deserializeArgsInWorker(args: RenderArgsSerialized): RenderArgsDeserialized {\n    const deserialized = ({ ...args } as unknown) as RenderArgsDeserialized\n    const config = this.configSchema.create(args.config || {}, {\n      pluginManager: this.pluginManager,\n    })\n    deserialized.config = config\n    deserialized.filters = new SerializableFilterChain({\n      filters: args.filters,\n    })\n\n    return deserialized\n  }\n\n  /**\n   * Serialize results of the render to send them to the client. Includes\n   * rendering React to an HTML string.\n   *\n   * @param results - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const html = renderToString(\n      <ThemeProvider theme={createJBrowseTheme(args.theme)}>\n        {results.reactElement}\n      </ThemeProvider>,\n    )\n    delete results.reactElement\n    return { ...results, html }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then calls\n   * \"CoreRender\" with the RPC manager.\n   *\n   * @param rpcManager - RPC mananger\n   * @param args - render args\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    return rpcManager.call(\n      args.sessionId,\n      'CoreRender',\n      args,\n    ) as Promise<ResultsSerialized>\n  }\n\n  /**\n   * Render method called on the worker. `render` is called here in server-side\n   * rendering\n   *\n   * @param args - serialized render args\n   */\n  async renderInWorker(args: RenderArgsSerialized): Promise<ResultsSerialized> {\n    const { signal, statusCallback = () => {} } = args\n    checkAbortSignal(signal)\n    const deserializedArgs = this.deserializeArgsInWorker(args)\n\n    checkAbortSignal(signal)\n    const results = await updateStatus('Rendering plot', statusCallback, () =>\n      this.render(deserializedArgs),\n    )\n    checkAbortSignal(signal)\n\n    // serialize the results for passing back to the main thread.\n    // these will be transmitted to the main process, and will come out\n    // as the result of renderRegionWithWorker.\n    const serialized = await updateStatus(\n      'Serializing results',\n      statusCallback,\n      () => this.serializeResultsInWorker(results, deserializedArgs),\n    )\n    return serialized\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const serializedArgs = this.serializeArgsInClient(args)\n\n    const freed = this.freeResources()\n    const freedRpc = (await rpcManager.call(\n      args.sessionId,\n      'CoreFreeResources',\n      serializedArgs,\n    )) as number\n    return freed + freedRpc\n  }\n}\n","import { Observable, fromEvent } from 'rxjs'\n\nclass AbortError extends Error {\n  public code: string | undefined\n}\n\n/**\n * properly check if the given AbortSignal is aborted.\n * per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * for convenience, passing `undefined` is a no-op\n *\n * @param signal -\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal): void {\n  if (!signal) {\n    return\n  }\n\n  if (!(signal instanceof AbortSignal)) {\n    throw new TypeError('must pass an AbortSignal')\n  }\n\n  if (signal.aborted) {\n    throw makeAbortError()\n  }\n}\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  // it was observed that an actual timeout is needed to get the aborting (wrap\n  // hicrenderer in a try catch, console.error the error, and rethrow the error\n  // to see). using await Promise.resolve() did not appear to allow aborting to\n  // occur\n  await timeout(1)\n  checkAbortSignal(signal)\n}\n\nexport function makeAbortError() {\n  if (typeof DOMException !== 'undefined') {\n    return new DOMException('aborted', 'AbortError')\n  }\n  const e = new AbortError('aborted')\n  e.code = 'ERR_ABORTED'\n  return e\n}\n\nexport function observeAbortSignal(signal?: AbortSignal): Observable<Event> {\n  if (!signal) {\n    return Observable.create()\n  }\n  return fromEvent(signal, 'abort')\n}\n\n/**\n * check if the given exception was caused by an operation being intentionally aborted\n * @param exception -\n */\nexport function isAbortException(exception: Error): boolean {\n  return (\n    // DOMException\n    exception.name === 'AbortError' ||\n    // standard-ish non-DOM abort exception\n    (exception as AbortError).code === 'ERR_ABORTED' ||\n    // message contains aborted for bubbling through RPC\n    // things we have seen that we want to catch here\n    // Error: aborted\n    // AbortError: aborted\n    // AbortError: The user aborted a request.\n    !!exception.message.match(/\\b(aborted|AbortError)\\b/i)\n  )\n}\n","import createJexlInstance from './jexl'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst compilationCache: Record<string, any> = {}\n\n// revert function strings back to main, create a different file for jexlStrings.ts\n// pass the jexl property of the pluginManager as a param\n\n/**\n * compile a jexlExpression to a string\n *\n * @param str - string of code like `jexl:...`\n * @param options -\n */\nexport function stringToJexlExpression(\n  str: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl?: any,\n) {\n  const cacheKey = `nosig|${str}`\n  if (!compilationCache[cacheKey]) {\n    const match = str.startsWith('jexl:')\n    if (!match) {\n      throw new Error('string does not appear to be in jexl format')\n    }\n    const code = str.split('jexl:')[1]\n    const compiled = jexl\n      ? jexl.compile(`${code}`)\n      : createJexlInstance().compile(`${code}`)\n    compilationCache[cacheKey] = compiled\n  }\n\n  return compilationCache[cacheKey]\n}\n","import React from 'react'\nimport escapeHTML from 'escape-html'\nimport dompurify from 'dompurify'\n\n// source https://github.com/sindresorhus/html-tags/blob/master/html-tags.json\n// with some random uncommon ones removed. note: we just use this to run the content\n// through dompurify without escaping if we see an htmlTag from this list\n// otherwise we escape angle brackets and things prematurely because it might be\n// something like <TRA> in VCF. Ref #657\nconst htmlTags = [\n  'a',\n  'b',\n  'br',\n  'code',\n  'div',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'i',\n  'img',\n  'li',\n  'p',\n  'pre',\n  'span',\n  'small',\n  'strong',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'u',\n  'ul',\n]\n\n// adapted from is-html https://github.com/sindresorhus/is-html/blob/master/index.js\nconst full = new RegExp(htmlTags.map(tag => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\nexport function isHTML(str: string) {\n  return full.test(str)\n}\n\nexport default function SanitizedHTML({ html }: { html: string }) {\n  const value = isHTML(html) ? html : escapeHTML(html)\n\n  // eslint-disable-next-line react/no-danger\n  return <div dangerouslySetInnerHTML={{ __html: dompurify.sanitize(value) }} />\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport { ElementId } from '../../util/types/mst'\nimport { MenuItem } from '../../ui'\n\nconst BaseViewModel = types\n  .model('BaseView', {\n    id: ElementId,\n    displayName: types.maybe(types.string),\n  })\n  .volatile((/* self */) => ({\n    width: 800,\n  }))\n  .views((/* self */) => ({\n    get menuItems(): MenuItem[] {\n      return []\n    },\n  }))\n  .actions(self => ({\n    setDisplayName(name: string) {\n      self.displayName = name\n    },\n    setWidth(newWidth: number) {\n      self.width = newWidth\n    },\n  }))\n\nexport default BaseViewModel\n// eslint-disable-next-line @typescript-eslint/no-empty-interface,@typescript-eslint/interface-name-prefix\nexport interface IBaseViewModel extends Instance<typeof BaseViewModel> {}\n","import { stringToJexlExpression } from '../../../util/jexlStrings'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype FilterExpression = (...args: Record<string, any>[] | any[]) => boolean\n\ninterface Filter {\n  string: string\n  expr: FilterExpression\n}\n\nexport type SerializedFilterChain = string[]\n\nexport default class SerializableFilterChain {\n  filterChain: Filter[]\n\n  constructor({ filters = [] }: { filters: SerializedFilterChain }) {\n    this.filterChain = filters.map(inputFilter => {\n      if (typeof inputFilter === 'string') {\n        const expr = stringToJexlExpression(inputFilter) as FilterExpression\n        return { expr, string: inputFilter }\n      }\n      throw new Error(`invalid inputFilter string \"${inputFilter}\"`)\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  passes(...args: any[]) {\n    for (let i = 0; i < this.filterChain.length; i += 1) {\n      if (\n        // @ts-ignore\n        !this.filterChain[i].expr.evalSync({ feature: args[0] })\n      ) {\n        return false\n      }\n    }\n    return true\n  }\n\n  toJSON() {\n    return { filters: this.filterChain.map(f => f.string) }\n  }\n\n  static fromJSON(json: { filters: SerializedFilterChain }) {\n    return new SerializableFilterChain(json)\n  }\n}\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\n\n/* eslint-disable no-underscore-dangle */\n\n/**\n * VCF Feature creation with lazy genotype evaluation.\n */\ninterface Samples {\n  [key: string]: {\n    [key: string]: { values: string[] | number[] | null }\n  }\n}\nexport interface Breakend {\n  MateDirection: string\n  Replacement: string\n  MatePosition: string\n  Join: string\n}\ninterface FeatureData {\n  [key: string]: unknown\n  refName: string\n  start: number\n  end: number\n  description?: string\n  type?: string\n  name?: string\n  aliases?: string[]\n  samples?: Samples\n}\n\nexport default class VCFFeature implements Feature {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private variant: any\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private parser: any\n\n  private data: FeatureData\n\n  private _id: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(args: { variant: any; parser: any; id: string }) {\n    this.variant = args.variant\n    this.parser = args.parser\n    this.data = this.dataFromVariant(this.variant)\n    this._id = args.id\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(field: string): any {\n    if (field === 'samples') {\n      return this.variant.SAMPLES\n    }\n    return this.data[field] || this.variant[field]\n  }\n\n  set(): void {}\n\n  parent(): undefined {\n    return undefined\n  }\n\n  children(): undefined {\n    return undefined\n  }\n\n  tags(): string[] {\n    const t = [\n      ...Object.keys(this.data),\n      ...Object.keys(this.variant),\n      'samples',\n    ]\n    return t\n  }\n\n  id(): string {\n    return this._id\n  }\n\n  dataFromVariant(variant: {\n    REF: string\n    POS: number\n    ALT: (string | Breakend)[]\n    CHROM: string\n    INFO: any // eslint-disable-line @typescript-eslint/no-explicit-any\n    ID: string[]\n  }): FeatureData {\n    const { REF, ALT, POS, CHROM, INFO, ID } = variant\n    const start = POS - 1\n    const [SO_term, description] = this._getSOTermAndDescription(REF, ALT)\n    const isTRA = ALT?.some(f => f === '<TRA>')\n    const isSymbolic = ALT?.some(\n      f => typeof f === 'string' && f.indexOf('<') !== -1,\n    )\n    return {\n      refName: CHROM,\n      start,\n      end: isSymbolic && INFO.END && !isTRA ? +INFO.END[0] : start + REF.length,\n      description,\n      type: SO_term,\n      name: ID ? ID[0] : undefined,\n      aliases: ID && ID.length > 1 ? variant.ID.slice(1) : undefined,\n    }\n  }\n\n  /**\n   * Get a sequence ontology (SO) term that describes the variant type\n   */\n  _getSOTermAndDescription(\n    ref: string,\n    alt: (string | Breakend)[],\n  ): [string, string] | [undefined, undefined] {\n    // it's just a remark if there are no alternate alleles\n    if (!alt || alt === []) {\n      return ['remark', 'no alternative alleles']\n    }\n\n    const soTerms: Set<string> = new Set()\n    let descriptions: Set<string> = new Set()\n    alt.forEach(a => {\n      let [soTerm, description] = this._getSOAndDescFromAltDefs(ref, a)\n\n      if (!soTerm) {\n        ;[soTerm, description] = this._getSOAndDescByExamination(ref, a)\n      }\n      if (soTerm && description) {\n        soTerms.add(soTerm)\n        descriptions.add(description)\n      }\n    })\n\n    // Combine descriptions like [\"SNV G -> A\", \"SNV G -> T\"] to [\"SNV G -> A,T\"]\n    if (descriptions.size > 1) {\n      const prefixes = new Set(\n        [...descriptions].map(desc => {\n          const prefix = desc.split('->')\n          return prefix[1] ? prefix[0] : desc\n        }),\n      )\n\n      const new_descs = [...prefixes].map(prefix => {\n        const suffixes = [...descriptions]\n          .map(desc => {\n            const pref = desc.split('-> ')\n            return pref[1] && pref[0] === prefix ? pref[1] : ''\n          })\n          .filter(f => !!f)\n\n        return suffixes.length\n          ? prefix + '-> ' + suffixes.join(',')\n          : [...descriptions].join(',')\n      })\n\n      descriptions = new Set(new_descs)\n    }\n    if (soTerms.size) {\n      return [[...soTerms].join(','), [...descriptions].join(',')]\n    }\n    return [undefined, undefined]\n  }\n\n  static _altTypeToSO: { [key: string]: string | undefined } = {\n    DEL: 'deletion',\n    INS: 'insertion',\n    DUP: 'duplication',\n    INV: 'inversion',\n    INVDUP: 'inverted duplication',\n    CNV: 'copy_number_variation',\n    TRA: 'translocation',\n    'DUP:TANDEM': 'tandem_duplication',\n    NON_REF: 'sequence_variant',\n    '*': 'sequence_variant',\n  }\n\n  _getSOAndDescFromAltDefs(\n    ref: string,\n    alt: string | Breakend,\n  ): [string, string] | [undefined, undefined] {\n    // not a symbolic ALT if doesn't begin with '<', so we'll have no definition\n    if (typeof alt === 'object') {\n      return ['breakend', alt.toString()]\n    }\n\n    if (typeof alt === 'string' && !alt.startsWith('<')) {\n      return [undefined, undefined]\n    }\n\n    // look for a definition with an SO type for this\n    let soTerm = VCFFeature._altTypeToSO[alt]\n    // if no SO term but ALT is in metadata, assume sequence_variant\n    if (!soTerm && this.parser.getMetadata('ALT', alt)) {\n      soTerm = 'sequence_variant'\n    }\n    if (soTerm) {\n      // const metaDescription = this.parser.getMetadata('ALT', alt, 'Description')\n      // const description = metaDescription\n      //   ? `${alt} - ${metaDescription}`\n      //   : this._makeDescriptionString(soTerm, ref, alt)\n      return [soTerm, alt]\n    }\n\n    // try to look for a definition for a parent term if we can\n    const modAlt = alt.split(':')\n    if (modAlt.length > 1) {\n      return this._getSOAndDescFromAltDefs(\n        ref,\n        `<${modAlt.slice(0, modAlt.length - 1).join(':')}>`,\n      )\n    }\n\n    // no parent\n    return [undefined, undefined]\n  }\n\n  _getSOAndDescByExamination(\n    ref: string,\n    alt: string | Breakend,\n  ): [string, string] {\n    if (typeof alt === 'object') {\n      return ['breakend', this._makeDescriptionString('breakend', ref, alt)]\n    }\n\n    if (ref.length === 1 && alt.length === 1) {\n      // use SNV because SO definition of SNP says abundance must be at\n      // least 1% in population, and can't be sure we meet that\n      return ['SNV', this._makeDescriptionString('SNV', ref, alt)]\n    }\n\n    if (alt.includes('<')) {\n      return ['sv', alt]\n    }\n\n    if (ref.length === alt.length) {\n      if (ref.split('').reverse().join('') === alt) {\n        return ['inversion', this._makeDescriptionString('inversion', ref, alt)]\n      }\n      return [\n        'substitution',\n        this._makeDescriptionString('substitution', ref, alt),\n      ]\n    }\n\n    if (ref.length <= alt.length) {\n      return ['insertion', this._makeDescriptionString('insertion', ref, alt)]\n    }\n\n    if (ref.length > alt.length) {\n      return ['deletion', this._makeDescriptionString('deletion', ref, alt)]\n    }\n\n    return ['indel', this._makeDescriptionString('indel', ref, alt)]\n  }\n\n  _makeDescriptionString(\n    soTerm: string,\n    ref: string,\n    alt: string | Breakend,\n  ): string {\n    return `${soTerm} ${ref} -> ${alt}`\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  toJSON(): any {\n    return {\n      uniqueId: this._id,\n      ...this.variant,\n      ...this.data,\n      samples: this.variant.SAMPLES,\n    }\n  }\n}\n","/**\n * Based on:\n *  https://material-ui.com/components/autocomplete/#Virtualize.tsx\n * Asynchronous Requests for autocomplete:\n *  https://material-ui.com/components/autocomplete/\n */\nimport React, { useMemo, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\n\n// jbrowse core\nimport { Region } from '@jbrowse/core/util/types'\nimport { getSession, useDebounce } from '@jbrowse/core/util' // useDebounce\nimport BaseResult, {\n  RefSequenceResult,\n} from '@jbrowse/core/TextSearch/BaseResults'\n// material ui\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField, { TextFieldProps as TFP } from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { InputAdornment } from '@material-ui/core'\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete'\n// other\nimport { LinearGenomeViewModel } from '..'\n\n/**\n *  Option interface used to format results to display in dropdown\n *  of the materila ui interface\n */\nexport interface Option {\n  group?: string\n  result: BaseResult\n}\n\n// filters for options to display in dropdown\nconst filter = createFilterOptions<Option>({\n  trim: true,\n  ignoreCase: true,\n  limit: 100,\n})\n\nasync function fetchResults(\n  self: LinearGenomeViewModel,\n  query: string,\n  assemblyName: string,\n) {\n  const session = getSession(self)\n  const { pluginManager } = getEnv(session)\n  const { rankSearchResults } = self\n  const { textSearchManager } = pluginManager.rootModel\n  const searchScope = self.searchScope(assemblyName)\n  const args = {\n    queryString: query,\n    searchType: 'prefix',\n  }\n  const searchResults =\n    (await textSearchManager?.search(args, searchScope, rankSearchResults)) ||\n    []\n  return searchResults\n}\nfunction RefNameAutocomplete({\n  model,\n  onSelect,\n  assemblyName,\n  style,\n  value,\n  TextFieldProps = {},\n}: {\n  model: LinearGenomeViewModel\n  onSelect: (region: BaseResult) => void\n  assemblyName?: string\n  value?: string\n  style?: React.CSSProperties\n  TextFieldProps?: TFP\n}) {\n  const session = getSession(model)\n  const [open, setOpen] = useState(false)\n  const [, setError] = useState<Error>()\n  const [currentSearch, setCurrentSearch] = useState('')\n  const debouncedSearch = useDebounce(currentSearch, 300)\n  const [searchOptions, setSearchOptions] = useState<Option[]>([])\n  const { assemblyManager } = session\n  const { coarseVisibleLocStrings } = model\n  const assembly = assemblyName ? assemblyManager.get(assemblyName) : undefined\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const regions: Region[] = assembly?.regions || []\n\n  const options: Option[] = useMemo(() => {\n    const defaultOptions = regions.map(option => {\n      return {\n        result: new RefSequenceResult({\n          refName: option.refName,\n          label: option.refName,\n          matchedAttribute: 'refName',\n        }),\n      }\n    })\n    return defaultOptions\n  }, [regions])\n\n  useEffect(() => {\n    let active = true\n\n    ;(async () => {\n      try {\n        let results: BaseResult[] = []\n        if (debouncedSearch && debouncedSearch !== '' && assemblyName) {\n          const searchResults = await fetchResults(\n            model,\n            debouncedSearch,\n            assemblyName,\n          )\n          results = results.concat(searchResults)\n        }\n        if (results.length > 0 && active) {\n          const adapterResults: Option[] = results.map(result => {\n            return { result }\n          })\n          setSearchOptions(adapterResults)\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [assemblyName, debouncedSearch, model])\n\n  function onChange(selectedOption: Option | string) {\n    if (selectedOption && assemblyName) {\n      if (typeof selectedOption === 'string') {\n        // handles string inputs on keyPress enter\n        const newResult = new BaseResult({\n          label: selectedOption,\n        })\n        onSelect(newResult)\n      } else {\n        const { result } = selectedOption\n        onSelect(result)\n      }\n    }\n  }\n\n  return (\n    <Autocomplete\n      id={`refNameAutocomplete-${model.id}`}\n      data-testid=\"autocomplete\"\n      freeSolo\n      disableListWrap\n      disableClearable\n      includeInputInList\n      clearOnBlur\n      selectOnFocus\n      disabled={!assemblyName}\n      style={style}\n      value={coarseVisibleLocStrings || value || ''}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => {\n        setOpen(false)\n        setCurrentSearch('')\n        setSearchOptions([])\n      }}\n      options={searchOptions.length === 0 ? options : searchOptions}\n      getOptionDisabled={option => option?.group === 'limitOption'}\n      filterOptions={(possibleOptions, params) => {\n        const filtered = filter(possibleOptions, params)\n        return filtered.length >= 100\n          ? filtered.concat([\n              {\n                group: 'limitOption',\n                result: new BaseResult({\n                  label: 'keep typing for more results',\n                  renderingComponent: (\n                    <Typography>{'keep typing for more results'}</Typography>\n                  ),\n                }),\n              },\n            ])\n          : filtered\n      }}\n      ListboxProps={{ style: { maxHeight: 250 } }}\n      onChange={(_, selectedOption) => onChange(selectedOption)}\n      renderInput={params => {\n        const { helperText, InputProps = {} } = TextFieldProps\n        const TextFieldInputProps = {\n          ...params.InputProps,\n          ...InputProps,\n          endAdornment: (\n            <>\n              {regions.length === 0 && searchOptions.length === 0 ? (\n                <CircularProgress color=\"inherit\" size={20} />\n              ) : (\n                <InputAdornment position=\"end\" style={{ marginRight: 7 }}>\n                  <SearchIcon />\n                </InputAdornment>\n              )}\n              {params.InputProps.endAdornment}\n            </>\n          ),\n        }\n        return (\n          <TextField\n            {...params}\n            {...TextFieldProps}\n            helperText={helperText}\n            value={coarseVisibleLocStrings || value || ''}\n            InputProps={TextFieldInputProps}\n            placeholder=\"Search for location\"\n            onChange={e => {\n              setCurrentSearch(e.target.value)\n            }}\n          />\n        )\n      }}\n      renderOption={option => {\n        const { result } = option\n        const rendering = result.getLabel()\n        // if renderingComponent is provided render that\n        const component = result.getRenderingComponent()\n        if (component) {\n          if (React.isValidElement(component)) {\n            return component\n          }\n        }\n        return <Typography noWrap>{rendering}</Typography>\n      }}\n      getOptionLabel={option => {\n        // needed for filtering options and value\n        return (\n          (typeof option === 'string' ? option : option.result.getLabel()) || ''\n        )\n      }}\n    />\n  )\n}\n\nexport default observer(RefNameAutocomplete)\n","/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  start: number,\n  end: number,\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n\n  let minBase = start\n  let maxBase = end\n  if (minBase === null || maxBase === null) {\n    return []\n  }\n\n  if (bpPerPx < 0) {\n    ;[minBase, maxBase] = [maxBase, minBase]\n  }\n\n  // add 20px additional on the right and left to allow us to draw the ends\n  // of labels that lie a little outside our region\n  minBase -= Math.abs(20 * bpPerPx) - 1\n  maxBase += Math.abs(20 * bpPerPx) + 1\n\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  let index = 0\n  const ticks = []\n  for (\n    let base = Math.ceil(minBase / iterPitch) * iterPitch;\n    base < maxBase;\n    base += iterPitch\n  ) {\n    if (emitMinor && base % (gridPitch.majorPitch * 2)) {\n      ticks.push({ type: 'minor', base: base - 1, index })\n      index += 1\n    } else if (emitMajor && !(base % (gridPitch.majorPitch * 2))) {\n      ticks.push({ type: 'major', base: base - 1, index })\n      index += 1\n    }\n  }\n  return ticks\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport { makeStyles, alpha } from '@material-ui/core/styles'\nimport { Popover, Tooltip, Typography } from '@material-ui/core'\nimport { stringify } from '@jbrowse/core/util'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport ReactPropTypes from 'prop-types'\nimport { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { LinearGenomeViewStateModel, HEADER_OVERVIEW_HEIGHT } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => {\n  const background = theme.palette.tertiary\n    ? alpha(theme.palette.tertiary.main, 0.7)\n    : alpha(theme.palette.primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: theme.palette.tertiary\n        ? theme.palette.tertiary.contrastText\n        : theme.palette.primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n  }\n})\n\nfunction OverviewRubberBand({\n  model,\n  overview,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n  const [guideX, setGuideX] = useState<number | undefined>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const classes = useStyles()\n  const mouseDragging = startX !== undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp() {\n      if (\n        controlsRef.current &&\n        startX !== undefined &&\n        currentX !== undefined\n      ) {\n        if (Math.abs(currentX - startX) > 3) {\n          model.zoomToDisplayedRegions(\n            overview.pxToBp(startX),\n            overview.pxToBp(currentX),\n          )\n        }\n      }\n      /* handling clicking and centering at a specific Bp */\n      if (\n        controlsRef.current &&\n        startX !== undefined &&\n        currentX === undefined\n      ) {\n        const clickedAt = overview.pxToBp(startX)\n        model.centerAt(\n          Math.round(clickedAt.coord),\n          clickedAt.refName,\n          clickedAt.index,\n        )\n      }\n      setStartX(undefined)\n      setCurrentX(undefined)\n\n      if (startX !== undefined) {\n        setGuideX(undefined)\n      }\n    }\n\n    function globalKeyDown(event: KeyboardEvent) {\n      if (event.key === 'Escape') {\n        setStartX(undefined)\n        setCurrentX(undefined)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      window.addEventListener('keydown', globalKeyDown, true)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n        window.removeEventListener('keydown', globalKeyDown, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, currentX, startX, model, overview])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    if (controlsRef.current) {\n      setStartX(\n        event.clientX - controlsRef.current.getBoundingClientRect().left,\n      )\n    }\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    if (controlsRef.current) {\n      setGuideX(\n        event.clientX - controlsRef.current.getBoundingClientRect().left,\n      )\n    }\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n  }\n\n  if (startX === undefined) {\n    return (\n      <div style={{ position: 'relative' }}>\n        {guideX !== undefined ? (\n          <Tooltip\n            open={!mouseDragging}\n            placement=\"top\"\n            title={stringify(overview.pxToBp(guideX))}\n            arrow\n          >\n            <div\n              className={classes.guide}\n              style={{\n                left: guideX,\n              }}\n            />\n          </Tooltip>\n        ) : null}\n        <div\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </div>\n    )\n  }\n\n  let left = startX || 0\n  let width = 0\n  if (startX !== undefined && currentX !== undefined) {\n    left = currentX < startX ? currentX : startX\n    width = currentX - startX\n  }\n  // calculate the start and end bp of drag\n  let leftBpOffset\n  let rightBpOffset\n  if (startX) {\n    leftBpOffset = overview.pxToBp(startX)\n    rightBpOffset = overview.pxToBp(startX + width)\n    if (currentX && currentX < startX) {\n      ;[leftBpOffset, rightBpOffset] = [rightBpOffset, leftBpOffset]\n    }\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>\n              {leftBpOffset ? stringify(leftBpOffset) : ''}\n            </Typography>\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>\n              {rightBpOffset ? stringify(rightBpOffset) : ''}\n            </Typography>\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{\n          left,\n          width: Math.abs(width),\n          height: HEADER_OVERVIEW_HEIGHT,\n        }}\n      />\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n    </div>\n  )\n}\n\nOverviewRubberBand.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  overview: MobxPropTypes.objectOrObservableObject.isRequired,\n  ControlComponent: ReactPropTypes.node,\n}\n\nOverviewRubberBand.defaultProps = {\n  ControlComponent: <div />,\n}\n\nexport default observer(OverviewRubberBand)\n","import React from 'react'\nimport Base1DView, { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { alpha } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { ContentBlock } from '@jbrowse/core/util/blockTypes'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport clsx from 'clsx'\nimport { Typography } from '@material-ui/core'\nimport {\n  LinearGenomeViewStateModel,\n  HEADER_BAR_HEIGHT,\n  HEADER_OVERVIEW_HEIGHT,\n} from '..'\nimport { chooseGridPitch } from '../util'\nimport OverviewRubberBand from './OverviewRubberBand'\n\nconst useStyles = makeStyles(theme => {\n  const scaleBarColor = theme.palette.tertiary\n    ? theme.palette.tertiary.light\n    : theme.palette.primary.light\n  return {\n    scaleBar: {\n      width: '100%',\n      height: HEADER_OVERVIEW_HEIGHT,\n      overflow: 'hidden',\n    },\n    scaleBarContig: {\n      backgroundColor: theme.palette.background.default,\n      position: 'absolute',\n      top: 0,\n      height: HEADER_OVERVIEW_HEIGHT,\n      border: '1px solid',\n      borderBottomColor: 'black',\n    },\n    scaleBarContigForward: {\n      backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M-.1 0L6 4.5L-.1 9' fill='none' stroke='%23ddd'/%3E%3C/svg%3E\")`,\n      backgroundRepeat: 'repeat',\n    },\n    scaleBarContigReverse: {\n      backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M6 0L0 4.5L6 9' fill='none' stroke='%23ddd'/%3E%3C/svg%3E\")`,\n      backgroundRepeat: 'repeat',\n    },\n    scaleBarRegionIncompleteLeft: {\n      width: 10,\n      height: 17.5,\n      background: `linear-gradient(-225deg,black 3px, transparent 1px),\n      linear-gradient(45deg, black 3px, transparent 1px)`,\n      backgroundRepeat: 'repeat-y',\n      backgroundSize: '10px 8px',\n      borderTopLeftRadius: '2px',\n      borderBottomLeftRadius: '2px',\n      float: 'left',\n    },\n    scaleBarRegionIncompleteRight: {\n      width: 10,\n      height: 17.5,\n      background: `linear-gradient(225deg, black 3px, transparent 1px),\n      linear-gradient(-45deg, black 3px, transparent 1px)`,\n      backgroundRepeat: 'repeat-y',\n      backgroundSize: '10px 8px',\n      borderTopRightRadius: '2px',\n      borderBottomRightRadius: '2px',\n      float: 'right',\n    },\n    scaleBarRefName: {\n      position: 'absolute',\n      fontWeight: 'bold',\n      lineHeight: 'normal',\n      pointerEvents: 'none',\n      left: 5,\n    },\n    scaleBarLabel: {\n      height: HEADER_OVERVIEW_HEIGHT,\n      width: 1,\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      pointerEvents: 'none',\n    },\n    scaleBarVisibleRegion: {\n      background: alpha(scaleBarColor, 0.3),\n      position: 'absolute',\n      height: HEADER_OVERVIEW_HEIGHT,\n      pointerEvents: 'none',\n      top: -1,\n      zIndex: 100,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: alpha(scaleBarColor, 0.8),\n      boxSizing: 'content-box',\n    },\n    overview: {\n      height: HEADER_BAR_HEIGHT,\n      position: 'relative',\n    },\n    overviewSvg: { position: 'absolute' },\n  }\n})\n\nconst wholeSeqSpacer = 2\nconst Polygon = observer(\n  ({\n    model,\n    overview,\n  }: {\n    model: LGV\n    overview: Instance<Base1DViewModel>\n  }) => {\n    const theme = useTheme()\n    const classes = useStyles()\n    const {\n      offsetPx,\n      dynamicBlocks: { contentBlocks, totalWidthPxWithoutBorders },\n    } = model\n\n    const polygonColor = theme.palette.tertiary\n      ? theme.palette.tertiary.light\n      : theme.palette.primary.light\n\n    if (!contentBlocks.length) {\n      return null\n    }\n    const firstBlock = contentBlocks[0]\n    const lastBlock = contentBlocks[contentBlocks.length - 1]\n    const topLeft = overview.bpToPx({\n      refName: firstBlock.refName,\n      coord: firstBlock.reversed ? firstBlock.end : firstBlock.start,\n      regionNumber: firstBlock.regionNumber,\n    })\n    const topRight = overview.bpToPx({\n      refName: lastBlock.refName,\n      coord: lastBlock.reversed ? lastBlock.start : lastBlock.end,\n      regionNumber: lastBlock.regionNumber,\n    })\n\n    const startPx = Math.max(0, -offsetPx)\n    const endPx =\n      startPx +\n      totalWidthPxWithoutBorders +\n      (contentBlocks.length * model.interRegionPaddingWidth) / 2\n\n    const points = [\n      [startPx, HEADER_BAR_HEIGHT],\n      [endPx, HEADER_BAR_HEIGHT],\n      [topRight, 0],\n      [topLeft, 0],\n    ]\n\n    return (\n      <svg\n        height={HEADER_BAR_HEIGHT}\n        width=\"100%\"\n        className={classes.overviewSvg}\n      >\n        {points && (\n          <polygon\n            points={points.toString()}\n            fill={alpha(polygonColor, 0.3)}\n            stroke={alpha(polygonColor, 0.8)}\n          />\n        )}\n      </svg>\n    )\n  },\n)\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst ScaleBar = observer(\n  ({\n    model,\n    scale,\n    overview,\n  }: {\n    model: LGV\n    overview: Base1DViewModel\n    scale: number\n  }) => {\n    const classes = useStyles()\n    const { dynamicBlocks: visibleRegions } = model\n    const { assemblyManager } = getSession(model)\n    const gridPitch = chooseGridPitch(scale, 120, 15)\n    const { dynamicBlocks: overviewVisibleRegions } = overview\n\n    if (!visibleRegions.contentBlocks.length) {\n      return null\n    }\n    const firstBlock = visibleRegions.contentBlocks[0]\n    const firstOverviewPx =\n      overview.bpToPx({\n        refName: firstBlock.refName,\n        regionNumber: firstBlock.regionNumber,\n        coord: firstBlock.reversed ? firstBlock.end : firstBlock.start,\n      }) || 0\n\n    const lastBlock =\n      visibleRegions.contentBlocks[visibleRegions.contentBlocks.length - 1]\n    const lastOverviewPx =\n      overview.bpToPx({\n        refName: lastBlock.refName,\n        coord: lastBlock.reversed ? lastBlock.start : lastBlock.end,\n        regionNumber: lastBlock.regionNumber,\n      }) || 0\n\n    return (\n      <div className={classes.scaleBar}>\n        <div\n          className={classes.scaleBarVisibleRegion}\n          style={{\n            width: lastOverviewPx - firstOverviewPx,\n            left: firstOverviewPx,\n          }}\n        />\n        {/* this is the entire scale bar */}\n        {overviewVisibleRegions.map((seq, idx) => {\n          const assembly = assemblyManager.get(seq.assemblyName)\n          let refNameColor: string | undefined\n          if (assembly) {\n            refNameColor = assembly.getRefNameColor(seq.refName)\n          }\n          const regionLength = seq.end - seq.start\n          const tickLabels = []\n          for (\n            let index = 0;\n            index < Math.floor(regionLength / gridPitch.majorPitch);\n            index++\n          ) {\n            const offsetLabel = (index + 1) * gridPitch.majorPitch\n            tickLabels.push(\n              seq.reversed ? seq.end - offsetLabel : seq.start + offsetLabel,\n            )\n          }\n\n          return !(seq instanceof ContentBlock) ? (\n            <div\n              key={`${JSON.stringify(seq)}-${idx}`}\n              className={classes.scaleBarContig}\n              style={{\n                width: seq.widthPx,\n                left: seq.offsetPx,\n                backgroundColor: '#999',\n                backgroundImage:\n                  'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n              }}\n            />\n          ) : (\n            <div\n              key={`${JSON.stringify(seq)}-${idx}`}\n              className={clsx(\n                classes.scaleBarContig,\n                seq.reversed\n                  ? classes.scaleBarContigReverse\n                  : classes.scaleBarContigForward,\n              )}\n              style={{\n                left: seq.offsetPx,\n                width: seq.widthPx,\n                borderColor: refNameColor,\n              }}\n            >\n              {/* name of sequence */}\n              <Typography\n                style={{ color: refNameColor }}\n                className={classes.scaleBarRefName}\n              >\n                {seq.refName}\n              </Typography>\n\n              {/* the number labels drawn in overview scale bar*/}\n              {tickLabels.map((tickLabel, labelIdx) => (\n                <Typography\n                  key={`${JSON.stringify(seq)}-${tickLabel}-${labelIdx}`}\n                  className={classes.scaleBarLabel}\n                  variant=\"body2\"\n                  style={{\n                    left: ((labelIdx + 1) * gridPitch.majorPitch) / scale,\n                    pointerEvents: 'none',\n                    color: refNameColor,\n                  }}\n                >\n                  {tickLabel.toLocaleString('en-US')}\n                </Typography>\n              ))}\n            </div>\n          )\n        })}\n      </div>\n    )\n  },\n)\n\nfunction OverviewScaleBar({\n  model,\n  children,\n}: {\n  model: LGV\n  children: React.ReactNode\n}) {\n  const classes = useStyles()\n  const { width, displayedRegions } = model\n\n  const overview = Base1DView.create({\n    displayedRegions: JSON.parse(JSON.stringify(displayedRegions)),\n    interRegionPaddingWidth: 0,\n    minimumBlockWidth: model.minimumBlockWidth,\n  })\n  overview.setVolatileWidth(width)\n  overview.showAllRegions()\n\n  const scale =\n    model.totalBp / (width - (displayedRegions.length - 1) * wholeSeqSpacer)\n\n  return !displayedRegions.length ? (\n    <>\n      <div className={classes.scaleBar}>\n        <LinearProgress\n          variant=\"indeterminate\"\n          style={{ marginTop: 4, width: '100%' }}\n        />\n      </div>\n      <div>{children}</div>\n    </>\n  ) : (\n    <div>\n      <OverviewRubberBand\n        model={model}\n        overview={overview}\n        ControlComponent={\n          <ScaleBar model={model} overview={overview} scale={scale} />\n        }\n      />\n      <div className={classes.overview}>\n        <Polygon model={model} overview={overview} />\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(OverviewScaleBar)\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slider from '@material-ui/core/Slider'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  slider: {\n    width: 70,\n  },\n})\n\nfunction ZoomControls({ model }: { model: LinearGenomeViewModel }) {\n  const classes = useStyles()\n  const { maxBpPerPx, minBpPerPx, bpPerPx, scaleFactor } = model\n  const [value, setValue] = useState(-Math.log2(bpPerPx) * 100)\n  useEffect(() => {\n    setValue(-Math.log2(bpPerPx) * 100)\n  }, [setValue, bpPerPx])\n  return (\n    <div className={classes.container}>\n      <IconButton\n        data-testid=\"zoom_out\"\n        onClick={() => {\n          model.zoom(bpPerPx * 2)\n        }}\n        disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <Slider\n        className={classes.slider}\n        value={value}\n        min={-Math.log2(maxBpPerPx) * 100}\n        max={-Math.log2(minBpPerPx) * 100}\n        onChange={(_, val) => setValue(val as number)}\n        onChangeCommitted={() => model.zoomTo(2 ** (-value / 100))}\n        disabled={scaleFactor !== 1}\n      />\n      <IconButton\n        data-testid=\"zoom_in\"\n        onClick={() => {\n          model.zoom(model.bpPerPx / 2)\n        }}\n        disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default observer(ZoomControls)\n","import { getSession } from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { alpha } from '@material-ui/core/styles'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Typography from '@material-ui/core/Typography'\nimport { observer } from 'mobx-react'\nimport { Instance, getEnv } from 'mobx-state-tree'\nimport React from 'react'\n\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport { LinearGenomeViewStateModel, HEADER_BAR_HEIGHT } from '..'\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport OverviewScaleBar from './OverviewScaleBar'\nimport ZoomControls from './ZoomControls'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst WIDGET_HEIGHT = 32\nconst SPACING = 7\n\nconst useStyles = makeStyles(theme => ({\n  headerBar: {\n    height: HEADER_BAR_HEIGHT,\n    display: 'flex',\n  },\n  headerForm: {\n    flexWrap: 'nowrap',\n    marginRight: 7,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  input: {},\n  headerRefName: {\n    minWidth: 100,\n  },\n  panButton: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    height: WIDGET_HEIGHT,\n    margin: SPACING,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 5,\n  },\n  toggleButton: {\n    height: 44,\n    border: 'none',\n    margin: theme.spacing(0.5),\n  },\n  buttonSpacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Controls = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  return (\n    <Button\n      onClick={model.activateTrackSelector}\n      className={classes.toggleButton}\n      title=\"Open track selector\"\n      value=\"track_select\"\n      color=\"secondary\"\n    >\n      <TrackSelectorIcon className={classes.buttonSpacer} />\n    </Button>\n  )\n})\n\nfunction PanControls({ model }: { model: LGV }) {\n  const classes = useStyles()\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(-0.9)}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(0.9)}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </>\n  )\n}\n\nconst RegionWidth = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const { coarseTotalBp } = model\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.bp}>\n      {`${Math.round(coarseTotalBp).toLocaleString('en-US')} bp`}\n    </Typography>\n  )\n})\n\nconst LinearGenomeViewHeader = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const { pluginManager } = getEnv(session)\n  const { textSearchManager } = pluginManager.rootModel\n  const {\n    coarseDynamicBlocks: contentBlocks,\n    displayedRegions,\n    rankSearchResults,\n  } = model\n  const { assemblyName, refName } = contentBlocks[0] || { refName: '' }\n  const assembly = assemblyName && assemblyManager.get(assemblyName)\n  const regions = (assembly && assembly.regions) || []\n  const searchScope = model.searchScope(assemblyName)\n  async function setDisplayedRegion(result: BaseResult) {\n    if (result) {\n      const newRegionValue = result.getLocation()\n      // need to fix finding region\n      const newRegion = regions.find(\n        region => newRegionValue === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        const results =\n          (await textSearchManager?.search(\n            {\n              queryString: newRegionValue.toLocaleLowerCase(),\n              searchType: 'exact',\n            },\n            searchScope,\n            rankSearchResults,\n          )) || []\n        // distinguishes between locstrings and search strings\n        if (results.length > 0) {\n          model.setSearchResults(results, newRegionValue.toLocaleLowerCase())\n        } else {\n          try {\n            newRegionValue !== '' && model.navToLocString(newRegionValue)\n          } catch (e) {\n            if (\n              `${e}` === `Error: Unknown reference sequence \"${newRegionValue}\"`\n            ) {\n              model.setSearchResults(\n                results,\n                newRegionValue.toLocaleLowerCase(),\n              )\n            } else {\n              console.warn(e)\n              session.notify(`${e}`, 'warning')\n            }\n          }\n        }\n      }\n    }\n  }\n\n  const controls = (\n    <div className={classes.headerBar}>\n      <Controls model={model} />\n      <div className={classes.spacer} />\n      <FormGroup row className={classes.headerForm}>\n        <PanControls model={model} />\n        <RefNameAutocomplete\n          onSelect={setDisplayedRegion}\n          assemblyName={assemblyName}\n          value={displayedRegions.length > 1 ? '' : refName}\n          model={model}\n          TextFieldProps={{\n            variant: 'outlined',\n            className: classes.headerRefName,\n            style: { margin: SPACING, minWidth: '175px' },\n            InputProps: {\n              style: {\n                padding: 0,\n                height: WIDGET_HEIGHT,\n                background: alpha(theme.palette.background.paper, 0.8),\n              },\n            },\n          }}\n        />\n      </FormGroup>\n      <RegionWidth model={model} />\n      <ZoomControls model={model} />\n      <div className={classes.spacer} />\n    </div>\n  )\n\n  if (model.hideHeaderOverview) {\n    return controls\n  }\n\n  return <OverviewScaleBar model={model}>{controls}</OverviewScaleBar>\n})\n\nexport default LinearGenomeViewHeader\n","import { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { getSession, getContainingView } from '@jbrowse/core/util'\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { alpha } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport DragIcon from '@material-ui/icons/DragIndicator'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    '&:hover': {\n      background: theme.palette.background.paper,\n    },\n    transition: theme.transitions.create(['background'], {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  trackName: {\n    margin: '0 auto',\n    width: '90%',\n    fontSize: '0.8rem',\n    pointerEvents: 'none',\n  },\n  dragHandle: {\n    cursor: 'grab',\n    color: '#135560',\n  },\n  dragHandleIcon: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n}))\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst TrackLabel = React.forwardRef(\n  (props: { track: BaseTrackModel; className?: string }, ref) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const { track, className } = props\n    const view = getContainingView(track) as LGV\n    const session = getSession(track)\n    const trackConf = track.configuration\n    const trackId = getConf(track, 'trackId')\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget)\n    }\n\n    const handleClose = () => {\n      setAnchorEl(null)\n    }\n\n    const onDragStart = (event: React.DragEvent<HTMLSpanElement>) => {\n      const target = event.target as HTMLElement\n      if (target.parentNode) {\n        event.dataTransfer.setDragImage(\n          target.parentNode as HTMLElement,\n          20,\n          20,\n        )\n        view.setDraggingTrackId(track.id)\n      }\n    }\n\n    const onDragEnd = () => {\n      view.setDraggingTrackId(undefined)\n    }\n\n    let trackName = getConf(track, 'name')\n    if (getConf(track, 'type') === 'ReferenceSequenceTrack') {\n      trackName = 'Reference Sequence'\n      session.assemblies.forEach(assembly => {\n        if (assembly.sequence === trackConf) {\n          trackName = `Reference Sequence (${readConfObject(assembly, 'name')})`\n        }\n      })\n    }\n\n    function handleMenuItemClick(_: unknown, callback: Function) {\n      callback()\n      handleClose()\n    }\n\n    return (\n      <>\n        <Paper ref={ref} className={clsx(className, classes.root)}>\n          <span\n            draggable\n            className={classes.dragHandle}\n            onDragStart={onDragStart}\n            onDragEnd={onDragEnd}\n            data-testid={`dragHandle-${view.id}-${trackId}`}\n          >\n            <DragIcon className={classes.dragHandleIcon} />\n          </span>\n          <IconButton\n            onClick={() => view.hideTrack(trackId)}\n            className={classes.iconButton}\n            title=\"close this track\"\n            color=\"secondary\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            variant=\"body1\"\n            component=\"span\"\n            className={classes.trackName}\n          >\n            {trackName}\n          </Typography>\n          <IconButton\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            className={classes.iconButton}\n            color=\"secondary\"\n            data-testid=\"track_menu_icon\"\n            disabled={!track.trackMenuItems.length}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </Paper>\n        <Menu\n          anchorEl={anchorEl}\n          onMenuItemClick={handleMenuItemClick}\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          menuItems={[\n            ...(session.getTrackActionMenuItems\n              ? session.getTrackActionMenuItems(trackConf)\n              : []),\n            ...track.trackMenuItems,\n          ].sort((a, b) => (b.priority || 0) - (a.priority || 0))}\n        />\n      </>\n    )\n  },\n)\n\nexport default observer(TrackLabel)\n","import React, { useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { useDebouncedCallback, getContainingView } from '@jbrowse/core/util'\nimport clsx from 'clsx'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { LinearGenomeViewModel, RESIZE_HANDLE_HEIGHT } from '..'\nimport TrackLabel from './TrackLabel'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  resizeHandle: {\n    height: RESIZE_HANDLE_HEIGHT,\n    boxSizing: 'border-box',\n    position: 'relative',\n    zIndex: 2,\n  },\n  overlay: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 3,\n    borderRadius: theme.shape.borderRadius,\n  },\n  renderingComponentContainer: {\n    position: 'absolute',\n    // -1 offset because of the 1px border of the Paper\n    left: -1,\n    height: '100%',\n    width: '100%',\n  },\n  trackLabel: {\n    zIndex: 3,\n    margin: theme.spacing(1),\n  },\n  trackLabelInline: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  trackLabelOverlap: {\n    position: 'absolute',\n  },\n  trackRenderingContainer: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    background: 'none',\n    zIndex: 2,\n    boxSizing: 'content-box',\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nfunction TrackContainer(props: {\n  model: LinearGenomeViewModel\n  track: BaseTrackModel\n}) {\n  const classes = useStyles()\n  const { model, track } = props\n  const display = track.displays[0]\n  const { horizontalScroll, draggingTrackId, moveTrack } = model\n  const { height } = display\n  const view = getContainingView(display) as LGV\n  const trackId = getConf(track, 'trackId')\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (ref.current) {\n      model.trackRefs[trackId] = ref.current\n    }\n    return () => {\n      delete model.trackRefs[trackId]\n    }\n  }, [model.trackRefs, trackId])\n  function onDragEnter() {\n    if (\n      draggingTrackId !== undefined &&\n      isAlive(display) &&\n      draggingTrackId !== display.id\n    ) {\n      moveTrack(draggingTrackId, track.id)\n    }\n  }\n  const debouncedOnDragEnter = useDebouncedCallback(onDragEnter, 100)\n  const { RenderingComponent, DisplayBlurb } = display\n  const dimmed = draggingTrackId !== undefined && draggingTrackId !== display.id\n\n  return (\n    <div className={classes.root}>\n      {view.trackLabels !== 'hidden' ? (\n        <TrackLabel\n          track={track}\n          className={clsx(\n            classes.trackLabel,\n            view.trackLabels === 'overlapping'\n              ? classes.trackLabelOverlap\n              : classes.trackLabelInline,\n          )}\n        />\n      ) : null}\n\n      <Paper\n        variant=\"outlined\"\n        className={classes.trackRenderingContainer}\n        style={{ height }}\n        onScroll={event => {\n          const target = event.target as HTMLDivElement\n          display.setScrollTop(target.scrollTop)\n        }}\n        onDragEnter={debouncedOnDragEnter}\n        data-testid={`trackRenderingContainer-${view.id}-${trackId}`}\n        role=\"presentation\"\n      >\n        <div\n          ref={ref}\n          className={classes.renderingComponentContainer}\n          style={{ transform: `scaleX(${model.scaleFactor})` }}\n        >\n          <RenderingComponent\n            model={display}\n            blockState={{}}\n            onHorizontalScroll={horizontalScroll}\n          />\n        </div>\n\n        {DisplayBlurb ? (\n          <div\n            style={{\n              position: 'absolute',\n              left: 0,\n              top: display.height - 20,\n            }}\n          >\n            {' '}\n            <DisplayBlurb model={display} />\n          </div>\n        ) : null}\n      </Paper>\n      <div\n        className={classes.overlay}\n        style={{\n          height: display.height,\n          background: dimmed ? 'rgba(0, 0, 0, 0.4)' : undefined,\n        }}\n        onDragEnter={debouncedOnDragEnter}\n      />\n      <ResizeHandle\n        onDrag={display.resizeHeight}\n        className={classes.resizeHandle}\n      />\n    </div>\n  )\n}\n\nexport default observer(TrackContainer)\n","import React, { useRef, useEffect, useState } from 'react'\nimport ReactPropTypes from 'prop-types'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n// material ui\nimport { alpha } from '@material-ui/core/styles/colorManipulator'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport { Menu } from '@jbrowse/core/ui'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Popover from '@material-ui/core/Popover'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn'\n\nimport { stringify } from '@jbrowse/core/util'\nimport { LinearGenomeViewStateModel } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => {\n  const background = theme.palette.tertiary\n    ? alpha(theme.palette.tertiary.main, 0.7)\n    : alpha(theme.palette.primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: theme.palette.tertiary\n        ? theme.palette.tertiary.contrastText\n        : theme.palette.primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LGV; coordX: number }) => {\n    const classes = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={stringify(model.pxToBp(coordX))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction RubberBand({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number | undefined>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const classes = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX, model.bpPerPx])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.setOffsets(undefined, undefined)\n  }\n\n  function zoomToRegion() {\n    if (startX === undefined || anchorPosition === undefined) {\n      return\n    }\n    let leftPx = startX\n    let rightPx = anchorPosition.offsetX\n    if (rightPx < leftPx) {\n      ;[leftPx, rightPx] = [rightPx, leftPx]\n    }\n    const leftOffset = model.pxToBp(leftPx)\n    const rightOffset = model.pxToBp(rightPx)\n    model.moveTo(leftOffset, rightOffset)\n  }\n\n  function getSequence() {\n    if (startX === undefined || anchorPosition === undefined) {\n      return\n    }\n    let leftPx = startX\n    let rightPx = anchorPosition.offsetX\n    // handles clicking and draging to the left\n    if (rightPx < leftPx) {\n      ;[leftPx, rightPx] = [rightPx, leftPx]\n    }\n    const leftOffset = model.pxToBp(leftPx)\n    const rightOffset = model.pxToBp(rightPx)\n    model.setOffsets(leftOffset, rightOffset)\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  const menuItems = [\n    {\n      label: 'Zoom to region',\n      icon: ZoomInIcon,\n      onClick: () => {\n        zoomToRegion()\n        handleClose()\n      },\n    },\n    {\n      label: 'Get sequence',\n      disabled:\n        currentX !== undefined &&\n        startX !== undefined &&\n        Math.abs(currentX - startX) * model.bpPerPx > 500_000_000,\n      icon: MenuOpenIcon,\n      onClick: () => {\n        getSequence()\n        handleClose()\n      },\n    },\n  ]\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberBand_controls\"\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const leftBpOffset = model.pxToBp(left)\n  const rightBpOffset = model.pxToBp(left + width)\n  const numOfBpSelected = Math.ceil(width * model.bpPerPx)\n  return (\n    <>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(leftBpOffset)}</Typography>\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(rightBpOffset)}</Typography>\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberBandText}>\n          {numOfBpSelected.toLocaleString('en-US')} bp\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={menuItems}\n        />\n      ) : null}\n    </>\n  )\n}\n\nRubberBand.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  ControlComponent: ReactPropTypes.node,\n}\n\nRubberBand.defaultProps = {\n  ControlComponent: <div />,\n}\n\nexport default observer(RubberBand)\n","import {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\nimport { makeTicks } from '../util'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  scaleBarContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scaleBarZoomContainer: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  scaleBar: {\n    position: 'absolute',\n    display: 'flex',\n    pointerEvents: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n    zIndex: 1,\n    background: theme.palette.background.paper,\n    lineHeight: 'normal',\n    pointerEvents: 'none',\n  },\n  tick: {\n    position: 'absolute',\n    width: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n  refLabel: {\n    fontSize: '11px',\n    position: 'absolute',\n    left: '2px',\n    top: '-1px',\n    fontWeight: 'bold',\n    lineHeight: 'normal',\n    zIndex: 1,\n    pointerEvents: 'none',\n    background: theme.palette.background.paper,\n  },\n}))\n\nconst RenderedRefNameLabels = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n\n  // find the block that needs pinning to the left side for context\n  let lastLeftBlock = 0\n  model.staticBlocks.forEach((block, i) => {\n    if (block.offsetPx - model.offsetPx < 0) {\n      lastLeftBlock = i\n    }\n  })\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        return block instanceof ContentBlock &&\n          (block.isLeftEndOfDisplayedRegion || index === lastLeftBlock) ? (\n          <Typography\n            key={`refLabel-${block.key}-${index}`}\n            style={{\n              left:\n                index === lastLeftBlock\n                  ? Math.max(0, -model.offsetPx)\n                  : block.offsetPx - model.offsetPx - 1,\n              paddingLeft: index === lastLeftBlock ? 0 : 1,\n            }}\n            className={classes.refLabel}\n            data-testid={`refLabel-${block.refName}`}\n          >\n            {block.refName}\n          </Typography>\n        ) : null\n      })}\n    </>\n  )\n})\n\nconst RenderedScaleBarLabels = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(\n            block.start,\n            block.end,\n            model.bpPerPx,\n            true,\n            false,\n          )\n\n          return (\n            <ContentBlockComponent key={`${block.key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                if (tick.type === 'major') {\n                  const x =\n                    (block.reversed\n                      ? block.end - tick.base\n                      : tick.base - block.start) / model.bpPerPx\n                  const baseNumber = (tick.base + 1).toLocaleString('en-US')\n                  return (\n                    <div\n                      key={tick.base}\n                      className={classes.tick}\n                      style={{ left: x }}\n                    >\n                      {baseNumber ? (\n                        <Typography className={classes.majorTickLabel}>\n                          {baseNumber}\n                        </Typography>\n                      ) : null}\n                    </div>\n                  )\n                }\n                return null\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={block.key} width={block.widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              style={{ background: 'none' }}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\n\nconst ScaleBar = React.forwardRef(\n  (\n    {\n      model,\n      style,\n      className,\n      ...other\n    }: { model: LGV; style?: React.CSSProperties; className?: string },\n    ref,\n  ) => {\n    const classes = useStyles()\n\n    const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n    return (\n      <Paper\n        data-resizer=\"true\" // used to avoid click-and-drag scrolls on trackscontainer\n        className={clsx(classes.scaleBarContainer, className)}\n        variant=\"outlined\"\n        ref={ref}\n        style={style}\n        {...other}\n      >\n        <div\n          className={classes.scaleBarZoomContainer}\n          style={{\n            transform:\n              model.scaleFactor !== 1\n                ? `scaleX(${model.scaleFactor})`\n                : undefined,\n          }}\n        >\n          <div\n            className={classes.scaleBar}\n            style={{\n              left: offsetLeft - 1,\n              width: model.staticBlocks.totalWidthPx,\n              ...style,\n            }}\n          >\n            <RenderedScaleBarLabels model={model} />\n          </div>\n        </div>\n        <RenderedRefNameLabels model={model} />\n      </Paper>\n    )\n  },\n)\n\nexport default observer(ScaleBar)\n","import {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React from 'react'\nimport { LinearGenomeViewStateModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\n\nimport { makeTicks } from '../util'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  verticalGuidesZoomContainer: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n  },\n  verticalGuidesContainer: {\n    position: 'absolute',\n    height: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n    display: 'flex',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    width: 1,\n  },\n  majorTick: {\n    background: theme.palette.text.hint,\n  },\n  minorTick: {\n    background: theme.palette.divider,\n  },\n}))\nconst RenderedVerticalGuides = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(block.start, block.end, model.bpPerPx)\n          return (\n            <ContentBlockComponent key={`${block.key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                const x =\n                  (block.reversed\n                    ? block.end - tick.base\n                    : tick.base - block.start) / model.bpPerPx\n                return (\n                  <div\n                    key={tick.base}\n                    className={clsx(\n                      classes.tick,\n                      tick.type === 'major' || tick.type === 'labeledMajor'\n                        ? classes.majorTick\n                        : classes.minorTick,\n                    )}\n                    style={{ left: x }}\n                  />\n                )\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={block.key} width={block.widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\nfunction VerticalGuides({ model }: { model: LGV }) {\n  const classes = useStyles()\n  // find the block that needs pinning to the left side for context\n  const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n  return (\n    <div\n      className={classes.verticalGuidesZoomContainer}\n      style={{\n        transform:\n          model.scaleFactor !== 1 ? `scaleX(${model.scaleFactor})` : undefined,\n      }}\n    >\n      <div\n        className={classes.verticalGuidesContainer}\n        style={{\n          left: offsetLeft,\n          width: model.staticBlocks.totalWidthPx,\n        }}\n      >\n        <RenderedVerticalGuides model={model} />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(VerticalGuides)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport React, { useRef } from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { LinearGenomeViewStateModel } from '..'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(() => ({\n  centerLineContainer: {\n    background: 'transparent',\n    height: '100%',\n    zIndex: 5, // above the track but under menu\n    position: 'absolute',\n    border: '1px black dashed',\n    borderTop: 'none',\n    borderBottom: 'none',\n    pointerEvents: 'none',\n  },\n  centerLineText: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n}))\n\nfunction CenterLine({ model }: { model: LGV }) {\n  const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const classes = useStyles()\n  const startingPosition = width / 2\n\n  return tracks.length ? (\n    <div\n      data-testid=\"centerline_container\"\n      className={classes.centerLineContainer}\n      role=\"presentation\"\n      ref={ref}\n      style={{\n        left: `${startingPosition}px`,\n        width: Math.max(1 / bpPerPx, 1),\n      }}\n    >\n      {centerLineInfo && (\n        <div\n          // text that indicates what bp is center, positioned\n          // at the bottom right of the center line\n          data-testid=\"centerline_text\"\n          className={classes.centerLineText}\n          role=\"presentation\"\n          style={{\n            left: Math.max(1 / bpPerPx, 1) + 5,\n            top: trackHeights,\n          }}\n        >\n          {/* change bp to refName */}\n          {centerLineInfo.refName}:{' '}\n          {Math.max(Math.round(centerLineInfo.offset) + 1, 0)}\n        </div>\n      )}\n    </div>\n  ) : null\n}\n\nCenterLine.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n}\n\nexport default observer(CenterLine)\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport React, { useEffect, useRef, useState } from 'react'\nimport normalizeWheel from 'normalize-wheel'\n\nimport {\n  LinearGenomeViewStateModel,\n  RESIZE_HANDLE_HEIGHT,\n  SCALE_BAR_HEIGHT,\n} from '..'\nimport RubberBand from './RubberBand'\nimport ScaleBar from './ScaleBar'\nimport VerticalGuides from './VerticalGuides'\nimport CenterLine from './CenterLine'\n\nconst useStyles = makeStyles(theme => ({\n  tracksContainer: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    overflow: 'hidden',\n  },\n  spacer: {\n    position: 'relative',\n    height: RESIZE_HANDLE_HEIGHT,\n  },\n}))\n\ntype LGV = Instance<LinearGenomeViewStateModel>\ntype Timer = ReturnType<typeof setTimeout>\n\nfunction TracksContainer({\n  children,\n  model,\n}: {\n  children: React.ReactNode\n  model: LGV\n}) {\n  const classes = useStyles()\n  // refs are to store these variables to avoid repeated rerenders associated\n  // with useState/setState\n  const delta = useRef(0)\n  const scheduled = useRef(false)\n  const timeout = useRef<Timer>()\n  const ref = useRef<HTMLDivElement>(null)\n  const prevX = useRef<number>(0)\n\n  const [mouseDragging, setMouseDragging] = useState(false)\n\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const currX = event.clientX\n      const distance = currX - prevX.current\n      if (distance) {\n        // use rAF to make it so multiple event handlers aren't fired per-frame\n        // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(-distance)\n            scheduled.current = false\n            prevX.current = event.clientX\n          })\n        }\n      }\n    }\n\n    function globalMouseUp() {\n      prevX.current = 0\n      if (mouseDragging) {\n        setMouseDragging(false)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n    }\n    return cleanup\n  }, [model, mouseDragging, prevX])\n\n  function mouseDown(event: React.MouseEvent) {\n    // check if clicking a draggable element or a resize handle\n    const target = event.target as HTMLElement\n    if (target.draggable || target.dataset.resizer) {\n      return\n    }\n\n    // otherwise do click and drag scroll\n    if (event.button === 0) {\n      prevX.current = event.clientX\n      setMouseDragging(true)\n    }\n  }\n\n  // this local mouseup is used in addition to the global because sometimes\n  // the global add/remove are not called in time, resulting in issue #533\n  function mouseUp(event: React.MouseEvent) {\n    event.preventDefault()\n    setMouseDragging(false)\n  }\n\n  function mouseLeave(event: React.MouseEvent) {\n    event.preventDefault()\n  }\n\n  useEffect(() => {\n    const curr = ref.current\n    // if ctrl is held down, zoom in with y-scroll\n    // else scroll horizontally with x-scroll\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      if (origEvent.ctrlKey === true) {\n        origEvent.preventDefault()\n        delta.current += event.pixelY / 500\n        model.setScaleFactor(\n          delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n        )\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          model.setScaleFactor(1)\n          model.zoomTo(\n            delta.current > 0\n              ? model.bpPerPx * (1 + delta.current)\n              : model.bpPerPx / (1 - delta.current),\n          )\n          delta.current = 0\n        }, 300)\n      } else {\n        // this is needed to stop the event from triggering \"back button\n        // action\" on MacOSX etc.  but is a heuristic to avoid preventing the\n        // inner-track scroll behavior\n        if (Math.abs(event.pixelX) > Math.abs(2 * event.pixelY)) {\n          origEvent.preventDefault()\n        }\n        delta.current += event.pixelX\n        if (!scheduled.current) {\n          // use rAF to make it so multiple event handlers aren't fired per-frame\n          // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(delta.current)\n            delta.current = 0\n            scheduled.current = false\n          })\n        }\n      }\n    }\n    if (curr) {\n      curr.addEventListener('wheel', onWheel)\n      return () => {\n        curr.removeEventListener('wheel', onWheel)\n      }\n    }\n    return () => {}\n  }, [model])\n\n  return (\n    <div\n      ref={ref}\n      role=\"presentation\"\n      className={classes.tracksContainer}\n      onMouseDown={mouseDown}\n      onMouseUp={mouseUp}\n      onMouseLeave={mouseLeave}\n    >\n      <VerticalGuides model={model} />\n      {model.showCenterLine ? <CenterLine model={model} /> : null}\n\n      <RubberBand\n        model={model}\n        ControlComponent={\n          <ScaleBar\n            model={model}\n            style={{ height: SCALE_BAR_HEIGHT, boxSizing: 'border-box' }}\n          />\n        }\n      />\n      <div className={classes.spacer} />\n      {children}\n    </div>\n  )\n}\n\nexport default observer(TracksContainer)\n","import React from 'react'\nimport { getEnv, resolveIdentifier, getRoot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Paper,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { LinearGenomeViewModel } from '../..'\n\nexport const useStyles = makeStyles(theme => ({\n  dialogContent: {\n    width: '80em',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function SearchResultsDialog({\n  model,\n  optAssemblyName,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  optAssemblyName?: string\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const { assemblyManager } = session\n  let assemblyName = optAssemblyName\n  if (model.displayedRegions.length > 0) {\n    assemblyName = model.displayedRegions[0]?.assemblyName\n  }\n  if (!assemblyName) {\n    throw new Error(`Assembly name not found`)\n  }\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const assemblyRegions = assembly.regions\n\n  function handleClick(location: string) {\n    try {\n      const newRegion = assemblyRegions.find(\n        region => location === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        model.navToLocString(location, assemblyName)\n      }\n    } catch (e) {\n      console.warn(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  function handleShowTrack(trackId: string) {\n    const trackConfigSchema = pluginManager.pluggableConfigSchemaType('track')\n    const configuration = resolveIdentifier(\n      trackConfigSchema,\n      getRoot(model),\n      trackId,\n    )\n    // check if we have any tracks with that configuration\n    const shownTracks = model.tracks.filter(\n      t => t.configuration === configuration,\n    )\n    if (shownTracks.length === 0) {\n      model.showTrack(trackId)\n    }\n  }\n\n  function getTrackName(trackId: string | undefined) {\n    if (trackId) {\n      const trackConfigSchema = pluginManager.pluggableConfigSchemaType('track')\n      const configuration = resolveIdentifier(\n        trackConfigSchema,\n        getRoot(model),\n        trackId,\n      )\n      if (configuration) {\n        return configuration.name?.value\n      }\n    }\n    return ''\n  }\n\n  return (\n    <Dialog open maxWidth=\"xl\" onClose={handleClose}>\n      <DialogTitle id=\"search-results-dialog\">\n        Search Results\n        {handleClose ? (\n          <IconButton\n            data-testid=\"close-resultsDialog\"\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n      <DialogContent>\n        {model.searchResults?.length === 0 ||\n        model.searchResults === undefined ? (\n          <Typography>\n            {`No results found for `}\n            <b>{model.searchQuery}</b>\n          </Typography>\n        ) : (\n          <>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {`Showing results for `}\n              <b>{model.searchQuery}</b>\n            </DialogContentText>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell align=\"right\">Location</TableCell>\n                    <TableCell align=\"right\">Track</TableCell>\n                    <TableCell align=\"right\" />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {model.searchResults.map((result: BaseResult, index) => (\n                    <TableRow key={`${result.getLabel()}-${index}`}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {result.getLabel()}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {result.getLocation()}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {getTrackName(result.getTrackId()) || 'N/A'}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          onClick={() => {\n                            handleClick(result.getLocation())\n                            handleClose()\n                          }}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Go to location\n                        </Button>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          onClick={() => {\n                            handleClick(result.getLocation())\n                            const resultTrackId = result.getTrackId()\n                            if (resultTrackId) {\n                              handleShowTrack(resultTrackId)\n                            }\n                            handleClose()\n                          }}\n                          disabled={!getTrackName(result.getTrackId())}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          Show Track\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        )}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  MenuItem,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n// other\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport SearchResultsDialog from './SearchResultsDialog'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(2),\n  },\n  importFormEntry: {\n    minWidth: 180,\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nconst ImportForm = observer(({ model }: { model: LGV }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const { pluginManager } = getEnv(session)\n  const { textSearchManager } = pluginManager.rootModel\n  const { rankSearchResults } = model\n  const [selectedAssemblyIdx, setSelectedAssemblyIdx] = useState(0)\n  const [selectedRegion, setSelectedRegion] = useState<string | undefined>(\n    undefined,\n  )\n  const [assemblyRegions, setAssemblyRegions] = useState<Region[]>([])\n  const error = !assemblyNames.length ? 'No configured assemblies' : ''\n  const hasError = Boolean(error)\n  const assemblyName = assemblyNames[selectedAssemblyIdx]\n  const displayName = assemblyName && !error ? selectedAssemblyIdx : ''\n  const searchScope = model.searchScope(assemblyName)\n  useEffect(() => {\n    let done = false\n    ;(async () => {\n      if (assemblyName) {\n        const assembly = await assemblyManager.waitForAssembly(assemblyName)\n        if (assembly && assembly.regions) {\n          const regions = assembly.regions\n          if (!done && regions) {\n            setSelectedRegion(regions[0].refName)\n            setAssemblyRegions(regions)\n          }\n        }\n      }\n    })()\n    return () => {\n      done = true\n    }\n  }, [assemblyManager, assemblyName])\n\n  function setSelectedValue(selectedOption: BaseResult) {\n    setSelectedRegion(selectedOption.getLocation())\n  }\n\n  async function handleSelectedRegion(input: string) {\n    const newRegion = assemblyRegions.find(r => selectedRegion === r.refName)\n    if (newRegion) {\n      model.setDisplayedRegions([newRegion])\n      // we use showAllRegions after setDisplayedRegions to make the entire\n      // region visible, xref #1703\n      model.showAllRegions()\n    } else {\n      const results =\n        (await textSearchManager?.search(\n          {\n            queryString: input.toLocaleLowerCase(),\n            searchType: 'exact',\n          },\n          searchScope,\n          rankSearchResults,\n        )) || []\n      if (results.length > 0) {\n        model.setSearchResults(results, input.toLocaleLowerCase())\n      } else {\n        try {\n          input && model.navToLocString(input, assemblyName)\n        } catch (e) {\n          if (`${e}` === `Error: Unknown reference sequence \"${input}\"`) {\n            model.setSearchResults(results, input.toLocaleLowerCase())\n          } else {\n            console.warn(e)\n            session.notify(`${e}`, 'warning')\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      {model.isSearchDialogDisplayed ? (\n        <SearchResultsDialog\n          model={model}\n          optAssemblyName={assemblyName}\n          handleClose={() => {\n            model.setSearchResults(undefined, undefined)\n          }}\n        />\n      ) : null}\n      <Container className={classes.importFormContainer}>\n        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TextField\n              select\n              variant=\"outlined\"\n              value={displayName}\n              onChange={event => {\n                setSelectedAssemblyIdx(Number(event.target.value))\n              }}\n              label=\"Assembly\"\n              helperText={error || 'Select assembly to view'}\n              error={hasError}\n              disabled={hasError}\n              margin=\"normal\"\n              className={classes.importFormEntry}\n            >\n              {assemblyNames.map((name, idx) => (\n                <MenuItem key={name} value={idx}>\n                  {name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            {assemblyName ? (\n              selectedRegion && model.volatileWidth ? (\n                <RefNameAutocomplete\n                  model={model}\n                  assemblyName={\n                    error ? undefined : assemblyNames[selectedAssemblyIdx]\n                  }\n                  value={selectedRegion}\n                  onSelect={option => setSelectedValue(option)}\n                  TextFieldProps={{\n                    margin: 'normal',\n                    variant: 'outlined',\n                    className: classes.importFormEntry,\n                    helperText: 'Enter a sequence or location',\n                    onBlur: event => {\n                      if (event.target.value !== '') {\n                        setSelectedRegion(event.target.value)\n                      }\n                    },\n                    onKeyPress: event => {\n                      const inputValue = (event.target as HTMLInputElement)\n                        .value\n                      // maybe check regular expression here to see if it's a locstring\n                      // try defaulting exact matches to first exact match\n                      if (event.key === 'Enter') {\n                        handleSelectedRegion(inputValue)\n                      }\n                    },\n                  }}\n                />\n              ) : (\n                <CircularProgress\n                  role=\"progressbar\"\n                  color=\"inherit\"\n                  size={20}\n                  disableShrink\n                />\n              )\n            ) : null}\n          </Grid>\n          <Grid item>\n            <Button\n              disabled={!selectedRegion}\n              className={classes.button}\n              onClick={() => {\n                if (selectedRegion) {\n                  handleSelectedRegion(selectedRegion)\n                }\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Open\n            </Button>\n            <Button\n              disabled={!selectedRegion}\n              className={classes.button}\n              onClick={() => {\n                model.showAllRegionsInAssembly(assemblyName)\n              }}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Show all regions in assembly\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n})\n\nexport default ImportForm\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport Paper from '@material-ui/core/Paper'\nimport Menu from '@jbrowse/core/ui/Menu'\nimport { LinearGenomeViewModel } from '..'\n\nconst MiniControls = observer((props: { model: LinearGenomeViewModel }) => {\n  const { model } = props\n  const { bpPerPx, maxBpPerPx, minBpPerPx, scaleFactor } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLElement>()\n\n  return (\n    <>\n      <Paper style={{ background: '#aaa7' }}>\n        <IconButton\n          color=\"secondary\"\n          onClick={event => {\n            setAnchorEl(event.currentTarget)\n          }}\n        >\n          <ArrowDown />\n        </IconButton>\n\n        <IconButton\n          data-testid=\"zoom_out\"\n          onClick={() => {\n            model.zoom(bpPerPx * 2)\n          }}\n          disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n          color=\"secondary\"\n        >\n          <ZoomOut />\n        </IconButton>\n        <IconButton\n          data-testid=\"zoom_in\"\n          onClick={() => {\n            model.zoom(model.bpPerPx / 2)\n          }}\n          disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n          color=\"secondary\"\n        >\n          <ZoomIn />\n        </IconButton>\n      </Paper>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setAnchorEl(undefined)\n        }}\n        onClose={() => {\n          setAnchorEl(undefined)\n        }}\n        menuItems={model.menuItems}\n      />\n    </>\n  )\n})\n\nexport default MiniControls\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { saveAs } from 'file-saver'\nimport { Region } from '@jbrowse/core/util/types'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport copy from 'copy-to-clipboard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Container,\n  Typography,\n  Divider,\n  IconButton,\n  TextField,\n} from '@material-ui/core'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport CloseIcon from '@material-ui/icons/Close'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { getSession } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { formatSeqFasta, SeqChunk } from '@jbrowse/core/util/formatFastaStrings'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles(theme => ({\n  loadingMessage: {\n    padding: theme.spacing(5),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  dialogContent: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n}))\n\n/**\n * Fetches and returns a list features for a given list of regions\n * @param selectedRegions - Region[]\n * @returns Features[]\n */\nasync function fetchSequence(\n  self: LinearGenomeViewModel,\n  selectedRegions: Region[],\n) {\n  const session = getSession(self)\n  const assemblyName =\n    self.leftOffset?.assemblyName || self.rightOffset?.assemblyName || ''\n  const { rpcManager, assemblyManager } = session\n  const assemblyConfig = assemblyManager.get(assemblyName)?.configuration\n\n  // assembly configuration\n  const adapterConfig = readConfObject(assemblyConfig, ['sequence', 'adapter'])\n\n  const sessionId = 'getSequence'\n  const chunks = (await Promise.all(\n    selectedRegions.map(region =>\n      rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig,\n        region,\n        sessionId,\n      }),\n    ),\n  )) as Feature[][]\n\n  // assumes that we get whole sequence in a single getFeatures call\n  return chunks.map(chunk => chunk[0])\n}\n\nfunction SequenceDialog({\n  model,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const session = getSession(model)\n  const [error, setError] = useState<Error>()\n  const [sequence, setSequence] = useState('')\n  const loading = Boolean(!sequence) || Boolean(error)\n  const { leftOffset, rightOffset } = model\n\n  // avoid infinite looping of useEffect\n  // random note: the current selected region can't be a computed because it\n  // uses action on base1dview even though it's on the ephemeral base1dview\n  const regionsSelected = useMemo(\n    () => model.getSelectedRegions(leftOffset, rightOffset),\n    [model, leftOffset, rightOffset],\n  )\n\n  useEffect(() => {\n    let active = true\n\n    function formatSequence(seqChunks: Feature[]) {\n      const sequenceChunks: SeqChunk[] = []\n      const incompleteSeqErrs: string[] = []\n      seqChunks.forEach((chunk: Feature) => {\n        const chunkSeq = chunk.get('seq')\n        const chunkRefName = chunk.get('refName')\n        const chunkStart = chunk.get('start') + 1\n        const chunkEnd = chunk.get('end')\n        const chunkLocstring = `${chunkRefName}:${chunkStart}-${chunkEnd}`\n        if (chunkSeq) {\n          sequenceChunks.push({ header: chunkLocstring, seq: chunkSeq })\n          if (chunkSeq.length !== chunkEnd - chunkStart + 1) {\n            incompleteSeqErrs.push(\n              `${chunkLocstring} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(\n                chunkEnd - chunkStart\n              ).toLocaleString()}`,\n            )\n          }\n        }\n      })\n      if (incompleteSeqErrs.length > 0) {\n        session.notify(\n          `Unable to retrieve complete reference sequence from regions:${incompleteSeqErrs.join()}`,\n        )\n      }\n      setSequence(formatSeqFasta(sequenceChunks))\n    }\n\n    ;(async () => {\n      try {\n        if (regionsSelected.length > 0) {\n          const chunks = await fetchSequence(model, regionsSelected)\n          if (active) {\n            formatSequence(chunks)\n          }\n        } else {\n          throw new Error('Selected region is out of bounds')\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [model, session, regionsSelected, setSequence])\n\n  const sequenceTooLarge = sequence.length > 1_000_000\n\n  return (\n    <Dialog\n      data-testid=\"sequence-dialog\"\n      maxWidth=\"xl\"\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            data-testid=\"close-seqDialog\"\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n              model.setOffsets(undefined, undefined)\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n        {loading && !error ? (\n          <Container>\n            Retrieving reference sequence...\n            <CircularProgress\n              style={{\n                marginLeft: 10,\n              }}\n              size={20}\n              disableShrink\n            />\n          </Container>\n        ) : null}\n        {sequence !== undefined ? (\n          <TextField\n            data-testid=\"rubberband-sequence\"\n            variant=\"outlined\"\n            multiline\n            rows={5}\n            disabled={sequenceTooLarge}\n            className={classes.dialogContent}\n            fullWidth\n            value={\n              sequenceTooLarge\n                ? 'Reference sequence too large to display, use the download FASTA button'\n                : sequence\n            }\n            InputProps={{\n              readOnly: true,\n              classes: {\n                input: classes.textAreaFont,\n              },\n            }}\n          />\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            copy(sequence || '')\n            session.notify('Copied to clipboard', 'success')\n          }}\n          disabled={loading || sequenceTooLarge}\n          color=\"primary\"\n          startIcon={<ContentCopyIcon />}\n        >\n          Copy to clipboard\n        </Button>\n        <Button\n          onClick={() => {\n            const seqFastaFile = new Blob([sequence || ''], {\n              type: 'text/x-fasta;charset=utf-8',\n            })\n            saveAs(seqFastaFile, 'jbrowse_ref_seq.fa')\n          }}\n          disabled={loading}\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n        >\n          Download FASTA\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n            model.setOffsets(undefined, undefined)\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SequenceDialog)\n","export interface SeqChunk {\n  header: string\n  seq: string\n}\n/**\n * Returns sequence with new line every 80 characters\n * ref https://stackoverflow.com/a/51506718/2129219\n *\n * @param seqString -  string\n * @returns formated sequence string\n */\nexport function formatFastaLines(seqString: string) {\n  return seqString.replace(/(.{1,80})/g, '$1\\n').trimEnd()\n}\n/**\n * Formats the sequences chunks into Fasta format\n *\n * @param chunks - array of seq chunks of the form `{ header: string, seq: string }`\n * @returns formatted sequence in fasta format\n */\nexport function formatSeqFasta(chunks: SeqChunk[]) {\n  return chunks\n    .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n    .join('\\n')\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\nimport { makeTicks } from '../util'\n\nfunction mathPower(num: number): string {\n  if (num < 999) {\n    return String(num)\n  }\n  return `${mathPower(~~(num / 1000))},${`00${~~(num % 1000)}`.substr(-3, 3)}`\n}\n\nconst useStyles = makeStyles((/* theme */) => ({\n  majorTickLabel: {\n    fontSize: '11px',\n    // fill: theme.palette.text.primary,\n  },\n  majorTick: {\n    stroke: '#555',\n    // stroke: theme.palette.text.secondary,\n  },\n  minorTick: {\n    stroke: '#999',\n    // stroke: theme.palette.text.hint,\n  },\n}))\n\nfunction Ruler({\n  start,\n  end,\n  bpPerPx,\n  reversed,\n  major,\n  minor,\n}: {\n  start: number\n  end: number\n  bpPerPx: number\n  reversed?: boolean\n  major: boolean\n  minor: boolean\n}) {\n  const classes = useStyles()\n  const ticks = makeTicks(start, end, bpPerPx, major, minor)\n  return (\n    <>\n      {ticks.map(tick => {\n        const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n        return (\n          <line\n            key={tick.base}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={tick.type === 'major' ? '#555' : '#999'}\n            className={\n              tick.type === 'major' ? classes.majorTick : classes.minorTick\n            }\n            data-bp={tick.base}\n          />\n        )\n      })}\n      {ticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n          return (\n            <text\n              x={x - 3}\n              y={7 + 11}\n              key={`label-${tick.base}`}\n              style={{ fontSize: '11px' }}\n              className={classes.majorTickLabel}\n            >\n              {mathPower(tick.base + 1)}\n            </text>\n          )\n        })}\n    </>\n  )\n}\n\nRuler.propTypes = {\n  start: ReactPropTypes.number.isRequired,\n  end: ReactPropTypes.number.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  reversed: ReactPropTypes.bool,\n  major: ReactPropTypes.bool,\n  minor: ReactPropTypes.bool,\n}\n\nRuler.defaultProps = {\n  reversed: false,\n  major: true,\n  minor: true,\n}\n\nexport default observer(Ruler)\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\n\n// material ui things\nimport { Button, Paper, Typography, makeStyles } from '@material-ui/core'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// misc\nimport { when } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getParent, Instance } from 'mobx-state-tree'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\n// locals\nimport { LinearGenomeViewStateModel, ExportSvgOptions } from '..'\nimport Header from './Header'\nimport TrackContainer from './TrackContainer'\nimport TracksContainer from './TracksContainer'\nimport ImportForm from './ImportForm'\nimport MiniControls from './MiniControls'\nimport SequenceDialog from './SequenceDialog'\nimport SearchResultsDialog from './SearchResultsDialog'\nimport Ruler from './Ruler'\n\ntype LGV = Instance<LinearGenomeViewStateModel>\n\nconst useStyles = makeStyles(theme => ({\n  errorMessage: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  spacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst LinearGenomeView = observer(({ model }: { model: LGV }) => {\n  const { tracks, error, hideHeader, initialized, hasDisplayedRegions } = model\n  const classes = useStyles()\n\n  if (!initialized) {\n    return null\n  }\n  if (!hasDisplayedRegions) {\n    return <ImportForm model={model} />\n  }\n  return (\n    <div style={{ position: 'relative' }}>\n      {model.isSeqDialogDisplayed ? (\n        <SequenceDialog\n          model={model}\n          handleClose={() => {\n            model.setOffsets(undefined, undefined)\n          }}\n        />\n      ) : null}\n      {model.isSearchDialogDisplayed ? (\n        <SearchResultsDialog\n          model={model}\n          handleClose={() => {\n            model.setSearchResults(undefined, undefined)\n          }}\n        />\n      ) : null}\n      {!hideHeader ? (\n        <Header model={model} />\n      ) : (\n        <div\n          style={{\n            position: 'absolute',\n            right: 0,\n            zIndex: 1001,\n          }}\n        >\n          <MiniControls model={model} />\n        </div>\n      )}\n      {error ? (\n        <Paper variant=\"outlined\" className={classes.errorMessage}>\n          <Typography color=\"error\">{error.message}</Typography>\n        </Paper>\n      ) : (\n        <>\n          <TracksContainer model={model}>\n            {!tracks.length ? (\n              <Paper variant=\"outlined\" className={classes.errorMessage}>\n                <Typography>No tracks active.</Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={model.activateTrackSelector}\n                  style={{ zIndex: 1000 }}\n                >\n                  <TrackSelectorIcon className={classes.spacer} />\n                  Open track selector\n                </Button>\n              </Paper>\n            ) : (\n              tracks.map(track => (\n                <TrackContainer key={track.id} model={model} track={track} />\n              ))\n            )}\n          </TracksContainer>\n        </>\n      )}\n    </div>\n  )\n})\n\nexport default LinearGenomeView\n\nfunction ScaleBar({ model, fontSize }: { model: LGV; fontSize: number }) {\n  const {\n    offsetPx,\n    dynamicBlocks: { totalWidthPxWithoutBorders: totalWidthPx, totalBp },\n  } = model\n  let displayBp\n  if (Math.floor(totalBp / 1000000) > 0) {\n    displayBp = `${parseFloat((totalBp / 1000000).toPrecision(3))}Mbp`\n  } else if (Math.floor(totalBp / 1000) > 0) {\n    displayBp = `${parseFloat((totalBp / 1000).toPrecision(3))}Kbp`\n  } else {\n    displayBp = `${Math.floor(totalBp)}bp`\n  }\n  const x0 = Math.max(-offsetPx, 0)\n  const x1 = x0 + totalWidthPx\n  return (\n    <>\n      <line x1={x0} x2={x1} y1={10} y2={10} stroke=\"black\" />\n      <line x1={x0} x2={x0} y1={5} y2={15} stroke=\"black\" />\n      <line x1={x1} x2={x1} y1={5} y2={15} stroke=\"black\" />\n      <text\n        x={x0 + (x1 - x0) / 2}\n        y={fontSize * 2}\n        textAnchor=\"middle\"\n        fontSize={fontSize}\n      >\n        {displayBp}\n      </text>\n    </>\n  )\n}\n\nfunction SVGRuler({\n  model,\n  fontSize,\n  width,\n}: {\n  model: LGV\n  fontSize: number\n  width: number\n}) {\n  const {\n    dynamicBlocks: { contentBlocks },\n    offsetPx: viewOffsetPx,\n    bpPerPx,\n  } = model\n  const renderRuler = contentBlocks.length < 5\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clip-ruler\">\n          <rect x={0} y={0} width={width} height={20} />\n        </clipPath>\n      </defs>\n      {contentBlocks.map(block => {\n        const offsetLeft = block.offsetPx - viewOffsetPx\n        return (\n          <g key={`${block.key}`} transform={`translate(${offsetLeft} 0)`}>\n            <text x={offsetLeft / bpPerPx} y={fontSize} fontSize={fontSize}>\n              {block.refName}\n            </text>\n            {renderRuler ? (\n              <g transform=\"translate(0 20)\" clipPath=\"url(#clip-ruler)\">\n                <Ruler\n                  start={block.start}\n                  end={block.end}\n                  bpPerPx={bpPerPx}\n                  reversed={block.reversed}\n                />\n              </g>\n            ) : (\n              <line\n                strokeWidth={1}\n                stroke=\"black\"\n                x1={block.start / bpPerPx}\n                x2={block.end / bpPerPx}\n                y1={20}\n                y2={20}\n              />\n            )}\n          </g>\n        )\n      })}\n    </>\n  )\n}\n\nconst fontSize = 15\nconst rulerHeight = 50\nconst textHeight = fontSize + 5\nconst paddingHeight = 20\nconst headerHeight = textHeight + 20\n\nconst totalHeight = (tracks: { displays: { height: number }[] }[]) => {\n  return tracks.reduce((accum, track) => {\n    const display = track.displays[0]\n    return accum + display.height + paddingHeight + textHeight\n  }, 0)\n}\n\n// SVG component, ruler and assembly name\nconst SVGHeader = ({ model }: { model: LGV }) => {\n  const { width, assemblyNames } = model\n  const assemblyName = assemblyNames.length > 1 ? '' : assemblyNames[0]\n  return (\n    <g id=\"header\">\n      <text x={0} y={fontSize} fontSize={fontSize}>\n        {assemblyName}\n      </text>\n      <g transform={`translate(0 ${fontSize})`}>\n        <ScaleBar model={model} fontSize={fontSize} />\n      </g>\n      <g transform={`translate(0 ${rulerHeight})`}>\n        <SVGRuler model={model} fontSize={fontSize} width={width} />\n      </g>\n    </g>\n  )\n}\n\n// SVG component, region separator\nconst SVGRegionSeparators = ({ model }: { model: LGV }) => {\n  const { dynamicBlocks, tracks } = model\n  const initialOffset = headerHeight + rulerHeight + 20\n  const height = totalHeight(tracks)\n\n  return (\n    <>\n      {dynamicBlocks.contentBlocks.slice(1).map(block => (\n        <line\n          key={block.key}\n          x1={block.offsetPx - model.offsetPx}\n          x2={block.offsetPx - model.offsetPx}\n          y1={initialOffset}\n          y2={height}\n          stroke=\"black\"\n          strokeOpacity={0.3}\n        />\n      ))}\n    </>\n  )\n}\n\n// SVG component, tracks\nfunction SVGTracks({\n  displayResults,\n  model,\n  offset,\n}: {\n  displayResults: {\n    track: {\n      configuration: AnyConfigurationModel\n      displays: { height: number }[]\n    }\n    result: string\n  }[]\n  model: LGV\n  offset: number\n}) {\n  return (\n    <>\n      {displayResults.map(({ track, result }) => {\n        const current = offset\n        const trackName =\n          getConf(track, 'name') ||\n          `Reference sequence (${readConfObject(\n            getParent(track.configuration),\n            'name',\n          )})`\n        const display = track.displays[0]\n        offset += display.height + paddingHeight + textHeight\n        return (\n          <g\n            key={track.configuration.trackId}\n            transform={`translate(0 ${current})`}\n          >\n            <text fontSize={fontSize} x={Math.max(-model.offsetPx, 0)}>\n              {trackName}\n            </text>\n            <g transform={`translate(0 ${textHeight})`}>{result}</g>\n          </g>\n        )\n      })}\n    </>\n  )\n}\n\n// render LGV to SVG\nexport async function renderToSvg(model: LGV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const { width, tracks } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight + 20\n  const height = totalHeight(tracks) + offset\n  const displayResults = await Promise.all(\n    tracks.map(async track => {\n      const display = track.displays[0]\n      await when(() => (display.ready !== undefined ? display.ready : true))\n      const result = await display.renderSvg(opts)\n      return { track, result }\n    }),\n  )\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox={[0, 0, width + shift * 2, height].toString()}\n    >\n      {/* background white */}\n      <rect width={width + shift * 2} height={height} fill=\"white\" />\n\n      <g stroke=\"none\" transform={`translate(${shift} ${fontSize})`}>\n        <SVGHeader model={model} />\n        <SVGTracks\n          model={model}\n          displayResults={displayResults}\n          offset={offset}\n        />\n        <SVGRegionSeparators model={model} />\n      </g>\n    </svg>,\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { getDefaultValue } from '../../util/mst-reflection'\nimport PluggableElementBase from '../PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../../configuration/configurationSchema'\nimport { AnyReactComponentType } from '../../util'\nimport PluginManager from '../../PluginManager'\n\nexport type RenderProps = Record<string, unknown>\n\nexport interface RenderResults {\n  reactElement?: ReactElement\n  html?: string\n}\n\nexport default class RendererType extends PluggableElementBase {\n  ReactComponent: AnyReactComponentType\n\n  configSchema: AnyConfigurationSchemaType\n\n  pluginManager: PluginManager\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: AnyReactComponentType\n    configSchema: AnyConfigurationSchemaType\n    pluginManager: PluginManager\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.configSchema = stuff.configSchema\n    this.pluginManager = stuff.pluginManager\n\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for renderer ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      throw new Error(\n        `${this.name} config schema ${this.configSchema.name} is not explicitlyTyped`,\n      )\n    }\n    if (!this.pluginManager) {\n      throw new Error(`no plugin manager defined for renderer ${this.name}`)\n    }\n  }\n\n  async render(props: RenderProps): Promise<RenderResults> {\n    return {\n      reactElement: React.createElement(this.ReactComponent, props, null),\n    }\n  }\n\n  /**\n   * frees resources associated with the given range, session, etc.\n   * optionally returns the number of data items deleted\n   */\n  freeResources(/* specification: {} */): number {\n    return 0\n  }\n}\n","import {\n  isStateTreeNode,\n  getSnapshot,\n  getType,\n  isMapType,\n  isType,\n  isUnionType,\n  isOptionalType,\n  isArrayType,\n  isModelType,\n  isLateType,\n} from 'mobx-state-tree'\n\nimport {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from './configurationSchema'\nimport {\n  getUnionSubTypes,\n  getDefaultValue,\n  getSubType,\n  resolveLateType,\n} from '../util/mst-reflection'\n\n/**\n * given a configuration model (an instance of a ConfigurationSchema),\n * read the configuration variable at the given path\n *\n * @param model - instance of ConfigurationSchema\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *  will be sent to each of the slotNames\n */\nexport function readConfObject(\n  confObject: AnyConfigurationModel,\n  slotPath: string[] | string | undefined = undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: Record<string, any> = {},\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (!confObject) {\n    throw new TypeError('must provide conf object to read')\n  }\n  if (!slotPath) {\n    return getSnapshot(confObject)\n  }\n  if (typeof slotPath === 'string') {\n    let slot = confObject[slotPath]\n    // check for the subconf being a map if we don't find it immediately\n    if (\n      !slot &&\n      isStateTreeNode(confObject) &&\n      isMapType(getType(confObject))\n    ) {\n      slot = confObject.get(slotPath)\n    }\n    if (!slot) {\n      return undefined\n      // if we want to be very strict about config slots, we could uncomment the below\n      // instead of returning undefine\n      //\n      // const modelType = getType(model)\n      // const schemaType = model.configuration && getType(model.configuration)\n      // throw new Error(\n      //   `no slot \"${slotName}\" found in ${modelType.name} configuration (${\n      //     schemaType.name\n      //   })`,\n      // )\n    }\n\n    if (slot.expr) {\n      const appliedFunc = slot.expr.evalSync(args)\n      if (isStateTreeNode(appliedFunc)) {\n        return getSnapshot(appliedFunc)\n      }\n      return appliedFunc\n    }\n    if (isStateTreeNode(slot)) {\n      return getSnapshot(slot)\n    }\n    return slot\n  }\n\n  const slotName = slotPath[0]\n  if (slotPath.length > 1) {\n    const newPath = slotPath.slice(1)\n    let subConf = confObject[slotName]\n    // check for the subconf being a map if we don't find it immediately\n    if (\n      !subConf &&\n      isStateTreeNode(confObject) &&\n      isMapType(getType(confObject))\n    ) {\n      subConf = confObject.get(slotName)\n    }\n    if (!subConf) {\n      return undefined\n    }\n    return readConfObject(subConf, newPath, args)\n  }\n  return readConfObject(confObject, slotName, args)\n}\n\n/**\n * helper method for readConfObject, reads the config from a mst model\n *\n * @param model - object containing a 'configuration' member\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *   will be sent to each of the slotNames\n */\nexport function getConf(\n  model: unknown,\n  slotPath: string[] | string | undefined = undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: Record<string, any> = {},\n) {\n  if (!model) {\n    throw new TypeError('must provide a model object')\n  }\n  const { configuration } = model as { configuration: unknown }\n  if (isConfigurationModel(configuration)) {\n    return readConfObject(configuration, slotPath, args)\n  }\n  throw new TypeError('cannot getConf on this model, it has no configuration')\n}\n\n/**\n * given a union of explicitly typed configuration schema types,\n * extract an array of the type names contained in the union\n *\n * @param unionType -\n * @returns Array of type names contained in the union\n */\nexport function getTypeNamesFromExplicitlyTypedUnion(maybeUnionType: unknown) {\n  if (isType(maybeUnionType)) {\n    maybeUnionType = resolveLateType(maybeUnionType)\n    // @ts-ignore\n    if (isUnionType(maybeUnionType)) {\n      const typeNames: string[] = []\n      getUnionSubTypes(maybeUnionType).forEach(type => {\n        type = resolveLateType(type)\n        let typeName = getTypeNamesFromExplicitlyTypedUnion(type)\n        if (!typeName.length) {\n          const def = getDefaultValue(type)\n          typeName = [def.type]\n        }\n        if (!typeName[0]) {\n          // debugger\n          throw new Error(`invalid config schema type ${type}`)\n        }\n        typeNames.push(...typeName)\n      })\n      return typeNames\n    }\n  }\n  return []\n}\n\nexport function isBareConfigurationSchemaType(\n  thing: unknown,\n): thing is AnyConfigurationSchemaType {\n  if (isType(thing)) {\n    if (\n      isModelType(thing) &&\n      ('isJBrowseConfigurationSchema' in thing ||\n        thing.name.includes('ConfigurationSchema'))\n    ) {\n      return true\n    }\n    // if it's a late type, assume its a config schema\n    if (isLateType(thing)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function isConfigurationSchemaType(thing: unknown): boolean {\n  if (!isType(thing)) {\n    return false\n  }\n\n  // written as a series of if-statements instead of a big logical OR\n  // because this construction gives much better debugging backtraces.\n\n  // also, note that the order of these statements matters, because\n  // for example some union types are also optional types\n\n  if (isBareConfigurationSchemaType(thing)) {\n    return true\n  }\n\n  if (isUnionType(thing)) {\n    return getUnionSubTypes(thing).every(\n      t => isConfigurationSchemaType(t) || t.name === 'undefined',\n    )\n  }\n\n  if (isOptionalType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  if (isArrayType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  if (isMapType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  return false\n}\n\nexport function isConfigurationModel(\n  thing: unknown,\n): thing is AnyConfigurationModel {\n  return isStateTreeNode(thing) && isConfigurationSchemaType(getType(thing))\n}\n\nexport function isConfigurationSlotType(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isJBrowseConfigurationSlot' in thing\n  )\n}\n","import { intersection2 } from './range'\nimport { assembleLocString } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\nimport { Base1DViewModel } from './calculateStaticBlocks'\n\n/**\n * returns a BlockSet of which the `blocks` attribute is an array of 'dynamic\n * blocks', which are blocks representing only the regions that are visible in\n * the view right now. these are mostly used by tracks for which static blocks\n * are not feasible.\n *\n * each block is a plain JS object like:\n *   `{ refName, start, end, offsetPx, reversed? }`\n *\n * start and end are in bp, and start is always less than end, but if reversed\n * is true, startBp will be on the right side of the visible region.\n *\n * offsetPx is the number of pixels from the left edge of the view to the left\n * edge of the region\n *\n * NOTE: start, end, and offsetPx may all be fractional!\n *\n * @returns BlockSet of `{ refName, startBp, end, offset, reversed? }`\n */\nexport default function calculateDynamicBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    width,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n  } = model\n\n  if (!width) {\n    throw new Error('view has no width, cannot calculate displayed blocks')\n  }\n  const blocks = new BlockSet()\n  let displayedRegionLeftPx = 0\n  const windowLeftPx = offsetPx\n  const windowRightPx = windowLeftPx + width\n  displayedRegions.forEach((region, regionNumber) => {\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region\n    const displayedRegionRightPx =\n      displayedRegionLeftPx + (regionEnd - regionStart) / bpPerPx\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n\n    if (\n      displayedRegionLeftPx < windowRightPx &&\n      displayedRegionRightPx > windowLeftPx\n    ) {\n      // this displayed region overlaps the view, so make a record for it\n      const [leftPx, rightPx] = intersection2(\n        windowLeftPx,\n        windowRightPx,\n        displayedRegionLeftPx,\n        displayedRegionRightPx,\n      )\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      let blockOffsetPx: number\n      if (reversed) {\n        start = Math.max(\n          regionStart,\n          regionEnd - (rightPx - displayedRegionLeftPx) * bpPerPx,\n        )\n        end = regionEnd - (leftPx - displayedRegionLeftPx) * bpPerPx\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n        blockOffsetPx = displayedRegionLeftPx + (regionEnd - end) / bpPerPx\n      } else {\n        start = (leftPx - displayedRegionLeftPx) * bpPerPx + regionStart\n        end = Math.min(\n          regionEnd,\n          (rightPx - displayedRegionLeftPx) * bpPerPx + regionStart,\n        )\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n        blockOffsetPx = displayedRegionLeftPx + (start - regionStart) / bpPerPx\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: blockOffsetPx,\n        parentRegion: region,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocString(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && blocks.length === 0 && isLeftEndOfDisplayedRegion) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: -offsetPx,\n            offsetPx: blockData.offsetPx + offsetPx,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n          displayedRegionLeftPx += interRegionPaddingWidth\n        }\n\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          blockOffsetPx = blockData.offsetPx + blockData.widthPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width - blockOffsetPx + offsetPx,\n              offsetPx: blockOffsetPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    displayedRegionLeftPx += (regionEnd - regionStart) / bpPerPx\n  })\n  return blocks\n}\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Grid,\n  FormHelperText,\n  InputLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core'\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab'\nimport { observer } from 'mobx-react'\nimport { isElectron } from '../util'\nimport {\n  LocalPathLocation,\n  UriLocation,\n  FileLocation,\n  BlobLocation,\n} from '../util/types'\nimport { getBlob, storeBlobLocation } from '../util/tracks'\n\nfunction isUriLocation(location: FileLocation): location is UriLocation {\n  return 'uri' in location\n}\n\nfunction isLocalPathLocation(\n  location: FileLocation,\n): location is LocalPathLocation {\n  return 'localPath' in location\n}\n\nfunction isBlobLocation(location: FileLocation): location is BlobLocation {\n  return 'blobId' in location\n}\n\nconst FileLocationEditor = observer(\n  (props: {\n    location?: FileLocation\n    setLocation: (param: FileLocation) => void\n    name?: string\n    description?: string\n  }) => {\n    const { location, name, description } = props\n    const fileOrUrl = !location || isUriLocation(location) ? 'url' : 'file'\n    const [fileOrUrlState, setFileOrUrlState] = useState(fileOrUrl)\n\n    return (\n      <>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {name}\n        </InputLabel>\n        <Grid container spacing={1} direction=\"row\" alignItems=\"center\">\n          <Grid item>\n            <ToggleButtonGroup\n              value={fileOrUrlState}\n              exclusive\n              onChange={(_, newValue) => {\n                if (newValue === 'url') {\n                  setFileOrUrlState('url')\n                } else {\n                  setFileOrUrlState('file')\n                }\n              }}\n              aria-label=\"file or url picker\"\n            >\n              {new URLSearchParams(window.location.search).get(\n                'adminKey',\n              ) ? null : (\n                <ToggleButton value=\"file\" aria-label=\"local file\">\n                  File\n                </ToggleButton>\n              )}\n              <ToggleButton value=\"url\" aria-label=\"url\">\n                URL\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Grid>\n          <Grid item>\n            {fileOrUrlState === 'url' ? (\n              <UrlChooser {...props} />\n            ) : (\n              <LocalFileChooser {...props} />\n            )}\n          </Grid>\n        </Grid>\n        <FormHelperText>{description}</FormHelperText>\n      </>\n    )\n  },\n)\n\nconst UrlChooser = (props: {\n  location?: FileLocation\n  setLocation: Function\n}) => {\n  const { location, setLocation } = props\n\n  return (\n    <TextField\n      fullWidth\n      inputProps={{ 'data-testid': 'urlInput' }}\n      defaultValue={location && isUriLocation(location) ? location.uri : ''}\n      onChange={event => setLocation({ uri: event.target.value })}\n    />\n  )\n}\n\nconst LocalFileChooser = observer(\n  (props: { location?: FileLocation; setLocation: Function }) => {\n    const { location, setLocation } = props\n\n    const filename =\n      location &&\n      ((isBlobLocation(location) && location.name) ||\n        (isLocalPathLocation(location) && location.localPath))\n\n    const needToReload =\n      location && isBlobLocation(location) && !getBlob(location.blobId)\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <Button variant=\"outlined\" component=\"label\">\n          Choose File\n          <input\n            type=\"file\"\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              opacity: 0,\n            }}\n            onChange={({ target }) => {\n              const file = target && target.files && target.files[0]\n              if (file) {\n                if (isElectron) {\n                  setLocation({\n                    localPath: (file as File & { path: string }).path,\n                  })\n                } else {\n                  setLocation(storeBlobLocation({ blob: file }))\n                }\n              }\n            }}\n          />\n        </Button>\n        {filename ? (\n          <>\n            <Typography\n              style={{ marginLeft: '0.4rem' }}\n              variant=\"body1\"\n              component=\"span\"\n            >\n              {filename}\n            </Typography>\n            {needToReload ? (\n              <Typography color=\"error\">(need to reload)</Typography>\n            ) : null}\n          </>\n        ) : null}\n      </div>\n    )\n  },\n)\n\nexport default FileLocationEditor\n","import { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  contentBlock: {\n    position: 'relative',\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  elidedBlock: {\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    backgroundColor: '#999',\n    backgroundImage:\n      'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n  },\n  interRegionPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.text.primary,\n  },\n  boundaryPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.action.disabledBackground,\n  },\n}))\n\ninterface ContentBlockProps {\n  block: BaseBlock\n  children: React.ReactNode\n}\n\ninterface ElidedBlockProps {\n  width: number\n}\n\ninterface InterRegionPaddingBlockProps {\n  boundary: boolean\n  width: number\n  style?: React.CSSProperties\n}\n\nconst ContentBlock = observer(({ block, children }: ContentBlockProps) => {\n  const classes = useStyles()\n  return (\n    <div\n      style={{\n        width: `${block.widthPx}px`,\n      }}\n      className={classes.contentBlock}\n    >\n      {children}\n    </div>\n  )\n})\n\nfunction ElidedBlock({ width }: ElidedBlockProps) {\n  const classes = useStyles()\n  return <div className={classes.elidedBlock} style={{ width: `${width}px` }} />\n}\n\nfunction InterRegionPaddingBlock({\n  boundary,\n  width,\n  style = {},\n}: InterRegionPaddingBlockProps) {\n  const classes = useStyles()\n  return (\n    <div\n      style={{\n        ...style,\n        width: `${width}px`,\n      }}\n      className={\n        boundary\n          ? classes.boundaryPaddingBlock\n          : classes.interRegionPaddingBlock\n      }\n    />\n  )\n}\n\nexport { ContentBlock, ElidedBlock, InterRegionPaddingBlock }\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\nimport { AnyReactComponentType } from '../util'\n\nexport default class ConnectionType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  displayName: string\n\n  description: string\n\n  url: string\n\n  configEditorComponent?: AnyReactComponentType\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n    displayName: string\n    description: string\n    configEditorComponent?: AnyReactComponentType\n    url: string\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    this.displayName = stuff.displayName\n    this.description = stuff.description\n    this.url = stuff.url\n    this.configEditorComponent = stuff.configEditorComponent\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for connection ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema defined for connection ${this.name}`)\n    }\n  }\n}\n","/* ---------------- for the RPC client ----------------- */\n\nlet abortSignalCounter = 0\nexport type RemoteAbortSignal = { abortSignalId: number }\nconst abortSignalIds: WeakMap<AbortSignal, number> = new WeakMap() // map of abortsignal => numerical ID\n\n/**\n * assign an ID to the given abort signal and return a plain object representation\n * @param signal - the signal to serialize\n * @param callfunc - function used to call\n *  a remote method, will be called like callfunc('signalAbort', signalId)\n */\nexport function serializeAbortSignal(\n  signal: AbortSignal,\n  callfunc: (name: string, abortSignalId: number) => void,\n): RemoteAbortSignal {\n  let abortSignalId = abortSignalIds.get(signal)\n  if (!abortSignalId) {\n    abortSignalCounter += 1\n    abortSignalIds.set(signal, abortSignalCounter)\n    abortSignalId = abortSignalCounter\n    signal.addEventListener('abort', () => {\n      const signalId = abortSignalIds.get(signal)\n      if (signalId !== undefined) {\n        callfunc('signalAbort', signalId)\n      }\n    })\n  }\n  return { abortSignalId }\n}\n\n/* ---------------- for the RPC server ----------------- */\n\n/**\n * test whether a given object\n * @param thing - the thing to test\n * @returns true if the thing is a remote abort signal\n */\nexport function isRemoteAbortSignal(\n  thing: unknown,\n): thing is RemoteAbortSignal {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'abortSignalId' in thing &&\n    // @ts-ignore\n    typeof thing.abortSignalId === 'number'\n  )\n}\n\n// the server side keeps a set of surrogate abort controllers that can be\n// aborted based on ID\nconst surrogateAbortControllers: Map<number, AbortController> = new Map() // numerical ID => surrogate abort controller\n\n/**\n * deserialize the result of serializeAbortSignal into an AbortSignal\n *\n * @param signal -\n * @returns an abort signal that corresponds to the given ID\n */\nexport function deserializeAbortSignal({\n  abortSignalId,\n}: RemoteAbortSignal): AbortSignal {\n  let surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n  if (!surrogateAbortController) {\n    surrogateAbortController = new AbortController()\n    surrogateAbortControllers.set(abortSignalId, surrogateAbortController)\n  }\n  return surrogateAbortController.signal\n}\n\n/**\n * fire an abort signal from a remote abort signal ID\n *\n * @param abortSignalId -\n */\nexport function remoteAbort(props: { signalId: number }) {\n  const { signalId: abortSignalId } = props\n  const surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n\n  if (surrogateAbortController) {\n    surrogateAbortController.abort()\n  }\n}\n\nexport function remoteAbortRpcHandler() {\n  return {\n    signalAbort: remoteAbort,\n  }\n}\n","import PluginManager from '../PluginManager'\nimport PluggableElementBase from './PluggableElementBase'\nimport { setBlobMap, getBlobMap } from '../util/tracks'\n\nimport {\n  deserializeAbortSignal,\n  isRemoteAbortSignal,\n  RemoteAbortSignal,\n} from '../rpc/remoteAbortSignals'\n\nexport type RpcMethodConstructor = new (pm: PluginManager) => RpcMethodType\n\nexport default abstract class RpcMethodType extends PluggableElementBase {\n  pluginManager: PluginManager\n\n  name = 'UNKNOWN'\n\n  constructor(pluginManager: PluginManager) {\n    super({ name: '' })\n    this.pluginManager = pluginManager\n  }\n\n  async serializeArguments(args: {}, _rpcDriverClassName: string): Promise<{}> {\n    const blobMap = getBlobMap()\n    return { ...args, blobMap }\n  }\n\n  async deserializeArguments<\n    SERIALIZED extends {\n      signal?: RemoteAbortSignal\n      blobMap?: Record<string, File>\n    }\n  >(serializedArgs: SERIALIZED, _rpcDriverClassName: string) {\n    if (serializedArgs.blobMap) {\n      setBlobMap(serializedArgs.blobMap)\n    }\n    const { signal } = serializedArgs\n    if (signal && isRemoteAbortSignal(signal)) {\n      return { ...serializedArgs, signal: deserializeAbortSignal(signal) }\n    }\n\n    return { ...serializedArgs, signal: undefined }\n  }\n\n  abstract async execute(\n    serializedArgs: unknown,\n    rpcDriverClassName: string,\n  ): Promise<unknown>\n\n  async serializeReturn(\n    originalReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ) {\n    return originalReturn\n  }\n\n  async deserializeReturn(\n    serializedReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ): Promise<unknown> {\n    return serializedReturn\n  }\n}\n","import PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\nimport { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport default class TextSearchAdapterType extends PluggableElementBase {\n  AdapterClass: AnyAdapter\n\n  configSchema: AnyConfigurationSchemaType\n\n  description?: string\n\n  constructor(stuff: {\n    name: string\n    description?: string\n    configSchema: AnyConfigurationSchemaType\n    AdapterClass: AnyAdapter\n  }) {\n    super(stuff)\n    this.description = stuff.description\n    this.configSchema = stuff.configSchema\n    this.AdapterClass = stuff.AdapterClass\n    if (!this.AdapterClass) {\n      throw new Error(`no AdapterClass defined for adapter type ${this.name}`)\n    }\n  }\n}\n","import { types } from 'mobx-state-tree'\nimport PluginManager from '../PluginManager'\nimport { ConfigurationSchema } from '../configuration'\nimport { ElementId } from '../util/types/mst'\n\nconst configSchema = ConfigurationSchema('BaseFeatureWidget', {})\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('BaseFeatureWidget', {\n      id: ElementId,\n      type: types.literal('BaseFeatureWidget'),\n      featureData: types.frozen(),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      setFeatureData(data: Record<string, unknown>) {\n        self.featureData = data\n      },\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n    }))\n}\n\nexport { configSchema, stateModelFactory }\n","import jsonStableStringify from 'json-stable-stringify'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport PluginManager from '../PluginManager'\nimport { AnyConfigurationSchemaType } from '../configuration/configurationSchema'\nimport { AnyDataAdapter } from './BaseAdapter'\nimport { Region } from '../util/types'\n\nfunction adapterConfigCacheKey(\n  adapterConfig: SnapshotIn<AnyConfigurationSchemaType>,\n) {\n  return `${jsonStableStringify(adapterConfig)}`\n}\n\ninterface AdapterCacheEntry {\n  dataAdapter: AnyDataAdapter\n  sessionIds: Set<string>\n}\n\nlet adapterCache: Record<string, AdapterCacheEntry> = {}\n\n/**\n * instantiate a data adapter, or return an already-instantiated one if we have one with the same\n * configuration\n *\n * @param pluginManager -\n * @param sessionId - session ID of the associated worker session.\n *   used for reference counting\n * @param adapterConfigSnapshot - plain-JS configuration snapshot for the adapter\n */\nexport async function getAdapter(\n  pluginManager: PluginManager,\n  sessionId: string,\n  adapterConfigSnapshot: SnapshotIn<AnyConfigurationSchemaType>,\n) {\n  // cache the adapter object\n  const cacheKey = adapterConfigCacheKey(adapterConfigSnapshot)\n  if (!adapterCache[cacheKey]) {\n    const adapterType = (adapterConfigSnapshot || {}).type\n    if (!adapterType) {\n      throw new Error(\n        'could not determine adapter type from adapter config snapshot',\n      )\n    }\n    const dataAdapterType = pluginManager.getAdapterType(adapterType)\n    if (!dataAdapterType) {\n      throw new Error(`unknown data adapter type ${adapterType}`)\n    }\n\n    // instantiate the data adapter's config schema so it gets its defaults,\n    // callbacks, etc\n    const adapterConfig = dataAdapterType.configSchema.create(\n      adapterConfigSnapshot,\n      { pluginManager },\n    )\n\n    const getSubAdapter = getAdapter.bind(null, pluginManager, sessionId)\n\n    // instantiate the adapter itself with its config schema, and a bound\n    // func that it can use to get any inner adapters\n    // (such as sequence adapters or wrapped subadapters) that it needs\n    //\n    const { AdapterClass, getAdapterClass } = dataAdapterType\n\n    // @ts-ignore\n    const CLASS = AdapterClass || (await getAdapterClass())\n    if (!CLASS) {\n      throw new Error('Failed to get adapter')\n    }\n\n    const dataAdapter = new CLASS(adapterConfig, getSubAdapter)\n\n    // store it in our cache\n    adapterCache[cacheKey] = {\n      dataAdapter,\n      sessionIds: new Set([sessionId]),\n    }\n  }\n\n  const cacheEntry = adapterCache[cacheKey]\n  cacheEntry.sessionIds.add(sessionId)\n\n  return cacheEntry\n}\n\n/**\n * this is a callback that is passed to adapters that\n * allows them to get any sub-adapters that they need\n * internally, staying with the same worker session ID\n */\nexport type getSubAdapterType = (\n  adapterConfigSnapshot: SnapshotIn<AnyConfigurationSchemaType>,\n) => ReturnType<typeof getAdapter>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function freeAdapterResources(specification: Record<string, any>) {\n  let deleteCount = 0\n\n  const specKeys = Object.keys(specification)\n\n  // if we don't specify a range, delete any adapters that are\n  // only associated with that session\n  if (specKeys.length === 1 && specKeys[0] === 'sessionId') {\n    const { sessionId } = specification\n    Object.entries(adapterCache).forEach(([cacheKey, cacheEntry]) => {\n      cacheEntry.sessionIds.delete(sessionId)\n      if (cacheEntry.sessionIds.size === 0) {\n        deleteCount += 1\n        delete adapterCache[cacheKey]\n      }\n    })\n  } else {\n    // otherwise call freeResources on all the cached data adapters\n    Object.values(adapterCache).forEach(cacheEntry => {\n      if (!cacheEntry.dataAdapter.freeResources) {\n        console.warn(cacheEntry.dataAdapter, 'does not implement freeResources')\n      } else {\n        const regions =\n          specification.regions ||\n          (specification.region ? [specification.region] : [])\n        regions.forEach((region: Region) => {\n          if (region.refName !== undefined) {\n            cacheEntry.dataAdapter.freeResources(region)\n          }\n        })\n      }\n    })\n  }\n\n  return deleteCount\n}\n\nexport function clearAdapterCache() {\n  adapterCache = {}\n}\n","import { toArray } from 'rxjs/operators'\nimport {\n  freeAdapterResources,\n  getAdapter,\n} from '../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../pluggableElementTypes/RpcMethodType'\nimport ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n} from '../pluggableElementTypes/renderers/ServerSideRendererType'\nimport { RemoteAbortSignal } from './remoteAbortSignals'\nimport {\n  BaseFeatureDataAdapter,\n  isFeatureAdapter,\n} from '../data_adapters/BaseAdapter'\nimport { Region } from '../util/types'\nimport { checkAbortSignal, renameRegionsIfNeeded } from '../util'\nimport SimpleFeature, { SimpleFeatureSerialized } from '../util/simpleFeature'\n\nexport class CoreGetRefNames extends RpcMethodType {\n  name = 'CoreGetRefNames'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      return dataAdapter.getRefNames(deserializedArgs)\n    }\n    return []\n  }\n}\n\nexport class CoreGetFileInfo extends RpcMethodType {\n  name = 'CoreGetInfo'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getHeader(deserializedArgs)\n      : null\n  }\n}\n\nexport class CoreGetMetadata extends RpcMethodType {\n  name = 'CoreGetMetadata'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getMetadata(deserializedArgs)\n      : null\n  }\n}\n\nexport class CoreGetFeatures extends RpcMethodType {\n  name = 'CoreGetFeatures'\n\n  async deserializeReturn(feats: SimpleFeatureSerialized[]) {\n    return feats.map(feat => {\n      return new SimpleFeature(feat)\n    })\n  }\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      region: Region\n      adapterConfig: {}\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { sessionId, adapterConfig, region } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    if (isFeatureAdapter(dataAdapter)) {\n      const ret = dataAdapter.getFeatures(region)\n      const r = await ret.pipe(toArray()).toPromise()\n      return r.map(f => f.toJSON())\n    }\n    return []\n  }\n}\n\n/**\n * free up any resources (e.g. cached adapter objects)\n * that are only associated with the given track ID.\n *\n * returns number of objects deleted\n */\nexport class CoreFreeResources extends RpcMethodType {\n  name = 'CoreFreeResources'\n\n  async execute(specification: {}) {\n    let deleteCount = 0\n\n    deleteCount += freeAdapterResources(specification)\n\n    // pass the freeResources hint along to all the renderers as well\n    this.pluginManager.getRendererTypes().forEach(renderer => {\n      const count = renderer.freeResources(/* specification */)\n      if (count) {\n        deleteCount += count\n      }\n    })\n\n    return deleteCount\n  }\n}\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  adapterConfig: {}\n  rendererType: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  assemblyName: string\n  regions: Region[]\n  adapterConfig: {}\n  rendererType: string\n}\n\n/**\n * fetches features from an adapter and call a renderer with them\n */\nexport class CoreRender extends RpcMethodType {\n  name = 'CoreRender'\n\n  async serializeArguments(args: RenderArgs, rpcDriverClassName: string) {\n    const assemblyManager = this.pluginManager.rootModel?.session\n      ?.assemblyManager\n    const renamedArgs = assemblyManager\n      ? await renameRegionsIfNeeded(assemblyManager, args)\n      : args\n\n    if (rpcDriverClassName === 'MainThreadRpcDriver') {\n      return renamedArgs\n    }\n\n    const { rendererType } = args\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    return RendererType.serializeArgsInClient(renamedArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { signal?: RemoteAbortSignal },\n    rpcDriverClassName: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriverClassName !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(\n        args,\n        rpcDriverClassName,\n      )\n    }\n    const { sessionId, adapterConfig, rendererType, signal } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    checkAbortSignal(signal)\n\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    if (!(dataAdapter instanceof BaseFeatureDataAdapter)) {\n      throw new Error(\n        `CoreRender cannot handle this type of data adapter ${dataAdapter}`,\n      )\n    }\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    const renderArgs = {\n      ...deserializedArgs,\n      dataAdapter,\n    }\n\n    const result =\n      rpcDriverClassName === 'MainThreadRpcDriver'\n        ? await RendererType.render(renderArgs)\n        : await RendererType.renderInWorker(renderArgs)\n\n    checkAbortSignal(signal)\n    return result\n  }\n\n  async deserializeReturn(\n    serializedReturn: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriverClassName: string,\n  ): Promise<unknown> {\n    if (rpcDriverClassName === 'MainThreadRpcDriver') {\n      return serializedReturn\n    }\n\n    const { rendererType } = args\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n    return RendererType.deserializeResultsInClient(\n      serializedReturn as ResultsSerialized,\n      args,\n    )\n  }\n}\n\nfunction validateRendererType<T>(rendererType: string, RendererType: T) {\n  if (!RendererType) {\n    throw new Error(`renderer \"${rendererType}\" not found`)\n  }\n  // @ts-ignore\n  if (!RendererType.ReactComponent) {\n    throw new Error(\n      `renderer ${rendererType} has no ReactComponent, it may not be completely implemented yet`,\n    )\n  }\n\n  if (!(RendererType instanceof ServerSideRendererType)) {\n    throw new Error(\n      'CoreRender requires a renderer that is a subclass of ServerSideRendererType',\n    )\n  }\n  return RendererType\n}\n","import { lazy } from 'react'\nimport { configSchema, stateModelFactory } from './BaseFeatureWidget'\nimport Plugin from './Plugin'\nimport PluginManager from './PluginManager'\nimport * as coreRpcMethods from './rpc/coreRpcMethods'\nimport WidgetType from './pluggableElementTypes/WidgetType'\n\n/** the core plugin, which registers types that ALL JBrowse applications are expected to need. */\nexport default class CorePlugin extends Plugin {\n  name = 'CorePlugin'\n\n  install(pluginManager: PluginManager) {\n    // register all our core rpc methods\n    Object.values(coreRpcMethods).forEach(RpcMethod => {\n      pluginManager.addRpcMethod(() => new RpcMethod(pluginManager))\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'BaseFeatureWidget',\n        heading: 'Feature details',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./BaseFeatureWidget/BaseFeatureDetail'),\n        ),\n      })\n    })\n  }\n}\n","import {\n  types,\n  IAnyType,\n  IAnyModelType,\n  isModelType,\n  isType,\n} from 'mobx-state-tree'\n\n// Pluggable elements\nimport PluggableElementBase from './pluggableElementTypes/PluggableElementBase'\nimport RendererType from './pluggableElementTypes/renderers/RendererType'\nimport AdapterType from './pluggableElementTypes/AdapterType'\nimport TrackType from './pluggableElementTypes/TrackType'\nimport DisplayType from './pluggableElementTypes/DisplayType'\nimport ViewType from './pluggableElementTypes/ViewType'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport ConnectionType from './pluggableElementTypes/ConnectionType'\nimport RpcMethodType from './pluggableElementTypes/RpcMethodType'\nimport TextSearchAdapterType from './pluggableElementTypes/TextSearchAdapterType'\n\nimport {\n  ConfigurationSchema,\n  isBareConfigurationSchemaType,\n} from './configuration'\n\nimport Plugin from './Plugin'\nimport ReExports from './ReExports'\n\nimport {\n  PluggableElementType,\n  PluggableElementMember,\n} from './pluggableElementTypes'\nimport { AnyConfigurationSchemaType } from './configuration/configurationSchema'\nimport { AbstractRootModel } from './util'\nimport CorePlugin from './CorePlugin'\nimport createJexlInstance from './util/jexl'\nimport { PluginDefinition } from './PluginLoader'\n\n/** little helper class that keeps groups of callbacks that are\nthen run in a specified order by group */\nclass PhasedScheduler<PhaseName extends string> {\n  phaseCallbacks = new Map<PhaseName, Function[]>()\n\n  phaseOrder: PhaseName[] = []\n\n  constructor(...phaseOrder: PhaseName[]) {\n    this.phaseOrder = phaseOrder\n  }\n\n  add(phase: PhaseName, callback: Function) {\n    if (!this.phaseOrder.includes(phase)) {\n      throw new Error(`unknown phase ${phase}`)\n    }\n    let phaseCallbacks = this.phaseCallbacks.get(phase)\n    if (!phaseCallbacks) {\n      phaseCallbacks = []\n      this.phaseCallbacks.set(phase, phaseCallbacks)\n    }\n    phaseCallbacks.push(callback)\n  }\n\n  run() {\n    this.phaseOrder.forEach(phaseName => {\n      const phaseCallbacks = this.phaseCallbacks.get(phaseName)\n      if (phaseCallbacks) {\n        phaseCallbacks.forEach(callback => callback())\n      }\n    })\n  }\n}\n\ntype PluggableElementTypeGroup =\n  | 'renderer'\n  | 'adapter'\n  | 'display'\n  | 'track'\n  | 'connection'\n  | 'view'\n  | 'widget'\n  | 'rpc method'\n  | 'text search adapter'\n\n/** internal class that holds the info for a certain element type */\nclass TypeRecord<ElementClass extends PluggableElementBase> {\n  registeredTypes: { [name: string]: ElementClass } = {}\n\n  baseClass: // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | { new (...args: any[]): ElementClass }\n    // covers abstract class case\n    | (Function & {\n        prototype: ElementClass\n      })\n\n  typeName: string\n\n  constructor(\n    typeName: string,\n    elementType: // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | { new (...args: any[]): ElementClass }\n      // covers abstract class case\n      | (Function & {\n          prototype: ElementClass\n        }),\n  ) {\n    this.typeName = typeName\n    this.baseClass = elementType\n  }\n\n  add(name: string, t: ElementClass) {\n    this.registeredTypes[name] = t\n  }\n\n  has(name: string) {\n    return name in this.registeredTypes\n  }\n\n  get(name: string) {\n    if (!this.has(name)) {\n      throw new Error(\n        `${this.typeName} '${name}' not found, perhaps its plugin is not loaded or its plugin has not added it.`,\n      )\n    }\n    return this.registeredTypes[name]\n  }\n\n  all() {\n    return Object.values(this.registeredTypes)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyFunction = (...args: any) => any\n\n/**\n * free-form string-to-unknown mapping of metadata related to the instance\n * of this plugin. `isCore` is typically set to `Boolean(true)` if the plugin was\n * loaded as part of the \"core\" set of plugins for this application.\n * Can also use this metadata to stash other things about why the plugin is\n * loaded, such as where it came from, what plugin depends on it, etc.\n */\nexport type PluginMetadata = Record<string, unknown>\n\nexport interface PluginLoadRecord {\n  metadata?: PluginMetadata\n  plugin: Plugin\n}\nexport interface RuntimePluginLoadRecord extends PluginLoadRecord {\n  definition: PluginDefinition\n}\n\nexport default class PluginManager {\n  plugins: Plugin[] = []\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl: any = createJexlInstance()\n\n  pluginMetadata: Record<string, PluginMetadata> = {}\n\n  runtimePluginDefinitions: PluginDefinition[] = []\n\n  elementCreationSchedule = new PhasedScheduler<PluggableElementTypeGroup>(\n    'renderer',\n    'adapter',\n    'text search adapter',\n    'display',\n    'track',\n    'connection',\n    'view',\n    'widget',\n    'rpc method',\n  )\n\n  rendererTypes = new TypeRecord('RendererType', RendererType)\n\n  adapterTypes = new TypeRecord('AdapterType', AdapterType)\n\n  textSearchAdapterTypes = new TypeRecord(\n    'TextSearchAdapterType',\n    TextSearchAdapterType,\n  )\n\n  trackTypes = new TypeRecord('TrackType', TrackType)\n\n  displayTypes = new TypeRecord('DisplayType', DisplayType)\n\n  connectionTypes = new TypeRecord('ConnectionType', ConnectionType)\n\n  viewTypes = new TypeRecord('ViewType', ViewType)\n\n  widgetTypes = new TypeRecord('WidgetType', WidgetType)\n\n  rpcMethods = new TypeRecord('RpcMethodType', RpcMethodType)\n\n  configured = false\n\n  rootModel?: AbstractRootModel\n\n  constructor(initialPlugins: (Plugin | PluginLoadRecord)[] = []) {\n    // add the core plugin\n    this.addPlugin({ plugin: new CorePlugin(), metadata: { isCore: true } })\n\n    // add all the initial plugins\n    initialPlugins.forEach(plugin => {\n      this.addPlugin(plugin)\n    })\n  }\n\n  pluginConfigurationSchemas() {\n    const configurationSchemas: { [key: string]: unknown } = {}\n    this.plugins.forEach(plugin => {\n      if (plugin.configurationSchema) {\n        configurationSchemas[plugin.name] = plugin.configurationSchema\n      }\n    })\n    return configurationSchemas\n  }\n\n  addPlugin(load: Plugin | PluginLoadRecord | RuntimePluginLoadRecord) {\n    if (this.configured) {\n      throw new Error('JBrowse already configured, cannot add plugins')\n    }\n    const [plugin, metadata = {}] =\n      load instanceof Plugin ? [load, {}] : [load.plugin, load.metadata]\n\n    if (this.plugins.includes(plugin)) {\n      throw new Error('plugin already installed')\n    }\n\n    this.pluginMetadata[plugin.name] = metadata\n    if ('definition' in load) {\n      this.runtimePluginDefinitions.push(load.definition)\n    }\n    plugin.install(this)\n    this.plugins.push(plugin)\n    return this\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.find(p => p.name === name)\n  }\n\n  hasPlugin(name: string) {\n    return this.getPlugin(name) !== undefined\n  }\n\n  createPluggableElements() {\n    // run the creation callbacks for each element type in order.\n    // see elementCreationSchedule above for the creation order\n    this.elementCreationSchedule.run()\n    delete this.elementCreationSchedule\n    return this\n  }\n\n  setRootModel(rootModel: AbstractRootModel) {\n    this.rootModel = rootModel\n  }\n\n  configure() {\n    if (this.configured) {\n      throw new Error('already configured')\n    }\n\n    this.plugins.forEach(plugin => plugin.configure(this))\n\n    this.configured = true\n\n    // console.log(JSON.stringify(getSnapshot(model)))\n\n    return this\n  }\n\n  getElementTypeRecord(\n    groupName: PluggableElementTypeGroup,\n  ): TypeRecord<PluggableElementBase> {\n    switch (groupName) {\n      case 'adapter':\n        return this.adapterTypes\n      case 'text search adapter':\n        return this.textSearchAdapterTypes\n      case 'connection':\n        return this.connectionTypes\n      case 'widget':\n        return this.widgetTypes\n      case 'renderer':\n        return this.rendererTypes\n      case 'display':\n        return this.displayTypes\n      case 'track':\n        return this.trackTypes\n      case 'view':\n        return this.viewTypes\n      case 'rpc method':\n        return this.rpcMethods\n      default:\n        throw new Error(`invalid element type '${groupName}'`)\n    }\n  }\n\n  addElementType(\n    groupName: PluggableElementTypeGroup,\n    creationCallback: (pluginManager: PluginManager) => PluggableElementType,\n  ) {\n    if (typeof creationCallback !== 'function') {\n      throw new Error(\n        'must provide a callback function that returns the new type object',\n      )\n    }\n    const typeRecord = this.getElementTypeRecord(groupName)\n\n    this.elementCreationSchedule.add(groupName, () => {\n      const newElement = creationCallback(this)\n      if (!newElement.name) {\n        throw new Error(`cannot add a ${groupName} with no name`)\n      }\n\n      if (typeRecord.has(newElement.name)) {\n        throw new Error(\n          `${groupName} ${newElement.name} already registered, cannot register it again`,\n        )\n      }\n\n      typeRecord.add(newElement.name, newElement)\n    })\n\n    return this\n  }\n\n  getElementType(groupName: PluggableElementTypeGroup, typeName: string) {\n    const typeRecord = this.getElementTypeRecord(groupName)\n    return typeRecord.get(typeName)\n  }\n\n  getElementTypesInGroup(groupName: PluggableElementTypeGroup) {\n    const typeRecord = this.getElementTypeRecord(groupName)\n    return typeRecord.all()\n  }\n\n  /** get a MST type for the union of all specified pluggable MST types */\n  pluggableMstType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember,\n    fallback: IAnyType = types.maybe(types.null),\n  ) {\n    const pluggableTypes: IAnyModelType[] = []\n    this.getElementTypeRecord(typeGroup)\n      .all()\n      .forEach(t => {\n        const thing = t[fieldName]\n        if (isType(thing) && isModelType(thing)) {\n          pluggableTypes.push(thing)\n        }\n      })\n\n    // try to smooth over the case when no types are registered, mostly\n    // encountered in tests\n    if (pluggableTypes.length === 0) {\n      console.warn(\n        `No JBrowse pluggable types found matching ('${typeGroup}','${fieldName}')`,\n      )\n      return fallback\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  /** get a MST type for the union of all specified pluggable config schemas */\n  pluggableConfigSchemaType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember = 'configSchema',\n  ) {\n    const pluggableTypes: AnyConfigurationSchemaType[] = []\n    this.getElementTypeRecord(typeGroup)\n      .all()\n      .forEach(t => {\n        const thing = t[fieldName]\n        if (isBareConfigurationSchemaType(thing)) {\n          pluggableTypes.push(thing)\n        }\n      })\n    if (pluggableTypes.length === 0) {\n      pluggableTypes.push(ConfigurationSchema('Null', {}))\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  jbrequireCache = new Map()\n\n  lib = ReExports\n\n  load = <FTYPE extends AnyFunction>(lib: FTYPE): ReturnType<FTYPE> => {\n    if (!this.jbrequireCache.has(lib)) {\n      this.jbrequireCache.set(lib, lib(this))\n    }\n    return this.jbrequireCache.get(lib)\n  }\n\n  /**\n   * Get the re-exported version of the given package name.\n   * Throws an error if the package is not re-exported by the plugin manager.\n   *\n   * @returns the library's default export\n   */\n  jbrequire = (\n    lib: keyof typeof ReExports | AnyFunction | { default: AnyFunction },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    if (typeof lib === 'string') {\n      const pack = this.lib[lib]\n      if (!pack) {\n        throw new TypeError(\n          `No jbrequire re-export defined for package '${lib}'. If this package must be shared between plugins, add it to ReExports.js. If it does not need to be shared, just import it normally.`,\n        )\n      }\n      return pack\n    }\n\n    if (typeof lib === 'function') {\n      return this.load(lib)\n    }\n\n    if (lib.default) {\n      return this.jbrequire(lib.default)\n    }\n\n    throw new TypeError(\n      'lib passed to jbrequire must be either a string or a function',\n    )\n  }\n\n  getRendererType(typeName: string): RendererType {\n    return this.rendererTypes.get(typeName)\n  }\n\n  getRendererTypes(): RendererType[] {\n    return this.rendererTypes.all()\n  }\n\n  getAdapterType(typeName: string): AdapterType {\n    return this.adapterTypes.get(typeName)\n  }\n\n  getTextSearchAdapterType(typeName: string): TextSearchAdapterType {\n    return this.textSearchAdapterTypes.get(typeName)\n  }\n\n  getTrackType(typeName: string): TrackType {\n    return this.trackTypes.get(typeName)\n  }\n\n  getDisplayType(typeName: string): DisplayType {\n    return this.displayTypes.get(typeName)\n  }\n\n  getViewType(typeName: string): ViewType {\n    return this.viewTypes.get(typeName)\n  }\n\n  getWidgetType(typeName: string): WidgetType {\n    return this.widgetTypes.get(typeName)\n  }\n\n  getConnectionType(typeName: string): ConnectionType {\n    return this.connectionTypes.get(typeName)\n  }\n\n  getRpcMethodType(methodName: string): RpcMethodType {\n    return this.rpcMethods.get(methodName)\n  }\n\n  addRendererType(\n    creationCallback: (pluginManager: PluginManager) => RendererType,\n  ): this {\n    return this.addElementType('renderer', creationCallback)\n  }\n\n  addAdapterType(\n    creationCallback: (pluginManager: PluginManager) => AdapterType,\n  ): this {\n    return this.addElementType('adapter', creationCallback)\n  }\n\n  addTextSearchAdapterType(\n    creationCallback: (pluginManager: PluginManager) => TextSearchAdapterType,\n  ): this {\n    return this.addElementType('text search adapter', creationCallback)\n  }\n\n  addTrackType(\n    creationCallback: (pluginManager: PluginManager) => TrackType,\n  ): this {\n    // Goes through the already-created displays and registers the ones that\n    // specify this track type\n    const callback = () => {\n      const track = creationCallback(this)\n      ;(this.getElementTypesInGroup('display') as DisplayType[]).forEach(\n        display => {\n          if (\n            display.trackType === track.name &&\n            // track may have already added the displayType in its creationCallback\n            !track.displayTypes.includes(display)\n          ) {\n            track.addDisplayType(display)\n          }\n        },\n      )\n      return track\n    }\n    return this.addElementType('track', callback)\n  }\n\n  addDisplayType(\n    creationCallback: (pluginManager: PluginManager) => DisplayType,\n  ): this {\n    return this.addElementType('display', creationCallback)\n  }\n\n  addViewType(\n    creationCallback: (pluginManager: PluginManager) => ViewType,\n  ): this {\n    const callback = () => {\n      const newView = creationCallback(this)\n      ;(this.getElementTypesInGroup('display') as DisplayType[]).forEach(\n        display => {\n          if (\n            display.viewType === newView.name &&\n            // view may have already added the displayType in its creationCallback\n            !newView.displayTypes.includes(display)\n          ) {\n            newView.addDisplayType(display)\n          }\n        },\n      )\n      return newView\n    }\n    return this.addElementType('view', callback)\n  }\n\n  addWidgetType(\n    creationCallback: (pluginManager: PluginManager) => WidgetType,\n  ): this {\n    return this.addElementType('widget', creationCallback)\n  }\n\n  addConnectionType(\n    creationCallback: (pluginManager: PluginManager) => ConnectionType,\n  ): this {\n    return this.addElementType('connection', creationCallback)\n  }\n\n  addRpcMethod(\n    creationCallback: (pluginManager: PluginManager) => RpcMethodType,\n  ): this {\n    return this.addElementType('rpc method', creationCallback)\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { readConfObject } from '../configuration'\nimport { isElectron } from '../util'\n\ninterface AnalyticsObj {\n  [key: string]: any\n}\n\ninterface Track {\n  [key: string]: any\n}\n\nexport async function writeAWSAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n  sessionQuery?: string | null,\n) {\n  const url = 'https://analytics.jbrowse.org/api/v1'\n\n  const multiAssemblyTracks = rootModel.jbrowse.tracks.filter(\n    (track: any) => (readConfObject(track, 'assemblyNames') || []).length > 1,\n  ).length\n\n  const savedSessionCount = Object.keys(localStorage).filter(name =>\n    name.includes('localSaved-'),\n  ).length\n\n  const { jbrowse: config, session, version: ver } = rootModel\n  const { tracks, assemblies, plugins } = config\n\n  // stats to be recorded in db\n  const stats: AnalyticsObj = {\n    ver,\n    'plugins-count': plugins?.length || 0,\n    'plugin-names': plugins?.map((p: any) => p.name).join(','),\n    'assemblies-count': assemblies.length,\n    'tracks-count': tracks.length,\n    'session-tracks-count': session?.sessionTracks.length || 0,\n    'open-views': session?.views.length || 0,\n    'synteny-tracks-count': multiAssemblyTracks,\n    'saved-sessions-count': savedSessionCount,\n\n    // field if existing session param in query before autogenerated param\n    'existing-session-param-type': sessionQuery?.split('-')[0] || 'none',\n\n    // screen geometry\n    'scn-h': window.screen.height,\n    'scn-w': window.screen.width,\n\n    // window geometry\n    'win-h': window.innerHeight,\n    'win-w': window.innerWidth,\n\n    electron: isElectron,\n    loadTime: (Date.now() - initialTimeStamp) / 1000,\n    jb2: true,\n  }\n\n  // stringifies the track type counts, gets processed in lambda\n  tracks.forEach((track: Track) => {\n    stats[`track-types-${track.type}`] =\n      stats[`track-types-${track.type}`] + 1 || 1\n  })\n\n  // stringifies the session track type counts, gets processed in lambda\n  session?.sessionTracks.forEach((track: Track) => {\n    stats[`sessionTrack-types-${track.type}`] =\n      stats[`sessionTrack-types-${track.type}`] + 1 || 1\n  })\n\n  // put stats into a query string for get request\n  const qs = Object.keys(stats)\n    .map(key => `${key}=${stats[key]}`)\n    .join('&')\n\n  return fetch(`${url}?${qs}`)\n}\n\nexport async function writeGAAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n) {\n  const jbrowseUser = 'UA-7115575-5'\n  const stats: AnalyticsObj = {\n    'tracks-count': rootModel.jbrowse.tracks.length, // this is all possible tracks\n    ver: rootModel.version,\n    electron: isElectron,\n    loadTime: Date.now() - initialTimeStamp,\n    pluginNames:\n      rootModel.jbrowse.plugins?.map((plugin: any) => plugin.name) || '',\n  }\n\n  // create script\n  let analyticsScript =\n    \"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\"\n  analyticsScript +=\n    '(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'\n  analyticsScript +=\n    'm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'\n  analyticsScript +=\n    \"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\"\n  analyticsScript += `ga('create', '${jbrowseUser}', 'auto', 'jbrowseTracker');`\n\n  const gaData: AnalyticsObj = {}\n  const googleDimensions = 'tracks-count ver electron loadTime pluginNames'\n\n  googleDimensions.split(/\\s+/).forEach((key, index) => {\n    gaData[`dimension${index + 1}`] = stats[key]\n  })\n\n  gaData.metric1 = Math.round(stats.loadTime)\n\n  analyticsScript += `ga('jbrowseTracker.send', 'pageview',${JSON.stringify(\n    gaData,\n  )});`\n\n  const analyticsScriptNode = document.createElement('script')\n  analyticsScriptNode.innerHTML = analyticsScript\n\n  document.getElementsByTagName('head')[0].appendChild(analyticsScriptNode)\n}\n","import { toUrlSafeB64 } from '@jbrowse/core/util'\n\nimport AES from 'crypto-js/aes'\nimport Utf8 from 'crypto-js/enc-utf8'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      Array.from(window.crypto.getRandomValues(new Uint8Array(length * 2)))\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replace(/[+/]/g, '')\n    .substring(0, length)\n}\n\nconst encrypt = (text: string, password: string) => {\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = (text: string, password: string) => {\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\n// recusively checks config for callbacks and removes them\n// was used to parse and delete, commented out for later if needed\n// const deleteCallbacks = (key: any) => {\n//   if (Array.isArray(key)) {\n//     key.forEach(a => {\n//       deleteCallbacks(a)\n//     })\n//   } else if (key && typeof key === 'object') {\n//     Object.entries(key).forEach(([innerKey, value]) => {\n//       if (typeof value === 'string' && value.startsWith('function')) {\n//         delete key[innerKey] // removing sets it to the default callback\n//       } else deleteCallbacks(key[innerKey])\n//     })\n//   }\n// }\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: Record<string, unknown>,\n  url: string,\n  referer: string,\n) {\n  const sess = `${toUrlSafeB64(JSON.stringify(session))}`\n  const password = generateUID(5)\n  const encryptedSession = encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${sessionId}`\n\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","import React from 'react'\nimport {\n  createCanvas,\n  PonyfillOffscreenCanvas,\n  createImageBitmap,\n} from './offscreenCanvasPonyfill'\nimport { blobToDataURL } from '.'\n\nexport async function renderToAbstractCanvas(\n  width: number,\n  height: number,\n  opts: {\n    exportSVG?: { rasterizeLayers?: boolean }\n    highResolutionScaling: number\n  },\n  cb: Function,\n) {\n  const { exportSVG, highResolutionScaling = 1 } = opts\n  if (exportSVG && !exportSVG.rasterizeLayers) {\n    const fakeCanvas = new PonyfillOffscreenCanvas(width, height)\n    const fakeCtx = fakeCanvas.getContext('2d')\n    await cb(fakeCtx)\n    return {\n      reactElement: fakeCanvas.getSerializedSvg(),\n    }\n  }\n  if (exportSVG && exportSVG.rasterizeLayers) {\n    const scale = 4\n    const canvas = createCanvas(Math.ceil(width * scale), height * scale)\n    const ctx = canvas.getContext('2d')\n    ctx.scale(scale, scale)\n    await cb(ctx)\n\n    // two methods needed for converting canvas to PNG, one for webworker\n    // offscreen canvas, one for main thread\n    return {\n      reactElement: (\n        <image\n          width={width}\n          height={height}\n          xlinkHref={\n            canvas.convertToBlob\n              ? await blobToDataURL(\n                  await canvas.convertToBlob({\n                    type: 'image/png',\n                  }),\n                )\n              : canvas.toDataURL()\n          }\n        />\n      ),\n    }\n  }\n\n  const canvas = createCanvas(\n    Math.ceil(width * highResolutionScaling),\n    height * highResolutionScaling,\n  )\n  const ctx = canvas.getContext('2d')\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  await cb(ctx)\n\n  return { imageData: await createImageBitmap(canvas) }\n}\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\nimport FeatureRendererType, {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsSerialized,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { ThemeOptions } from '@material-ui/core'\nimport { ScaleOpts } from './util'\n\nexport interface RenderArgs extends FeatureRenderArgs {\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n  displayCrossHatches: boolean\n  ticks: { values: number[] }\n  theme: ThemeOptions\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n}\n\nexport type {\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n}\n\nexport default abstract class WiggleBaseRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { height, regions, bpPerPx } = renderProps\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    const res = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      (ctx: CanvasRenderingContext2D) =>\n        this.draw(ctx, {\n          ...renderProps,\n          features,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features,\n      height,\n      width,\n    }\n  }\n\n  /*\n   * draw features to context given props, to be used by derived renderer\n   * classes\n   */\n  abstract draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserialized,\n  ): void\n}\n","import { observer } from 'mobx-react'\nimport React, { useRef } from 'react'\n\nimport { Region } from '@jbrowse/core/util/types'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\n\nfunction WiggleRendering(props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  onMouseLeave: Function\n  onMouseMove: Function\n  onFeatureClick: Function\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    onMouseLeave = () => {},\n    onMouseMove = () => {},\n    onFeatureClick = () => {},\n  } = props\n  const [region] = regions\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number) {\n    // calculates feature under mouse\n    let offset = 0\n    if (ref.current) {\n      offset = ref.current.getBoundingClientRect().left\n    }\n    const offsetX = eventClientX - offset\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n    let featureUnderMouse\n    for (const feature of features.values()) {\n      if (clientBp <= feature.get('end') && clientBp >= feature.get('start')) {\n        featureUnderMouse = feature\n        break\n      }\n    }\n    return featureUnderMouse\n  }\n  return (\n    <div\n      ref={ref}\n      data-testid=\"wiggle-rendering-test\"\n      onMouseMove={event => {\n        const featureUnderMouse = getFeatureUnderMouse(event.clientX)\n        onMouseMove(\n          event,\n          featureUnderMouse ? featureUnderMouse.id() : undefined,\n        )\n      }}\n      onClick={event => {\n        const featureUnderMouse = getFeatureUnderMouse(event.clientX)\n        onFeatureClick(\n          event,\n          featureUnderMouse ? featureUnderMouse.id() : undefined,\n        )\n      }}\n      onMouseLeave={event => onMouseLeave(event)}\n      role=\"presentation\"\n      className=\"WiggleRendering\"\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n}\n\nexport default observer(WiggleRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'BigWigAdapter',\n  {\n    bigWigLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bw' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { scaleLinear, scaleLog, scaleQuantize } from 'd3-scale'\n\nexport interface ScaleOpts {\n  domain: number[]\n  range: number[]\n  scaleType: string\n  pivotValue?: number\n  inverted: boolean\n}\n/**\n * produces a d3-scale from arguments. applies a \"nice domain\" adjustment\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - range [min,max]\n *   - bounds [min,max]\n *   - scaleType (linear or log)\n *   - pivotValue (number)\n *   - inverted (boolean)\n */\nexport function getScale({\n  domain = [],\n  range = [],\n  scaleType,\n  pivotValue,\n  inverted,\n}: ScaleOpts) {\n  let scale\n  const [min, max] = domain\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (scaleType === 'linear') {\n    scale = scaleLinear()\n  } else if (scaleType === 'log') {\n    scale = scaleLog()\n    scale.base(2)\n  } else if (scaleType === 'quantize') {\n    scale = scaleQuantize()\n  } else {\n    throw new Error('undefined scaleType')\n  }\n  scale.domain(pivotValue !== undefined ? [min, pivotValue, max] : [min, max])\n  // console.log('before', scale.domain())\n  scale.nice()\n\n  const [rangeMin, rangeMax] = range\n  if (rangeMin === undefined || rangeMax === undefined) {\n    throw new Error('invalid range')\n  }\n  scale.range(inverted ? range.slice().reverse() : range)\n\n  // console.log('after', scale.domain())\n  return scale\n}\n/**\n * gets the origin for drawing the graph. for linear this is 0, for log this is arbitrarily set to log(1)==0\n *\n * @param scaleType -\n */\nexport function getOrigin(scaleType: string /* , pivot, stats */) {\n  // if (pivot) {\n  //   if (pivot === 'mean') {\n  //     return stats.scoreMean || 0\n  //   }\n  //   if (pivot === 'zero') {\n  //     return 0\n  //   }\n  //   return parseFloat()\n  // }\n  // if (scaleType === 'z_score') {\n  //   return stats.scoreMean || 0\n  // }\n  if (scaleType === 'log') {\n    return 1\n  }\n  return 0\n}\n\n/**\n * produces a \"nice\" domain that actually rounds down to 0 for the min\n * or 0 to the max depending on if all values are positive or negative\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - bounds [min,max]\n *   - mean\n *   - stddev\n *   - scaleType (linear or log)\n */\nexport function getNiceDomain({\n  scaleType,\n  domain,\n  bounds,\n}: {\n  scaleType: string\n  domain: number[]\n  bounds: number[]\n}) {\n  const [minScore, maxScore] = bounds\n  let [min, max] = domain\n\n  if (scaleType === 'linear') {\n    if (max < 0) {\n      max = 0\n    }\n    if (min > 0) {\n      min = 0\n    }\n  }\n  if (scaleType === 'log') {\n    // if the min is 0, assume that it's just something\n    // with no read coverage and that we should ignore it in calculations\n    // if it's greater than 1 pin to 1 for the full range also\n    // otherwise, we may see bigwigs with fractional values\n    if (min === 0 || min > 1) {\n      min = 1\n    }\n  }\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (minScore !== undefined && minScore !== Number.MIN_VALUE) {\n    min = minScore\n  }\n  if (maxScore !== undefined && maxScore !== Number.MAX_VALUE) {\n    max = maxScore\n  }\n  const getScaleType = (type: string) => {\n    if (type === 'linear') {\n      return scaleLinear()\n    }\n    if (type === 'log') {\n      const scale = scaleLog()\n      scale.base(2)\n      return scale\n    }\n    if (type === 'quantize') {\n      return scaleQuantize()\n    }\n    throw new Error(`undefined scaleType ${type}`)\n  }\n  const scale = getScaleType(scaleType)\n\n  scale.domain([min, max])\n  scale.nice()\n  return scale.domain() as [number, number]\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'WiggleRenderer',\n  {\n    color: {\n      type: 'color',\n      description: 'the color of track, overrides posColor and negColor',\n      defaultValue: '#f0f',\n    },\n    posColor: {\n      type: 'color',\n      description: 'the color to use when the score is positive',\n      defaultValue: 'blue',\n    },\n    negColor: {\n      type: 'color',\n      description: 'the color to use when the score is negative',\n      defaultValue: 'red',\n    },\n    highlightColor: {\n      type: 'color',\n      description: 'the color of highlights over the wiggle track',\n      defaultValue: 'rgba(255,255,0,0.5)',\n    },\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    renderType: {\n      type: 'stringEnum',\n      model: types.enumeration('Rendering type', ['xyplot', 'density', 'line']),\n      description: 'The type of rendering for wiggle data to use',\n      defaultValue: 'xyplot',\n    },\n    filled: {\n      type: 'boolean',\n      description: 'fill in histogram',\n      defaultValue: true,\n    },\n    bicolorPivot: {\n      type: 'stringEnum',\n      model: types.enumeration('Scale type', [\n        'numeric',\n        'mean',\n        'z_score',\n        'none',\n      ]),\n      description: 'type of bicolor pivot',\n      defaultValue: 'numeric',\n    },\n    bicolorPivotValue: {\n      type: 'number',\n      defaultValue: 0,\n      description: 'value to use for bicolor pivot',\n    },\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import {\n  readConfObject,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getScale } from '../util'\n\nimport ConfigSchema from '../configSchema'\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\n\nexport { default as ReactComponent } from '../WiggleRendering'\n\nexport default class DensityRenderer extends WiggleBaseRenderer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { features, regions, bpPerPx, scaleOpts, height, config } = props\n    const [region] = regions\n    const pivot = readConfObject(config, 'bicolorPivot')\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n    let colorCallback\n    let colorScale: ReturnType<typeof getScale>\n    if (readConfObject(config, 'color') === '#f0f') {\n      // default color, use posColor/negColor instead\n      colorScale =\n        pivot !== 'none'\n          ? getScale({\n              ...scaleOpts,\n              pivotValue,\n              range: [negColor, 'white', posColor],\n            })\n          : getScale({ ...scaleOpts, range: ['white', posColor] })\n      colorCallback = (feature: Feature) => colorScale(feature.get('score'))\n    } else {\n      colorCallback = (feature: Feature) =>\n        readConfObject(config, 'color', { feature })\n    }\n\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + 0.3 // fudge factor for subpixel rendering\n      ctx.fillStyle = colorCallback(feature)\n      ctx.fillRect(leftPx, 0, w, height)\n    }\n  }\n}\nexport const configSchema = ConfigurationSchema(\n  'DensityRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { YSCALEBAR_LABEL_OFFSET } from '../models/model'\n\nconst toP = (s = 0) => parseFloat(s.toPrecision(6))\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    fontSize: '0.8em',\n\n    // important to have a zIndex directly on the popper itself\n    // @material-ui/Tooltip uses popper and has similar thing\n    zIndex: theme.zIndex.tooltip,\n\n    // needed to avoid rapid mouseLeave/mouseEnter on popper\n    pointerEvents: 'none',\n  },\n\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: 0,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n}))\n\nfunction TooltipContents(props: { feature: Feature }) {\n  const { feature } = props\n  const ref = feature.get('refName')\n  const displayRef = `${ref ? `${ref}:` : ''}`\n  const start = (feature.get('start') + 1).toLocaleString('en-US')\n  const end = feature.get('end').toLocaleString('en-US')\n  const coord = start === end ? start : `${start}..${end}`\n  const loc = `${displayRef}${coord}`\n\n  return feature.get('summary') !== undefined ? (\n    <div>\n      {loc}\n      <br />\n      Max: {toP(feature.get('maxScore'))}\n      <br />\n      Avg: {toP(feature.get('score'))}\n      <br />\n      Min: {toP(feature.get('minScore'))}\n    </div>\n  ) : (\n    <div>\n      {loc}\n      <br />\n      {`${toP(feature.get('score'))}`}\n    </div>\n  )\n}\n\ntype Coord = [number, number]\nconst Tooltip = observer(\n  ({\n    model,\n    height,\n    mouseCoord,\n  }: {\n    model: any\n    height: number\n    mouseCoord: Coord\n  }) => {\n    const { featureUnderMouse } = model\n    const classes = useStyles()\n\n    return featureUnderMouse ? (\n      <>\n        <MUITooltip\n          placement=\"right-start\"\n          className={classes.popper}\n          open\n          title={<TooltipContents feature={featureUnderMouse} />}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              left: mouseCoord[0],\n              top: 5,\n            }}\n          >\n            {' '}\n          </div>\n        </MUITooltip>\n        <div\n          className={classes.hoverVertical}\n          style={{\n            left: mouseCoord[0],\n            height: height - YSCALEBAR_LABEL_OFFSET * 2,\n          }}\n        />\n      </>\n    ) : null\n  },\n)\n\nexport default Tooltip\n","import { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { Axis, LEFT, RIGHT } from 'react-d3-axis'\nimport { WiggleDisplayModel } from '../models/model'\n\nexport const YScaleBar = observer(\n  ({\n    model,\n    orientation,\n  }: {\n    model: WiggleDisplayModel\n    orientation?: string\n  }) => {\n    const { ticks } = model\n\n    return (\n      <Axis\n        {...ticks}\n        format={(n: number) => n}\n        style={{ orient: orientation === 'left' ? LEFT : RIGHT }}\n      />\n    )\n  },\n)\n\nconst LinearWiggleDisplay = observer((props: { model: WiggleDisplayModel }) => {\n  const { model } = props\n  const { ready, stats, height, needsScalebar } = model\n  return (\n    <div>\n      <BaseLinearDisplayComponent {...props} />\n      {ready && stats && needsScalebar ? (\n        <svg\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 300,\n            pointerEvents: 'none',\n            height,\n            width: 50,\n          }}\n        >\n          <YScaleBar model={model} />\n        </svg>\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearWiggleDisplay\n","import React, { lazy } from 'react'\nimport {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport {\n  isAbortException,\n  getSession,\n  getContainingView,\n  isSelectionContainer,\n} from '@jbrowse/core/util'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\nimport {\n  BaseLinearDisplay,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { autorun, observable, when } from 'mobx'\nimport { addDisposer, isAlive, types, getEnv, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\nimport { FeatureStats } from '@jbrowse/core/util/stats'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { axisPropsFromTickScale } from 'react-d3-axis'\nimport { getNiceDomain, getScale } from '../../util'\n\nimport Tooltip from '../components/Tooltip'\nimport { YScaleBar } from '../components/WiggleDisplayComponent'\n\nconst SetMinMaxDlg = lazy(() => import('../components/SetMinMaxDialog'))\nconst SetColorDlg = lazy(() => import('../components/SetColorDialog'))\n\n// fudge factor for making all labels on the YScalebar visible\nexport const YSCALEBAR_LABEL_OFFSET = 5\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'XYPlotRenderer'],\n  ['density', 'DensityRenderer'],\n  ['line', 'LinePlotRenderer'],\n])\n\nfunction logb(x: number, y: number) {\n  return Math.log(y) / Math.log(x)\n}\nfunction round(v: number, b = 1.5) {\n  return (v >= 0 ? 1 : -1) * Math.pow(b, 1 + Math.floor(logb(b, Math.abs(v))))\n}\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) =>\n  types\n    .compose(\n      'LinearWiggleDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearWiggleDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        selectedRendering: types.optional(types.string, ''),\n        resolution: types.optional(types.number, 1),\n        fill: types.maybe(types.boolean),\n        color: types.maybe(types.string),\n        summaryScoreMode: types.maybe(types.string),\n        rendererTypeNameState: types.maybe(types.string),\n        scale: types.maybe(types.string),\n        autoscale: types.maybe(types.string),\n        displayCrossHatches: types.maybe(types.boolean),\n        constraints: types.optional(\n          types.model({\n            max: types.maybe(types.number),\n            min: types.maybe(types.number),\n          }),\n          {},\n        ),\n      }),\n    )\n    .volatile(() => ({\n      ready: false,\n      message: undefined as undefined | string,\n      stats: observable({ scoreMin: 0, scoreMax: 50 }),\n      statsFetchInProgress: undefined as undefined | AbortController,\n    }))\n    .actions(self => ({\n      updateStats(stats: { scoreMin: number; scoreMax: number }) {\n        self.stats.scoreMin = stats.scoreMin\n        self.stats.scoreMax = stats.scoreMax\n        self.ready = true\n      },\n      setColor(color: string) {\n        self.color = color\n      },\n\n      setLoading(aborter: AbortController) {\n        const { statsFetchInProgress: statsFetch } = self\n        if (statsFetch !== undefined && !statsFetch.signal.aborted) {\n          statsFetch.abort()\n        }\n        self.statsFetchInProgress = aborter\n      },\n\n      // this overrides the BaseLinearDisplayModel to avoid popping up a\n      // feature detail display, but still sets the feature selection on the\n      // model so listeners can detect a click\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n      setResolution(res: number) {\n        self.resolution = res\n      },\n\n      setFill(fill: boolean) {\n        self.fill = fill\n      },\n\n      toggleLogScale() {\n        if (self.scale !== 'log') {\n          self.scale = 'log'\n        } else {\n          self.scale = 'linear'\n        }\n      },\n\n      setScaleType(scale?: string) {\n        self.scale = scale\n      },\n\n      setSummaryScoreMode(val: string) {\n        self.summaryScoreMode = val\n      },\n\n      setAutoscale(val: string) {\n        self.autoscale = val\n      },\n\n      setMaxScore(val?: number) {\n        self.constraints.max = val\n      },\n\n      setRendererType(val: string) {\n        self.rendererTypeNameState = val\n      },\n\n      setMinScore(val?: number) {\n        self.constraints.min = val\n      },\n\n      toggleCrossHatches() {\n        self.displayCrossHatches = !self.displayCrossHatches\n      },\n\n      setCrossHatches(cross: boolean) {\n        self.displayCrossHatches = cross\n      },\n    }))\n    .views(self => ({\n      get TooltipComponent(): React.FC {\n        return (Tooltip as unknown) as React.FC\n      },\n\n      get adapterTypeName() {\n        return self.adapterConfig.type\n      },\n\n      get rendererTypeName() {\n        const viewName =\n          self.rendererTypeNameState || getConf(self, 'defaultRendering')\n        const rendererType = rendererTypes.get(viewName)\n        if (!rendererType) {\n          throw new Error(`unknown alignments view name ${viewName}`)\n        }\n        return rendererType\n      },\n\n      // subclasses can define these, as snpcoverage track does\n      get filters() {\n        return undefined\n      },\n\n      get scaleType() {\n        return self.scale || getConf(self, 'scaleType')\n      },\n      get filled() {\n        return typeof self.fill !== 'undefined'\n          ? self.fill\n          : readConfObject(this.rendererConfig, 'filled')\n      },\n\n      get maxScore() {\n        const { max } = self.constraints\n        return max !== undefined ? max : getConf(self, 'maxScore')\n      },\n\n      get minScore() {\n        const { min } = self.constraints\n        return min !== undefined ? min : getConf(self, 'minScore')\n      },\n\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', this.rendererTypeName]) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            filled: self.fill,\n            scaleType: this.scaleType,\n            displayCrossHatches: self.displayCrossHatches,\n            summaryScoreMode: self.summaryScoreMode,\n            color: self.color,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => {\n      let oldDomain: [number, number] = [0, 0]\n      return {\n        get summaryScoreModeSetting() {\n          return (\n            self.summaryScoreMode ||\n            readConfObject(self.rendererConfig, 'summaryScoreMode')\n          )\n        },\n        get domain() {\n          const { stats, scaleType, minScore, maxScore } = self\n\n          const ret = getNiceDomain({\n            domain: [stats.scoreMin, stats.scoreMax],\n            bounds: [minScore, maxScore],\n            scaleType,\n          })\n          const headroom = getConf(self, 'headroom') || 0\n\n          // avoid weird scalebar if log value and empty region displayed\n          if (scaleType === 'log' && ret[1] === Number.MIN_VALUE) {\n            return [0, Number.MIN_VALUE]\n          }\n\n          // heuristic to just give some extra headroom on bigwig scores if no\n          // maxScore/minScore specified (they have MAX_VALUE/MIN_VALUE if so)\n          if (maxScore === Number.MAX_VALUE && ret[1] > 1.0) {\n            ret[1] = round(ret[1] + headroom)\n          }\n          if (minScore === Number.MIN_VALUE && ret[0] < -1.0) {\n            ret[0] = round(ret[0] - headroom)\n          }\n\n          // avoid returning a new object if it matches the old value\n          if (JSON.stringify(oldDomain) !== JSON.stringify(ret)) {\n            oldDomain = ret\n          }\n\n          return oldDomain\n        },\n\n        get needsScalebar() {\n          return (\n            self.rendererTypeName === 'XYPlotRenderer' ||\n            self.rendererTypeName === 'LinePlotRenderer'\n          )\n        },\n        get scaleOpts() {\n          return {\n            domain: this.domain,\n            stats: self.stats,\n            autoscaleType: this.autoscaleType,\n            scaleType: self.scaleType,\n            inverted: getConf(self, 'inverted'),\n          }\n        },\n\n        get canHaveFill() {\n          return self.rendererTypeName === 'XYPlotRenderer'\n        },\n\n        get autoscaleType() {\n          return self.autoscale || getConf(self, 'autoscale')\n        },\n\n        get displayCrossHatchesSetting() {\n          return (\n            self.displayCrossHatches ||\n            readConfObject(self.rendererConfig, 'displayCrossHatches')\n          )\n        },\n      }\n    })\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get ticks() {\n          const { scaleType, domain, height } = self\n          const range = [\n            height - YSCALEBAR_LABEL_OFFSET,\n            YSCALEBAR_LABEL_OFFSET,\n          ]\n          const scale = getScale({\n            scaleType,\n            domain,\n            range,\n            inverted: getConf(self, 'inverted'),\n          })\n          const ticks = height < 50 ? 2 : 4\n          return axisPropsFromTickScale(scale, ticks)\n        },\n        get renderProps() {\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            notReady: !self.ready,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.rendererConfig,\n            scaleOpts: self.scaleOpts,\n            resolution: self.resolution,\n            height: self.height,\n            ticks: this.ticks,\n            displayCrossHatches: self.displayCrossHatches,\n            filters: self.filters,\n          }\n        },\n\n        get adapterCapabilities() {\n          const { adapterCapabilities } = pluginManager.getAdapterType(\n            self.adapterTypeName,\n          )\n          return adapterCapabilities\n        },\n\n        get hasResolution() {\n          return this.adapterCapabilities.includes('hasResolution')\n        },\n\n        get hasGlobalStats() {\n          return this.adapterCapabilities.includes('hasGlobalStats')\n        },\n\n        get composedTrackMenuItems() {\n          return [\n            ...(this.hasResolution\n              ? [\n                  {\n                    label: 'Resolution',\n                    subMenu: [\n                      {\n                        label: 'Finer resolution',\n                        onClick: () => {\n                          self.setResolution(self.resolution * 5)\n                        },\n                      },\n                      {\n                        label: 'Coarser resolution',\n                        onClick: () => {\n                          self.setResolution(self.resolution / 5)\n                        },\n                      },\n                    ],\n                  },\n                  {\n                    label: 'Summary score mode',\n                    subMenu: ['min', 'max', 'avg', 'whiskers'].map(elt => {\n                      return {\n                        label: elt,\n                        onClick: () => self.setSummaryScoreMode(elt),\n                      }\n                    }),\n                  },\n                ]\n              : []),\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: self.filled\n                      ? 'Turn off histogram fill'\n                      : 'Turn on histogram fill',\n                    onClick: () => {\n                      self.setFill(!self.filled)\n                    },\n                  },\n                ]\n              : []),\n            {\n              label:\n                self.scaleType === 'log' ? 'Set linear scale' : 'Set log scale',\n              onClick: () => {\n                self.toggleLogScale()\n              },\n            },\n            {\n              type: 'checkbox',\n              label: 'Draw cross hatches',\n              checked: self.displayCrossHatchesSetting,\n              onClick: () => {\n                self.toggleCrossHatches()\n              },\n            },\n\n            ...(Object.keys(getConf(self, 'renderers') || {}).length > 1\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: [...rendererTypes.keys()].map(key => ({\n                      label: key,\n                      onClick: () => self.setRendererType(key),\n                    })),\n                  },\n                ]\n              : []),\n            {\n              label: 'Autoscale type',\n              subMenu: [\n                ['local', 'Local'],\n                ...(this.hasGlobalStats\n                  ? [\n                      ['global', 'Global'],\n                      ['globalsd', 'Global ± 3σ'],\n                    ]\n                  : []),\n                ['localsd', 'Local ± 3σ'],\n              ].map(([val, label]) => {\n                return {\n                  label,\n                  onClick() {\n                    self.setAutoscale(val)\n                  },\n                }\n              }),\n            },\n            {\n              label: 'Set min/max score',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMinMaxDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set color',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetColorDlg, {\n                  model: self,\n                })\n              },\n            },\n          ]\n        },\n\n        get trackMenuItems() {\n          return [...trackMenuItems, ...this.composedTrackMenuItems]\n        },\n      }\n    })\n    .actions(self => {\n      const superReload = self.reload\n      const superRenderSvg = self.renderSvg\n\n      type ExportSvgOpts = Parameters<typeof superRenderSvg>[0]\n\n      async function getStats(opts: {\n        headers?: Record<string, string>\n        signal?: AbortSignal\n        filters?: string[]\n      }): Promise<FeatureStats> {\n        const { rpcManager } = getSession(self)\n        const nd = getConf(self, 'numStdDev') || 3\n        const { adapterConfig, autoscaleType } = self\n        const sessionId = getRpcSessionId(self)\n        const params = {\n          sessionId,\n          adapterConfig,\n          statusCallback: (message: string) => {\n            if (isAlive(self)) {\n              self.setMessage(message)\n            }\n          },\n          ...opts,\n        }\n        if (autoscaleType === 'global' || autoscaleType === 'globalsd') {\n          const results: FeatureStats = (await rpcManager.call(\n            sessionId,\n            'WiggleGetGlobalStats',\n            params,\n          )) as FeatureStats\n          const { scoreMin, scoreMean, scoreStdDev } = results\n          // globalsd uses heuristic to avoid unnecessary scoreMin<0\n          // if the scoreMin is never less than 0\n          // helps with most coverage bigwigs just being >0\n          return autoscaleType === 'globalsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n                scoreMax: scoreMean + nd * scoreStdDev,\n              }\n            : results\n        }\n        if (autoscaleType === 'local' || autoscaleType === 'localsd') {\n          const { dynamicBlocks, bpPerPx } = getContainingView(self) as LGV\n          const results = (await rpcManager.call(\n            sessionId,\n            'WiggleGetMultiRegionStats',\n            {\n              ...params,\n              regions: dynamicBlocks.contentBlocks.map(region => {\n                const { start, end } = region\n                return {\n                  ...region,\n                  start: Math.floor(start),\n                  end: Math.ceil(end),\n                }\n              }),\n              bpPerPx,\n            },\n          )) as FeatureStats\n          const { scoreMin, scoreMean, scoreStdDev } = results\n\n          // localsd uses heuristic to avoid unnecessary scoreMin<0\n          // if the scoreMin is never less than 0\n          // helps with most coverage bigwigs just being >0\n          return autoscaleType === 'localsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n                scoreMax: scoreMean + nd * scoreStdDev,\n              }\n            : results\n        }\n        if (autoscaleType === 'zscale') {\n          return rpcManager.call(\n            sessionId,\n            'WiggleGetGlobalStats',\n            params,\n          ) as Promise<FeatureStats>\n        }\n        throw new Error(`invalid autoscaleType '${autoscaleType}'`)\n      }\n      return {\n        // re-runs stats and refresh whole display on reload\n        async reload() {\n          self.setError()\n          const aborter = new AbortController()\n          const stats = await getStats({\n            signal: aborter.signal,\n            filters: self.filters,\n          })\n          if (isAlive(self)) {\n            self.updateStats(stats)\n            superReload()\n          }\n        },\n        afterAttach() {\n          addDisposer(\n            self,\n            autorun(\n              async () => {\n                try {\n                  const aborter = new AbortController()\n                  const view = getContainingView(self) as LGV\n                  self.setLoading(aborter)\n\n                  if (!view.initialized) {\n                    return\n                  }\n\n                  if (view.bpPerPx > self.maxViewBpPerPx) {\n                    return\n                  }\n\n                  const stats = await getStats({\n                    signal: aborter.signal,\n                    filters: self.filters,\n                  })\n\n                  if (isAlive(self)) {\n                    self.updateStats(stats)\n                  }\n                } catch (e) {\n                  if (!isAbortException(e) && isAlive(self)) {\n                    self.setError(e)\n                  }\n                }\n              },\n              { delay: 1000 },\n            ),\n          )\n        },\n        async renderSvg(opts: ExportSvgOpts) {\n          await when(() => self.ready && !!self.regionCannotBeRenderedText)\n          const { needsScalebar, stats } = self\n          const { offsetPx } = getContainingView(self) as LGV\n          return (\n            <>\n              <g id=\"snpcov\">{await superRenderSvg(opts)}</g>\n              {needsScalebar && stats ? (\n                <g transform={`translate(${Math.max(-offsetPx, 0)})`}>\n                  <YScaleBar\n                    model={self as WiggleDisplayModel}\n                    orientation=\"left\"\n                  />\n                </g>\n              ) : null}\n            </>\n          )\n        },\n      }\n    })\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport Color from 'color'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getOrigin, getScale } from '../util'\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../LinearWiggleDisplay/models/model'\n\nexport default class XYPlotRenderer extends WiggleBaseRenderer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      bpPerPx,\n      regions,\n      scaleOpts,\n      height: unadjustedHeight,\n      config,\n      ticks: { values },\n      displayCrossHatches,\n    } = props\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const offset = YSCALEBAR_LABEL_OFFSET\n    const height = unadjustedHeight - offset * 2\n\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n    const filled = readConfObject(config, 'filled')\n    const clipColor = readConfObject(config, 'clipColor')\n    const highlightColor = readConfObject(config, 'highlightColor')\n    const summaryScoreMode = readConfObject(config, 'summaryScoreMode')\n    const scale = getScale({ ...scaleOpts, range: [0, height] })\n    const originY = getOrigin(scaleOpts.scaleType)\n    const [niceMin, niceMax] = scale.domain()\n\n    const toY = (n: number) => height - scale(n) + offset\n    const toHeight = (n: number) => toY(originY) - toY(n)\n\n    const colorCallback =\n      readConfObject(config, 'color') === '#f0f'\n        ? (_: Feature, score: number) =>\n            score < pivotValue ? negColor : posColor\n        : (feature: Feature, _score: number) =>\n            readConfObject(config, 'color', { feature })\n\n    ctx.strokeStyle = 'grey'\n    ctx.moveTo(0, toY(0))\n    ctx.lineTo(width, toY(0))\n    ctx.stroke()\n\n    const crossingOrigin = niceMin < pivotValue && niceMax > pivotValue\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      let score = feature.get('score')\n      const maxr = feature.get('maxScore')\n      const minr = feature.get('minScore')\n\n      const lowClipping = score < niceMin\n      const highClipping = score > niceMax\n      const w = rightPx - leftPx + 0.4 // fudge factor for subpixel rendering\n\n      const summary = feature.get('summary')\n\n      if (summaryScoreMode === 'max') {\n        score = summary ? maxr : score\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      } else if (summaryScoreMode === 'min') {\n        score = summary ? minr : score\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      } else if (summaryScoreMode === 'whiskers') {\n        const c = colorCallback(feature, score)\n        if (summary) {\n          ctx.fillStyle = crossingOrigin\n            ? colorCallback(feature, maxr)\n            : Color(c).lighten(0.6).toString()\n          ctx.fillRect(\n            leftPx,\n            toY(maxr),\n            w,\n            filled ? toHeight(maxr) - toHeight(score) : 1,\n          )\n        }\n\n        // normal\n        ctx.fillStyle =\n          crossingOrigin && summary\n            ? Color(colorCallback(feature, maxr)).mix(\n                Color(colorCallback(feature, minr)),\n              )\n            : c\n        ctx.fillRect(\n          leftPx,\n          toY(score),\n          w,\n          filled ? toHeight(score) - (summary ? toHeight(minr) : 0) : 1,\n        )\n\n        // min\n        if (summary) {\n          ctx.fillStyle = crossingOrigin\n            ? colorCallback(feature, minr)\n            : Color(c).darken(0.6).toString()\n          ctx.fillRect(leftPx, toY(minr), w, filled ? toHeight(minr) : 1)\n        }\n      } else {\n        ctx.fillStyle = colorCallback(feature, score)\n        ctx.fillRect(leftPx, toY(score), w, filled ? toHeight(score) : 1)\n      }\n\n      if (highClipping) {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, 0, w, 4)\n      } else if (lowClipping && scaleOpts.scaleType !== 'log') {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, unadjustedHeight - 4, w, 4)\n      }\n      if (feature.get('highlighted')) {\n        ctx.fillStyle = highlightColor\n        ctx.fillRect(leftPx, 0, w, height)\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from '../configSchema'\n\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default } from './XYPlotRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'XYPlotRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { getScale } from '../util'\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../LinearWiggleDisplay/models/model'\n\nexport default class LinePlotRenderer extends WiggleBaseRenderer {\n  draw(ctx, props) {\n    const {\n      features,\n      regions,\n      bpPerPx,\n      scaleOpts,\n      height: unadjustedHeight,\n      ticks: { values },\n      displayCrossHatches,\n      config,\n    } = props\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n    const offset = YSCALEBAR_LABEL_OFFSET\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const height = unadjustedHeight - offset * 2\n    const clipColor = readConfObject(config, 'clipColor')\n    const highlightColor = readConfObject(config, 'highlightColor')\n    const scale = getScale({ ...scaleOpts, range: [0, height] })\n    const [niceMin, niceMax] = scale.domain()\n    const toY = rawscore => height - scale(rawscore) + offset\n    const colorCallback =\n      readConfObject(config, 'color') === '#f0f'\n        ? () => 'grey'\n        : feature => readConfObject(config, 'color', { feature })\n\n    ctx.strokeStyle = 'grey'\n    ctx.moveTo(0, toY(0))\n    ctx.lineTo(width, toY(0))\n    ctx.stroke()\n\n    let lastVal\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const score = feature.get('score')\n      const lowClipping = score < niceMin\n      const highClipping = score > niceMax\n      const w = rightPx - leftPx + 0.3 // fudge factor for subpixel rendering\n\n      const c = colorCallback(feature)\n\n      ctx.strokeStyle = c\n      ctx.beginPath()\n      if (!region.reversed) {\n        ctx.moveTo(\n          leftPx,\n          toY(typeof lastVal !== 'undefined' ? lastVal : score),\n        )\n        ctx.lineTo(leftPx, toY(score))\n        ctx.lineTo(rightPx, toY(score))\n      } else {\n        ctx.moveTo(\n          rightPx,\n          toY(typeof lastVal !== 'undefined' ? lastVal : score),\n        )\n        ctx.lineTo(rightPx, toY(score))\n        ctx.lineTo(leftPx, toY(score))\n      }\n      ctx.stroke()\n      lastVal = score\n\n      if (highClipping) {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, 0, w, 4)\n      } else if (lowClipping && scaleOpts.scaleType !== 'log') {\n        ctx.fillStyle = clipColor\n        ctx.fillRect(leftPx, height - 4, w, height)\n      }\n      if (feature.get('highlighted')) {\n        ctx.fillStyle = highlightColor\n        ctx.fillRect(leftPx, 0, w, height)\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from '../configSchema'\n\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default } from './LinePlotRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'LinePlotRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { FeatureStats } from '@jbrowse/core/util/stats'\n\nexport class WiggleGetGlobalStats extends RpcMethodType {\n  name = 'WiggleGetGlobalStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriverClassName: string,\n  ): Promise<FeatureStats> {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      // @ts-ignore\n      if (dataAdapter.capabilities.includes('hasGlobalStats')) {\n        // @ts-ignore\n        return dataAdapter.getGlobalStats(deserializedArgs)\n      }\n      throw new Error('Data adapter does not support global stats')\n    }\n    throw new Error('Data adapter not found')\n  }\n}\n\nexport class WiggleGetMultiRegionStats extends RpcMethodType {\n  name = 'WiggleGetMultiRegionStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const assemblyManager = this.pluginManager.rootModel?.session\n      ?.assemblyManager\n    if (!assemblyManager) {\n      return args\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters && args.filters.toJSON().filters,\n    })\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      return dataAdapter.getMultiRegionStats(regions, deserializedArgs)\n    }\n    throw new Error('Data adapter not found')\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport WiggleBaseRenderer from './WiggleBaseRenderer'\nimport WiggleRendering from './WiggleRendering'\nimport {\n  configSchema as bigWigAdapterConfigSchema,\n  adapterCapabilities,\n} from './BigWigAdapter'\nimport DensityRenderer, {\n  configSchema as densityRendererConfigSchema,\n  ReactComponent as DensityRendererReactComponent,\n} from './DensityRenderer'\nimport * as utils from './util'\nimport {\n  configSchemaFactory as linearWiggleDisplayConfigSchemaFactory,\n  modelFactory as linearWiggleDisplayModelFactory,\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  YSCALEBAR_LABEL_OFFSET,\n} from './LinearWiggleDisplay'\nimport XYPlotRenderer, {\n  configSchema as xyPlotRendererConfigSchema,\n  ReactComponent as XYPlotRendererReactComponent,\n} from './XYPlotRenderer'\nimport LinePlotRenderer, {\n  configSchema as linePlotRendererConfigSchema,\n  ReactComponent as LinePlotRendererReactComponent,\n} from './LinePlotRenderer'\nimport {\n  WiggleGetGlobalStats,\n  WiggleGetMultiRegionStats,\n} from './WiggleRPC/rpcMethods'\n\nexport default class WigglePlugin extends Plugin {\n  name = 'WigglePlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'QuantitativeTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      return new TrackType({\n        name: 'QuantitativeTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'QuantitativeTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearWiggleDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearWiggleDisplay',\n        configSchema,\n        stateModel: linearWiggleDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'QuantitativeTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearWiggleDisplayReactComponent,\n      })\n    })\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BigWigAdapter',\n          configSchema: bigWigAdapterConfigSchema,\n          adapterCapabilities,\n          getAdapterClass: () =>\n            import('./BigWigAdapter/BigWigAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new DensityRenderer({\n          name: 'DensityRenderer',\n          ReactComponent: DensityRendererReactComponent,\n          configSchema: densityRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new LinePlotRenderer({\n          name: 'LinePlotRenderer',\n          ReactComponent: LinePlotRendererReactComponent,\n          configSchema: linePlotRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRendererType(\n      () =>\n        new XYPlotRenderer({\n          name: 'XYPlotRenderer',\n          ReactComponent: XYPlotRendererReactComponent,\n          configSchema: xyPlotRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRpcMethod(() => new WiggleGetGlobalStats(pluginManager))\n    pluginManager.addRpcMethod(\n      () => new WiggleGetMultiRegionStats(pluginManager),\n    )\n  }\n\n  exports = {\n    LinearWiggleDisplayReactComponent,\n    XYPlotRendererReactComponent,\n    XYPlotRenderer,\n    xyPlotRendererConfigSchema,\n    utils,\n    WiggleBaseRenderer,\n    linearWiggleDisplayModelFactory,\n  }\n}\n\nexport * from './util'\n\nexport { WiggleRendering }\nexport { WiggleBaseRenderer }\nexport { LinearWiggleDisplayReactComponent, linearWiggleDisplayModelFactory }\nexport { YSCALEBAR_LABEL_OFFSET }\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const XYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'XYPlotRenderer',\n  ).configSchema\n  const DensityRendererConfigSchema = pluginManager.getRendererType(\n    'DensityRenderer',\n  ).configSchema\n  const LinePlotRendererConfigSchema = pluginManager.getRendererType(\n    'LinePlotRenderer',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearWiggleDisplay',\n    {\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', [\n          'global',\n          'local',\n          'globalsd',\n          'localsd',\n          'zscore',\n        ]),\n        description:\n          'global/local using their min/max values or w/ standard deviations (globalsd/localsd)',\n      },\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      numStdDev: {\n        type: 'number',\n        description:\n          'number of standard deviations to use for autoscale types globalsd or localsd',\n        defaultValue: 3,\n      },\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['density', 'xyplot', 'line']),\n        defaultValue: 'xyplot',\n      },\n\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        DensityRenderer: DensityRendererConfigSchema,\n        XYPlotRenderer: XYPlotRendererConfigSchema,\n        LinePlotRenderer: LinePlotRendererConfigSchema,\n      }),\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nconst configSchema = ConfigurationSchema('AlignmentsFeatureWidget', {})\n\nexport default function stateModelFactory(pluginManager) {\n  return types\n    .model('AlignmentsFeatureWidget', {\n      id: ElementId,\n      type: types.literal('AlignmentsFeatureWidget'),\n      featureData: types.frozen(),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      setFeatureData(data) {\n        self.featureData = data\n      },\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n    }))\n}\n\nexport { configSchema, stateModelFactory }\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default types.late(() =>\n  ConfigurationSchema(\n    'BamAdapter',\n    {\n      bamLocation: {\n        type: 'fileLocation',\n        defaultValue: { uri: '/path/to/my.bam' },\n      },\n      index: ConfigurationSchema('BamIndex', {\n        indexType: {\n          model: types.enumeration('IndexType', ['BAI', 'CSI']),\n          type: 'stringEnum',\n          defaultValue: 'BAI',\n        },\n        location: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.bam.bai' },\n        },\n      }),\n      chunkSizeLimit: {\n        type: 'number',\n        defaultValue: 100000000,\n      },\n      fetchSizeLimit: {\n        type: 'number',\n        defaultValue: 500000000,\n      },\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n    },\n    { explicitlyTyped: true },\n  ),\n)\n","import configSchema from './configSchema'\n\nexport default (/* pluginManager: PluginManager */) => {\n  return {\n    configSchema,\n    getAdapterClass: () => import('./BamAdapter').then(r => r.default),\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default (pluginManager: PluginManager) => {\n  const { types } = pluginManager.lib['mobx-state-tree']\n  return types.late(() =>\n    ConfigurationSchema(\n      'CramAdapter',\n      {\n        cramLocation: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.cram' },\n        },\n        craiLocation: {\n          type: 'fileLocation',\n          defaultValue: { uri: '/path/to/my.cram.crai' },\n        },\n        sequenceAdapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      },\n      { explicitlyTyped: true },\n    ),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  return {\n    configSchema: pluginManager.load(configSchemaF),\n    getAdapterClass: () => import('./CramAdapter').then(r => r.default),\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default types.late(() =>\n  ConfigurationSchema(\n    'HtsgetBamAdapter',\n    {\n      htsgetBase: {\n        type: 'string',\n        defaultValue: '',\n      },\n      htsgetTrackId: {\n        type: 'string',\n        defaultValue: '',\n      },\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n    },\n    { explicitlyTyped: true },\n  ),\n)\n","import configSchema from './configSchema'\n\nexport default (/* pluginManager: PluginManager */) => {\n  return {\n    configSchema,\n    getAdapterClass: () => import('./HtsgetBamAdapter').then(r => r.default),\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst configModelFactory = (pluginManager: PluginManager) => {\n  const PileupDisplayConfigSchema = pluginManager.getDisplayType(\n    'LinearPileupDisplay',\n  ).configSchema\n  const SNPCoverageDisplayConfigSchema = pluginManager.getDisplayType(\n    'LinearSNPCoverageDisplay',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearAlignmentsDisplay',\n    {\n      pileupDisplay: PileupDisplayConfigSchema,\n      snpCoverageDisplay: SNPCoverageDisplayConfigSchema,\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n\nexport type AlignmentsConfigModel = ReturnType<typeof configModelFactory>\nexport default configModelFactory\n","import React from 'react'\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport deepEqual from 'fast-deep-equal'\nimport { autorun, when } from 'mobx'\nimport { addDisposer, getSnapshot, Instance, types } from 'mobx-state-tree'\nimport { getContainingTrack } from '@jbrowse/core/util'\nimport { AlignmentsConfigModel } from './configSchema'\n\nconst minDisplayHeight = 20\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AlignmentsConfigModel,\n) => {\n  return types\n    .compose(\n      'LinearAlignmentsDisplay',\n      BaseDisplay,\n      types.model({\n        PileupDisplay: types.maybe(\n          pluginManager.getDisplayType('LinearPileupDisplay').stateModel,\n        ),\n        SNPCoverageDisplay: types.maybe(\n          pluginManager.getDisplayType('LinearSNPCoverageDisplay').stateModel,\n        ),\n        snpCovHeight: 45,\n        type: types.literal('LinearAlignmentsDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        height: 250,\n        showCoverage: true,\n        showPileup: true,\n      }),\n    )\n    .volatile(() => ({\n      scrollTop: 0,\n    }))\n    .actions(self => ({\n      toggleCoverage() {\n        self.showCoverage = !self.showCoverage\n      },\n      togglePileup() {\n        self.showPileup = !self.showPileup\n      },\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n      setSNPCoverageHeight(n: number) {\n        self.snpCovHeight = n\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get pileupDisplayConfig() {\n          const conf = getConf(self, 'pileupDisplay')\n          const track = getContainingTrack(self)\n          return {\n            ...conf,\n            type: 'LinearPileupDisplay',\n            name: `${getConf(track, 'name')} pileup`,\n            displayId: `${self.configuration.displayId}_pileup_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n          }\n        },\n\n        getFeatureByID(id: string) {\n          return self.PileupDisplay.getFeatureByID(id)\n        },\n\n        get features() {\n          return self.PileupDisplay.features\n        },\n\n        get DisplayBlurb() {\n          return self.PileupDisplay?.DisplayBlurb\n        },\n\n        get sortedBy() {\n          return self.PileupDisplay.sortedBy\n        },\n        get sortedByPosition() {\n          return self.PileupDisplay.sortedByPosition\n        },\n        get sortedByRefName() {\n          return self.PileupDisplay.sortedByRefName\n        },\n\n        get snpCoverageDisplayConfig() {\n          const conf = getConf(self, 'snpCoverageDisplay')\n          const track = getContainingTrack(self)\n          return {\n            ...conf,\n            type: 'LinearSNPCoverageDisplay',\n            name: `${getConf(track, 'name')} snp coverage`,\n            displayId: `${self.configuration.displayId}_snpcoverage_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n          }\n        },\n\n        get trackMenuItems(): MenuItem[] {\n          return [\n            ...trackMenuItems,\n            {\n              type: 'subMenu',\n              label: 'Pileup settings',\n              subMenu: self.PileupDisplay.composedTrackMenuItems,\n            },\n            {\n              type: 'subMenu',\n              label: 'SNPCoverage settings',\n              subMenu: [\n                ...self.SNPCoverageDisplay.composedTrackMenuItems,\n                ...self.SNPCoverageDisplay.extraTrackMenuItems,\n              ],\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      setSNPCoverageDisplay(displayConfig: AnyConfigurationModel) {\n        self.SNPCoverageDisplay = {\n          type: 'LinearSNPCoverageDisplay',\n          configuration: displayConfig,\n          height: self.snpCovHeight,\n        }\n      },\n      setUserBpPerPxLimit(limit: number) {\n        self.PileupDisplay.setUserBpPerPxLimit(limit)\n        self.SNPCoverageDisplay.setUserBpPerPxLimit(limit)\n      },\n      setPileupDisplay(displayConfig: AnyConfigurationModel) {\n        self.PileupDisplay = {\n          type: 'LinearPileupDisplay',\n          configuration: displayConfig,\n        }\n      },\n      setHeight(displayHeight: number) {\n        if (displayHeight > minDisplayHeight) {\n          self.height = displayHeight\n        } else {\n          self.height = minDisplayHeight\n        }\n        return self.height\n      },\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            if (!self.SNPCoverageDisplay) {\n              self.setSNPCoverageDisplay(self.snpCoverageDisplayConfig)\n            } else if (\n              !deepEqual(\n                self.snpCoverageDisplayConfig,\n                getSnapshot(self.SNPCoverageDisplay.configuration),\n              )\n            ) {\n              self.SNPCoverageDisplay.setHeight(self.snpCovHeight)\n              self.SNPCoverageDisplay.setConfig(self.snpCoverageDisplayConfig)\n            }\n\n            if (!self.PileupDisplay) {\n              self.setPileupDisplay(self.pileupDisplayConfig)\n            } else if (\n              !deepEqual(\n                self.pileupDisplayConfig,\n                getSnapshot(self.PileupDisplay.configuration),\n              )\n            ) {\n              self.PileupDisplay.setConfig(self.pileupDisplayConfig)\n            }\n\n            // propagate the filterBy setting from pileupdisplay to snpcoverage\n            // note: the snpcoverage display is not able to control filterBy\n            // itself\n            if (\n              self.PileupDisplay.filterBy &&\n              !deepEqual(\n                getSnapshot(self.PileupDisplay.filterBy),\n                getSnapshot(self.SNPCoverageDisplay.filterBy),\n              )\n            ) {\n              self.SNPCoverageDisplay.setFilterBy(\n                getSnapshot(self.PileupDisplay.filterBy),\n              )\n            }\n            if (\n              self.PileupDisplay.colorBy &&\n              !deepEqual(\n                getSnapshot(self.PileupDisplay.colorBy),\n                self.SNPCoverageDisplay.colorBy\n                  ? getSnapshot(self.SNPCoverageDisplay.colorBy)\n                  : {},\n              )\n            ) {\n              self.SNPCoverageDisplay.setColorBy(\n                getSnapshot(self.PileupDisplay.colorBy),\n              )\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(() => {\n            self.setSNPCoverageHeight(self.SNPCoverageDisplay.height)\n          }),\n        )\n      },\n      async renderSvg(opts: { rasterizeLayers?: boolean }) {\n        const pileupHeight = self.height - self.SNPCoverageDisplay.height\n        await when(() => self.PileupDisplay.ready)\n        return (\n          <>\n            <g>{await self.SNPCoverageDisplay.renderSvg(opts)}</g>\n            <g transform={`translate(0 ${self.SNPCoverageDisplay.height})`}>\n              {\n                await self.PileupDisplay.renderSvg({\n                  ...opts,\n                  overrideHeight: pileupHeight,\n                })\n              }\n            </g>\n          </>\n        )\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type AlignmentsDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type AlignmentsDisplayModel = Instance<AlignmentsDisplayStateModel>\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { AlignmentsDisplayModel } from '../models/model'\n\nfunction AlignmentsDisplay({ model }: { model: AlignmentsDisplayModel }) {\n  const { PileupDisplay, SNPCoverageDisplay, showPileup, showCoverage } = model\n  return (\n    <div\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      style={{ position: 'relative' }}\n    >\n      <div data-testid=\"Blockset-snpcoverage\">\n        {showCoverage ? (\n          <SNPCoverageDisplay.RenderingComponent model={SNPCoverageDisplay} />\n        ) : null}\n      </div>\n      <ResizeHandle\n        onDrag={delta => {\n          if (SNPCoverageDisplay) {\n            SNPCoverageDisplay.setHeight(SNPCoverageDisplay.height + delta)\n            return delta\n          }\n          return 0\n        }}\n        style={{\n          position: 'absolute',\n          top: showCoverage ? SNPCoverageDisplay.height + 2 : 0,\n          height: 3,\n        }}\n      />\n\n      <div\n        data-testid=\"Blockset-pileup\"\n        style={{\n          position: 'absolute',\n          top: showCoverage ? SNPCoverageDisplay.height + 5 : 0,\n          height: 3,\n        }}\n      >\n        {showPileup ? (\n          <PileupDisplay.RenderingComponent model={PileupDisplay} />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(AlignmentsDisplay)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nfunction PileupConfigFactory(pluginManager: PluginManager) {\n  const PileupRendererConfigSchema = pluginManager.getRendererType(\n    'PileupRenderer',\n  ).configSchema\n  const SvgFeatureRendererConfigSchema = pluginManager.getRendererType(\n    'SvgFeatureRenderer',\n  ).configSchema\n\n  // modify config schema to take in a sub coverage display\n  return ConfigurationSchema(\n    'LinearPileupDisplay',\n    {\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['pileup', 'svg']),\n        defaultValue: 'pileup',\n      },\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        PileupRenderer: PileupRendererConfigSchema,\n        SvgFeatureRenderer: SvgFeatureRendererConfigSchema,\n      }),\n      renderer: '',\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 100,\n      },\n      colorScheme: {\n        type: 'stringEnum',\n        model: types.enumeration('colorScheme', [\n          'strand',\n          'normal',\n          'insertSize',\n          'insertSizeAndOrientation',\n          'mappingQuality',\n          'tag',\n        ]),\n        description: 'color scheme to use',\n        defaultValue: 'normal',\n      },\n    },\n    {\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type LinearPileupDisplayConfigModel = ReturnType<\n  typeof PileupConfigFactory\n>\nexport type LinearPileupDisplayConfig = Instance<LinearPileupDisplayConfigModel>\nexport default PileupConfigFactory\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Typography from '@material-ui/core/Typography'\n\nexport interface LinearPileupDisplayBlurbProps {\n  model: {\n    sortedBy?: {\n      pos: number\n      refName: number\n      type: string\n    }\n  }\n}\n\nfunction LinearPileupDisplayBlurb(props: LinearPileupDisplayBlurbProps) {\n  const { model } = props\n  const { sortedBy } = model\n  return sortedBy ? (\n    <div\n      data-testid={`blurb-${model.sortedBy}`}\n      style={{ backgroundColor: 'white' }}\n    >\n      <Typography color=\"secondary\" variant=\"caption\">\n        {model.sortedBy\n          ? `Sorted by ${sortedBy.type.toLowerCase()} at ${sortedBy.refName}:${\n              sortedBy.pos\n            }`\n          : null}\n      </Typography>\n    </div>\n  ) : null\n}\nexport default observer(LinearPileupDisplayBlurb)\n","import { BlockSet } from '@jbrowse/core/util/blockTypes'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\nexport async function getUniqueTagValues(\n  self: IAnyStateTreeNode & { adapterConfig: AnyConfigurationModel },\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    getRpcSessionId(self),\n    'PileupGetGlobalValueForTag',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n\nexport async function getUniqueModificationValues(\n  self: IAnyStateTreeNode & {\n    parentTrack: IAnyStateTreeNode & { configuration: AnyConfigurationModel }\n  },\n  adapterConfig: AnyConfigurationModel,\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    sessionId,\n    'PileupGetVisibleModifications',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n","import { lazy } from 'react'\nimport {\n  ConfigurationReference,\n  readConfObject,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  getContainingView,\n} from '@jbrowse/core/util'\n\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  LinearGenomeViewModel,\n  BaseLinearDisplay,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { cast, types, addDisposer, getEnv, Instance } from 'mobx-state-tree'\nimport copy from 'copy-to-clipboard'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\nimport SortIcon from '@material-ui/icons/Sort'\nimport PaletteIcon from '@material-ui/icons/Palette'\nimport FilterListIcon from '@material-ui/icons/ClearAll'\n\nimport { autorun, observable } from 'mobx'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { LinearPileupDisplayConfigModel } from './configSchema'\nimport LinearPileupDisplayBlurb from './components/LinearPileupDisplayBlurb'\n\nimport { getUniqueTagValues, getUniqueModificationValues } from '../shared'\n\nconst ColorByTagDlg = lazy(() => import('./components/ColorByTag'))\nconst FilterByTagDlg = lazy(() => import('./components/FilterByTag'))\nconst SortByTagDlg = lazy(() => import('./components/SortByTag'))\nconst SetFeatureHeightDlg = lazy(() => import('./components/SetFeatureHeight'))\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\nconst ModificationsDlg = lazy(() => import('./components/ColorByModifications'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['pileup', 'PileupRenderer'],\n  ['svg', 'SvgFeatureRenderer'],\n])\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: LinearPileupDisplayConfigModel,\n) =>\n  types\n    .compose(\n      'LinearPileupDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearPileupDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        showSoftClipping: false,\n        featureHeight: types.maybe(types.number),\n        noSpacing: types.maybe(types.boolean),\n        fadeLikelihood: types.maybe(types.boolean),\n        trackMaxHeight: types.maybe(types.number),\n        mismatchAlpha: types.maybe(types.boolean),\n        sortedBy: types.maybe(\n          types.model({\n            type: types.string,\n            pos: types.number,\n            tag: types.maybe(types.string),\n            refName: types.string,\n            assemblyName: types.string,\n          }),\n        ),\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n            extra: types.frozen(),\n          }),\n        ),\n        filterBy: types.optional(\n          types.model({\n            flagInclude: types.optional(types.number, 0),\n            flagExclude: types.optional(types.number, 1536),\n            readName: types.maybe(types.string),\n            tagFilter: types.maybe(\n              types.model({ tag: types.string, value: types.string }),\n            ),\n          }),\n          {},\n        ),\n      }),\n    )\n    .volatile(() => ({\n      colorTagMap: observable.map<string, string>({}),\n      modificationTagMap: observable.map<string, string>({}),\n      ready: false,\n      currBpPerPx: 0,\n    }))\n    .actions(self => ({\n      setReady(flag: boolean) {\n        self.ready = flag\n      },\n      setCurrBpPerPx(n: number) {\n        self.currBpPerPx = n\n      },\n      setMaxHeight(n: number) {\n        self.trackMaxHeight = n\n      },\n      setFeatureHeight(n: number) {\n        self.featureHeight = n\n      },\n      setNoSpacing(flag: boolean) {\n        self.noSpacing = flag\n      },\n\n      setColorScheme(colorScheme: { type: string; tag?: string }) {\n        self.colorTagMap = observable.map({}) // clear existing mapping\n        self.colorBy = cast(colorScheme)\n        self.ready = false\n      },\n\n      updateModificationColorMap(uniqueModifications: string[]) {\n        const colorPalette = ['red', 'blue', 'green', 'orange', 'purple']\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            const totalKeys = [...self.modificationTagMap.keys()].length\n            const newColor = colorPalette[totalKeys]\n            self.modificationTagMap.set(value, newColor)\n          }\n        })\n      },\n\n      updateColorTagMap(uniqueTag: string[]) {\n        // pale color scheme https://cran.r-project.org/web/packages/khroma/vignettes/tol.html e.g. \"tol_light\"\n        const colorPalette = [\n          '#BBCCEE',\n          'pink',\n          '#CCDDAA',\n          '#EEEEBB',\n          '#FFCCCC',\n          'lightblue',\n          'lightgreen',\n          'tan',\n          '#CCEEFF',\n          'lightsalmon',\n        ]\n\n        uniqueTag.forEach(value => {\n          if (!self.colorTagMap.has(value)) {\n            const totalKeys = [...self.colorTagMap.keys()].length\n            const newColor = colorPalette[totalKeys]\n            self.colorTagMap.set(value, newColor)\n          }\n        })\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              try {\n                const { rpcManager } = getSession(self)\n                const { sortedBy, colorBy, renderProps } = self\n                const view = getContainingView(self) as LGV\n\n                // continually generate the vc pairing, set and rerender if any\n                // new values seen\n                if (colorBy?.tag) {\n                  const uniqueTagSet = await getUniqueTagValues(\n                    self,\n                    colorBy,\n                    view.staticBlocks,\n                  )\n                  self.updateColorTagMap(uniqueTagSet)\n                }\n\n                if (colorBy?.type === 'modifications') {\n                  const uniqueModificationsSet = await getUniqueModificationValues(\n                    self,\n                    getConf(self.parentTrack, ['adapter']),\n                    colorBy,\n                    view.staticBlocks,\n                  )\n                  self.updateModificationColorMap(uniqueModificationsSet)\n                }\n\n                if (sortedBy) {\n                  const { pos, refName, assemblyName } = sortedBy\n\n                  const region = {\n                    start: pos,\n                    end: (pos || 0) + 1,\n                    refName,\n                    assemblyName,\n                  }\n\n                  // render just the sorted region first\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  await (self.rendererType as any).renderInClient(rpcManager, {\n                    assemblyName,\n                    regions: [region],\n                    adapterConfig: self.adapterConfig,\n                    rendererType: self.rendererType.name,\n                    sessionId: getRpcSessionId(self),\n                    timeout: 1000000,\n                    ...renderProps,\n                  })\n                  self.setReady(true)\n                  self.setCurrBpPerPx(view.bpPerPx)\n                } else {\n                  self.setReady(true)\n                }\n              } catch (error) {\n                console.error(error)\n                self.setError(error)\n              }\n            },\n            { delay: 1000 },\n          ),\n        )\n      },\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'AlignmentsFeatureWidget',\n            'alignmentFeature',\n            { featureData: feature.toJSON(), view: getContainingView(self) },\n          )\n          session.showWidget(featureWidget)\n        }\n        session.setSelection(feature)\n      },\n\n      clearSelected() {\n        self.sortedBy = undefined\n      },\n\n      // uses copy-to-clipboard and generates notification\n      copyFeatureToClipboard(feature: Feature) {\n        const copiedFeature = feature.toJSON()\n        delete copiedFeature.uniqueId\n        const session = getSession(self)\n        copy(JSON.stringify(copiedFeature, null, 4))\n        session.notify('Copied to clipboard', 'success')\n      },\n\n      toggleSoftClipping() {\n        self.showSoftClipping = !self.showSoftClipping\n      },\n      toggleMismatchAlpha() {\n        self.mismatchAlpha = !self.mismatchAlpha\n      },\n\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n\n      setSortedBy(type: string, tag?: string) {\n        const { centerLineInfo } = getContainingView(self) as LGV\n        if (!centerLineInfo) {\n          return\n        }\n        const { refName, assemblyName, offset } = centerLineInfo\n        const centerBp = Math.round(offset) + 1\n        const centerRefName = refName\n\n        if (centerBp < 0) {\n          return\n        }\n\n        self.sortedBy = {\n          type,\n          pos: centerBp,\n          refName: centerRefName,\n          assemblyName,\n          tag,\n        }\n        self.ready = false\n      },\n      setFilterBy(filter: {\n        flagInclude: number\n        flagExclude: number\n        readName?: string\n        tagFilter?: { tag: string; value: string }\n      }) {\n        self.filterBy = cast(filter)\n      },\n    }))\n    .actions(self => {\n      // resets the sort object and refresh whole display on reload\n      const superReload = self.reload\n\n      return {\n        reload() {\n          self.clearSelected()\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      get maxHeight() {\n        const conf = getConf(self, ['renderers', self.rendererTypeName]) || {}\n        return self.trackMaxHeight !== undefined\n          ? self.trackMaxHeight\n          : conf.maxHeight\n      },\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', self.rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            height: self.featureHeight,\n            noSpacing: self.noSpacing,\n            maxHeight: this.maxHeight,\n            mismatchAlpha: self.mismatchAlpha,\n          },\n          getEnv(self),\n        )\n      },\n      get featureHeightSetting() {\n        return (\n          self.featureHeight || readConfObject(this.rendererConfig, 'height')\n        )\n      },\n      get mismatchAlphaSetting() {\n        return self.mismatchAlpha !== undefined\n          ? self.mismatchAlpha\n          : readConfObject(this.rendererConfig, 'mismatchAlpha')\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get rendererTypeName() {\n          const viewName = getConf(self, 'defaultRendering')\n          const rendererType = rendererTypes.get(viewName)\n          if (!rendererType) {\n            throw new Error(`unknown alignments view name ${viewName}`)\n          }\n          return rendererType\n        },\n\n        get contextMenuItems() {\n          const feat = self.contextMenuFeature\n          const contextMenuItems = feat\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: () => {\n                    self.clearFeatureSelection()\n                    if (feat) {\n                      self.selectFeature(feat)\n                    }\n                  },\n                },\n                {\n                  label: 'Copy info to clipboard',\n                  icon: ContentCopyIcon,\n                  onClick: () => {\n                    if (feat) {\n                      self.copyFeatureToClipboard(feat)\n                    }\n                  },\n                },\n              ]\n            : []\n          self.additionalContextMenuItemCallbacks.forEach(\n            (callback: Function) => {\n              const menuItems = callback(feat, self, pluginManager)\n              contextMenuItems.push(...menuItems)\n            },\n          )\n          return contextMenuItems\n        },\n\n        get DisplayBlurb() {\n          return LinearPileupDisplayBlurb\n        },\n\n        get filters() {\n          let filters: string[] = []\n          if (self.filterBy) {\n            const { flagInclude, flagExclude } = self.filterBy\n            filters = [\n              `jexl:((get(feature,'flags')&${flagInclude})==${flagInclude}) && !(get(feature,'flags')&${flagExclude})`,\n            ]\n            if (self.filterBy.tagFilter) {\n              const { tag, value } = self.filterBy.tagFilter\n              filters.push(\n                `jexl:\"${value}\" =='*' ? getTag(feature,\"${tag}\") != undefined : getTag(feature,\"${tag}\") == \"${value}\"`,\n              )\n            }\n            if (self.filterBy.readName) {\n              const { readName } = self.filterBy\n              filters.push(`jexl:get(feature,'name') == \"${readName}\"`)\n            }\n          }\n          return new SerializableFilterChain({ filters })\n        },\n\n        get renderProps() {\n          const view = getContainingView(self) as LGV\n          return {\n            ...self.composedRenderProps,\n            ...getParentRenderProps(self),\n            notReady:\n              !self.ready ||\n              (self.sortedBy && self.currBpPerPx !== view.bpPerPx),\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            sortedBy: self.sortedBy,\n            colorBy: self.colorBy,\n            colorTagMap: JSON.parse(JSON.stringify(self.colorTagMap)),\n            modificationTagMap: JSON.parse(\n              JSON.stringify(self.modificationTagMap),\n            ),\n            filters: this.filters,\n            showSoftClip: self.showSoftClipping,\n            config: self.rendererConfig,\n          }\n        },\n\n        get composedTrackMenuItems() {\n          return [\n            {\n              label: 'Show soft clipping',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showSoftClipping,\n              onClick: () => {\n                self.toggleSoftClipping()\n                // if toggling from off to on, will break sort for this track\n                // so clear it\n                if (self.showSoftClipping) {\n                  self.clearSelected()\n                }\n              },\n            },\n            {\n              label: 'Sort by',\n              icon: SortIcon,\n              disabled: self.showSoftClipping,\n              subMenu: [\n                ...['Start location', 'Read strand', 'Base pair'].map(\n                  option => {\n                    return {\n                      label: option,\n                      onClick: () => self.setSortedBy(option),\n                    }\n                  },\n                ),\n                {\n                  label: 'Sort by tag...',\n                  onClick: () =>\n                    getSession(self).setDialogComponent(SortByTagDlg, {\n                      model: self,\n                    }),\n                },\n                {\n                  label: 'Clear sort',\n                  onClick: () => self.clearSelected(),\n                },\n              ],\n            },\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Normal',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'normal' })\n                  },\n                },\n                {\n                  label: 'Mapping quality',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'mappingQuality' })\n                  },\n                },\n                {\n                  label: 'Strand',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'strand' })\n                  },\n                },\n                {\n                  label: 'Pair orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'pairOrientation' })\n                  },\n                },\n                {\n                  label: 'Per-base quality',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'perBaseQuality' })\n                  },\n                },\n                {\n                  label: 'Modifications or methylation',\n                  onClick: () => {\n                    getSession(self).setDialogComponent(ModificationsDlg, {\n                      model: self,\n                    })\n                  },\n                },\n                {\n                  label: 'Insert size',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSize' })\n                  },\n                },\n                {\n                  label: 'Stranded paired-end',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'reverseTemplate' })\n                  },\n                },\n                {\n                  label: 'Color by tag...',\n                  onClick: () => {\n                    getSession(self).setDialogComponent(ColorByTagDlg, {\n                      model: self,\n                    })\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).setDialogComponent(FilterByTagDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set feature height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetFeatureHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).setDialogComponent(SetMaxHeightDlg, {\n                  model: self,\n                })\n              },\n            },\n            {\n              label: 'Fade mismatches by quality',\n              type: 'checkbox',\n              checked: self.mismatchAlphaSetting,\n              onClick: () => {\n                self.toggleMismatchAlpha()\n              },\n            },\n          ]\n        },\n\n        get trackMenuItems() {\n          return [...trackMenuItems, ...this.composedTrackMenuItems]\n        },\n      }\n    })\n\nexport type LinearPileupDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearPileupDisplayModel = Instance<LinearPileupDisplayStateModel>\n\nexport default stateModelFactory\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport MUITooltip from '@material-ui/core/Tooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    fontSize: '0.8em',\n    zIndex: theme.zIndex.tooltip, // important to have a zIndex directly on the popper itself, material-ui Tooltip uses popper and has similar thing\n    pointerEvents: 'none', // needed to avoid rapid mouseLeave/mouseEnter on popper\n  },\n\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: 0,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n}))\n\ntype Count = {\n  [key: string]: {\n    total: number\n    strands: { [key: string]: number }\n  }\n}\n\nfunction TooltipContents({ feature }: { feature: Feature }) {\n  const refName = feature.get('refName')\n  const start = (feature.get('start') + 1).toLocaleString('en-US')\n  const end = feature.get('end').toLocaleString('en-US')\n  const loc = `${refName ? `${refName}:` : ''}${\n    start === end ? start : `${start}..${end}`\n  }`\n\n  const info = feature.get('snpinfo') as {\n    ref: Count\n    cov: Count\n    lowqual: Count\n    noncov: Count\n    delskips: Count\n    total: number\n  }\n\n  const { total, ref, cov, noncov, lowqual, delskips } = info\n  return (\n    <div>\n      <table>\n        <caption>{loc}</caption>\n        <thead>\n          <tr>\n            <th>Base</th>\n            <th>Count</th>\n            <th>% of Total</th>\n            <th>Strands</th>\n            <th>Source</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Total</td>\n            <td>{total}</td>\n            <td />\n          </tr>\n\n          {Object.entries({ ref, cov, noncov, delskips, lowqual }).map(\n            ([key, entry]) => {\n              return (\n                <React.Fragment key={key}>\n                  {Object.entries(entry).map(([base, score]) => {\n                    const { strands } = score\n                    return (\n                      <tr key={base}>\n                        <td>{base.toUpperCase()}</td>\n                        <td>{score.total}</td>\n                        <td>\n                          {base === 'total'\n                            ? '---'\n                            : `${Math.floor((score.total / total) * 100)}%`}\n                        </td>\n                        <td>\n                          {strands['-1'] ? `${strands['-1']}(-)` : ''}\n                          {strands['1'] ? `${strands['1']}(+)` : ''}\n                        </td>\n                        <td>{key}</td>\n                      </tr>\n                    )\n                  })}\n                </React.Fragment>\n              )\n            },\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\ntype Coord = [number, number]\nconst Tooltip = observer(\n  ({\n    model,\n    height,\n    mouseCoord,\n  }: {\n    model: any\n    height: number\n    mouseCoord: Coord\n  }) => {\n    const { featureUnderMouse } = model\n    const classes = useStyles()\n\n    return featureUnderMouse ? (\n      <>\n        <MUITooltip\n          placement=\"right-start\"\n          className={classes.popper}\n          open\n          title={<TooltipContents feature={featureUnderMouse} />}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              left: mouseCoord[0],\n              top: 0,\n            }}\n          >\n            {' '}\n          </div>\n        </MUITooltip>\n        <div\n          className={classes.hoverVertical}\n          style={{ left: mouseCoord[0], height }}\n        />\n      </>\n    ) : null\n  },\n)\n\nexport default Tooltip\n","import { addDisposer, types, cast, getEnv, getSnapshot } from 'mobx-state-tree'\nimport { observable, autorun } from 'mobx'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport {\n  AnyConfigurationSchemaType,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { getContainingView } from '@jbrowse/core/util'\nimport Tooltip from '../components/Tooltip'\nimport { getUniqueModificationValues } from '../../shared'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// using a map because it preserves order\nconst rendererTypes = new Map([['snpcoverage', 'SNPCoverageRenderer']])\n\ntype LGV = LinearGenomeViewModel\n\nconst stateModelFactory = (\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) =>\n  types\n    .compose(\n      'LinearSNPCoverageDisplay',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        type: types.literal('LinearSNPCoverageDisplay'),\n        drawInterbaseCounts: types.maybe(types.boolean),\n        drawIndicators: types.maybe(types.boolean),\n        filterBy: types.optional(\n          types.model({\n            flagInclude: types.optional(types.number, 0),\n            flagExclude: types.optional(types.number, 1536),\n            readName: types.maybe(types.string),\n            tagFilter: types.maybe(\n              types.model({ tag: types.string, value: types.string }),\n            ),\n          }),\n          {},\n        ),\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n          }),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      modificationTagMap: observable.map({}),\n    }))\n    .actions(self => ({\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n      setFilterBy(filter: {\n        flagInclude: number\n        flagExclude: number\n        readName?: string\n        tagFilter?: { tag: string; value: string }\n      }) {\n        self.filterBy = cast(filter)\n      },\n      setColorBy(colorBy?: { type: string; tag?: string }) {\n        self.colorBy = cast(colorBy)\n      },\n\n      updateModificationColorMap(uniqueModifications: string[]) {\n        const colorPalette = ['red', 'blue', 'green', 'orange', 'purple']\n        let i = 0\n\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            const newColor = colorPalette[i++]\n            self.modificationTagMap.set(value, newColor)\n          }\n        })\n      },\n    }))\n    .views(self => ({\n      get rendererConfig() {\n        const configBlob =\n          getConf(self, ['renderers', self.rendererTypeName]) || {}\n\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            drawInterbaseCounts:\n              self.drawInterbaseCounts === undefined\n                ? configBlob.drawInterbaseCounts\n                : self.drawInterbaseCounts,\n            drawIndicators:\n              self.drawIndicators === undefined\n                ? configBlob.drawIndicators\n                : self.drawIndicators,\n          },\n          getEnv(self),\n        )\n      },\n      get drawInterbaseCountsSetting() {\n        return self.drawInterbaseCounts !== undefined\n          ? self.drawInterbaseCounts\n          : readConfObject(this.rendererConfig, 'drawInterbaseCounts')\n      },\n      get drawIndicatorsSetting() {\n        return self.drawIndicators !== undefined\n          ? self.drawIndicators\n          : readConfObject(this.rendererConfig, 'drawIndicators')\n      },\n\n      get modificationsReady() {\n        return self.colorBy?.type === 'modifications'\n          ? Object.keys(JSON.parse(JSON.stringify(self.modificationTagMap)))\n              .length > 0\n          : true\n      },\n      get renderProps() {\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          notReady: !self.ready || !this.modificationsReady,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: self.rendererConfig,\n          scaleOpts: self.scaleOpts,\n          resolution: self.resolution,\n          height: self.height,\n          ticks: self.ticks,\n          displayCrossHatches: self.displayCrossHatches,\n          filters: self.filters,\n          modificationTagMap: JSON.parse(\n            JSON.stringify(self.modificationTagMap),\n          ),\n\n          // must use getSnapshot because otherwise changes to e.g. just the\n          // colorBy.type are not read\n          colorBy: self.colorBy ? getSnapshot(self.colorBy) : undefined,\n        }\n      },\n    }))\n    .actions(self => ({\n      toggleDrawIndicators() {\n        self.drawIndicators = !self.drawIndicatorsSetting\n      },\n      toggleDrawInterbaseCounts() {\n        self.drawInterbaseCounts = !self.drawInterbaseCountsSetting\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              try {\n                const { colorBy } = self\n                const { staticBlocks } = getContainingView(self) as LGV\n                if (colorBy?.type === 'modifications') {\n                  const vals = await getUniqueModificationValues(\n                    self,\n                    getConf(self.parentTrack, 'adapter'),\n                    colorBy,\n                    staticBlocks,\n                  )\n                  self.updateModificationColorMap(vals)\n                }\n              } catch (error) {\n                console.error(error)\n                self.setError(error)\n              }\n            },\n            { delay: 1000 },\n          ),\n        )\n      },\n    }))\n\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get TooltipComponent() {\n          return Tooltip\n        },\n\n        get adapterConfig() {\n          const subadapter = getConf(self.parentTrack, 'adapter')\n          return {\n            type: 'SNPCoverageAdapter',\n            subadapter,\n          }\n        },\n\n        get rendererTypeName() {\n          return rendererTypes.get('snpcoverage')\n        },\n\n        get needsScalebar() {\n          return true\n        },\n\n        get contextMenuItems() {\n          return []\n        },\n\n        get extraTrackMenuItems() {\n          return [\n            {\n              label: 'Draw insertion/clipping indicators',\n              type: 'checkbox',\n              checked: self.drawIndicatorsSetting,\n              onClick: () => {\n                self.toggleDrawIndicators()\n              },\n            },\n            {\n              label: 'Draw insertion/clipping counts',\n              type: 'checkbox',\n              checked: self.drawInterbaseCountsSetting,\n              onClick: () => {\n                self.toggleDrawInterbaseCounts()\n              },\n            },\n          ]\n        },\n        get trackMenuItems() {\n          return [\n            ...trackMenuItems,\n            ...self.composedTrackMenuItems,\n            ...this.extraTrackMenuItems,\n          ]\n        },\n        // The SNPCoverage filters are called twice because the BAM/CRAM features\n        // pass filters and then the SNPCoverage score features pass through\n        // here, and are already have 'snpinfo' are passed through\n        get filters() {\n          let filters: string[] = []\n          if (self.filterBy) {\n            const { flagInclude, flagExclude } = self.filterBy\n            filters = [\n              `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                `((get(feature,'flags')&${flagInclude})==${flagInclude}) && ` +\n                `!((get(feature,'flags')&${flagExclude}))`,\n            ]\n\n            if (self.filterBy.tagFilter) {\n              const { tag, value } = self.filterBy.tagFilter\n              filters.push(\n                `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                  `\"${value}\" =='*' ? getTag(feature,\"${tag}\") != undefined : ` +\n                  `getTag(feature,\"${tag}\") == \"${value}\"`,\n              )\n            }\n            if (self.filterBy.readName) {\n              const { readName } = self.filterBy\n              filters.push(\n                `jexl:get(feature,'snpinfo') != undefined ? true : ` +\n                  `get(feature,'name') == \"${readName}\"`,\n              )\n            }\n          }\n          return new SerializableFilterChain({ filters })\n        },\n      }\n    })\n\nexport type SNPCoverageDisplayModel = ReturnType<typeof stateModelFactory>\n\nexport default stateModelFactory\n","import { Region } from '@jbrowse/core/util/types'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport React, { MouseEvent, useRef, useState, useEffect } from 'react'\nimport type { BaseLinearDisplayModel } from '@jbrowse/plugin-linear-genome-view'\n\n// used so that user can click-away-from-feature below the laid out features\n// (issue #1248)\nconst canvasPadding = 100\nfunction PileupRendering(props: {\n  blockKey: string\n  displayModel: BaseLinearDisplayModel\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n  sortedBy?: { type: string; pos: number; refName: string }\n  colorBy?: { type: string; tag?: string }\n  onMouseMove?: (event: React.MouseEvent, featureId: string | undefined) => void\n}) {\n  const {\n    onMouseMove,\n    blockKey,\n    displayModel,\n    width,\n    height,\n    regions,\n    bpPerPx,\n    sortedBy,\n    colorBy,\n  } = props\n  const {\n    selectedFeatureId,\n    featureIdUnderMouse,\n    contextMenuFeature,\n  } = displayModel\n\n  const [region] = regions\n  const highlightOverlayCanvas = useRef<HTMLCanvasElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] = useState(\n    false,\n  )\n  useEffect(() => {\n    const canvas = highlightOverlayCanvas.current\n    if (!canvas) {\n      return\n    }\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      return\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    const selectedRect = selectedFeatureId\n      ? displayModel.getFeatureByID?.(selectedFeatureId)\n      : undefined\n    if (selectedRect) {\n      const [leftBp, topPx, rightBp, bottomPx] = selectedRect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.shadowColor = '#222266'\n      ctx.shadowBlur = 10\n      ctx.lineJoin = 'bevel'\n      ctx.lineWidth = 2\n      ctx.strokeStyle = '#00b8ff'\n      ctx.strokeRect(\n        leftPx - 2,\n        rectTop - 2,\n        rightPx - leftPx + 4,\n        rectHeight + 4,\n      )\n      ctx.clearRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n    const highlightedFeature = featureIdUnderMouse || contextMenuFeature?.id()\n    const highlightedRect = highlightedFeature\n      ? displayModel.getFeatureByID?.(highlightedFeature)\n      : undefined\n    if (highlightedRect) {\n      const [leftBp, topPx, rightBp, bottomPx] = highlightedRect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.fillStyle = '#0003'\n      ctx.fillRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n  }, [\n    bpPerPx,\n    region,\n    selectedFeatureId,\n    displayModel,\n    featureIdUnderMouse,\n    contextMenuFeature,\n  ])\n\n  function onMouseDown(event: MouseEvent) {\n    setMouseIsDown(true)\n    setMovedDuringLastMouseDown(false)\n    callMouseHandler('MouseDown', event)\n  }\n\n  function onMouseEnter(event: MouseEvent) {\n    callMouseHandler('MouseEnter', event)\n  }\n\n  function onMouseOut(event: MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onMouseOver(event: MouseEvent) {\n    callMouseHandler('MouseOver', event)\n  }\n\n  function onMouseUp(event: MouseEvent) {\n    setMouseIsDown(false)\n    callMouseHandler('MouseUp', event)\n  }\n\n  function onClick(event: MouseEvent) {\n    if (!movedDuringLastMouseDown) {\n      callMouseHandler('Click', event)\n    }\n  }\n\n  function onMouseLeave(event: MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onContextMenu(event: MouseEvent) {\n    callMouseHandler('ContextMenu', event)\n  }\n\n  function mouseMove(event: MouseEvent) {\n    if (mouseIsDown) {\n      setMovedDuringLastMouseDown(true)\n    }\n    let offsetX = 0\n    let offsetY = 0\n    if (highlightOverlayCanvas.current) {\n      offsetX = highlightOverlayCanvas.current.getBoundingClientRect().left\n      offsetY = highlightOverlayCanvas.current.getBoundingClientRect().top\n    }\n    offsetX = event.clientX - offsetX\n    offsetY = event.clientY - offsetY\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n\n    const featIdUnderMouse = displayModel.getFeatureOverlapping(\n      blockKey,\n      clientBp,\n      offsetY,\n    )\n\n    if (onMouseMove) {\n      onMouseMove(event, featIdUnderMouse)\n    }\n  }\n\n  function callMouseHandler(handlerName: string, event: MouseEvent) {\n    // @ts-ignore\n    const featureHandler = props[`onFeature${handlerName}`]\n    // @ts-ignore\n    const canvasHandler = props[`on${handlerName}`]\n    if (featureHandler && featureIdUnderMouse) {\n      featureHandler(event, featureIdUnderMouse)\n    } else if (canvasHandler) {\n      canvasHandler(event, featureIdUnderMouse)\n    }\n  }\n\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div\n      className=\"PileupRendering\"\n      data-testid={`pileup-${\n        sortedBy || colorBy\n          ? `${sortedBy?.type || ''}${colorBy?.type || ''}${colorBy?.tag || ''}`\n          : 'normal'\n      }`}\n      style={{ position: 'relative', width: canvasWidth, height }}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n      <canvas\n        data-testid=\"pileup_overlay_canvas\"\n        width={canvasWidth}\n        height={height + canvasPadding}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n        className=\"highlightOverlayCanvas\"\n        ref={highlightOverlayCanvas}\n        onMouseDown={event => onMouseDown(event)}\n        onMouseEnter={event => onMouseEnter(event)}\n        onMouseOut={event => onMouseOut(event)}\n        onMouseOver={event => onMouseOver(event)}\n        onMouseUp={event => onMouseUp(event)}\n        onMouseLeave={event => onMouseLeave(event)}\n        onMouseMove={event => mouseMove(event)}\n        onClick={event => onClick(event)}\n        onContextMenu={event => onContextMenu(event)}\n        onFocus={() => {}}\n        onBlur={() => {}}\n      />\n    </div>\n  )\n}\n\nexport default observer(PileupRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'PileupRenderer',\n  {\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a pileup alignment',\n      defaultValue: `#c8c8c8`,\n      contextVariable: ['feature'],\n    },\n\n    orientationType: {\n      type: 'stringEnum',\n      model: types.enumeration('orientationType', ['fr', 'rf', 'ff']),\n      defaultValue: 'fr',\n      description:\n        'read sequencer orienation. fr is normal \"reads pointing at each other ---> <--- while some other sequencers can use other options',\n    },\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    minSubfeatureWidth: {\n      type: 'number',\n      description:\n        'the minimum width in px for a pileup mismatch feature. use for increasing mismatch marker widths when zoomed out to e.g. 1px or 0.5px',\n      defaultValue: 0,\n    },\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a pileup rendering',\n      defaultValue: 1200,\n    },\n    maxClippingSize: {\n      type: 'integer',\n      description: 'the max clip size to be used in a pileup rendering',\n      defaultValue: 10000,\n    },\n    height: {\n      type: 'number',\n      description: 'the height of each feature in a pileup alignment',\n      defaultValue: 7,\n      contextVariable: ['feature'],\n    },\n    noSpacing: {\n      type: 'boolean',\n      description: 'remove spacing between features',\n      defaultValue: false,\n    },\n    largeInsertionIndicatorScale: {\n      type: 'number',\n      description:\n        'scale at which to draw the large insertion indicators (bp/pixel)',\n      defaultValue: 10,\n    },\n    mismatchAlpha: {\n      type: 'boolean',\n      defaultValue: false,\n      description: 'Fade low quality mismatches',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import deepEqual from 'fast-deep-equal'\nimport { LayoutSession } from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport GranularRectLayout from '@jbrowse/core/util/layouts/GranularRectLayout'\nimport MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nexport interface PileupLayoutSessionProps {\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters: SerializableFilterChain\n  sortedBy: unknown\n  showSoftClip: unknown\n}\n\ntype MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\ninterface CachedPileupLayout {\n  layout: MyMultiLayout\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n  sortedBy: unknown\n  showSoftClip: boolean\n}\n// Sorting and revealing soft clip changes the layout of Pileup renderer\n// Adds extra conditions to see if cached layout is valid\nexport class PileupLayoutSession extends LayoutSession {\n  sortedBy: unknown\n\n  showSoftClip = false\n\n  constructor(args: PileupLayoutSessionProps) {\n    super(args)\n    this.config = args.config\n  }\n\n  cachedLayoutIsValid(cachedLayout: CachedPileupLayout) {\n    return (\n      super.cachedLayoutIsValid(cachedLayout) &&\n      this.showSoftClip === cachedLayout.showSoftClip &&\n      deepEqual(this.sortedBy, cachedLayout.sortedBy)\n    )\n  }\n\n  cachedLayout: CachedPileupLayout | undefined\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        config: readConfObject(this.config),\n        filters: this.filters,\n        sortedBy: this.sortedBy,\n        showSoftClip: this.showSoftClip,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { toArray } from 'rxjs/operators'\nimport BoxRendererType, {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderArgsDeserialized as BoxRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { Theme } from '@material-ui/core'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { bpSpanPx, iterMap } from '@jbrowse/core/util'\nimport Color from 'color'\nimport { Region } from '@jbrowse/core/util/types'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { BaseLayout } from '@jbrowse/core/util/layouts/BaseLayout'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  Mismatch,\n  parseCigar,\n  getModificationPositions,\n  getNextRefPos,\n} from '../BamAdapter/MismatchParser'\nimport { sortFeature } from './sortUtil'\nimport { getTagAlt, orientationTypes } from '../util'\n\nimport {\n  PileupLayoutSession,\n  PileupLayoutSessionProps,\n} from './PileupLayoutSession'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport type {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n  ResultsDeserialized,\n}\n\nfunction getColorBaseMap(theme: Theme) {\n  return {\n    A: theme.palette.bases.A.main,\n    C: theme.palette.bases.C.main,\n    G: theme.palette.bases.G.main,\n    T: theme.palette.bases.T.main,\n    deletion: '#808080', // gray\n  }\n}\n\nexport interface RenderArgsDeserialized extends BoxRenderArgsDeserialized {\n  colorBy?: { type: string; tag?: string }\n  colorTagMap?: Record<string, string>\n  modificationTagMap?: Record<string, string>\n  sortedBy?: {\n    type: string\n    pos: number\n    refName: string\n    assemblyName: string\n    tag?: string\n  }\n  showSoftClip: boolean\n  highResolutionScaling: number\n}\n\nexport interface RenderArgsDeserializedWithFeaturesAndLayout\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  layout: BaseLayout<Feature>\n  regionSequence?: string\n}\n\ninterface LayoutRecord {\n  feature: Feature\n  leftPx: number\n  rightPx: number\n  topPx: number\n  heightPx: number\n}\n\nconst alignmentColoring: { [key: string]: string } = {\n  color_fwd_strand_not_proper: '#ECC8C8',\n  color_rev_strand_not_proper: '#BEBED8',\n  color_fwd_strand: '#EC8B8B',\n  color_rev_strand: '#8F8FD8',\n  color_fwd_missing_mate: '#D11919',\n  color_rev_missing_mate: '#1919D1',\n  color_fwd_diff_chr: '#000',\n  color_rev_diff_chr: '#969696',\n  color_pair_lr: '#c8c8c8',\n  color_pair_rr: 'navy',\n  color_pair_rl: 'teal',\n  color_pair_ll: 'green',\n  color_nostrand: '#999',\n  color_interchrom: 'orange',\n  color_longinsert: 'red',\n  color_shortinsert: 'pink',\n}\n\ninterface LayoutFeature {\n  heightPx: number\n  topPx: number\n  feature: Feature\n}\n\nfunction shouldDrawMismatches(type?: string) {\n  return !['methylation', 'modifications'].includes(type || '')\n}\n\nexport default class PileupRenderer extends BoxRendererType {\n  supportsSVG = true\n\n  // get width and height of chars the height is an approximation: width\n  // letter M is approximately the height\n  getCharWidthHeight(ctx: CanvasRenderingContext2D) {\n    const charWidth = ctx.measureText('A').width\n    const charHeight = ctx.measureText('M').width\n    return { charWidth, charHeight }\n  }\n\n  layoutFeature(\n    feature: Feature,\n    layout: BaseLayout<Feature>,\n    config: AnyConfigurationModel,\n    bpPerPx: number,\n    region: Region,\n    showSoftClip?: boolean,\n  ): LayoutRecord | null {\n    let expansionBefore = 0\n    let expansionAfter = 0\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const seq: string = feature.get('seq')\n\n    // Expand the start and end of feature when softclipping enabled\n    if (showSoftClip && seq) {\n      for (let i = 0; i < mismatches.length; i += 1) {\n        const { type, start, cliplen = 0 } = mismatches[i]\n        if (type === 'softclip') {\n          start === 0 ? (expansionBefore = cliplen) : (expansionAfter = cliplen)\n        }\n      }\n    }\n\n    const [leftPx, rightPx] = bpSpanPx(\n      feature.get('start') - expansionBefore,\n      feature.get('end') + expansionAfter,\n      region,\n      bpPerPx,\n    )\n\n    let heightPx = readConfObject(config, 'height', { feature })\n    const displayMode = readConfObject(config, 'displayMode', { feature })\n    if (displayMode === 'compact') {\n      heightPx /= 3\n    }\n    if (feature.get('refName') !== region.refName) {\n      throw new Error(\n        `feature ${feature.id()} is not on the current region's reference sequence ${\n          region.refName\n        }`,\n      )\n    }\n    const topPx = layout.addRect(\n      feature.id(),\n      feature.get('start') - expansionBefore,\n      feature.get('end') + expansionAfter,\n      heightPx,\n    )\n    if (topPx === null) {\n      return null\n    }\n\n    return {\n      feature,\n      leftPx,\n      rightPx,\n      topPx: displayMode === 'collapse' ? 0 : topPx,\n      heightPx,\n    }\n  }\n\n  // expands region for clipping to use. possible improvement: use average read\n  // size to set the heuristic maxClippingSize expansion (e.g. short reads\n  // don't have to expand a softclipping size a lot, but long reads might)\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    const { config, showSoftClip } = renderArgs\n\n    const maxClippingSize = readConfObject(config, 'maxClippingSize')\n    const { start, end } = region\n    const len = end - start\n    const bpExpansion = Math.max(\n      len,\n      showSoftClip ? Math.round(maxClippingSize) : 0,\n    )\n\n    return {\n      ...region,\n      start: Math.floor(Math.max(start - bpExpansion, 0)),\n      end: Math.ceil(end + bpExpansion),\n    }\n  }\n\n  colorByOrientation(feature: Feature, config: AnyConfigurationModel) {\n    return alignmentColoring[\n      this.getOrientation(feature, config) || 'color_nostrand'\n    ]\n  }\n\n  getOrientation(feature: Feature, config: AnyConfigurationModel) {\n    const orientationType = readConfObject(config, 'orientationType') as\n      | 'fr'\n      | 'ff'\n      | 'rf'\n    const type = orientationTypes[orientationType]\n    const orientation = type[feature.get('pair_orientation') as string]\n    const map: { [key: string]: string } = {\n      LR: 'color_pair_lr',\n      RR: 'color_pair_rr',\n      RL: 'color_pair_rl',\n      LL: 'color_pair_ll',\n    }\n    return map[orientation]\n  }\n\n  colorByInsertSize(feature: Feature, _config: AnyConfigurationModel) {\n    return feature.get('is_paired') &&\n      feature.get('seq_id') !== feature.get('next_seq_id')\n      ? '#555'\n      : `hsl(${Math.abs(feature.get('template_length')) / 10},50%,50%)`\n  }\n\n  colorByStranded(feature: Feature, _config: AnyConfigurationModel) {\n    const flags = feature.get('flags')\n    const strand = feature.get('strand')\n    // is paired\n    if (flags & 1) {\n      const revflag = flags & 64\n      const flipper = revflag ? -1 : 1\n      // proper pairing\n      if (flags & 2) {\n        return strand * flipper === 1 ? 'color_rev_strand' : 'color_fwd_strand'\n      }\n      if (feature.get('multi_segment_next_segment_unmapped')) {\n        return strand * flipper === 1\n          ? 'color_rev_missing_mate'\n          : 'color_fwd_missing_mate'\n      }\n      if (feature.get('seq_id') === feature.get('next_seq_id')) {\n        return strand * flipper === 1\n          ? 'color_rev_strand_not_proper'\n          : 'color_fwd_strand_not_proper'\n      }\n      // should only leave aberrant chr\n      return strand === 1 ? 'color_fwd_diff_chr' : 'color_rev_diff_chr'\n    }\n    return strand === 1 ? 'color_fwd_strand' : 'color_rev_strand'\n  }\n\n  colorByPerBaseQuality(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n  ) {\n    const { feature, topPx, heightPx } = feat\n    const qual: string = feature.get('qual') || ''\n    const scores = qual.split(' ').map(val => +val)\n    const cigarOps = parseCigar(feature.get('CIGAR'))\n    const width = 1 / bpPerPx\n    const start = feature.get('start')\n\n    for (let i = 0, j = 0, k = 0; k < scores.length; i += 2, k++) {\n      const len = +cigarOps[i]\n      const op = cigarOps[i + 1]\n      if (op === 'S' || op === 'I') {\n        k += len\n      } else if (op === 'D' || op === 'N') {\n        j += len\n      } else if (op === 'M' || op === 'X' || op === '=') {\n        for (let m = 0; m < len; m++) {\n          const score = scores[k + m]\n          ctx.fillStyle = `hsl(${score === 255 ? 150 : score * 1.5},55%,50%)`\n          const [leftPx] = bpSpanPx(\n            start + j + m,\n            start + j + m + 1,\n            region,\n            bpPerPx,\n          )\n          ctx.fillRect(leftPx, topPx, width + 0.5, heightPx)\n        }\n        j += len\n      }\n    }\n  }\n\n  // ML stores probabilities as array of numerics and MP is scaled phred scores\n  // https://github.com/samtools/hts-specs/pull/418/files#diff-e765c6479316309f56b636f88189cdde8c40b854c7bdcce9ee7fe87a4e76febcR596\n  //\n  // if we have ML or Ml, it is an 8bit probability, divide by 255\n  //\n  // if we have MP or Mp it is phred scaled ASCII, which can go up to 90 but\n  // has very high likelihood basecalls at that point, we really only care\n  // about low qual calls <20 approx\n  //\n  colorByModifications(\n    ctx: CanvasRenderingContext2D,\n    layoutFeature: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { feature, topPx, heightPx } = layoutFeature\n    const { modificationTagMap = {} } = props\n\n    const mm = (getTagAlt(feature, 'MM', 'Mm') as string) || ''\n\n    const ml = (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n\n    const probabilities = ml\n      ? (typeof ml === 'string' ? ml.split(',').map(e => +e) : ml).map(\n          e => e / 255,\n        )\n      : (getTagAlt(feature, 'MP', 'Mp') as string)\n          .split('')\n          .map(s => s.charCodeAt(0) - 33)\n          .map(elt => Math.min(1, elt / 50))\n\n    const cigar = feature.get('CIGAR')\n    const start = feature.get('start')\n    const end = feature.get('end')\n    const seq = feature.get('seq')\n    const strand = feature.get('strand')\n    const cigarOps = parseCigar(cigar)\n\n    const modifications = getModificationPositions(mm, seq, strand)\n\n    // probIndex applies across multiple modifications e.g.\n    let probIndex = 0\n    modifications.forEach(({ type, positions }) => {\n      const col = modificationTagMap[type] || 'black'\n      const base = Color(col)\n      for (const readPos of getNextRefPos(cigarOps, positions)) {\n        if (readPos >= 0 && start + readPos < end) {\n          const [leftPx, rightPx] = bpSpanPx(\n            start + readPos,\n            start + readPos + 1,\n            region,\n            bpPerPx,\n          )\n\n          // give it a little boost of 0.1 to not make them fully\n          // invisible to avoid confusion\n          ctx.fillStyle = base\n            .alpha(probabilities[probIndex] + 0.1)\n            .hsl()\n            .string()\n          ctx.fillRect(leftPx, topPx, rightPx - leftPx + 0.5, heightPx)\n        }\n        probIndex++\n      }\n    })\n  }\n\n  // Color by methylation is slightly modified version of color by\n  // modifications\n  //\n  colorByMethylation(\n    ctx: CanvasRenderingContext2D,\n    layoutFeature: LayoutFeature,\n    _config: AnyConfigurationModel,\n    region: Region,\n    bpPerPx: number,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { regionSequence } = props\n    const { feature, topPx, heightPx } = layoutFeature\n\n    const mm: string = getTagAlt(feature, 'MM', 'Mm') || ''\n\n    if (!regionSequence) {\n      throw new Error('region sequence required for methylation')\n    }\n\n    const cigar = feature.get('CIGAR')\n    const fstart = feature.get('start')\n    const fend = feature.get('end')\n    const seq = feature.get('seq')\n    const strand = feature.get('strand')\n    const cigarOps = parseCigar(cigar)\n    const { start: rstart, end: rend } = region\n\n    const methBins = new Array(rend - rstart).fill(0)\n    getModificationPositions(mm, seq, strand).forEach(({ type, positions }) => {\n      if (type === 'm' && positions) {\n        for (const pos of getNextRefPos(cigarOps, positions)) {\n          const epos = pos + fstart - rstart\n          if (epos >= 0 && epos < methBins.length) {\n            methBins[epos] = 1\n          }\n        }\n      }\n    })\n\n    for (let j = fstart; j < fend; j++) {\n      const i = j - rstart\n      if (i >= 0 && i < methBins.length) {\n        const l1 = regionSequence[i].toLowerCase()\n        const l2 = regionSequence[i + 1].toLowerCase()\n        // color\n        if (l1 === 'c' && l2 === 'g') {\n          const s = rstart + i\n          const [leftPx, rightPx] = bpSpanPx(s, s + 1, region, bpPerPx)\n          if (methBins[i]) {\n            ctx.fillStyle = 'red'\n          } else {\n            ctx.fillStyle = 'blue'\n          }\n          ctx.fillRect(leftPx, topPx, rightPx - leftPx + 0.5, heightPx)\n\n          const [leftPx2, rightPx2] = bpSpanPx(s + 1, s + 2, region, bpPerPx)\n          if (methBins[i + 1]) {\n            ctx.fillStyle = 'red'\n          } else {\n            ctx.fillStyle = 'blue'\n          }\n          ctx.fillRect(leftPx2, topPx, rightPx2 - leftPx2 + 0.5, heightPx)\n        }\n      }\n    }\n  }\n\n  drawRect(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserialized,\n  ) {\n    const { regions, bpPerPx } = props\n    const { heightPx, topPx, feature } = feat\n    const [region] = regions\n    const [leftPx, rightPx] = bpSpanPx(\n      feature.get('start'),\n      feature.get('end'),\n      region,\n      bpPerPx,\n    )\n    const flip = region.reversed ? -1 : 1\n    const strand = feature.get('strand') * flip\n    if (bpPerPx < 10) {\n      if (strand === -1) {\n        ctx.beginPath()\n        ctx.moveTo(leftPx - 5, topPx + heightPx / 2)\n        ctx.lineTo(leftPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx)\n        ctx.lineTo(leftPx, topPx)\n        ctx.closePath()\n        ctx.fill()\n      } else {\n        ctx.beginPath()\n        ctx.moveTo(leftPx, topPx)\n        ctx.lineTo(leftPx, topPx + heightPx)\n        ctx.lineTo(rightPx, topPx + heightPx)\n        ctx.lineTo(rightPx + 5, topPx + heightPx / 2)\n        ctx.lineTo(rightPx, topPx)\n        ctx.closePath()\n        ctx.fill()\n      }\n    } else {\n      ctx.fillRect(leftPx, topPx, rightPx - leftPx, heightPx)\n    }\n  }\n\n  drawAlignmentRect(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { config, bpPerPx, regions, colorBy, colorTagMap = {} } = props\n    const { tag = '', type: colorType = '' } = colorBy || {}\n    const { feature } = feat\n    const region = regions[0]\n\n    // first pass for simple color changes that change the color of the\n    // alignment\n    switch (colorType) {\n      case 'insertSize':\n        ctx.fillStyle = this.colorByInsertSize(feature, config)\n        break\n      case 'strand':\n        ctx.fillStyle = feature.get('strand') === -1 ? '#8F8FD8' : '#EC8B8B'\n        break\n      case 'mappingQuality':\n        ctx.fillStyle = `hsl(${feature.get('mq')},50%,50%)`\n        break\n\n      case 'pairOrientation':\n        ctx.fillStyle = this.colorByOrientation(feature, config)\n        break\n      case 'stranded':\n        ctx.fillStyle = alignmentColoring[this.colorByStranded(feature, config)]\n        break\n      case 'xs':\n      case 'tag': {\n        const tags = feature.get('tags')\n        const val = tags ? tags[tag] : feature.get(tag)\n\n        // special for for XS/TS tag\n        if (tag === 'XS' || tag === 'TS') {\n          const map: { [key: string]: string | undefined } = {\n            '-': 'color_rev_strand',\n            '+': 'color_fwd_strand',\n          }\n          ctx.fillStyle = alignmentColoring[map[val] || 'color_nostrand']\n        }\n\n        // lower case 'ts' from minimap2 is flipped from xs\n        if (tag === 'ts') {\n          const map: { [key: string]: string } = {\n            '-':\n              feature.get('strand') === -1\n                ? 'color_fwd_strand'\n                : 'color_rev_strand',\n            '+':\n              feature.get('strand') === -1\n                ? 'color_rev_strand'\n                : 'color_fwd_strand',\n          }\n          ctx.fillStyle = alignmentColoring[map[val] || 'color_nostrand']\n        }\n\n        // tag is not one of the autofilled tags, has color-value pairs from\n        // fetchValues\n        else {\n          const foundValue = colorTagMap[val]\n          ctx.fillStyle = foundValue || 'color_nostrand'\n        }\n        break\n      }\n      case 'insertSizeAndPairOrientation':\n        break\n\n      case 'normal':\n      default:\n        ctx.fillStyle = readConfObject(config, 'color', { feature })\n        break\n    }\n\n    this.drawRect(ctx, feat, props)\n\n    // second pass for color types that render per-base things that go over the\n    // existing drawing\n    switch (colorType) {\n      case 'perBaseQuality':\n        this.colorByPerBaseQuality(ctx, feat, config, region, bpPerPx)\n        break\n\n      case 'modifications':\n        this.colorByModifications(ctx, feat, config, region, bpPerPx, props)\n        break\n\n      case 'methylation':\n        this.colorByMethylation(ctx, feat, config, region, bpPerPx, props)\n        break\n    }\n  }\n\n  drawMismatches(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n    theme: Theme,\n    colorForBase: { [key: string]: string },\n    opts: {\n      mismatchAlpha?: boolean\n      drawSNPs?: boolean\n      drawIndels?: boolean\n    },\n  ) {\n    const { mismatchAlpha, drawSNPs = true, drawIndels = true } = opts\n    const { config, bpPerPx, regions } = props\n    const { heightPx, topPx, feature } = feat\n    const { charWidth, charHeight } = this.getCharWidthHeight(ctx)\n    const [region] = regions\n    const start = feature.get('start')\n    const minFeatWidth = readConfObject(config, 'minSubfeatureWidth')\n    const insertionScale = readConfObject(\n      config,\n      'largeInsertionIndicatorScale',\n    )\n    const pxPerBp = Math.min(1 / bpPerPx, 2)\n    const w = Math.max(minFeatWidth, pxPerBp)\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const heightLim = charHeight - 2\n\n    function getAlphaColor(baseColor: string, mismatch: { qual?: number }) {\n      let color = baseColor\n      if (mismatchAlpha && mismatch.qual !== undefined) {\n        color = Color(baseColor)\n          .alpha(Math.min(1, mismatch.qual / 50))\n          .hsl()\n          .string()\n      }\n      return color\n    }\n\n    // two pass rendering: first pass, draw all the mismatches except wide\n    // insertion markers\n    for (let i = 0; i < mismatches.length; i += 1) {\n      const mismatch = mismatches[i]\n      const [mismatchLeftPx, mismatchRightPx] = bpSpanPx(\n        start + mismatch.start,\n        start + mismatch.start + mismatch.length,\n        region,\n        bpPerPx,\n      )\n      const mismatchWidthPx = Math.max(\n        minFeatWidth,\n        Math.abs(mismatchLeftPx - mismatchRightPx),\n      )\n      if (mismatch.type === 'mismatch' && drawSNPs) {\n        const baseColor = colorForBase[mismatch.base] || '#888'\n\n        ctx.fillStyle = getAlphaColor(baseColor, mismatch)\n\n        ctx.fillRect(mismatchLeftPx, topPx, mismatchWidthPx, heightPx)\n\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          // normal SNP coloring\n          ctx.fillStyle = getAlphaColor(\n            theme.palette.getContrastText(baseColor),\n            mismatch,\n          )\n          ctx.fillText(\n            mismatch.base,\n            mismatchLeftPx + (mismatchWidthPx - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'deletion' && drawIndels) {\n        const baseColor = colorForBase.deletion\n        ctx.fillStyle = baseColor\n        ctx.fillRect(mismatchLeftPx, topPx, mismatchWidthPx, heightPx)\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          ctx.fillStyle = theme.palette.getContrastText(baseColor)\n          ctx.fillText(\n            mismatch.base,\n            mismatchLeftPx + (mismatchWidthPx - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'insertion' && drawIndels) {\n        ctx.fillStyle = 'purple'\n        const pos = mismatchLeftPx - 1\n        const len = +mismatch.base || mismatch.length\n        if (len < 10) {\n          ctx.fillRect(pos, topPx, w, heightPx)\n          if (1 / bpPerPx >= charWidth) {\n            ctx.fillRect(pos - w, topPx, w * 3, 1)\n            ctx.fillRect(pos - w, topPx + heightPx - 1, w * 3, 1)\n          }\n          if (1 / bpPerPx >= charWidth && heightPx >= heightLim) {\n            ctx.fillText(\n              `(${mismatch.base})`,\n              mismatchLeftPx + 2,\n              topPx + heightPx,\n            )\n          }\n        }\n      } else if (mismatch.type === 'hardclip' || mismatch.type === 'softclip') {\n        ctx.fillStyle = mismatch.type === 'hardclip' ? 'red' : 'blue'\n        const pos = mismatchLeftPx - 1\n        ctx.fillRect(pos, topPx + 1, w, heightPx - 2)\n        ctx.fillRect(pos - w, topPx, w * 3, 1)\n        ctx.fillRect(pos - w, topPx + heightPx - 1, w * 3, 1)\n        if (mismatchWidthPx >= charWidth && heightPx >= heightLim) {\n          ctx.fillText(\n            `(${mismatch.base})`,\n            mismatchLeftPx + 2,\n            topPx + heightPx,\n          )\n        }\n      } else if (mismatch.type === 'skip') {\n        // fix to avoid bad rendering\n        // note that this was also related to chrome bug https://bugs.chromium.org/p/chro>\n        // ref #1236\n        if (mismatchLeftPx + mismatchWidthPx > 0) {\n          ctx.clearRect(\n            mismatchLeftPx,\n            topPx,\n            // make small exons more visible when zoomed far out\n            mismatchWidthPx - (bpPerPx > 10 ? 1.5 : 0),\n            heightPx,\n          )\n        }\n        ctx.fillStyle = '#333'\n        ctx.fillRect(mismatchLeftPx, topPx + heightPx / 2, mismatchWidthPx, 2)\n      }\n    }\n\n    // second pass, draw wide insertion markers on top\n    if (drawIndels) {\n      for (let i = 0; i < mismatches.length; i += 1) {\n        const mismatch = mismatches[i]\n        const [mismatchLeftPx] = bpSpanPx(\n          feature.get('start') + mismatch.start,\n          feature.get('start') + mismatch.start + mismatch.length,\n          region,\n          bpPerPx,\n        )\n        const len = +mismatch.base || mismatch.length\n        const txt = `${len}`\n        if (mismatch.type === 'insertion' && len >= 10) {\n          if (bpPerPx > insertionScale) {\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(mismatchLeftPx - 1, topPx, 2, heightPx)\n          } else if (heightPx > charHeight) {\n            const rect = ctx.measureText(txt)\n            const padding = 5\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(\n              mismatchLeftPx - rect.width / 2 - padding,\n              topPx,\n              rect.width + 2 * padding,\n              heightPx,\n            )\n            ctx.fillStyle = 'white'\n            ctx.fillText(txt, mismatchLeftPx - rect.width / 2, topPx + heightPx)\n          } else {\n            const padding = 2\n            ctx.fillStyle = 'purple'\n            ctx.fillRect(mismatchLeftPx - padding, topPx, 2 * padding, heightPx)\n          }\n        }\n      }\n    }\n  }\n\n  drawSoftClipping(\n    ctx: CanvasRenderingContext2D,\n    feat: LayoutFeature,\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n    config: AnyConfigurationModel,\n    theme: Theme,\n  ) {\n    const { feature, topPx, heightPx } = feat\n    const { regions, bpPerPx } = props\n    const [region] = regions\n    const minFeatWidth = readConfObject(config, 'minSubfeatureWidth')\n    const mismatches: Mismatch[] = feature.get('mismatches')\n    const seq = feature.get('seq')\n    const { charWidth, charHeight } = this.getCharWidthHeight(ctx)\n    const colorForBase: { [key: string]: string } = {\n      A: theme.palette.bases.A.main,\n      C: theme.palette.bases.C.main,\n      G: theme.palette.bases.G.main,\n      T: theme.palette.bases.T.main,\n      deletion: '#808080', // gray\n    }\n\n    // Display all bases softclipped off in lightened colors\n    if (seq) {\n      mismatches\n        .filter(mismatch => mismatch.type === 'softclip')\n        .forEach(mismatch => {\n          const softClipLength = mismatch.cliplen || 0\n          const softClipStart =\n            mismatch.start === 0\n              ? feature.get('start') - softClipLength\n              : feature.get('start') + mismatch.start\n\n          for (let k = 0; k < softClipLength; k += 1) {\n            const base = seq.charAt(k + mismatch.start)\n\n            // If softclip length+start is longer than sequence, no need to\n            // continue showing base\n            if (!base) {\n              return\n            }\n\n            const [softClipLeftPx, softClipRightPx] = bpSpanPx(\n              softClipStart + k,\n              softClipStart + k + 1,\n              region,\n              bpPerPx,\n            )\n            const softClipWidthPx = Math.max(\n              minFeatWidth,\n              Math.abs(softClipLeftPx - softClipRightPx),\n            )\n\n            // Black accounts for IUPAC ambiguity code bases such as N that\n            // show in soft clipping\n            const baseColor = colorForBase[base] || '#000000'\n            ctx.fillStyle = baseColor\n            ctx.fillRect(softClipLeftPx, topPx, softClipWidthPx, heightPx)\n\n            if (softClipWidthPx >= charWidth && heightPx >= charHeight - 5) {\n              ctx.fillStyle = theme.palette.getContrastText(baseColor)\n              ctx.fillText(\n                base,\n                softClipLeftPx + (softClipWidthPx - charWidth) / 2 + 1,\n                topPx + heightPx,\n              )\n            }\n          }\n        })\n    }\n  }\n\n  async makeImageData(\n    ctx: CanvasRenderingContext2D,\n    layoutRecords: any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    props: RenderArgsDeserializedWithFeaturesAndLayout,\n  ) {\n    const { layout, config, showSoftClip, colorBy, theme: configTheme } = props\n    const mismatchAlpha = readConfObject(config, 'mismatchAlpha')\n    const theme = createJBrowseTheme(configTheme)\n    const colorForBase = getColorBaseMap(theme)\n    if (!layout) {\n      throw new Error(`layout required`)\n    }\n    if (!layout.addRect) {\n      throw new Error('invalid layout object')\n    }\n    ctx.font = 'bold 10px Courier New,monospace'\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    layoutRecords.forEach((feat: any) => {\n      if (feat === null) {\n        return\n      }\n\n      const { feature, topPx, heightPx } = feat\n\n      ctx.fillStyle = readConfObject(config, 'color', { feature })\n      this.drawAlignmentRect(ctx, { feature, topPx, heightPx }, props)\n      this.drawMismatches(ctx, feat, props, theme, colorForBase, {\n        mismatchAlpha,\n\n        drawSNPs: shouldDrawMismatches(colorBy?.type),\n        drawIndels: shouldDrawMismatches(colorBy?.type),\n      })\n      if (showSoftClip) {\n        this.drawSoftClipping(ctx, feat, props, config, theme)\n      }\n    })\n  }\n\n  // we perform a full layout before render as a separate method because the\n  // layout determines the height of the canvas that we use to render\n  layoutFeats(props: RenderArgsDeserializedWithFeaturesAndLayout) {\n    const {\n      layout,\n      features,\n      sortedBy,\n      config,\n      bpPerPx,\n      showSoftClip,\n      regions,\n    } = props\n    const [region] = regions\n    if (!layout) {\n      throw new Error(`layout required`)\n    }\n    if (!layout.addRect) {\n      throw new Error('invalid layout object')\n    }\n\n    const sortedFeatures =\n      sortedBy && sortedBy.type && region.start === sortedBy.pos\n        ? sortFeature(features, sortedBy)\n        : null\n    const featureMap = sortedFeatures || features\n    const layoutRecords = iterMap(\n      featureMap.values(),\n      feature =>\n        this.layoutFeature(\n          feature,\n          layout,\n          config,\n          bpPerPx,\n          region,\n          showSoftClip,\n        ),\n      featureMap.size,\n    )\n    return layoutRecords\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const { bpPerPx, regions } = renderProps\n    const features = await this.getFeatures(renderProps)\n    const layout = this.createLayoutInWorker(renderProps)\n\n    const layoutRecords = this.layoutFeats({ ...renderProps, features, layout })\n\n    // @ts-ignore\n    const { dataAdapter: sequenceAdapter } = renderProps.adapterConfig\n      .sequenceAdapter\n      ? await getAdapter(\n          this.pluginManager,\n          renderProps.sessionId,\n          // @ts-ignore\n          renderProps.adapterConfig.sequenceAdapter,\n        )\n      : {}\n    const [region] = regions\n    const [feat] = sequenceAdapter\n      ? await (sequenceAdapter as BaseFeatureDataAdapter)\n          .getFeatures({\n            start: region.start,\n            end: region.end + 1,\n            refName: region.refName,\n            assemblyName: region.assemblyName,\n          })\n          .pipe(toArray())\n          .toPromise()\n      : []\n    const regionSequence = feat?.get('seq')\n\n    const width = (region.end - region.start) / bpPerPx\n    const height = Math.max(layout.getTotalHeight(), 1)\n\n    const res = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      (ctx: CanvasRenderingContext2D) =>\n        this.makeImageData(ctx, layoutRecords, {\n          ...renderProps,\n          layout,\n          features,\n          regionSequence,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n      maxHeightReached: layout.maxHeightReached,\n    }\n  }\n\n  createSession(args: PileupLayoutSessionProps) {\n    return new PileupLayoutSession(args)\n  }\n}\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { Mismatch } from '../BamAdapter/MismatchParser'\n\ninterface SortObject {\n  pos: number\n  type: string\n  tag?: string\n}\nexport const sortFeature = (\n  features: Map<string, Feature>,\n  sortedBy: SortObject,\n) => {\n  const featureArray = Array.from(features.values())\n  const featuresInCenterLine: Feature[] = []\n  const featuresOutsideCenter: Feature[] = []\n  const { pos, type } = sortedBy\n\n  // only sort on features that intersect center line, append those outside post-sort\n  featureArray.forEach(innerArray => {\n    const feature = innerArray\n    const start = feature.get('start')\n    const end = feature.get('end')\n    if (doesIntersect2(pos - 1, pos, start, end)) {\n      featuresInCenterLine.push(innerArray)\n    } else {\n      featuresOutsideCenter.push(innerArray)\n    }\n  })\n\n  const isCram = featureArray.length ? featureArray[0].get('tags') : false\n  switch (type) {\n    case 'Start location': {\n      featuresInCenterLine.sort((a, b) => a.get('start') - b.get('start'))\n      break\n    }\n\n    case 'tag': {\n      const tag = sortedBy.tag as string\n      const getTag = (f: Feature, t: string) => {\n        return isCram ? f.get('tags')[t] : f.get(t)\n      }\n      const isString =\n        featuresInCenterLine[0] &&\n        typeof getTag(featuresInCenterLine[0], tag) === 'string'\n      if (isString) {\n        featuresInCenterLine.sort((a, b) =>\n          getTag(b, tag).localeCompare(getTag(a, tag)),\n        )\n      } else {\n        featuresInCenterLine.sort(\n          (a, b) => (getTag(b, tag) || 0) - (getTag(a, tag) || 0),\n        )\n      }\n      break\n    }\n\n    // first sort all mismatches, then all reference bases at the end\n    case 'Base pair': {\n      const baseSortArray: [string, Mismatch][] = []\n      featuresInCenterLine.forEach(feature => {\n        const mismatches: Mismatch[] = feature.get('mismatches')\n        mismatches.forEach(mismatch => {\n          const start = feature.get('start')\n          const offset = start + mismatch.start + 1\n          const consuming =\n            mismatch.type === 'insertion' || mismatch.type === 'softclip'\n          const len = consuming ? 0 : mismatch.length\n          if (pos >= offset && pos < offset + len) {\n            baseSortArray.push([feature.id(), mismatch])\n          }\n        })\n      })\n\n      const baseMap = new Map(baseSortArray)\n      featuresInCenterLine.sort((a, b) => {\n        const aMismatch = baseMap.get(a.id())\n        const bMismatch = baseMap.get(b.id())\n        const acode = bMismatch && bMismatch.base.toUpperCase()\n        const bcode = aMismatch && aMismatch.base.toUpperCase()\n        if (acode === bcode && acode === '*') {\n          // @ts-ignore\n          return aMismatch.length - bMismatch.length\n        }\n        return (\n          (acode ? acode.charCodeAt(0) : 0) - (bcode ? bcode.charCodeAt(0) : 0)\n        )\n      })\n\n      break\n    }\n\n    // sorts positive strands then negative strands\n    case 'Read strand': {\n      featuresInCenterLine.sort((a, b) =>\n        a.get('strand') <= b.get('strand') ? 1 : -1,\n      )\n      break\n    }\n  }\n\n  const sortedMap = new Map(\n    featuresInCenterLine\n      .concat(featuresOutsideCenter)\n      .map(feature => [feature.id(), feature]),\n  )\n\n  return sortedMap\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { types } from 'mobx-state-tree'\n\nexport default (pluginManager: PluginManager) =>\n  types.late(() =>\n    ConfigurationSchema(\n      'SNPCoverageAdapter',\n      {\n        subadapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      },\n      { explicitlyTyped: true },\n    ),\n  )\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaFactory from './configSchema'\nimport { capabilities } from './SNPCoverageAdapter'\n\nexport default (pluginManager: PluginManager) => {\n  return {\n    getAdapterClass: () => import('./SNPCoverageAdapter').then(r => r.default),\n    configSchema: configSchemaFactory(pluginManager),\n    adapterCapabilities: capabilities,\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    indicatorThreshold: {\n      type: 'number',\n      description:\n        'the proportion of reads containing a insertion/clip indicator',\n      defaultValue: 0.3,\n    },\n    drawInterbaseCounts: {\n      type: 'boolean',\n      description:\n        'draw count \"upsidedown histogram\" of the interbase events that don\\'t contribute to the coverage count so are not drawn in the normal histogram',\n      defaultValue: true,\n    },\n    drawIndicators: {\n      type: 'boolean',\n      description:\n        'draw a triangular indicator where an event has been detected',\n      defaultValue: true,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { RenderArgsDeserialized as FeatureRenderArgsDeserialized } from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport {\n  getOrigin,\n  getScale,\n  ScaleOpts,\n  WiggleBaseRenderer,\n  YSCALEBAR_LABEL_OFFSET,\n} from '@jbrowse/plugin-wiggle'\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  ticks: { values: number[] }\n  displayCrossHatches: boolean\n  modificationTagMap: Record<string, string>\n}\n\nexport default class SNPCoverageRenderer extends WiggleBaseRenderer {\n  // note: the snps are drawn on linear scale even if the data is drawn in log\n  // scape hence the two different scales being used\n  draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      regions,\n      bpPerPx,\n      scaleOpts,\n      height: unadjustedHeight,\n      theme: configTheme,\n      config: cfg,\n      displayCrossHatches,\n      ticks: { values },\n      modificationTagMap,\n    } = props\n    const theme = createJBrowseTheme(configTheme)\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const offset = YSCALEBAR_LABEL_OFFSET\n    const height = unadjustedHeight - offset * 2\n\n    const opts = { ...scaleOpts, range: [0, height] }\n    const viewScale = getScale(opts)\n    const snpViewScale = getScale({ ...opts, scaleType: 'linear' })\n    const originY = getOrigin(scaleOpts.scaleType)\n    const snpOriginY = getOrigin('linear')\n\n    const indicatorThreshold = readConfObject(cfg, 'indicatorThreshold')\n    const drawInterbaseCounts = readConfObject(cfg, 'drawInterbaseCounts')\n    const drawIndicators = readConfObject(cfg, 'drawIndicators')\n\n    // get the y coordinate that we are plotting at, this can be log scale\n    const toY = (n: number) => height - viewScale(n) + offset\n    const toHeight = (n: number) => toY(originY) - toY(n)\n\n    // this is always linear scale, even when plotted on top of log scale\n    const snpToY = (n: number) => height - snpViewScale(n) + offset\n    const snpToHeight = (n: number) => snpToY(snpOriginY) - snpToY(n)\n\n    const colorForBase: { [key: string]: string } = {\n      A: theme.palette.bases.A.main,\n      C: theme.palette.bases.C.main,\n      G: theme.palette.bases.G.main,\n      T: theme.palette.bases.T.main,\n      total: 'lightgrey',\n      insertion: 'purple',\n      softclip: 'blue',\n      hardclip: 'red',\n      meth: 'red',\n      unmeth: 'blue',\n      ref: 'lightgrey',\n    }\n\n    // Use two pass rendering, which helps in visualizing the SNPs at higher\n    // bpPerPx First pass: draw the gray background\n    ctx.fillStyle = colorForBase.total\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + 0.3\n      const score = feature.get('score') as number\n      ctx.fillRect(leftPx, toY(score), w, toHeight(score))\n    }\n    ctx.fillStyle = 'grey'\n    ctx.beginPath()\n    ctx.lineTo(0, 0)\n    ctx.moveTo(0, width)\n    ctx.stroke()\n\n    // Second pass: draw the SNP data, and add a minimum feature width of 1px\n    // which can be wider than the actual bpPerPx This reduces overdrawing of\n    // the grey background over the SNPs\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      type Counts = {\n        [key: string]: { total: number; strands: { [key: string]: number } }\n      }\n      const snpinfo = feature.get('snpinfo') as {\n        cov: Counts\n        noncov: Counts\n        total: number\n      }\n      const w = Math.max(rightPx - leftPx + 0.3, 1)\n      const totalScore = snpinfo.total\n\n      Object.entries(snpinfo.cov)\n        .sort(([a], [b]) => {\n          if (a < b) {\n            return -1\n          }\n          if (a > b) {\n            return 1\n          }\n          return 0\n        })\n        .reduce((curr, [base, { total }]) => {\n          ctx.fillStyle =\n            colorForBase[base] ||\n            modificationTagMap[base.replace('mod_', '')] ||\n            'red'\n          ctx.fillRect(leftPx, snpToY(total + curr), w, snpToHeight(total))\n          return curr + total\n        }, 0)\n\n      const interbaseEvents = Object.entries(snpinfo.noncov)\n      const indicatorHeight = 4.5\n      if (drawInterbaseCounts) {\n        interbaseEvents.reduce((curr, [base, { total }]) => {\n          ctx.fillStyle = colorForBase[base]\n          ctx.fillRect(\n            leftPx - 0.6,\n            indicatorHeight + snpToHeight(curr),\n            1.2,\n            snpToHeight(total),\n          )\n          return curr + total\n        }, 0)\n      }\n\n      if (drawIndicators) {\n        let accum = 0\n        let max = 0\n        let maxBase = ''\n        interbaseEvents.forEach(([base, { total }]) => {\n          accum += total\n          if (total > max) {\n            max = total\n            maxBase = base\n          }\n        })\n\n        // avoid drawing a bunch of indicators if coverage is very low e.g.\n        // less than 7\n        if (accum > totalScore * indicatorThreshold && totalScore > 7) {\n          ctx.fillStyle = colorForBase[maxBase]\n          ctx.beginPath()\n          ctx.moveTo(leftPx - 3, 0)\n          ctx.lineTo(leftPx + 3, 0)\n          ctx.lineTo(leftPx, indicatorHeight)\n          ctx.fill()\n        }\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(140,140,140,0.8)'\n      values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport ConfigSchema from './configSchema'\n\nexport { WiggleRendering as ReactComponent } from '@jbrowse/plugin-wiggle'\nexport { default } from './SNPCoverageRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {},\n  { baseConfiguration: ConfigSchema, explicitlyTyped: true },\n)\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { toArray } from 'rxjs/operators'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { getTagAlt } from '../util'\nimport { getModificationTypes } from '../BamAdapter/MismatchParser'\n\nexport class PileupGetGlobalValueForTag extends RpcMethodType {\n  name = 'PileupGetGlobalValueForTag'\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, args)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId, regions, tag } = deserializedArgs\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(regions)\n    const featuresArray = await features.pipe(toArray()).toPromise()\n    const uniqueValues = new Set<string>()\n    featuresArray.forEach(feature => {\n      const tags = feature.get('tags')\n      const val = tags ? tags[tag] : feature.get(tag)\n      if (val !== undefined) {\n        uniqueValues.add(`${val}`)\n      }\n    })\n    return [...uniqueValues]\n  }\n}\n\nexport class PileupGetVisibleModifications extends RpcMethodType {\n  name = 'PileupGetVisibleModifications'\n\n  async serializeArguments(\n    args: RenderArgs & { signal?: AbortSignal; statusCallback?: Function },\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    return renameRegionsIfNeeded(assemblyManager, args)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriverClassName: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId, regions } = deserializedArgs\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(regions)\n    const featuresArray = await features.pipe(toArray()).toPromise()\n    const uniqueValues = new Set<string>()\n    featuresArray.forEach(feature => {\n      const val = (getTagAlt(feature, 'MM', 'Mm') as string) || ''\n      if (val !== undefined) {\n        getModificationTypes(val).forEach(t => uniqueValues.add(t))\n      }\n    })\n    return [...uniqueValues]\n  }\n}\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\nimport {\n  configSchema as alignmentsFeatureDetailConfigSchema,\n  stateModelFactory as alignmentsFeatureDetailStateModelFactory,\n} from './AlignmentsFeatureDetail'\nimport BamAdapterF from './BamAdapter'\nimport * as MismatchParser from './BamAdapter/MismatchParser'\nimport CramAdapterF from './CramAdapter'\nimport HtsgetBamAdapterF from './HtsgetBamAdapter'\nimport {\n  configSchemaFactory as linearAligmentsDisplayConfigSchemaFactory,\n  modelFactory as linearAlignmentsDisplayModelFactory,\n  ReactComponent as LinearAlignmentsDisplayReactComponent,\n} from './LinearAlignmentsDisplay'\nimport {\n  configSchemaFactory as linearPileupDisplayConfigSchemaFactory,\n  modelFactory as linearPileupDisplayModelFactory,\n} from './LinearPileupDisplay'\nimport {\n  configSchemaFactory as linearSNPCoverageDisplayConfigSchemaFactory,\n  modelFactory as linearSNPCoverageDisplayModelFactory,\n} from './LinearSNPCoverageDisplay'\nimport PileupRenderer, {\n  configSchema as pileupRendererConfigSchema,\n  ReactComponent as PileupRendererReactComponent,\n} from './PileupRenderer'\nimport SNPCoverageAdapterF from './SNPCoverageAdapter'\nimport SNPCoverageRenderer, {\n  configSchema as SNPCoverageRendererConfigSchema,\n  ReactComponent as SNPCoverageRendererReactComponent,\n} from './SNPCoverageRenderer'\nimport {\n  PileupGetGlobalValueForTag,\n  PileupGetVisibleModifications,\n} from './PileupRPC/rpcMethods'\n\nexport { MismatchParser }\n\nexport default class AlignmentsPlugin extends Plugin {\n  name = 'AlignmentsPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'AlignmentsTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      const track = new TrackType({\n        name: 'AlignmentsTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'AlignmentsTrack',\n          configSchema,\n        ),\n      })\n      const linearAlignmentsDisplay = pluginManager.getDisplayType(\n        'LinearAlignmentsDisplay',\n      )\n      // Add LinearAlignmentsDisplay here so that it has priority over the other\n      // linear displays (defaults to order the displays are added, but we have\n      // to add the Pileup and SNPCoverage displays first).\n      track.addDisplayType(linearAlignmentsDisplay)\n      return track\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearPileupDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearPileupDisplay',\n        configSchema,\n        stateModel: linearPileupDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearSNPCoverageDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearSNPCoverageDisplay',\n        configSchema,\n        stateModel: linearSNPCoverageDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearWiggleDisplayReactComponent,\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearAligmentsDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearAlignmentsDisplay',\n        configSchema,\n        stateModel: linearAlignmentsDisplayModelFactory(\n          pluginManager,\n          configSchema,\n        ),\n        trackType: 'AlignmentsTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearAlignmentsDisplayReactComponent,\n      })\n    })\n    pluginManager.addWidgetType(\n      () =>\n        new WidgetType({\n          name: 'AlignmentsFeatureWidget',\n          heading: 'Feature details',\n          configSchema: alignmentsFeatureDetailConfigSchema,\n          stateModel: alignmentsFeatureDetailStateModelFactory(pluginManager),\n          ReactComponent: lazy(\n            () => import('./AlignmentsFeatureDetail/AlignmentsFeatureDetail'),\n          ),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BamAdapter',\n          ...pluginManager.load(BamAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'SNPCoverageAdapter',\n          ...pluginManager.load(SNPCoverageAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'CramAdapter',\n          ...pluginManager.load(CramAdapterF),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'HtsgetBamAdapter',\n          ...pluginManager.load(HtsgetBamAdapterF),\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new PileupRenderer({\n          name: 'PileupRenderer',\n          ReactComponent: PileupRendererReactComponent,\n          configSchema: pileupRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new SNPCoverageRenderer({\n          name: 'SNPCoverageRenderer',\n          ReactComponent: SNPCoverageRendererReactComponent,\n          configSchema: SNPCoverageRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addRpcMethod(\n      () => new PileupGetGlobalValueForTag(pluginManager),\n    )\n    pluginManager.addRpcMethod(\n      () => new PileupGetVisibleModifications(pluginManager),\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SNPCoverageConfigFactory(pluginManager: PluginManager) {\n  const SNPCoverageRendererConfigSchema = pluginManager.getRendererType(\n    'SNPCoverageRenderer',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'LinearSNPCoverageDisplay',\n    {\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', ['local']),\n        description:\n          'performs local autoscaling (no other options for SNP Coverage available)',\n      },\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n      maxDisplayedBpPerPx: {\n        type: 'number',\n        description: 'maximum bpPerPx that is displayed in the view',\n        defaultValue: 100,\n      },\n      headroom: {\n        type: 'number',\n        description:\n          'round the upper value of the domain scale to the nearest N',\n        defaultValue: 0,\n      },\n\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        SNPCoverageRenderer: SNPCoverageRendererConfigSchema,\n      }),\n    },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'BigBedAdapter',\n  {\n    bigBedLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bb' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'BedTabixAdapter',\n  {\n    bedGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bed.gz' },\n    },\n\n    index: ConfigurationSchema('TabixIndex', {\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      location: {\n        type: 'fileLocation',\n        defaultValue: { uri: '/path/to/my.bed.gz.tbi' },\n      },\n    }),\n\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n\n    autoSql: {\n      type: 'string',\n      description: 'The autoSql definition for the data fields in the file',\n      defaultValue: '',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { configSchema as bigBedAdapterConfigSchema } from './BigBedAdapter'\nimport { configSchema as bedTabixAdapterConfigSchema } from './BedTabixAdapter'\n\nexport default class BedPlugin extends Plugin {\n  name = 'BedPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BigBedAdapter',\n          configSchema: bigBedAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./BigBedAdapter/BigBedAdapter').then(r => r.default),\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BedTabixAdapter',\n          configSchema: bedTabixAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./BedTabixAdapter/BedTabixAdapter').then(r => r.default),\n        }),\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nconst configSchema = ConfigurationSchema('BreakpointAlignmentsWidget', {})\n\nconst stateModel = types\n  .model('BreakpointAlignmentsWidget', {\n    id: ElementId,\n    type: types.literal('BreakpointAlignmentsWidget'),\n    featureData: types.frozen(),\n  })\n  .actions(self => ({\n    setFeatureData(data) {\n      self.featureData = data\n    },\n    clearFeatureData() {\n      self.featureData = undefined\n    },\n  }))\n\nexport { configSchema, stateModel }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { MenuItem } from '@jbrowse/core/ui'\nimport CompositeMap from '@jbrowse/core/util/compositeMap'\nimport { LinearGenomeViewStateModel } from '@jbrowse/plugin-linear-genome-view'\nimport { types, Instance } from 'mobx-state-tree'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport isObject from 'is-object'\n\n// https://stackoverflow.com/a/49186706/2129219\n// the array-intersection package on npm has a large kb size, and we are just\n// intersecting open track ids so simple is better\nfunction intersect<T>(a1: T[] = [], a2: T[] = [], ...rest: T[]): T[] {\n  const a12 = a1.filter(value => a2.includes(value))\n  if (rest.length === 0) {\n    return a12\n  }\n  // @ts-ignore\n  return intersect(a12, ...rest)\n}\n\nexport const VIEW_DIVIDER_HEIGHT = 3\n\nexport interface Breakend {\n  MateDirection: string\n  Join: string\n  Replacement: string\n  MatePosition: string\n}\n\nexport type LayoutRecord = [number, number, number, number]\n\nexport default function stateModelFactory(pluginManager: any) {\n  const { jbrequire } = pluginManager\n  const {\n    types: jbrequiredTypes,\n    getParent,\n    onAction,\n    addDisposer,\n    getPath,\n  } = jbrequire('mobx-state-tree')\n  const { BaseViewModel } = jbrequire(\n    '@jbrowse/core/pluggableElementTypes/models',\n  )\n\n  const minHeight = 40\n  const defaultHeight = 400\n  const model = (jbrequiredTypes as Instance<typeof types>)\n    .model('BreakpointSplitView', {\n      type: types.literal('BreakpointSplitView'),\n      headerHeight: 0,\n      height: types.optional(\n        types.refinement(\n          'viewHeight',\n          types.number,\n          (n: number) => n >= minHeight,\n        ),\n        defaultHeight,\n      ),\n      trackSelectorType: 'hierarchical',\n      showIntraviewLinks: true,\n      linkViews: false,\n      interactToggled: false,\n      views: types.array(\n        pluginManager.getViewType('LinearGenomeView')\n          .stateModel as LinearGenomeViewStateModel,\n      ),\n    })\n    .volatile(() => ({\n      width: 800,\n    }))\n    .views(self => ({\n      // Find all track ids that match across multiple views\n      get matchedTracks(): string[] {\n        return intersect(\n          // @ts-ignore expects at least two params but this is fine\n          ...self.views.map(view =>\n            view.tracks.map(t => t.configuration.trackId),\n          ),\n        )\n      },\n\n      get menuItems(): MenuItem[] {\n        const menuItems: MenuItem[] = []\n        self.views.forEach((view, idx) => {\n          if (view.menuItems) {\n            menuItems.push({\n              label: `View ${idx + 1} Menu`,\n              subMenu: view.menuItems,\n            })\n          }\n        })\n        return menuItems\n      },\n\n      get viewDividerHeight() {\n        return VIEW_DIVIDER_HEIGHT\n      },\n\n      // Get tracks with a given trackId across multiple views\n      getMatchedTracks(trackConfigId: string) {\n        return self.views\n          .map(view => view.getTrack(trackConfigId))\n          .filter(f => !!f)\n      },\n\n      // Paired reads are handled slightly differently than split reads\n      hasPairedReads(trackConfigId: string) {\n        return this.getTrackFeatures(trackConfigId).find(\n          f => f.get('flags') & 64,\n        )\n      },\n\n      // Translocation features are handled differently\n      // since they do not have a mate e.g. they are one sided\n      hasTranslocations(trackConfigId: string) {\n        return this.getTrackFeatures(trackConfigId).find(\n          f => f.get('type') === 'translocation',\n        )\n      },\n\n      // Get a composite map of featureId->feature map for a track\n      // across multiple views\n      getTrackFeatures(trackConfigId: string) {\n        const tracks = this.getMatchedTracks(trackConfigId)\n        return new CompositeMap<string, Feature>(\n          (tracks || []).map(t => t.displays[0].features),\n        )\n      },\n\n      // Getting \"matched\" TRA means just return all TRA\n      getMatchedTranslocationFeatures(trackId: string) {\n        const features = this.getTrackFeatures(trackId)\n        const feats: Feature[][] = []\n        const alreadySeen = new Set<string>()\n\n        for (const f of features.values()) {\n          if (!alreadySeen.has(f.id())) {\n            if (f.get('ALT')[0] === '<TRA>') {\n              feats.push([f])\n            }\n          }\n          alreadySeen.add(f.id())\n        }\n\n        return feats\n      },\n\n      // Returns paired BND features across multiple views by inspecting\n      // the ALT field to get exact coordinate matches\n      getMatchedBreakendFeatures(trackId: string) {\n        const features = this.getTrackFeatures(trackId)\n        const candidates: Record<string, Feature[]> = {}\n        const alreadySeen = new Set<string>()\n\n        for (const f of features.values()) {\n          if (!alreadySeen.has(f.id())) {\n            if (f.get('type') === 'breakend') {\n              f.get('ALT').forEach((a: Breakend | string) => {\n                const cur = `${f.get('refName')}:${f.get('start') + 1}`\n                if (isObject(a)) {\n                  const alt = a as Breakend\n                  if (!candidates[cur]) {\n                    candidates[alt.MatePosition] = [f]\n                  } else {\n                    candidates[cur].push(f)\n                  }\n                }\n              })\n            }\n          }\n          alreadySeen.add(f.id())\n        }\n\n        return Object.values(candidates).filter(v => v.length > 1)\n      },\n\n      // this finds candidate alignment features, aimed at plotting split reads\n      // from BAM/CRAM files\n      getMatchedAlignmentFeatures(trackId: string) {\n        const features = this.getTrackFeatures(trackId)\n        const candidates: Record<string, Feature[]> = {}\n        const alreadySeen = new Set<string>()\n\n        // this finds candidate features that share the same name\n        for (const feature of features.values()) {\n          const id = feature.id()\n          const unmapped = feature.get('flags') & 4\n          if (!alreadySeen.has(id) && !unmapped) {\n            const n = feature.get('name')\n            if (!candidates[n]) {\n              candidates[n] = []\n            }\n            candidates[n].push(feature)\n          }\n          alreadySeen.add(feature.id())\n        }\n\n        return Object.values(candidates).filter(v => v.length > 1)\n      },\n\n      // this finds candidate alignment features, aimed at plotting split reads\n      // from BAM/CRAM files\n      getBadlyPairedAlignments(trackId: string) {\n        const features = this.getTrackFeatures(trackId)\n        const candidates: Record<string, Feature[]> = {}\n        const alreadySeen = new Set<string>()\n\n        // this finds candidate features that share the same name\n        for (const feature of features.values()) {\n          const flags = feature.get('flags')\n          const id = feature.id()\n          const unmapped = flags & 4\n          const correctlyPaired = flags & 2\n\n          if (!alreadySeen.has(id) && !correctlyPaired && !unmapped) {\n            const n = feature.get('name')\n            if (!candidates[n]) {\n              candidates[n] = []\n            }\n            candidates[n].push(feature)\n          }\n          alreadySeen.add(feature.id())\n        }\n\n        return Object.values(candidates).filter(v => v.length > 1)\n      },\n\n      getMatchedFeaturesInLayout(trackConfigId: string, features: Feature[][]) {\n        // use reverse to search the second track first\n        const tracks = this.getMatchedTracks(trackConfigId)\n\n        const calc = (track: any, feat: Feature) => {\n          return track.displays[0].getFeatureByID(feat.id())\n        }\n\n        return features.map(c =>\n          c.map(feature => {\n            const level = tracks.findIndex(track => calc(track, feature))\n            const layout = calc(tracks[level], feature)\n            return {\n              feature,\n              layout,\n              level,\n            }\n          }),\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          onAction(\n            self,\n            ({\n              name,\n              path,\n              args,\n            }: {\n              name: string\n              path: string\n              args: any[]\n            }) => {\n              if (self.linkViews) {\n                const actions = [\n                  'horizontalScroll',\n                  'zoomTo',\n                  'setScaleFactor',\n                  'showTrack',\n                  'toggleTrack',\n                  'hideTrack',\n                  'setTrackLabels',\n                  'toggleCenterLine',\n                ]\n                if (actions.includes(name) && path) {\n                  this.onSubviewAction(name, path, args)\n                }\n              }\n            },\n          ),\n        )\n      },\n\n      onSubviewAction(actionName: string, path: string, args: any[]) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (ret.lastIndexOf(path) !== ret.length - path.length) {\n            // @ts-ignore\n            view[actionName](args[0])\n          }\n        })\n      },\n\n      setWidth(newWidth: number) {\n        self.width = newWidth\n        self.views.forEach(v => v.setWidth(newWidth))\n      },\n\n      removeView(view: Instance<LinearGenomeViewStateModel>) {\n        self.views.remove(view)\n      },\n\n      closeView() {\n        getParent(self, 2).removeView(self)\n      },\n\n      setHeaderHeight(height: number) {\n        self.headerHeight = height\n      },\n\n      toggleInteract() {\n        self.interactToggled = !self.interactToggled\n      },\n      toggleIntraviewLinks() {\n        self.showIntraviewLinks = !self.showIntraviewLinks\n      },\n      toggleLinkViews() {\n        self.linkViews = !self.linkViews\n      },\n    }))\n\n  const stateModel = (jbrequiredTypes as typeof types).compose(\n    BaseViewModel,\n    model,\n  )\n\n  return { stateModel }\n}\n\nexport type BreakpointView = ReturnType<typeof stateModelFactory>\nexport type BreakpointViewStateModel = BreakpointView['stateModel']\nexport type BreakpointViewModel = Instance<BreakpointViewStateModel>\n","import { useState, useEffect } from 'react'\nimport { Instance } from 'mobx-state-tree'\nimport { LinearGenomeViewStateModel } from '@jbrowse/plugin-linear-genome-view'\nimport { clamp } from '@jbrowse/core/util'\nimport { LayoutRecord } from './model'\n\nconst [, TOP, , BOTTOM] = [0, 1, 2, 3]\n\nfunction cheight(chunk: LayoutRecord) {\n  return chunk[BOTTOM] - chunk[TOP]\n}\nfunction heightFromSpecificLevel(\n  views: Instance<LinearGenomeViewStateModel>[],\n  trackConfigId: string,\n  level: number,\n) {\n  const track = views[level].trackRefs[trackConfigId]\n  return track?.getBoundingClientRect().top || 0\n}\n\nexport function getPxFromCoordinate(\n  view: Instance<LinearGenomeViewStateModel>,\n  refName: string,\n  coord: number,\n) {\n  return ((view.bpToPx({ refName, coord }) || {}).offsetPx || 0) - view.offsetPx\n}\n\n// get's the yposition of a layout record in a track\nexport function yPos(\n  trackConfigId: string,\n  level: number,\n  views: Instance<LinearGenomeViewStateModel>[],\n  tracks: {\n    displays: [\n      {\n        height: number\n        scrollTop: number\n        SNPCoverageDisplay?: { height: number }\n        showCoverage?: boolean\n      },\n    ]\n  }[], // basic track requirements\n  c: LayoutRecord,\n) {\n  const display = tracks[level].displays[0]\n  const min = 0\n  const max = display.height\n  let offset = 0\n  const { showCoverage, SNPCoverageDisplay } = display\n  if (SNPCoverageDisplay && showCoverage) {\n    offset = SNPCoverageDisplay.height + 5\n  }\n  return (\n    clamp(c[TOP] - display.scrollTop + cheight(c) / 2 + offset, min, max) +\n    heightFromSpecificLevel(views, trackConfigId, level) +\n    display.scrollTop\n  )\n}\n\n// we combo a useEffect and useState combo to force rerender on snap\n// changing. the setup of this being a useEffect+useState makes it\n// re-render once the useEffect is called, which is generally the\n// \"next frame\". If we removed the below use\nexport const useNextFrame = (variable: unknown) => {\n  const [, setNextFrameState] = useState()\n  useEffect(() => {\n    setNextFrameState(variable)\n  }, [variable])\n}\n","import React, { useState } from 'react'\nimport Path from 'svg-path-generator'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { yPos, useNextFrame, getPxFromCoordinate } from '../util'\nimport { BreakpointViewModel } from '../model'\n\nconst [LEFT, , RIGHT] = [0, 1, 2, 3]\n\nconst AlignmentConnections = observer(\n  ({\n    model,\n    trackConfigId,\n    parentRef,\n  }: {\n    model: BreakpointViewModel\n    trackConfigId: string\n    parentRef: React.RefObject<SVGSVGElement>\n  }) => {\n    const { views, showIntraviewLinks } = model\n    const { assemblyManager } = getSession(model)\n\n    const session = getSession(model)\n    const snap = getSnapshot(model)\n    useNextFrame(snap)\n    const assembly = assemblyManager.get(views[0].assemblyNames[0])\n    if (!assembly) {\n      return null\n    }\n\n    const totalFeatures = model.getTrackFeatures(trackConfigId)\n    const features = model.hasPairedReads(trackConfigId)\n      ? model.getBadlyPairedAlignments(trackConfigId)\n      : model.getMatchedAlignmentFeatures(trackConfigId)\n    const layoutMatches = model.getMatchedFeaturesInLayout(\n      trackConfigId,\n      features,\n    )\n    layoutMatches.forEach(m => {\n      m.sort((a, b) => a.feature.get('clipPos') - b.feature.get('clipPos'))\n    })\n    const [mouseoverElt, setMouseoverElt] = useState<string>()\n\n    let yOffset = 0\n    if (parentRef.current) {\n      const rect = parentRef.current.getBoundingClientRect()\n      yOffset = rect.top\n    }\n    return (\n      <g\n        stroke=\"#333\"\n        fill=\"none\"\n        data-testid={\n          layoutMatches.length ? `${trackConfigId}-loaded` : trackConfigId\n        }\n      >\n        {layoutMatches.map(chunk => {\n          const ret = []\n          // we follow a path in the list of chunks, not from top to bottom, just in series\n          // following x1,y1 -> x2,y2\n          for (let i = 0; i < chunk.length - 1; i += 1) {\n            const { layout: c1, feature: f1, level: level1 } = chunk[i]\n            const { layout: c2, feature: f2, level: level2 } = chunk[i + 1]\n\n            if (!c1 || !c2) {\n              console.warn('received null layout for a overlay feature')\n              return null\n            }\n\n            // disable rendering connections in a single level\n            if (!showIntraviewLinks && level1 === level2) {\n              return null\n            }\n            const f1origref = f1.get('refName')\n            const f2origref = f2.get('refName')\n            const f1ref = assembly.getCanonicalRefName(f1origref)\n            const f2ref = assembly.getCanonicalRefName(f2origref)\n\n            if (!f1ref || !f2ref) {\n              throw new Error(`unable to find ref for ${f1ref || f2ref}`)\n            }\n            const x1 = getPxFromCoordinate(\n              views[level1],\n              f1ref,\n              c1[f1.get('strand') === -1 ? LEFT : RIGHT],\n            )\n            const x2 = getPxFromCoordinate(\n              views[level2],\n              f2ref,\n              c2[f2.get('strand') === -1 ? RIGHT : LEFT],\n            )\n            const reversed1 = views[level1].pxToBp(x1).reversed\n            const reversed2 = views[level2].pxToBp(x2).reversed\n\n            const tracks = views.map(v => v.getTrack(trackConfigId))\n\n            const y1 = yPos(trackConfigId, level1, views, tracks, c1) - yOffset\n            const y2 = yPos(trackConfigId, level2, views, tracks, c2) - yOffset\n\n            // possible todo: use totalCurveHeight to possibly make alternative\n            // squiggle if the S is too small\n            const path = Path()\n              .moveTo(x1, y1)\n              .curveTo(\n                x1 + 200 * f1.get('strand') * (reversed1 ? -1 : 1),\n                y1,\n                x2 - 200 * f2.get('strand') * (reversed2 ? -1 : 1),\n                y2,\n                x2,\n                y2,\n              )\n              .end()\n            const id = `${f1.id()}-${f2.id()}`\n            ret.push(\n              <path\n                d={path}\n                key={id}\n                data-testid=\"r1\"\n                strokeWidth={mouseoverElt === id ? 5 : 1}\n                onClick={() => {\n                  const featureWidget = session.addWidget?.(\n                    'BreakpointAlignmentsWidget',\n                    'breakpointAlignments',\n                    {\n                      featureData: {\n                        feature1: (\n                          totalFeatures.get(f1.id()) || { toJSON: () => {} }\n                        ).toJSON(),\n                        feature2: (\n                          totalFeatures.get(f2.id()) || { toJSON: () => {} }\n                        ).toJSON(),\n                      },\n                    },\n                  )\n                  session.showWidget?.(featureWidget)\n                }}\n                onMouseOver={() => setMouseoverElt(id)}\n                onMouseOut={() => setMouseoverElt(undefined)}\n              />,\n            )\n          }\n          return ret\n        })}\n      </g>\n    )\n  },\n)\n\nexport default AlignmentConnections\n","import React, { useState } from 'react'\nimport Path from 'svg-path-generator'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { yPos, getPxFromCoordinate, useNextFrame } from '../util'\nimport { BreakpointViewModel, Breakend } from '../model'\n\nconst [LEFT] = [0, 1, 2, 3]\n\nfunction findMatchingAlt(feat1: Feature, feat2: Feature) {\n  const candidates: Record<string, Breakend> = {}\n  feat1.get('ALT').forEach((alt: Breakend) => {\n    candidates[alt.MatePosition] = alt\n  })\n  return candidates[`${feat2.get('refName')}:${feat2.get('start') + 1}`]\n}\n\nconst Breakends = observer(\n  ({\n    model,\n    trackConfigId,\n    parentRef: ref,\n  }: {\n    model: BreakpointViewModel\n    trackConfigId: string\n    parentRef: React.RefObject<SVGSVGElement>\n  }) => {\n    const { views } = model\n    const session = getSession(model)\n    const { assemblyManager } = session\n\n    const totalFeatures = model.getTrackFeatures(trackConfigId)\n    const features = model.getMatchedBreakendFeatures(trackConfigId)\n    const layoutMatches = model.getMatchedFeaturesInLayout(\n      trackConfigId,\n      features,\n    )\n    const [mouseoverElt, setMouseoverElt] = useState<string>()\n    const snap = getSnapshot(model)\n    useNextFrame(snap)\n    const assembly = assemblyManager.get(views[0].assemblyNames[0])\n\n    if (!assembly) {\n      return null\n    }\n\n    let yoff = 0\n    if (ref.current) {\n      const rect = ref.current.getBoundingClientRect()\n      yoff = rect.top\n    }\n\n    return (\n      <g\n        stroke=\"green\"\n        strokeWidth={5}\n        fill=\"none\"\n        data-testid={\n          layoutMatches.length ? `${trackConfigId}-loaded` : trackConfigId\n        }\n      >\n        {layoutMatches.map(chunk => {\n          const ret = []\n          // we follow a path in the list of chunks, not from top to bottom,\n          // just in series following x1,y1 -> x2,y2\n          for (let i = 0; i < chunk.length - 1; i += 1) {\n            const { layout: c1, feature: f1, level: level1 } = chunk[i]\n            const { layout: c2, feature: f2, level: level2 } = chunk[i + 1]\n            const id = f1.id()\n\n            const relevantAlt = findMatchingAlt(f1, f2)\n            if (!c1 || !c2) {\n              return null\n            }\n            const f1origref = f1.get('refName')\n            const f2origref = f2.get('refName')\n            const f1ref = assembly.getCanonicalRefName(f1origref)\n            const f2ref = assembly.getCanonicalRefName(f2origref)\n            if (!f1ref || !f2ref) {\n              throw new Error(`unable to find ref for ${f1ref || f2ref}`)\n            }\n            const x1 = getPxFromCoordinate(views[level1], f1ref, c1[LEFT])\n            const x2 = getPxFromCoordinate(views[level2], f2ref, c2[LEFT])\n            const reversed1 = views[level1].pxToBp(x1).reversed\n            const reversed2 = views[level2].pxToBp(x2).reversed\n\n            const tracks = views.map(v => v.getTrack(trackConfigId))\n            const y1 = yPos(trackConfigId, level1, views, tracks, c1) - yoff\n            const y2 = yPos(trackConfigId, level2, views, tracks, c2) - yoff\n            if (!relevantAlt) {\n              console.warn(\n                'the relevant ALT allele was not found, cannot render',\n              )\n            } else {\n              const path = Path()\n                .moveTo(\n                  x1 -\n                    20 *\n                      (relevantAlt.Join === 'left' ? -1 : 1) *\n                      (reversed1 ? -1 : 1),\n                  y1,\n                )\n                .lineTo(x1, y1)\n                .lineTo(x2, y2)\n                .lineTo(\n                  x2 -\n                    20 *\n                      (relevantAlt.MateDirection === 'left' ? 1 : -1) *\n                      (reversed2 ? -1 : 1),\n                  y2,\n                )\n                .end()\n              ret.push(\n                <path\n                  d={path}\n                  key={JSON.stringify(path)}\n                  strokeWidth={id === mouseoverElt ? 10 : 5}\n                  onClick={() => {\n                    const featureWidget = session.addWidget?.(\n                      'VariantFeatureWidget',\n                      'variantFeature',\n                      {\n                        featureData: totalFeatures.get(id),\n                      },\n                    )\n                    session.showWidget?.(featureWidget)\n                  }}\n                  onMouseOver={() => setMouseoverElt(id)}\n                  onMouseOut={() => setMouseoverElt(undefined)}\n                />,\n              )\n            }\n          }\n          return ret\n        })}\n      </g>\n    )\n  },\n)\n\nexport default Breakends\n","import React from 'react'\nimport { withSize } from 'react-sizeme'\nimport { observer } from 'mobx-react'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// icons\nimport LocationSearching from '@material-ui/icons/LocationSearching'\nimport LocationDisabled from '@material-ui/icons/LocationDisabled'\nimport LeakAdd from '@material-ui/icons/LeakAdd'\nimport LeakRemove from '@material-ui/icons/LeakRemove'\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\n\nimport { BreakpointViewModel } from '../model'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst useStyles = makeStyles((theme: any) => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  iconButton: {},\n  spacer: {\n    flexGrow: 1,\n  },\n  emphasis: {\n    background: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n  },\n  hovered: {\n    background: theme.palette.secondary.light,\n  },\n  displayName: {\n    background: theme.palette.secondary.main,\n    paddingTop: 3,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\n\nconst InteractWithSquiggles = observer(\n  ({ model }: { model: BreakpointViewModel }) => {\n    const classes = useStyles()\n    return (\n      <IconButton\n        onClick={() => model.toggleInteract()}\n        className={classes.iconButton}\n        title=\"Toggle interacting with the overlay\"\n      >\n        {model.interactToggled ? <LocationSearching /> : <LocationDisabled />}\n      </IconButton>\n    )\n  },\n)\n\nconst LinkViews = observer(({ model }: { model: BreakpointViewModel }) => {\n  const classes = useStyles()\n  return (\n    <IconButton\n      onClick={() => model.toggleLinkViews()}\n      className={classes.iconButton}\n      title=\"Toggle linked scrolls and behavior across views\"\n    >\n      {model.linkViews ? (\n        <LinkIcon color=\"secondary\" />\n      ) : (\n        <LinkOffIcon color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst Sync = observer(({ model }: { model: BreakpointViewModel }) => {\n  const classes = useStyles()\n  return (\n    <IconButton\n      onClick={model.toggleIntraviewLinks}\n      className={classes.iconButton}\n      title=\"Toggle rendering intraview links\"\n    >\n      {model.showIntraviewLinks ? (\n        <LeakAdd color=\"secondary\" />\n      ) : (\n        <LeakRemove color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({\n    model,\n    size,\n  }: {\n    model: BreakpointViewModel\n    size: { height: number }\n  }) => {\n    const classes = useStyles()\n\n    model.setHeaderHeight(size.height)\n    return (\n      <div className={classes.headerBar}>\n        <LinkViews model={model} />\n        <InteractWithSquiggles model={model} />\n        <Sync model={model} />\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default withSize({ monitorHeight: true })(Header)\n","import Path from 'svg-path-generator'\nimport { getSession } from '@jbrowse/core/util'\n\nimport { observer } from 'mobx-react'\nimport React, { useState } from 'react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { yPos, getPxFromCoordinate, useNextFrame } from '../util'\nimport { BreakpointViewModel, LayoutRecord } from '../model'\n\nconst [LEFT] = [0, 1, 2, 3]\n\nconst Translocations = observer(\n  ({\n    model,\n    trackConfigId,\n    parentRef: ref,\n  }: {\n    model: BreakpointViewModel\n    trackConfigId: string\n    parentRef: React.RefObject<SVGSVGElement>\n  }) => {\n    const { views } = model\n    const session = getSession(model)\n    const features = model.getMatchedTranslocationFeatures(trackConfigId)\n    const totalFeatures = model.getTrackFeatures(trackConfigId)\n    const layoutMatches = model.getMatchedFeaturesInLayout(\n      trackConfigId,\n      features,\n    )\n    const [mouseoverElt, setMouseoverElt] = useState<string>()\n    const snap = getSnapshot(model)\n    useNextFrame(snap)\n    const { assemblyManager } = session\n    const assembly = assemblyManager.get(views[0].assemblyNames[0])\n    if (!assembly) {\n      return null\n    }\n\n    let yOffset = 0\n    if (ref.current) {\n      const rect = ref.current.getBoundingClientRect()\n      yOffset = rect.top\n    }\n\n    // we hardcode the TRA to go to the \"other view\" and if there is none, we\n    // just return null here note: would need to do processing of the INFO\n    // CHR2/END and see which view could contain those coordinates to really\n    // do it properly\n    if (views.length < 2) {\n      return null\n    }\n    return (\n      <g\n        fill=\"none\"\n        stroke=\"green\"\n        strokeWidth={5}\n        data-testid={\n          layoutMatches.length ? `${trackConfigId}-loaded` : trackConfigId\n        }\n      >\n        {layoutMatches.map(chunk => {\n          // we follow a path in the list of chunks, not from top to bottom,\n          // just in series following x1,y1 -> x2,y2\n          const ret = []\n          for (let i = 0; i < chunk.length; i += 1) {\n            const { layout: c1, feature: f1, level: level1 } = chunk[i]\n            const level2 = level1 === 0 ? 1 : 0\n            const id = f1.id()\n            if (!c1) {\n              return null\n            }\n\n            const info = f1.get('INFO')\n            const chr2 = info.CHR2[0]\n            const end2 = info.END[0]\n            const [myDirection, mateDirection] = info.STRANDS[0].split('')\n\n            const r = getPxFromCoordinate(views[level2], chr2, end2)\n            if (r) {\n              const c2: LayoutRecord = [r, 0, r + 1, 0]\n\n              const x1 = getPxFromCoordinate(\n                views[level1],\n                f1.get('refName'),\n                c1[LEFT],\n              )\n              const x2 = r\n              const reversed1 = views[level1].pxToBp(x1).reversed\n              const reversed2 = views[level2].pxToBp(x2).reversed\n\n              const tracks = views.map(v => v.getTrack(trackConfigId))\n              const y1 =\n                yPos(trackConfigId, level1, views, tracks, c1) - yOffset\n              const y2 =\n                yPos(trackConfigId, level2, views, tracks, c2) - yOffset\n\n              const path = Path()\n                .moveTo(\n                  x1 -\n                    20 * (myDirection === '+' ? 1 : -1) * (reversed1 ? -1 : 1),\n                  y1,\n                )\n                .lineTo(x1, y1)\n                .lineTo(x2, y2)\n                .lineTo(\n                  x2 -\n                    20 *\n                      (mateDirection === '+' ? 1 : -1) *\n                      (reversed2 ? -1 : 1),\n                  y2,\n                )\n                .end()\n              ret.push(\n                <path\n                  d={path}\n                  key={JSON.stringify(path)}\n                  strokeWidth={id === mouseoverElt ? 10 : 5}\n                  onClick={() => {\n                    const featureWidget = session.addWidget?.(\n                      'VariantFeatureWidget',\n                      'variantFeature',\n                      {\n                        featureData: (\n                          totalFeatures.get(id) || { toJSON: () => {} }\n                        ).toJSON(),\n                      },\n                    )\n                    session.showWidget?.(featureWidget)\n                  }}\n                  onMouseOver={() => setMouseoverElt(id)}\n                  onMouseOut={() => setMouseoverElt(undefined)}\n                />,\n              )\n            }\n          }\n          return ret\n        })}\n      </g>\n    )\n  },\n)\n\nexport default Translocations\n","import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { BreakpointViewModel, VIEW_DIVIDER_HEIGHT } from '../model'\nimport AlignmentConnections from './AlignmentConnections'\nimport Breakends from './Breakends'\nimport Header from './Header'\nimport Translocations from './Translocations'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n    },\n    breakpointMarker: {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '3px',\n      background: 'magenta',\n    },\n    viewDivider: {\n      background: theme.palette.secondary.main,\n      height: VIEW_DIVIDER_HEIGHT,\n    },\n    container: {\n      display: 'grid',\n    },\n    overlay: {\n      display: 'flex',\n      width: '100%',\n      gridArea: '1/1',\n      '& path': {\n        cursor: 'crosshair',\n        fill: 'none',\n      },\n    },\n    content: {\n      gridArea: '1/1',\n    },\n  }\n})\n\nconst Overlay = observer(\n  (props: {\n    parentRef: React.RefObject<SVGSVGElement>\n    model: BreakpointViewModel\n    trackConfigId: string\n  }) => {\n    const { model, trackConfigId } = props\n    const tracks = model.getMatchedTracks(trackConfigId)\n    if (\n      tracks[0].type === 'PileupTrack' ||\n      tracks[0].type === 'AlignmentsTrack'\n    ) {\n      return <AlignmentConnections {...props} />\n    }\n    if (tracks[0].type === 'VariantTrack') {\n      return model.hasTranslocations(trackConfigId) ? (\n        <Translocations {...props} />\n      ) : (\n        <Breakends {...props} />\n      )\n    }\n    return null\n  },\n)\n\nconst BreakpointSplitView = observer(\n  ({ model }: { model: BreakpointViewModel }) => {\n    const classes = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    const ref = useRef(null)\n\n    return (\n      <div>\n        <Header model={model} />\n        <div className={classes.container}>\n          <div className={classes.content}>\n            <div style={{ position: 'relative' }}>\n              {views.map((view, idx) => {\n                const { ReactComponent } = pluginManager.getViewType(view.type)\n                const viewComponent = (\n                  <ReactComponent key={view.id} model={view} />\n                )\n                if (idx === views.length - 1) {\n                  return viewComponent\n                }\n                return [\n                  viewComponent,\n                  <div\n                    key={`${view.id}-divider`}\n                    className={classes.viewDivider}\n                  />,\n                ]\n              })}\n            </div>\n          </div>\n          <div className={classes.overlay}>\n            <svg\n              ref={ref}\n              style={{\n                width: '100%',\n                zIndex: 10,\n                pointerEvents: model.interactToggled ? undefined : 'none',\n              }}\n            >\n              {model.matchedTracks.map(id => {\n                // note: we must pass ref down, because the child component\n                // needs to getBoundingClientRect on the this components SVG,\n                // and we cannot rely on using getBoundingClientRect in this\n                // component to make sure this works because if it gets\n                // shifted around by another element, this will not re-render\n                // necessarily\n                return (\n                  <Overlay\n                    parentRef={ref}\n                    key={id}\n                    model={model}\n                    trackConfigId={id}\n                  />\n                )\n              })}\n            </svg>\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\n\nexport default BreakpointSplitView\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { getSession } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport BreakpointSplitViewComponent from './components/BreakpointSplitView'\nimport BreakpointSplitViewModel from './model'\n\nclass BreakpointSplitViewType extends ViewType {\n  snapshotFromBreakendFeature(feature: Feature, view: LinearGenomeViewModel) {\n    const breakendSpecification = (feature.get('ALT') || [])[0]\n    const startPos = feature.get('start')\n    let endPos\n    const bpPerPx = 10\n\n    // TODO: Figure this out for multiple assembly names\n    const { assemblyName } = view.displayedRegions[0]\n    const { assemblyManager } = getSession(view)\n    const assembly = assemblyManager.get(assemblyName)\n\n    if (!assembly) {\n      throw new Error(`assembly ${assemblyName} not found`)\n    }\n    if (!assembly.regions) {\n      throw new Error(`assembly ${assemblyName} regions not loaded`)\n    }\n    const { getCanonicalRefName } = assembly as Assembly\n    const featureRefName = getCanonicalRefName(feature.get('refName'))\n    const topRegion = assembly.regions.find(\n      f => f.refName === String(featureRefName),\n    )\n\n    let mateRefName: string | undefined\n    let startMod = 0\n    let endMod = 0\n\n    if (breakendSpecification) {\n      // a VCF breakend feature\n      if (breakendSpecification === '<TRA>') {\n        const INFO = feature.get('INFO') || []\n        endPos = INFO.END[0] - 1\n        mateRefName = getCanonicalRefName(INFO.CHR2[0])\n      } else {\n        const matePosition = breakendSpecification.MatePosition.split(':')\n        endPos = parseInt(matePosition[1], 10) - 1\n        mateRefName = getCanonicalRefName(matePosition[0])\n        if (breakendSpecification.Join === 'left') {\n          startMod = -1\n        }\n        if (breakendSpecification.MateDirection === 'left') {\n          endMod = -1\n        }\n      }\n\n      // if (breakendSpecification.Join === 'left') {\n      // marker -1, else 0\n\n      // if (breakendSpecification.MateDirection === 'left') {\n      // marker -1, else 0\n    } else if (feature.get('mate')) {\n      // a generic 'mate' feature\n      const mate = feature.get('mate')\n      mateRefName = getCanonicalRefName(mate.refName)\n      endPos = mate.start\n    }\n\n    if (!mateRefName) {\n      console.warn(\n        `unable to resolve mate refName ${mateRefName} in reference genome`,\n      )\n      return {}\n    }\n\n    const bottomRegion = assembly.regions.find(\n      f => f.refName === String(mateRefName),\n    )\n\n    if (!topRegion || !bottomRegion) {\n      console.warn(\n        `unable to find the refName for the top or bottom of the breakpoint view`,\n      )\n      return {}\n    }\n\n    const topMarkedRegion = [{ ...topRegion }, { ...topRegion }]\n    const bottomMarkedRegion = [{ ...bottomRegion }, { ...bottomRegion }]\n    topMarkedRegion[0].end = startPos + startMod\n    topMarkedRegion[1].start = startPos + startMod\n    bottomMarkedRegion[0].end = endPos + endMod\n    bottomMarkedRegion[1].start = endPos + endMod\n    const snapshot = {\n      type: 'BreakpointSplitView',\n      views: [\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: topMarkedRegion,\n          hideHeader: true,\n          bpPerPx,\n          offsetPx: (topRegion.start + feature.get('start')) / bpPerPx,\n        },\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: bottomMarkedRegion,\n          hideHeader: true,\n          bpPerPx,\n          offsetPx: (bottomRegion.start + endPos) / bpPerPx,\n        },\n      ],\n      displayName: `${\n        feature.get('name') || feature.get('id') || 'breakend'\n      } split detail`,\n    }\n    return snapshot\n  }\n}\n\nexport default (pluginManager: PluginManager) => {\n  const { load } = pluginManager\n\n  const { stateModel } = load(BreakpointSplitViewModel)\n\n  return new BreakpointSplitViewType({\n    name: 'BreakpointSplitView',\n    stateModel,\n    ReactComponent: BreakpointSplitViewComponent,\n  })\n}\n","import { lazy } from 'react'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport {\n  configSchema as alignmentsFeatureDetailConfigSchema,\n  stateModel as alignmentsFeatureDetailStateModel,\n} from './BreakpointAlignmentsFeatureDetail'\nimport BreakpointSplitViewFactory from './BreakpointSplitView'\n\nexport default class BreakpointSplitViewPlugin extends Plugin {\n  name = 'BreakpointSplitViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(() =>\n      pluginManager.jbrequire(BreakpointSplitViewFactory),\n    )\n    pluginManager.addWidgetType(\n      () =>\n        new WidgetType({\n          name: 'BreakpointAlignmentsWidget',\n          heading: 'Breakpoint feature details',\n          configSchema: alignmentsFeatureDetailConfigSchema,\n          stateModel: alignmentsFeatureDetailStateModel,\n          ReactComponent: lazy(\n            () =>\n              import(\n                './BreakpointAlignmentsFeatureDetail/BreakpointAlignmentsFeatureDetail'\n              ),\n          ),\n        }),\n    )\n  }\n\n  configure() {}\n}\n","import { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'UCSCTrackHubConnection',\n  {\n    hubTxtLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'http://mysite.com/path/to/hub.txt' },\n      description: 'location of the hub file (usually called hub.txt)',\n    },\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'optional list of genomes to import from this track hub, if empty all genomes will be imported',\n    },\n  },\n  { baseConfiguration: baseConnectionConfig },\n)\n","// These are the assemblies for which there is a sequence file located at\n// http://hgdownload.soe.ucsc.edu/goldenPath/${assemblyName}/bigZips/${assemblyName}.2bit\n// This list was generated by `getUcscAssemblies.js`\n\nexport default `ailMel1\nallMis1\nanoCar1\nanoCar2\nanoGam1\nanoGam3\napiMel1\napiMel2\naplCal1\naptMan1\naquChr2\nbalAcu1\nbisBis1\nbosTau2\nbosTau3\nbosTau4\nbosTau6\nbosTau7\nbosTau8\nbraFlo1\ncaeJap1\ncaePb1\ncaePb2\ncaeRem2\ncaeRem3\ncalJac1\ncalJac3\ncalMil1\ncanFam1\ncanFam3\ncavPor3\ncb3\nce10\nce11\nce2\nce4\nce6\ncerSim1\nchlSab2\nchoHof1\nchrPic1\nci1\nci2\nci3\ncriGri1\ncriGriChoV1\ndanRer10\ndanRer11\ndanRer3\ndanRer4\ndanRer5\ndanRer6\ndanRer7\ndasNov3\ndipOrd1\ndm1\ndm2\ndm3\ndm6\ndp2\ndp3\ndroAna1\ndroAna2\ndroEre1\ndroGri1\ndroMoj1\ndroMoj2\ndroPer1\ndroSec1\ndroSim1\ndroVir1\ndroVir2\ndroYak1\ndroYak2\neboVir3\nechTel1\nechTel2\nequCab1\nequCab2\neriEur1\neriEur2\nfelCat3\nfelCat4\nfelCat5\nfelCat8\nfr1\nfr2\nfr3\ngadMor1\ngalGal2\ngalGal3\ngalGal4\ngalGal5\ngalGal6\ngalVar1\ngasAcu1\ngeoFor1\ngorGor3\ngorGor4\ngorGor5\nhetGla1\nhetGla2\nhg16\nhg18\nhg19\nhg38\nlatCha1\nloxAfr3\nmacEug2\nmacFas5\nmanPen1\nmelGal1\nmelGal5\nmelUnd1\nmicMur1\nmicMur2\nmm10\nmm7\nmm8\nmm9\nmonDom2\nmonDom4\nmonDom5\nmusFur1\nmyoLuc2\nnanPar1\nnasLar1\nnomLeu1\nnomLeu2\nnomLeu3\nochPri2\nochPri3\noreNil2\nornAna1\nornAna2\noryCun2\noryLat2\notoGar3\noviAri1\noviAri3\noviAri4\npanPan1\npanPan2\npanTro1\npanTro2\npanTro3\npanTro4\npanTro5\npanTro6\npapAnu2\npapHam1\npetMar1\npetMar2\nponAbe2\nponAbe3\npriPac1\nproCap1\npteVam1\nrheMac2\nrheMac3\nrheMac8\nrhiRox1\nrn4\nrn5\nrn6\nsacCer1\nsacCer2\nsacCer3\nsaiBol1\nsarHar1\nsorAra1\nsorAra2\nspeTri2\nstrPur1\nstrPur2\nsusScr11\nsusScr2\nsusScr3\ntaeGut1\ntaeGut2\ntarSyr1\ntarSyr2\ntetNig1\ntetNig2\nthaSir1\ntriMan1\ntupBel1\nturTru2\nventer1\nvicPac1\nvicPac2\nxenLae2\nxenTro1\nxenTro2\nxenTro3\nxenTro7\nxenTro9`.split(/\\r?\\n/)\n","import { objectHash } from '@jbrowse/core/util'\nimport { GenomesFile, HubFile, TrackDbFile } from '@gmod/ucsc-hub'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport {\n  generateUnsupportedTrackConf,\n  generateUnknownTrackConf,\n} from '@jbrowse/core/util/tracks'\nimport ucscAssemblies from './ucscAssemblies'\n\nexport { ucscAssemblies }\n\nexport async function fetchHubFile(hubFileLocation) {\n  try {\n    const hubFileText = await openLocation(hubFileLocation).readFile('utf8')\n    return new HubFile(hubFileText)\n  } catch (error) {\n    throw new Error(`Not a valid hub.txt file, got error: '${error}'`)\n  }\n}\n\nexport async function fetchGenomesFile(genomesFileLocation) {\n  const genomesFileText = await openLocation(genomesFileLocation).readFile(\n    'utf8',\n  )\n  return new GenomesFile(genomesFileText)\n}\n\nexport async function fetchTrackDbFile(trackDbFileLocation) {\n  const trackDbFileText = await openLocation(trackDbFileLocation).readFile(\n    'utf8',\n  )\n  return new TrackDbFile(trackDbFileText)\n}\n\nexport function generateTracks(\n  trackDb,\n  trackDbFileLocation,\n  assemblyName,\n  sequenceAdapter,\n) {\n  const tracks = []\n\n  trackDb.forEach((track, trackName) => {\n    const trackKeys = Array.from(track.keys())\n    const parentTrackKeys = [\n      'superTrack',\n      'compositeTrack',\n      'container',\n      'view',\n    ]\n    if (trackKeys.some(key => parentTrackKeys.includes(key))) {\n      return\n    }\n    const parentTracks = []\n    let currentTrackName = trackName\n    do {\n      currentTrackName = trackDb.get(currentTrackName).get('parent')\n      if (currentTrackName) {\n        ;[currentTrackName] = currentTrackName.split(' ')\n        parentTracks.push(trackDb.get(currentTrackName))\n      }\n    } while (currentTrackName)\n    parentTracks.reverse()\n    const categories = parentTracks.map(parentTrack =>\n      parentTrack.get('shortLabel'),\n    )\n    const res = makeTrackConfig(\n      track,\n      categories,\n      trackDbFileLocation,\n      trackDb,\n      sequenceAdapter,\n    )\n    res.trackId = `ucsc-trackhub-${objectHash(res)}`\n    res.assemblyNames = [assemblyName]\n    tracks.push(res)\n  })\n\n  return tracks\n}\n\nfunction makeTrackConfig(\n  track,\n  categories,\n  trackDbFileLocation,\n  trackDb,\n  sequenceAdapter,\n) {\n  let trackType = track.get('type')\n  if (!trackType) {\n    trackType = trackDb.get(track.get('parent')).get('type')\n  }\n  let baseTrackType = trackType.split(' ')[0]\n  if (\n    baseTrackType === 'bam' &&\n    track.get('bigDataUrl').toLowerCase().endsWith('cram')\n  ) {\n    baseTrackType = 'cram'\n  }\n  let bigDataLocation\n  if (trackDbFileLocation.uri) {\n    bigDataLocation = {\n      uri: new URL(track.get('bigDataUrl'), trackDbFileLocation.uri).href,\n    }\n  } else {\n    bigDataLocation = { localPath: track.get('bigDataUrl') }\n  }\n  let bigDataIndexLocation\n\n  switch (baseTrackType) {\n    case 'bam':\n      if (trackDbFileLocation.uri) {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? {\n              uri: new URL(track.get('bigDataIndex'), trackDbFileLocation.uri)\n                .href,\n            }\n          : {\n              uri: new URL(\n                `${track.get('bigDataUrl')}.bai`,\n                trackDbFileLocation.uri,\n              ).href,\n            }\n      } else {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? { localPath: track.get('bigDataIndex') }\n          : { localPath: `${track.get('bigDataUrl')}.bai` }\n      }\n      return {\n        type: 'AlignmentsTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BamAdapter',\n          bamLocation: bigDataLocation,\n          index: {\n            location: bigDataIndexLocation,\n          },\n        },\n      }\n    case 'bed':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'bed5FloatScore':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'bedGraph':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'bedRnaElements':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'bigBarChart':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigBed':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'bigGenePred':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'bigChain':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigInteract':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigMaf':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigPsl':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigWig':\n      return {\n        type: 'QuantitativeTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigWigAdapter',\n          bigWigLocation: bigDataLocation,\n        },\n      }\n    case 'broadPeak':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'coloredExon':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'cram':\n      if (trackDbFileLocation.uri) {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? {\n              uri: new URL(track.get('bigDataIndex'), trackDbFileLocation.uri)\n                .href,\n            }\n          : {\n              uri: new URL(\n                `${track.get('bigDataUrl')}.crai`,\n                trackDbFileLocation.uri,\n              ).href,\n            }\n      } else {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? { localPath: track.get('bigDataIndex') }\n          : { localPath: `${track.get('bigDataUrl')}.crai` }\n      }\n      return {\n        type: 'AlignmentsTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'CramAdapter',\n          cramLocation: bigDataLocation,\n          craiLocation: bigDataIndexLocation,\n          sequenceAdapter,\n        },\n      }\n    case 'gvf':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'ld2':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'narrowPeak':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'bigNarrowPeak':\n      return {\n        type: 'FeatureTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'peptideMapping':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'vcfTabix':\n      if (trackDbFileLocation.uri) {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? {\n              uri: new URL(track.get('bigDataIndex'), trackDbFileLocation.uri)\n                .href,\n            }\n          : {\n              uri: new URL(\n                `${track.get('bigDataUrl')}.tbi`,\n                trackDbFileLocation.uri,\n              ).href,\n            }\n      } else {\n        bigDataIndexLocation = track.get('bigDataIndex')\n          ? { localPath: track.get('bigDataIndex') }\n          : { localPath: `${track.get('bigDataUrl')}.tbi` }\n      }\n      return {\n        type: 'VariantTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'VcfTabixAdapter',\n          vcfGzLocation: bigDataLocation,\n          index: {\n            location: bigDataIndexLocation,\n          },\n        },\n      }\n    case 'wig':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'wigMaf':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n    case 'hic':\n      return {\n        type: 'HicTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'HicAdapter',\n          hicLocation: bigDataLocation,\n        },\n      }\n    case 'halSnake':\n      return generateUnsupportedTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n\n    default:\n      return generateUnknownTrackConf(\n        track.get('shortLabel'),\n        baseTrackType,\n        categories,\n      )\n  }\n}\n","import { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  ConfigurationReference,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\nimport configSchema from './configSchema'\nimport {\n  fetchGenomesFile,\n  fetchHubFile,\n  fetchTrackDbFile,\n  generateTracks,\n} from './ucscTrackHub'\n\nexport default function UCSCTrackHubConnection(pluginManager) {\n  return types.compose(\n    'UCSCTrackHubConnection',\n    BaseConnectionModelFactory(pluginManager),\n    types\n      .model({\n        configuration: ConfigurationReference(configSchema),\n        type: types.literal('UCSCTrackHubConnection'),\n      })\n      .actions(self => ({\n        connect() {\n          const connectionName = readConfObject(self.configuration, 'name')\n          const hubFileLocation = readConfObject(\n            self.configuration,\n            'hubTxtLocation',\n          )\n          const session = getSession(self)\n          fetchHubFile(hubFileLocation)\n            .then(hubFile => {\n              let genomesFileLocation\n              if (hubFileLocation.uri) {\n                genomesFileLocation = {\n                  uri: new URL(hubFile.get('genomesFile'), hubFileLocation.uri)\n                    .href,\n                }\n              } else {\n                genomesFileLocation = { localPath: hubFile.get('genomesFile') }\n              }\n              return Promise.all([\n                hubFile,\n                fetchGenomesFile(genomesFileLocation),\n              ])\n            })\n            .then(([hubFile, genomesFile]) => {\n              const trackDbData = []\n              for (const [genomeName, genome] of genomesFile) {\n                const assemblyNames = readConfObject(\n                  self.configuration,\n                  'assemblyNames',\n                )\n                if (\n                  assemblyNames.length > 0 &&\n                  !assemblyNames.includes(genomeName)\n                ) {\n                  break\n                }\n                const assemblyConf = session.assemblies.find(\n                  assembly => readConfObject(assembly, 'name') === genomeName,\n                )\n                if (!assemblyConf) {\n                  throw new Error(\n                    `Cannot find assembly for \"${genomeName}\" from the genomes file for connection \"${connectionName}\"`,\n                  )\n                }\n                let trackDbFileLocation\n                if (hubFileLocation.uri) {\n                  trackDbFileLocation = {\n                    uri: new URL(\n                      genome.get('trackDb'),\n                      new URL(hubFile.get('genomesFile'), hubFileLocation.uri),\n                    ).href,\n                  }\n                } else {\n                  trackDbFileLocation = {\n                    localPath: genome.get('trackDb'),\n                  }\n                }\n                trackDbData.push(\n                  Promise.all([\n                    trackDbFileLocation,\n                    fetchTrackDbFile(trackDbFileLocation),\n                    genomeName,\n                    assemblyConf,\n                  ]),\n                )\n              }\n              return Promise.all([...trackDbData])\n            })\n            .then(trackDbData => {\n              for (const [\n                trackDbFileLocation,\n                trackDbFile,\n                genomeName,\n                assemblyConf,\n              ] of trackDbData) {\n                const sequenceAdapter = readConfObject(assemblyConf, [\n                  'sequence',\n                  'adapter',\n                ])\n                const tracks = generateTracks(\n                  trackDbFile,\n                  trackDbFileLocation,\n                  genomeName,\n                  sequenceAdapter,\n                )\n                self.addTrackConfs(tracks)\n              }\n            })\n            .catch(error => {\n              console.error(error)\n              session.notify(\n                `There was a problem connecting to the UCSC Track Hub \"${self.name}\". Please make sure you have entered a valid hub.txt file. The error that was thrown is: \"${error}\"`,\n                'error',\n              )\n              session.breakConnection(self.configuration)\n            })\n        },\n      })),\n  )\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  guessAdapter,\n  guessTrackType,\n  UNSUPPORTED,\n} from '@jbrowse/core/util/tracks'\n\nfunction isAbsoluteUrl(url: string) {\n  try {\n    new URL(url)\n    return true\n  } catch (error) {\n    return url.startsWith('/')\n  }\n}\n\nfunction getFileName(track: FileLocation) {\n  const uri = 'uri' in track ? track.uri : undefined\n  const localPath = 'localPath' in track ? track.localPath : undefined\n  const blob = 'blobId' in track ? track : undefined\n  return (\n    blob?.name ||\n    uri?.slice(uri.lastIndexOf('/') + 1) ||\n    localPath?.slice(localPath.lastIndexOf('/') + 1) ||\n    ''\n  )\n}\n\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('AddTrackModel', {\n      id: ElementId,\n      type: types.literal('AddTrackWidget'),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .volatile(() => ({\n      trackSource: 'fromFile',\n      trackData: undefined as FileLocation | undefined,\n      indexTrackData: undefined as FileLocation | undefined,\n\n      // alts\n      altAssemblyName: '',\n      altTrackName: '',\n      altTrackType: '',\n\n      adapterHint: '',\n    }))\n    .actions(self => ({\n      setAdapterHint(obj: string) {\n        self.adapterHint = obj\n      },\n      setTrackSource(str: string) {\n        self.trackSource = str\n      },\n      setTrackData(obj: FileLocation) {\n        self.trackData = obj\n      },\n      setIndexTrackData(obj: FileLocation) {\n        self.indexTrackData = obj\n      },\n      setAssembly(str: string) {\n        self.altAssemblyName = str\n      },\n      setTrackName(str: string) {\n        self.altTrackName = str\n      },\n      setTrackType(str: string) {\n        self.altTrackType = str\n      },\n\n      clearData() {\n        self.trackSource = ''\n        self.altTrackName = ''\n        self.altTrackType = ''\n        self.altAssemblyName = ''\n        self.adapterHint = ''\n        self.indexTrackData = { uri: '' }\n        self.trackData = { uri: '' }\n      },\n    }))\n    .views(self => ({\n      get trackAdapter() {\n        const { trackData, indexTrackData, adapterHint } = self\n\n        return trackData\n          ? guessAdapter(trackData, indexTrackData, getFileName, adapterHint)\n          : undefined\n      },\n\n      get trackName() {\n        return (\n          self.altTrackName ||\n          (self.trackData ? getFileName(self.trackData) : '')\n        )\n      },\n\n      get isFtp() {\n        const { trackData: track, indexTrackData: index } = self\n        return !!(\n          (index && 'uri' in index && index.uri.startsWith('ftp://')) ||\n          (track && 'uri' in track && track.uri.startsWith('ftp://'))\n        )\n      },\n\n      get isRelativeTrackUrl() {\n        const { trackData } = self\n        return trackData && 'uri' in trackData && !isAbsoluteUrl(trackData.uri)\n      },\n      get isRelativeIndexUrl() {\n        const { indexTrackData: index } = self\n        return index && 'uri' in index && !isAbsoluteUrl(index.uri)\n      },\n      get isRelativeUrl() {\n        return this.isRelativeIndexUrl || this.isRelativeTrackUrl\n      },\n\n      get trackHttp() {\n        const { trackData: track } = self\n        return track && 'uri' in track && track.uri.startsWith('http://')\n      },\n      get indexHttp() {\n        const { indexTrackData: index } = self\n        return index && 'uri' in index && index.uri.startsWith('http://')\n      },\n\n      get wrongProtocol() {\n        return (\n          window.location.protocol === 'https:' &&\n          (this.trackHttp || this.indexHttp)\n        )\n      },\n\n      get unsupported() {\n        return this.trackAdapter?.type === UNSUPPORTED\n      },\n\n      get assembly() {\n        return self.altAssemblyName || self.view.assemblyNames?.[0]\n      },\n\n      get trackType() {\n        return (\n          self.altTrackType ||\n          (this.trackAdapter ? guessTrackType(this.trackAdapter.type) : '')\n        )\n      },\n    }))\n    .views(self => ({\n      get warningMessage() {\n        if (self.isFtp) {\n          return `Warning: JBrowse cannot access files using the ftp protocol`\n        } else if (self.isRelativeUrl) {\n          return `Warning: one or more of your files do not provide the protocol e.g.\n          https://, please provide an absolute URL unless you are sure a\n          relative URL is intended.`\n        } else if (self.wrongProtocol) {\n          return `Warning: You entered a http:// resources but we cannot access HTTP\n          resources from JBrowse when it is running on https. Please use an\n          https URL for your track, or access the JBrowse app from the http\n          protocol`\n        }\n        return ''\n      },\n    }))\n}\n\nexport type AddTrackStateModel = ReturnType<typeof f>\nexport type AddTrackModel = Instance<AddTrackStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema('AddTrackWidget', {})\n","import { types } from 'mobx-state-tree'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default types.model('AddConnectionModel', {\n  id: ElementId,\n  type: types.literal('AddConnectionWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModel } from './model'\nexport const configSchema = ConfigurationSchema('AddConnectionWidget', {})\n","import { types, getParent } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nconst hasAnyOverlap = (a1 = [], a2 = []) =>\n  !!a1.find(value => a2.includes(value))\n\nfunction passesFilter(filter, config) {\n  const name = getTrackName(config)\n  const categories = readConfObject(config, 'category') || []\n  const regexp = new RegExp(filter, 'i')\n  return (\n    !!name.match(regexp) || categories.filter(cat => !!cat.match(regexp)).length\n  )\n}\n\nfunction getTrackName(config) {\n  if (!config.trackId) {\n    throw new Error('not a track')\n  }\n  return (\n    readConfObject(config, 'name') ||\n    `Reference sequence (${readConfObject(getParent(config), 'name')})`\n  )\n}\n\nexport function generateHierarchy(model, trackConfigurations, collapsed) {\n  const hierarchy = { children: [] }\n  const { filterText, view } = model\n\n  trackConfigurations\n    .filter(trackConf => passesFilter(filterText, trackConf))\n    .forEach(trackConf => {\n      // copy the categories since this array can be mutated downstream\n      const categories = [...(readConfObject(trackConf, 'category') || [])]\n\n      // silly thing where if trackId ends with sessionTrack, then push it to\n      // a category that starts with a space to force sort to the top...\n      // double whammy hackyness\n      if (trackConf.trackId.endsWith('sessionTrack')) {\n        categories.unshift(' Session tracks')\n      }\n\n      let currLevel = hierarchy\n\n      // find existing category to put track into or create it\n      for (let i = 0; i < categories.length; i++) {\n        const category = categories[i]\n        const ret = currLevel.children.find(c => c.name === category)\n        const id = categories.slice(0, i + 1).join(',')\n        if (!ret) {\n          const n = {\n            children: [],\n            name: category,\n            id,\n            state: { expanded: !collapsed.get(id) },\n          }\n          currLevel.children.push(n)\n          currLevel = n\n        } else {\n          currLevel = ret\n        }\n      }\n\n      // using splice here tries to group leaf nodes above hierarchical nodes\n      currLevel.children.splice(\n        currLevel.children.findIndex(elt => elt.children.length),\n        0,\n        {\n          id: trackConf.trackId,\n          name: getTrackName(trackConf),\n          conf: trackConf,\n          checked: !!view.tracks.find(f => f.configuration === trackConf),\n          children: [],\n        },\n      )\n    })\n\n  return hierarchy.children\n}\n\nexport default pluginManager =>\n  types\n    .model('HierarchicalTrackSelectorWidget', {\n      id: ElementId,\n      type: types.literal('HierarchicalTrackSelectorWidget'),\n      collapsed: types.map(types.boolean),\n      filterText: '',\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      collapsedCategories: types.map(types.string, types.boolean),\n    })\n    .actions(self => ({\n      setView(view) {\n        self.view = view\n      },\n      toggleCategory(pathName) {\n        self.collapsed.set(pathName, !self.collapsed.get(pathName))\n      },\n      clearFilterText() {\n        self.filterText = ''\n      },\n      setFilterText(newText) {\n        self.filterText = newText\n      },\n    }))\n    .views(self => ({\n      getRefSeqTrackConf(assemblyName) {\n        const { assemblyManager } = getSession(self)\n        const assembly = assemblyManager.get(assemblyName)\n        const trackConf = assembly?.configuration.sequence\n        const viewType = pluginManager.getViewType(self.view.type)\n        if (trackConf) {\n          for (const display of trackConf.displays) {\n            if (\n              viewType.displayTypes.find(\n                displayType => displayType.name === display.type,\n              )\n            ) {\n              return trackConf\n            }\n          }\n        }\n        return undefined\n      },\n      trackConfigurations(assemblyName) {\n        if (!self.view) {\n          return []\n        }\n        const session = getSession(self)\n        const { tracks: trackConfigurations, assemblyManager } = session\n        const assembly = assemblyManager.get(assemblyName)\n        if (!assembly) {\n          return []\n        }\n        const refseq = self.getRefSeqTrackConf(assemblyName)\n        // filter out tracks that don't match the current assembly (check all\n        // assembly aliases) and display types\n        return (refseq ? [refseq] : []).concat([\n          ...trackConfigurations\n            .filter(conf => {\n              const trackConfAssemblies = readConfObject(conf, 'assemblyNames')\n              const { allAliases } = assembly\n              return hasAnyOverlap(allAliases, trackConfAssemblies)\n            })\n            .filter(conf => {\n              const { displayTypes } = pluginManager.getViewType(self.view.type)\n              const compatibleDisplays = displayTypes.map(\n                display => display.name,\n              )\n              const trackDisplays = conf.displays.map(display => display.type)\n              return hasAnyOverlap(compatibleDisplays, trackDisplays)\n            }),\n        ])\n      },\n\n      get assemblyNames() {\n        return self.view ? self.view.assemblyNames : []\n      },\n\n      connectionTrackConfigurations(assemblyName, connection) {\n        if (!self.view) {\n          return []\n        }\n        const trackConfigurations = connection.tracks\n        const session = getSession(self)\n        const { assemblyManager } = session\n        const assembly = assemblyManager.get(assemblyName)\n\n        if (!(assembly && assembly.initialized)) {\n          return []\n        }\n\n        // filter out tracks that don't match the current display types\n        return trackConfigurations\n          .filter(conf => {\n            const trackConfAssemblies = readConfObject(conf, 'assemblyNames')\n            const { allAliases } = assembly\n            return hasAnyOverlap(allAliases, trackConfAssemblies)\n          })\n          .filter(conf => {\n            const { displayTypes } = pluginManager.getViewType(self.view.type)\n            const compatibleDisplays = displayTypes.map(display => display.name)\n            const trackDisplays = conf.displays.map(display => display.type)\n            return hasAnyOverlap(compatibleDisplays, trackDisplays)\n          })\n      },\n\n      hierarchy(assemblyName) {\n        const hier = generateHierarchy(\n          self,\n          self.trackConfigurations(assemblyName),\n          self.collapsed,\n        )\n\n        const session = getSession(self)\n        const conns = session.connectionInstances\n          .filter(conn => {\n            const configAssemblyNames = readConfObject(\n              conn.configuration,\n              'assemblyNames',\n            )\n            if (configAssemblyNames.length === 0) {\n              return true\n            }\n            return configAssemblyNames.includes(assemblyName)\n          })\n          .map((conn, index) => {\n            const c = session.connections[index]\n            return {\n              id: c.connectionId,\n              name: readConfObject(c, 'name'),\n              children: this.connectionHierarchy(assemblyName, conn),\n              state: {\n                expanded: true,\n              },\n            }\n          })\n\n        return {\n          name: 'Root',\n          id: 'Root',\n          children: [\n            { name: 'Tracks', id: 'Tracks', children: hier },\n            ...conns,\n          ],\n        }\n      },\n\n      connectionHierarchy(assemblyName, connection) {\n        return generateHierarchy(\n          self,\n          self.connectionTrackConfigurations(assemblyName, connection),\n          self.collapsed,\n        )\n      },\n\n      // This recursively gets tracks from lower paths\n      allTracksInCategoryPath(path, connection, assemblyName) {\n        let currentHier = connection\n          ? self.connectionHierarchy(connection)\n          : self.hierarchy(assemblyName)\n        path.forEach(pathItem => {\n          currentHier = currentHier.get(pathItem) || new Map()\n        })\n        let tracks = {}\n        currentHier.forEach((contents, name) => {\n          if (contents.trackId) {\n            tracks[contents.trackId] = contents\n          } else {\n            tracks = Object.assign(\n              tracks,\n              self.allTracksInCategoryPath(path.concat([name])),\n            )\n          }\n        })\n        return tracks\n      },\n    }))\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema(\n  'HierarchicalTrackSelectorWidget',\n  {},\n)\n","import { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('PluginStoreModel', {\n      id: ElementId,\n      type: types.literal('PluginStoreWidget'),\n      filterText: '',\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      clearFilterText() {\n        self.filterText = ''\n      },\n      setFilterText(newText: string) {\n        self.filterText = newText\n      },\n    }))\n}\n\nexport type PluginStoreStateModel = ReturnType<typeof f>\nexport type PluginStoreModel = Instance<PluginStoreStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as ReactComponent } from './components/PluginStoreWidget'\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema('PluginStoreWidget', {})\n","import { lazy } from 'react'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { SessionWithWidgets, isAbstractMenuManager } from '@jbrowse/core/util'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd'\nimport InputIcon from '@material-ui/icons/Input'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport {\n  configSchema as ucscConfigSchema,\n  modelFactory as ucscModelFactory,\n} from './ucsc-trackhub'\nimport {\n  stateModelFactory as AddTrackStateModelFactory,\n  configSchema as AddTrackConfigSchema,\n} from './AddTrackWidget'\nimport {\n  stateModel as AddConnectionStateModel,\n  configSchema as AddConnectionConfigSchema,\n} from './AddConnectionWidget'\nimport {\n  stateModelFactory as HierarchicalTrackSelectorStateModelFactory,\n  configSchema as HierarchicalTrackSelectorConfigSchema,\n} from './HierarchicalTrackSelectorWidget'\nimport {\n  stateModelFactory as PluginStoreStateModelFactory,\n  configSchema as PluginStoreConfigSchema,\n} from './PluginStoreWidget'\n\nconst SetDefaultSession = lazy(() => import('./SetDefaultSession'))\n\nconst AssemblyManager = lazy(() => import('./AssemblyManager'))\n\nexport default class extends Plugin {\n  name = 'DataManagementPlugin'\n\n  exports = {\n    AssemblyManager,\n    SetDefaultSession,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addConnectionType(\n      () =>\n        new ConnectionType({\n          name: 'UCSCTrackHubConnection',\n          configSchema: ucscConfigSchema,\n          stateModel: ucscModelFactory(pluginManager),\n          displayName: 'UCSC Track Hub',\n          description: 'A track or assembly hub in the Track Hub format',\n          url: '//genome.ucsc.edu/goldenPath/help/hgTrackHubHelp.html#Intro',\n        }),\n    )\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'HierarchicalTrackSelectorWidget',\n        heading: 'Available tracks',\n        configSchema: HierarchicalTrackSelectorConfigSchema,\n        stateModel: HierarchicalTrackSelectorStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () =>\n            import(\n              './HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector'\n            ),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddTrackWidget',\n        heading: 'Add a track',\n        configSchema: AddTrackConfigSchema,\n        stateModel: AddTrackStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./AddTrackWidget/components/AddTrackWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddConnectionWidget',\n        heading: 'Add a connection',\n        configSchema: AddConnectionConfigSchema,\n        stateModel: AddConnectionStateModel,\n        ReactComponent: lazy(\n          () => import('./AddConnectionWidget/components/AddConnectionWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'PluginStoreWidget',\n        heading: 'Plugin store',\n        configSchema: PluginStoreConfigSchema,\n        stateModel: PluginStoreStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./PluginStoreWidget/components/PluginStoreWidget'),\n        ),\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('File', {\n        label: 'Open track',\n        icon: NoteAddIcon,\n        onClick: (session: SessionWithWidgets) => {\n          if (session.views.length === 0) {\n            session.notify('Please open a view to add a track first')\n          } else if (session.views.length >= 1) {\n            const widget = session.addWidget(\n              'AddTrackWidget',\n              'addTrackWidget',\n              { view: session.views[0].id },\n            )\n            session.showWidget(widget)\n            if (session.views.length > 1) {\n              session.notify(\n                `This will add a track to the first view. Note: if you want to open a track in a specific view open the track selector for that view and use the add track (plus icon) in the bottom right`,\n              )\n            }\n          }\n        },\n      })\n      pluginManager.rootModel.appendToMenu('File', {\n        label: 'Open connection',\n        icon: InputIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget(\n            'AddConnectionWidget',\n            'addConnectionWidget',\n          )\n          session.showWidget(widget)\n        },\n      })\n      pluginManager.rootModel.appendToMenu('File', {\n        label: 'Plugin store',\n        icon: ExtensionIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget(\n            'PluginStoreWidget',\n            'pluginStoreWidget',\n          )\n          session.showWidget(widget)\n        },\n      })\n    }\n  }\n}\n\nexport { AssemblyManager, SetDefaultSession }\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, LinearProgress } from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles({\n  loading: {\n    paddingLeft: '0.6em',\n    backgroundColor: '#f1f1f1',\n    backgroundImage:\n      'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n    height: '100%',\n    width: '100%',\n    textAlign: 'center',\n  },\n  error: {\n    display: 'block',\n    color: 'red',\n    width: '30em',\n    wordWrap: 'normal',\n    whiteSpace: 'normal',\n  },\n  blockMessage: {\n    background: '#f1f1f1',\n    padding: '10px',\n  },\n  blockError: {\n    background: '#f1f1f1',\n    padding: '10px',\n    color: 'red',\n  },\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const classes = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 300)\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return shown ? (\n    <div data-testid=\"loading-synteny\" className={classes.loading}>\n      <Typography>Loading &hellip;</Typography>\n      <LinearProgress />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.blockMessage}>\n      <Typography>{messageText}</Typography>\n    </div>\n  )\n}\nBlockMessage.propTypes = {\n  messageText: PropTypes.string.isRequired,\n}\n\nfunction BlockError({ error }: { error: Error }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.blockError}>\n      <Typography>{error.message}</Typography>\n    </div>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ServerSideRenderedBlockContent = observer(({ model }: { model: any }) => {\n  if (model.error) {\n    return <BlockError error={model.error} data-testid=\"reload_button\" />\n  }\n  if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  }\n  if (!model.filled) {\n    return <LoadingMessage />\n  }\n  return model.reactElement\n})\n\nexport default ServerSideRenderedBlockContent\n","import { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { DotplotDisplayModel } from '..'\n\nconst DotplotDisplay: React.FC<{\n  model: DotplotDisplayModel\n  children?: React.ReactNode\n}> = props => {\n  const { model, children } = props\n  const { offsetX = 0, offsetY = 0 } = model.data || {}\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const view = getContainingView(model) as any\n  const top = view.vview.offsetPx - offsetY\n  const left = -(view.hview.offsetPx - offsetX)\n  return (\n    <div style={{ position: 'relative' }}>\n      <div\n        style={{\n          position: 'absolute',\n          top,\n          left,\n        }}\n      >\n        <model.ReactComponent2 {...props} />\n        {children}\n      </div>\n    </div>\n  )\n}\nDotplotDisplay.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  children: PropTypes.element,\n}\n\nDotplotDisplay.defaultProps = {\n  children: null,\n}\nexport default observer(DotplotDisplay)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  getConf,\n  readConfObject,\n  ConfigurationReference,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport { types, getSnapshot, Instance } from 'mobx-state-tree'\nimport {\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport React from 'react'\n\nimport ServerSideRenderedBlockContent from '../ServerSideRenderedBlockContent'\nimport { DotplotViewModel } from '../DotplotView/model'\n\nexport { default as ReactComponent } from './components/DotplotDisplay'\n\nexport function configSchemaFactory(pluginManager: any) {\n  return ConfigurationSchema(\n    'DotplotDisplay',\n    {\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'DotplotRenderer' },\n      ),\n    },\n    { explicitIdentifier: 'displayId', explicitlyTyped: true },\n  )\n}\n\nexport function stateModelFactory(configSchema: any) {\n  return types\n    .compose(\n      'DotplotDisplay',\n      BaseDisplay,\n      types\n        .model({\n          type: types.literal('DotplotDisplay'),\n          configuration: ConfigurationReference(configSchema),\n        })\n        .volatile(() => ({\n          renderInProgress: undefined as AbortController | undefined,\n          filled: false,\n          data: undefined as any,\n          reactElement: undefined as React.ReactElement | undefined,\n          message: undefined as string | undefined,\n          renderingComponent: undefined as any,\n          ReactComponent2: (ServerSideRenderedBlockContent as unknown) as React.FC,\n        })),\n    )\n    .views(self => ({\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n      get renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: self.configuration.renderer,\n        }\n      },\n    }))\n    .actions(self => {\n      let renderInProgress: undefined | AbortController\n\n      return {\n        afterAttach() {\n          makeAbortableReaction(\n            self as any,\n            () => renderBlockData(self as any),\n            (blockData): any => {\n              return blockData ? renderBlockEffect(blockData) : undefined\n            },\n            {\n              name: `${self.type} ${self.id} rendering`,\n              delay: 1000,\n              fireImmediately: true,\n            },\n            this.setLoading,\n            this.setRendered,\n            this.setError,\n          )\n        },\n\n        setLoading(abortController: AbortController) {\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = abortController\n        },\n        setMessage(messageText: string) {\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          self.filled = false\n          self.message = messageText\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n        setRendered(args: {\n          data: any\n          reactElement: React.ReactElement\n          renderingComponent: React.Component\n        }) {\n          if (args === undefined) {\n            return\n          }\n          const { data, reactElement, renderingComponent } = args\n          self.filled = true\n          self.message = undefined\n          self.reactElement = reactElement\n          self.data = data\n          self.error = undefined\n          self.renderingComponent = renderingComponent\n          renderInProgress = undefined\n        },\n        setError(error: Error) {\n          console.error(error)\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          // the rendering failed for some reason\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = error\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n      }\n    })\n}\n\nfunction renderBlockData(self: DotplotDisplayModel) {\n  const { rpcManager } = getSession(self)\n  const { renderProps, rendererType } = self\n  const { adapterConfig } = self\n  const parent = getContainingView(self) as DotplotViewModel\n\n  // Alternative to readConfObject(config) is below\n  // used because renderProps is something under our control.\n  // Compare to serverSideRenderedBlock\n  readConfObject(self.configuration)\n  getSnapshot(parent)\n\n  if (parent.initialized) {\n    const { viewWidth, viewHeight, borderSize, borderX, borderY } = parent\n    return {\n      rendererType,\n      rpcManager,\n      renderProps: {\n        ...renderProps,\n        view: getSnapshot(parent),\n        width: viewWidth,\n        height: viewHeight,\n        borderSize,\n        borderX,\n        borderY,\n      },\n      renderArgs: {\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId: getRpcSessionId(self),\n        timeout: 1000000, // 10000,\n      },\n    }\n  }\n  return undefined\n}\n\nasync function renderBlockEffect(\n  props: ReturnType<typeof renderBlockData> | undefined,\n) {\n  if (!props) {\n    throw new Error('cannot render with no props')\n  }\n\n  const { rendererType, rpcManager, renderArgs, renderProps } = props\n\n  const { reactElement, ...data } = await (rendererType as any).renderInClient(\n    rpcManager,\n    {\n      ...renderArgs,\n      ...renderProps,\n    },\n  )\n\n  return { reactElement, data, renderingComponent: rendererType.ReactComponent }\n}\n\nexport type DotplotDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotDisplayModel = Instance<DotplotDisplayStateModel>\n","import { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { RenderArgsDeserialized } from '../DotplotRenderer'\n\nfunction DotplotRendering(props: RenderArgsDeserialized) {\n  return <PrerenderedCanvas {...props} />\n}\n\nexport default observer(DotplotRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'DotplotRenderer',\n  {\n    drawMode: {\n      type: 'stringEnum',\n      description: 'drawing mode',\n      model: types.enumeration('Rendering', ['normal']),\n      defaultValue: 'normal',\n    },\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a synteny',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    lineWidth: {\n      type: 'number',\n      description: 'width of the lines to be drawn',\n      defaultValue: 1.5,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { filter, toArray } from 'rxjs/operators'\nimport { Feature } from '../../util/simpleFeature'\nimport { Region } from '../../util/types'\nimport ServerSideRenderer, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized as ServerSideResultsSerialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n} from './ServerSideRendererType'\nimport RpcManager from '../../rpc/RpcManager'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  displayModel: {}\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  displayModel: {}\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  displayModel: {}\n  blockKey: string\n}\n\nexport type { RenderResults }\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  blockKey: string\n}\n\nexport default class ComparativeServerSideRenderer extends ServerSideRenderer {\n  /**\n   * directly modifies the render arguments to prepare\n   * them to be serialized and sent to the worker.\n   *\n   * the base class replaces the `displayModel` param\n   * (which on the client is a MST model) with a stub\n   * that only contains the `selectedFeature`, since\n   * this is the only part of the track model that most\n   * renderers read.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n  serializeArgsInClient(args: RenderArgs) {\n    const deserializedArgs = {\n      ...args,\n      displayModel: {},\n    }\n\n    return super.serializeArgsInClient(deserializedArgs)\n  }\n\n  // deserialize some of the results that came back from the worker\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserialized = super.deserializeResultsInClient(result, args)\n    return { ...deserialized, blockKey: args.blockKey }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then\n   * calls `render` with the RPC manager.\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    return rpcManager.call(\n      args.sessionId,\n      'ComparativeRender',\n      args,\n    ) as Promise<ResultsSerialized>\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    if (!renderArgs.filters) {\n      return true\n    }\n    return renderArgs.filters.passes(feature, renderArgs)\n  }\n\n  async getFeatures(renderArgs: any) {\n    const { dataAdapter, signal } = renderArgs\n\n    let regions = [] as Region[]\n\n    // @ts-ignore this is instantiated by the getFeatures call\n    regions = renderArgs.regions\n\n    if (!regions || regions.length === 0) {\n      console.warn('no regions supplied to comparative renderer')\n      return []\n    }\n\n    const requestRegions = regions.map(r => {\n      // make sure the requested region's start and end are integers, if\n      // there is a region specification.\n      const requestRegion = { ...r }\n      if (requestRegion.start) {\n        requestRegion.start = Math.floor(requestRegion.start)\n      }\n      if (requestRegion.end) {\n        requestRegion.end = Math.floor(requestRegion.end)\n      }\n      return requestRegion\n    })\n\n    // note that getFeaturesInMultipleRegions does not do glyph expansion\n    const featureObservable = dataAdapter.getFeaturesInMultipleRegions(\n      requestRegions,\n      {\n        signal,\n      },\n    )\n\n    return featureObservable\n      .pipe(\n        // @ts-ignore\n        filter(feature => this.featurePassesFilters(renderArgs, feature)),\n        toArray(),\n      )\n      .toPromise()\n  }\n}\n","import {\n  Instance,\n  SnapshotIn,\n  cast,\n  types,\n  getParent,\n  getSnapshot,\n  addDisposer,\n  resolveIdentifier,\n  getRoot,\n} from 'mobx-state-tree'\n\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { observable, autorun, transaction } from 'mobx'\nimport { BaseTrackStateModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport Base1DView, { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport {\n  getSession,\n  minmax,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\nfunction approxPixelStringLen(str: string) {\n  return str.length * 0.7 * 12\n}\n\ntype Coord = [number, number]\n\n// Used in the renderer\n// ref https://mobx-state-tree.js.org/concepts/volatiles on volatile state used here\nexport const Dotplot1DView = Base1DView.extend(self => {\n  const scaleFactor = observable.box(1)\n  return {\n    views: {\n      get dynamicBlocks() {\n        return calculateDynamicBlocks(self, false, false)\n      },\n      get scaleFactor() {\n        return scaleFactor.get()\n      },\n    },\n    actions: {\n      setScaleFactor(n: number) {\n        scaleFactor.set(n)\n      },\n    },\n  }\n})\n\nexport type Dotplot1DViewModel = Instance<typeof Dotplot1DView>\n\nconst DotplotHView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      return getParent(self).viewWidth\n    },\n  },\n}))\n\nconst DotplotVView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      return getParent(self).viewHeight\n    },\n  },\n}))\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types.compose(\n    BaseViewModel,\n    types\n      .model('DotplotView', {\n        id: ElementId,\n        type: types.literal('DotplotView'),\n        headerHeight: 0,\n        height: 600,\n        borderSize: 20,\n        tickSize: 5,\n        vtextRotation: 0,\n        htextRotation: -90,\n        fontSize: 15,\n        trackSelectorType: 'hierarchical',\n        assemblyNames: types.array(types.string),\n        hview: types.optional(DotplotHView, {}),\n        vview: types.optional(DotplotVView, {}),\n\n        tracks: types.array(\n          pluginManager.pluggableMstType(\n            'track',\n            'stateModel',\n          ) as BaseTrackStateModel,\n        ),\n\n        // this represents tracks specific to this view\n        // specifically used for read vs ref dotplots where\n        // this track would not really apply elsewhere\n        viewTrackConfigs: types.array(\n          pluginManager.pluggableConfigSchemaType('track'),\n        ),\n\n        // this represents assemblies in the specialized\n        // read vs ref dotplot view\n        viewAssemblyConfigs: types.array(types.frozen()),\n      })\n      .volatile(() => ({\n        volatileWidth: undefined as number | undefined,\n        error: undefined as Error | undefined,\n        borderX: 100,\n        borderY: 100,\n      }))\n      .views(self => ({\n        get width(): number {\n          if (!self.volatileWidth) {\n            throw new Error('width not initialized')\n          }\n          return self.volatileWidth\n        },\n      }))\n      .views(self => ({\n        get initialized() {\n          return (\n            self.volatileWidth !== undefined &&\n            self.hview.displayedRegions.length > 0 &&\n            self.vview.displayedRegions.length > 0\n          )\n        },\n        get loading() {\n          return self.assemblyNames.length > 0 && !this.initialized\n        },\n        get viewWidth() {\n          return self.width - self.borderX\n        },\n        get viewHeight() {\n          return self.height - self.borderY\n        },\n        get views() {\n          return [self.hview, self.vview]\n        },\n\n        get renderProps() {\n          return {\n            ...getParentRenderProps(self),\n            highResolutionScaling: getConf(\n              getSession(self),\n              'highResolutionScaling',\n            ),\n          }\n        },\n      }))\n      .actions(self => ({\n        afterAttach() {\n          const session = getSession(self)\n          addDisposer(\n            self,\n            autorun(\n              () => {\n                if (self.volatileWidth !== undefined) {\n                  const axis = [self.viewWidth, self.viewHeight]\n                  const views = [self.hview, self.vview]\n                  if (!self.initialized) {\n                    self.assemblyNames.forEach((name, index) => {\n                      const assembly = session.assemblyManager.get(name)\n                      if (assembly) {\n                        const { regions } = assembly\n                        if (regions && regions.length) {\n                          const regionsSnapshot = regions\n                          if (regionsSnapshot) {\n                            transaction(() => {\n                              views[index].setDisplayedRegions(regionsSnapshot)\n                              views[index].setBpPerPx(\n                                views[index].totalBp / axis[index],\n                              )\n                            })\n                          }\n                        }\n                      }\n                    })\n                  }\n                }\n              },\n              { delay: 1000 },\n            ),\n          )\n          addDisposer(\n            self,\n            autorun(() => {\n              // make sure we have a width on the view before trying to load\n              if (self.volatileWidth !== undefined) {\n                const padding = 10\n                // these are set via autorun to avoid dependency cycle\n                this.setBorderY(\n                  Math.max(\n                    self.hview.dynamicBlocks.contentBlocks.reduce(\n                      (a, b) =>\n                        Math.max(\n                          a,\n                          approxPixelStringLen(b.refName.slice(0, 30)),\n                        ),\n                      0,\n                    ) + padding,\n                    100,\n                  ),\n                )\n                this.setBorderX(\n                  Math.max(\n                    self.vview.dynamicBlocks.contentBlocks.reduce(\n                      (a, b) =>\n                        Math.max(\n                          a,\n                          approxPixelStringLen(b.refName.slice(0, 30)),\n                        ),\n                      0,\n                    ) + padding,\n                    100,\n                  ),\n                )\n              }\n            }),\n          )\n        },\n        setBorderX(n: number) {\n          self.borderX = n\n        },\n        setBorderY(n: number) {\n          self.borderY = n\n        },\n        setWidth(newWidth: number) {\n          self.volatileWidth = newWidth\n        },\n        setHeight(newHeight: number) {\n          self.height = newHeight\n        },\n\n        setError(e: Error) {\n          self.error = e\n        },\n\n        closeView() {\n          getParent(self, 2).removeView(self)\n        },\n\n        setHeaderHeight(height: number) {\n          self.headerHeight = height\n        },\n\n        zoomOutButton() {\n          self.hview.zoomOut()\n          self.vview.zoomOut()\n        },\n        zoomInButton() {\n          self.hview.zoomIn()\n          self.vview.zoomIn()\n        },\n        activateTrackSelector() {\n          if (self.trackSelectorType === 'hierarchical') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const session: any = getSession(self)\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n          throw new Error(\n            `invalid track selector type ${self.trackSelectorType}`,\n          )\n        },\n\n        showTrack(trackId: string, initialSnapshot = {}) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          const trackType = pluginManager.getTrackType(configuration.type)\n          if (!trackType) {\n            throw new Error(`unknown track type ${configuration.type}`)\n          }\n          const viewType = pluginManager.getViewType(self.type)\n          const displayConf = configuration.displays.find(\n            (d: AnyConfigurationModel) => {\n              if (\n                viewType.displayTypes.find(\n                  displayType => displayType.name === d.type,\n                )\n              ) {\n                return true\n              }\n              return false\n            },\n          )\n          if (!displayConf) {\n            throw new Error(\n              `could not find a compatible display for view type ${self.type}`,\n            )\n          }\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            type: configuration.type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          })\n          self.tracks.push(track)\n        },\n\n        hideTrack(trackId: string) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          // if we have any tracks with that configuration, turn them off\n          const shownTracks = self.tracks.filter(\n            t => t.configuration === configuration,\n          )\n          transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n          return shownTracks.length\n        },\n\n        toggleTrack(trackId: string) {\n          // if we have any tracks with that configuration, turn them off\n          const hiddenCount = this.hideTrack(trackId)\n          // if none had that configuration, turn one on\n          if (!hiddenCount) {\n            this.showTrack(trackId)\n          }\n        },\n        setAssemblyNames(assemblyNames: string[]) {\n          self.assemblyNames = cast(assemblyNames)\n        },\n        setViews(arr: SnapshotIn<Base1DViewModel>[]) {\n          self.hview = cast(arr[0])\n          self.vview = cast(arr[1])\n        },\n\n        getCoords(mousedown: Coord, mouseup: Coord) {\n          const [xmin, xmax] = minmax(mouseup[0], mousedown[0])\n          const [ymin, ymax] = minmax(mouseup[1], mousedown[1])\n          return Math.abs(xmax - xmin) > 3 && Math.abs(ymax - ymin) > 3\n            ? [\n                self.hview.pxToBp(xmin),\n                self.hview.pxToBp(xmax),\n                self.vview.pxToBp(self.viewHeight - ymin),\n                self.vview.pxToBp(self.viewHeight - ymax),\n              ]\n            : undefined\n        },\n\n        zoomIn(mousedown: Coord, mouseup: Coord) {\n          const result = this.getCoords(mousedown, mouseup)\n          if (result) {\n            const [x1, x2, y1, y2] = result\n            self.hview.moveTo(x1, x2)\n            self.vview.moveTo(y2, y1)\n          }\n        },\n        onDotplotView(mousedown: Coord, mouseup: Coord) {\n          const result = this.getCoords(mousedown, mouseup)\n          if (result) {\n            const [x1, x2, y1, y2] = result\n            const session = getSession(self)\n\n            const d1 = Dotplot1DView.create({\n              ...getSnapshot(self.hview),\n              minimumBlockWidth: 0,\n              interRegionPaddingWidth: 0,\n            })\n            const d2 = Dotplot1DView.create({\n              ...getSnapshot(self.vview),\n              minimumBlockWidth: 0,\n              interRegionPaddingWidth: 0,\n            })\n            d1.setVolatileWidth(self.hview.width)\n            d2.setVolatileWidth(self.vview.width)\n            d1.moveTo(x1, x2)\n            d2.moveTo(y2, y1)\n            d1.zoomTo(d1.bpPerPx / (self.width / self.hview.width), 0)\n            d2.zoomTo(d2.bpPerPx / (self.width / self.vview.width), 0)\n\n            // add the specific evidence tracks to the LGVs in the split view\n            // note: scales the bpPerPx by scaling proportional of the dotplot\n            // width to the eventual lgv width\n            const tracks: {\n              type: string\n              configuration: AnyConfigurationModel\n              displays: {\n                type: string\n                configuration: AnyConfigurationModel\n              }[]\n            }[] = []\n            self.tracks.forEach(track => {\n              const trackConf = track.configuration\n              const displayConf = trackConf.displays.find(\n                (display: AnyConfigurationModel) =>\n                  display.type === 'LinearSyntenyDisplay',\n              )\n              if (displayConf) {\n                tracks.push({\n                  type: trackConf.type,\n                  configuration: trackConf,\n                  displays: [\n                    { type: displayConf.type, configuration: displayConf },\n                  ],\n                })\n              }\n            })\n            const viewSnapshot = {\n              type: 'LinearSyntenyView',\n              views: [\n                {\n                  type: 'LinearGenomeView',\n                  ...getSnapshot(d1),\n                  tracks: [],\n                  hideHeader: true,\n                },\n                {\n                  type: 'LinearGenomeView',\n                  ...getSnapshot(d2),\n                  tracks: [],\n                  hideHeader: true,\n                },\n              ],\n              tracks,\n            }\n\n            session.addView('LinearSyntenyView', viewSnapshot)\n          }\n        },\n      }))\n      .views(self => ({\n        get menuItems() {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            return [\n              {\n                label: 'Open track selector',\n                onClick: self.activateTrackSelector,\n              },\n            ]\n          }\n          return []\n        },\n      })),\n  )\n}\n\nexport type DotplotViewStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotViewModel = Instance<DotplotViewStateModel>\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  createCanvas,\n  createImageBitmap,\n} from '@jbrowse/core/util/offscreenCanvasPonyfill'\nimport { Instance } from 'mobx-state-tree'\nimport ComparativeServerSideRendererType, {\n  RenderArgsDeserialized as ComparativeRenderArgsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport { Dotplot1DView } from '../DotplotView/model'\n\ntype Dim = Instance<typeof Dotplot1DView>\n\nconst { parseCigar } = MismatchParser\n\nexport interface RenderArgsDeserialized\n  extends ComparativeRenderArgsDeserialized {\n  height: number\n  width: number\n  highResolutionScaling: number\n  view: { hview: Dim; vview: Dim }\n}\n\nexport default class DotplotRenderer extends ComparativeServerSideRendererType {\n  async makeImageData(props: RenderArgsDeserialized & { views: Dim[] }) {\n    const {\n      highResolutionScaling: scale = 1,\n      width,\n      height,\n      config,\n      views,\n    } = props\n\n    const canvas = createCanvas(Math.ceil(width * scale), height * scale)\n    const ctx = canvas.getContext('2d')\n    const lineWidth = readConfObject(config, 'lineWidth')\n    ctx.lineWidth = lineWidth\n    ctx.scale(scale, scale)\n    ctx.fillStyle = readConfObject(config, 'color')\n    const [hview, vview] = views\n    const db1 = hview.dynamicBlocks.contentBlocks[0].offsetPx\n    const db2 = vview.dynamicBlocks.contentBlocks[0].offsetPx\n    ;(hview.features || []).forEach(feature => {\n      let start = feature.get('start')\n      let end = feature.get('end')\n      const strand = feature.get('strand')\n      const refName = feature.get('refName')\n      const mate = feature.get('mate')\n      const mateRef = mate.refName\n      // const identity = feature.get('numMatches') / feature.get('blockLen')\n      // ctx.fillStyle = `hsl(${identity * 150},50%,50%)`\n      const color = readConfObject(config, 'color', { feature })\n      ctx.fillStyle = color\n      ctx.strokeStyle = color\n      if (strand === -1) {\n        ;[end, start] = [start, end]\n      }\n      const b10 = hview.bpToPx({ refName, coord: start })\n      const b20 = hview.bpToPx({ refName, coord: end })\n      const e10 = vview.bpToPx({ refName: mateRef, coord: mate.start })\n      const e20 = vview.bpToPx({ refName: mateRef, coord: mate.end })\n      if (\n        b10 !== undefined &&\n        b20 !== undefined &&\n        e10 !== undefined &&\n        e20 !== undefined\n      ) {\n        const b1 = b10 - db1\n        const b2 = b20 - db1\n        const e1 = e10 - db2\n        const e2 = e20 - db2\n        if (Math.abs(b1 - b2) < 3 && Math.abs(e1 - e2) < 3) {\n          ctx.fillRect(\n            b1 - lineWidth / 2,\n            height - e1 - lineWidth / 2,\n            lineWidth,\n            lineWidth,\n          )\n        } else {\n          let currX = b1\n          let currY = e1\n          const cigar = feature.get('cg') || feature.get('CIGAR')\n          if (cigar) {\n            const cigarOps = parseCigar(cigar)\n            ctx.beginPath()\n            for (let i = 0; i < cigarOps.length; i += 2) {\n              const val = +cigarOps[i]\n              const op = cigarOps[i + 1]\n\n              const prevX = currX\n              const prevY = currY\n\n              if (op === 'M' || op === '=' || op === 'X') {\n                currX += val / hview.bpPerPx\n                currY += val / vview.bpPerPx\n              } else if (op === 'D' || op === 'N') {\n                currX += val / hview.bpPerPx\n              } else if (op === 'I') {\n                currY += val / vview.bpPerPx\n              }\n              ctx.moveTo(prevX, height - prevY)\n              ctx.lineTo(currX, height - currY)\n            }\n            ctx.stroke()\n          } else {\n            ctx.beginPath()\n            ctx.moveTo(b1, height - e1)\n            ctx.lineTo(b2, height - e2)\n            ctx.stroke()\n          }\n        }\n      } else {\n        console.warn(\n          `feature at ${refName}:${start}-${end} ${mateRef}:${mate.start}-${mate.end} not plotted, fell outside of range ${b10} ${b20} ${e10} ${e20}`,\n        )\n      }\n    })\n    return createImageBitmap(canvas)\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const {\n      width,\n      height,\n      view: { hview, vview },\n    } = renderProps\n    const dimensions = [width, height]\n    const realizedViews = [hview, vview].map((snap, idx) => {\n      const view = Dotplot1DView.create(snap)\n      view.setVolatileWidth(dimensions[idx])\n      return view\n    })\n    await Promise.all(\n      realizedViews.map(async view => {\n        view.setFeatures(\n          await this.getFeatures({\n            ...renderProps,\n            regions: view.dynamicBlocks.contentBlocks,\n          }),\n        )\n      }),\n    )\n    const imageData = await this.makeImageData({\n      ...renderProps,\n      views: realizedViews,\n    })\n\n    const results = await super.render({\n      ...renderProps,\n      height,\n      width,\n      imageData,\n    })\n\n    return {\n      ...results,\n      imageData,\n      height,\n      width,\n      offsetX: realizedViews[0].dynamicBlocks.blocks[0].offsetPx,\n      offsetY: realizedViews[1].dynamicBlocks.blocks[0].offsetPx,\n    }\n  }\n}\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport {\n  FileLocation,\n  NoAssemblyRegion,\n  Region,\n} from '@jbrowse/core/util/types'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { GenericFilehandle } from 'generic-filehandle'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport QuickLRU from '@jbrowse/core/util/QuickLRU'\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport MyConfigSchema from './configSchema'\n\ninterface PafRecord {\n  records: NoAssemblyRegion[]\n  extra: {\n    blockLen: number\n    mappingQual: number\n    numMatches: number\n    strand: number\n  }\n}\n\nexport default class PAFAdapter extends BaseFeatureDataAdapter {\n  private cache = new AbortablePromiseCache({\n    cache: new QuickLRU({ maxSize: 1 }),\n    fill: (data: BaseOptions, signal?: AbortSignal) => {\n      return this.setup({ ...data, signal })\n    },\n  })\n\n  private assemblyNames: string[]\n\n  private pafLocation: GenericFilehandle\n\n  public static capabilities = ['getFeatures', 'getRefNames']\n\n  public constructor(config: Instance<typeof MyConfigSchema>) {\n    super(config)\n    const pafLocation = readConfObject(config, 'pafLocation') as FileLocation\n    const assemblyNames = readConfObject(config, 'assemblyNames') as string[]\n    this.pafLocation = openLocation(pafLocation)\n    this.assemblyNames = assemblyNames\n  }\n\n  async setup(opts?: BaseOptions) {\n    const text = (await this.pafLocation.readFile({\n      encoding: 'utf8',\n      ...opts,\n    })) as string\n    const pafRecords: PafRecord[] = []\n    text.split('\\n').forEach((line: string, index: number) => {\n      if (line.length) {\n        const [\n          chr1,\n          ,\n          start1,\n          end1,\n          strand,\n          chr2,\n          ,\n          start2,\n          end2,\n          numMatches,\n          blockLen,\n          mappingQual,\n          ...fields\n        ] = line.split('\\t')\n\n        const rest = Object.fromEntries(\n          fields.map(field => {\n            const r = field.indexOf(':')\n            const fieldName = field.slice(0, r)\n            const fieldValue = field.slice(r + 3)\n            return [fieldName, fieldValue]\n          }),\n        )\n\n        pafRecords[index] = {\n          records: [\n            { refName: chr1, start: +start1, end: +end1 },\n            { refName: chr2, start: +start2, end: +end2 },\n          ],\n          extra: {\n            numMatches: +numMatches,\n            blockLen: +blockLen,\n            strand: strand === '-' ? -1 : 1,\n            mappingQual: +mappingQual,\n            ...rest,\n          },\n        }\n      }\n    })\n    return pafRecords\n  }\n\n  async hasDataForRefName() {\n    // determining this properly is basically a call to getFeatures\n    // so is not really that important, and has to be true or else\n    // getFeatures is never called (BaseAdapter filters it out)\n    return true\n  }\n\n  async getRefNames() {\n    // we cannot determine this accurately\n    return []\n  }\n\n  getFeatures(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const pafRecords = await this.cache.get('initialize', opts, opts.signal)\n\n      // The index of the assembly name in the region list corresponds to\n      // the adapter in the subadapters list\n      const index = this.assemblyNames.indexOf(region.assemblyName)\n      if (index !== -1) {\n        for (let i = 0; i < pafRecords.length; i++) {\n          const { extra, records } = pafRecords[i]\n          const { start, end, refName } = records[index]\n          if (records[index].refName === region.refName) {\n            if (doesIntersect2(region.start, region.end, start, end)) {\n              observer.next(\n                new SimpleFeature({\n                  uniqueId: `row_${i}`,\n                  start,\n                  end,\n                  refName,\n                  syntenyId: i,\n                  mate: {\n                    start: records[+!index].start,\n                    end: records[+!index].end,\n                    refName: records[+!index].refName,\n                  },\n                  ...extra,\n                }),\n              )\n            }\n          }\n        }\n      }\n\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'PAFAdapter',\n  {\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n    pafLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/file.paf' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { checkAbortSignal, renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport ComparativeServerSideRendererType, {\n  RenderArgs as ComparativeRenderArgs,\n  RenderArgsSerialized as ComparativeRenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\n\ninterface RenderArgs extends ComparativeRenderArgs {\n  adapterConfig: {}\n  rendererType: string\n}\n\ninterface RenderArgsSerialized extends ComparativeRenderArgsSerialized {\n  adapterConfig: {}\n  rendererType: string\n}\n\n/**\n * call a synteny renderer with the given args\n * param views: a set of views that each contain a set of regions\n * used instead of passing regions directly as in render()\n */\nexport default class ComparativeRender extends RpcMethodType {\n  name = 'ComparativeRender'\n\n  async serializeArguments(args: RenderArgs, rpcDriverClassName: string) {\n    const assemblyManager = this.pluginManager.rootModel?.session\n      ?.assemblyManager\n    const renamedArgs = assemblyManager\n      ? await renameRegionsIfNeeded(assemblyManager, args)\n      : args\n\n    if (rpcDriverClassName === 'MainThreadRpcDriver') {\n      return renamedArgs\n    }\n\n    const { rendererType } = args\n\n    const RendererType = this.pluginManager.getRendererType(rendererType)\n\n    if (!(RendererType instanceof ComparativeServerSideRendererType)) {\n      throw new Error(\n        'CoreRender requires a renderer that is a subclass of ServerSideRendererType',\n      )\n    }\n\n    return RendererType.serializeArgsInClient(renamedArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { signal?: RemoteAbortSignal },\n    rpcDriverClassName: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriverClassName !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(\n        args,\n        rpcDriverClassName,\n      )\n    }\n    const { sessionId, adapterConfig, rendererType, signal } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    checkAbortSignal(signal)\n\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    if (!(dataAdapter instanceof BaseFeatureDataAdapter)) {\n      throw new Error(\n        `ComparativeRender cannot handle this type of data adapter ${dataAdapter}`,\n      )\n    }\n\n    const RendererType = this.pluginManager.getRendererType(rendererType)\n\n    if (!RendererType) {\n      throw new Error(`renderer \"${rendererType}\" not found`)\n    }\n    if (!RendererType.ReactComponent) {\n      throw new Error(\n        `renderer ${rendererType} has no ReactComponent, it may not be completely implemented yet`,\n      )\n    }\n\n    if (!(RendererType instanceof ComparativeServerSideRendererType)) {\n      throw new Error(\n        'CoreRender requires a renderer that is a subclass of ServerSideRendererType',\n      )\n    }\n\n    const renderArgs = {\n      ...deserializedArgs,\n      dataAdapter,\n    }\n\n    const result =\n      rpcDriverClassName === 'MainThreadRpcDriver'\n        ? await RendererType.render(renderArgs)\n        : await RendererType.renderInWorker(renderArgs)\n    checkAbortSignal(signal)\n    return result\n  }\n\n  async deserializeReturn(\n    serializedReturn: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriverClassName: string,\n  ): Promise<unknown> {\n    if (rpcDriverClassName === 'MainThreadRpcDriver') {\n      return serializedReturn\n    }\n\n    const { rendererType } = args\n    const RendererType = this.pluginManager.getRendererType(rendererType)\n    if (!RendererType) {\n      throw new Error(`renderer \"${rendererType}\" not found`)\n    }\n    if (!RendererType.ReactComponent) {\n      throw new Error(\n        `renderer ${rendererType} has no ReactComponent, it may not be completely implemented yet`,\n      )\n    }\n    if (!(RendererType instanceof ComparativeServerSideRendererType)) {\n      throw new Error(\n        'CoreRender requires a renderer that is a subclass of ServerSideRendererType',\n      )\n    }\n    return RendererType.deserializeResultsInClient(\n      serializedReturn as ResultsSerialized,\n      args,\n    )\n  }\n}\n","import { lazy } from 'react'\nimport Plugin from '@jbrowse/core/Plugin'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport AddIcon from '@material-ui/icons/Add'\nimport { autorun } from 'mobx'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AbstractSessionModel,\n  isAbstractMenuManager,\n  getSession,\n} from '@jbrowse/core/util'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { AbstractDisplayModel } from '@jbrowse/core/util/types'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport {\n  configSchemaFactory as dotplotDisplayConfigSchemaFactory,\n  stateModelFactory as dotplotDisplayStateModelFactory,\n  ReactComponent as DotplotDisplayReactComponent,\n} from './DotplotDisplay'\nimport DotplotRenderer, {\n  configSchema as dotplotRendererConfigSchema,\n  ReactComponent as DotplotRendererReactComponent,\n} from './DotplotRenderer'\nimport stateModelFactory from './DotplotView/model'\n\nimport {\n  configSchema as PAFAdapterConfigSchema,\n  AdapterClass as PAFAdapter,\n} from './PAFAdapter'\nimport ComparativeRender from './DotplotRenderer/ComparativeRenderRpc'\n\nconst { parseCigar } = MismatchParser\n\ninterface Track {\n  id: string\n  type: string\n  displays: {\n    addAdditionalContextMenuItemCallback: Function\n    additionalContextMenuItemCallbacks: Function[]\n    id: string\n    type: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PileupDisplay: any\n  }[]\n}\ninterface View {\n  tracks: Track[]\n  views?: View[]\n  type: string\n}\ninterface Session {\n  views: View[]\n}\nfunction getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\nfunction getLength(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nfunction getLengthSansClipping(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nfunction getClip(cigar: string, strand: number) {\n  return strand === -1\n    ? +(cigar.match(/(\\d+)[SH]$/) || [])[1] || 0\n    : +(cigar.match(/^(\\d+)([SH])/) || [])[1] || 0\n}\n\ninterface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  seqLength: number\n}\n\nexport default class DotplotPlugin extends Plugin {\n  name = 'DotplotPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(() => {\n      return new ViewType({\n        name: 'DotplotView',\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./DotplotView/components/DotplotView'),\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = dotplotDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'DotplotDisplay',\n        configSchema,\n        stateModel: dotplotDisplayStateModelFactory(configSchema),\n        trackType: 'SyntenyTrack',\n        viewType: 'DotplotView',\n        ReactComponent: DotplotDisplayReactComponent,\n      })\n    })\n\n    pluginManager.addRendererType(\n      () =>\n        new DotplotRenderer({\n          name: 'DotplotRenderer',\n          configSchema: dotplotRendererConfigSchema,\n          ReactComponent: DotplotRendererReactComponent,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'PAFAdapter',\n          configSchema: PAFAdapterConfigSchema,\n          AdapterClass: PAFAdapter,\n        }),\n    )\n\n    // install our comparative rendering rpc callback\n    pluginManager.addRpcMethod(() => new ComparativeRender(pluginManager))\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Dotplot view',\n        icon: TimelineIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('DotplotView', {})\n        },\n      })\n    }\n\n    const cb = (\n      feature: Feature,\n      display: AbstractDisplayModel & IAnyStateTreeNode,\n    ) => {\n      const { parentTrack } = display\n      return feature\n        ? [\n            {\n              label: 'Dotplot of read vs ref',\n              icon: AddIcon,\n              onClick: () => {\n                const session = getSession(display)\n                const clipPos = feature.get('clipPos')\n                const cigar = feature.get('CIGAR')\n                const flags = feature.get('flags')\n                const SA: string =\n                  (feature.get('tags')\n                    ? feature.get('tags').SA\n                    : feature.get('SA')) || ''\n                const readName = feature.get('name')\n                const readAssembly = `${readName}_assembly`\n                const [trackAssembly] = getConf(parentTrack, 'assemblyNames')\n                const assemblyNames = [trackAssembly, readAssembly]\n                const trackId = `track-${Date.now()}`\n                const trackName = `${readName}_vs_${trackAssembly}`\n                const supplementaryAlignments = SA.split(';')\n                  .filter(aln => !!aln)\n                  .map((aln, index) => {\n                    const [saRef, saStart, saStrand, saCigar] = aln.split(',')\n                    const saLengthOnRef = getLengthOnRef(saCigar)\n                    const saLength = getLength(saCigar)\n                    const saLengthSansClipping = getLengthSansClipping(saCigar)\n                    const saStrandNormalized = saStrand === '-' ? -1 : 1\n                    const saClipPos = getClip(saCigar, saStrandNormalized)\n                    const saRealStart = +saStart - 1\n                    return {\n                      refName: saRef,\n                      start: saRealStart,\n                      end: saRealStart + saLengthOnRef,\n                      seqLength: saLength,\n                      clipPos: saClipPos,\n                      CIGAR: saCigar,\n                      assemblyName: trackAssembly,\n                      strand: 1, // saStrandNormalized,\n                      uniqueId: `${feature.id()}_SA${index}`,\n                      mate: {\n                        start: saClipPos,\n                        end: saClipPos + saLengthSansClipping,\n                        refName: readName,\n                      },\n                    }\n                  })\n\n                const feat = feature.toJSON()\n                feat.strand = 1\n                feat.mate = {\n                  refName: readName,\n                  start: clipPos,\n                  end: clipPos + getLengthSansClipping(cigar),\n                }\n\n                // if secondary alignment or supplementary, calculate length\n                // from SA[0]'s CIGAR which is the primary alignments.\n                // otherwise it is the primary alignment just use seq.length if\n                // primary alignment\n                const totalLength = getLength(\n                  flags & 2048 ? supplementaryAlignments[0].CIGAR : cigar,\n                )\n\n                const features = [\n                  feat,\n                  ...supplementaryAlignments,\n                ] as ReducedFeature[]\n\n                features.sort((a, b) => a.clipPos - b.clipPos)\n\n                const refLength = features.reduce(\n                  (a, f) => a + f.end - f.start,\n                  0,\n                )\n\n                session.addView('DotplotView', {\n                  type: 'DotplotView',\n                  hview: {\n                    offsetPx: 0,\n                    bpPerPx: refLength / 800,\n                    minimumBlockWidth: 0,\n                    interRegionPaddingWidth: 0,\n                    displayedRegions: features.map(f => {\n                      return {\n                        start: f.start,\n                        end: f.end,\n                        refName: f.refName,\n                        assemblyName: trackAssembly,\n                      }\n                    }),\n                  },\n                  vview: {\n                    offsetPx: 0,\n                    bpPerPx: totalLength / 400,\n                    minimumBlockWidth: 0,\n                    interRegionPaddingWidth: 0,\n                    displayedRegions: [\n                      {\n                        assemblyName: readAssembly,\n                        start: 0,\n                        end: totalLength,\n                        refName: readName,\n                      },\n                    ],\n                  },\n                  viewTrackConfigs: [\n                    {\n                      type: 'SyntenyTrack',\n                      assemblyNames,\n                      adapter: {\n                        type: 'FromConfigAdapter',\n                        features,\n                      },\n                      trackId,\n                      name: trackName,\n                    },\n                  ],\n                  viewAssemblyConfigs: [\n                    {\n                      name: readAssembly,\n                      sequence: {\n                        type: 'ReferenceSequenceTrack',\n                        trackId: `${readName}_${Date.now()}`,\n                        adapter: {\n                          type: 'FromConfigSequenceAdapter',\n                          features: [feature.toJSON()],\n                        },\n                      },\n                    },\n                  ],\n                  assemblyNames,\n                  tracks: [\n                    {\n                      configuration: trackId,\n                      type: 'SyntenyTrack',\n                      displays: [\n                        {\n                          type: 'DotplotDisplay',\n                          configuration: `${trackId}-DotplotDisplay`,\n                        },\n                      ],\n                    },\n                  ],\n                  displayName: `${readName} vs ${trackAssembly}`,\n                })\n              },\n            },\n          ]\n        : []\n    }\n    function addContextMenu(view: View) {\n      if (view.type === 'LinearGenomeView') {\n        view.tracks.forEach(track => {\n          if (track.type === 'AlignmentsTrack') {\n            track.displays.forEach(display => {\n              if (\n                display.type === 'LinearPileupDisplay' &&\n                !display.additionalContextMenuItemCallbacks.includes(cb)\n              ) {\n                display.addAdditionalContextMenuItemCallback(cb)\n              } else if (\n                display.type === 'LinearAlignmentsDisplay' &&\n                display.PileupDisplay &&\n                !display.PileupDisplay.additionalContextMenuItemCallbacks.includes(\n                  cb,\n                )\n              ) {\n                display.PileupDisplay.addAdditionalContextMenuItemCallback(cb)\n              }\n            })\n          }\n        })\n      }\n    }\n    autorun(() => {\n      const session = pluginManager.rootModel?.session as Session | undefined\n      if (session) {\n        session.views.forEach(view => {\n          if (view.views) {\n            view.views.forEach(v => addContextMenu(v))\n          } else {\n            addContextMenu(view)\n          }\n        })\n      }\n    })\n  }\n}\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nfunction makeFilters(displayModel) {\n  const filters = []\n  const { filterOut } = displayModel\n  for (const attrName of filterOut.keys()) {\n    for (const value of filterOut.get(attrName).keys()) {\n      if (filterOut.get(attrName).get(value)) {\n        filters.push(`jexl:get(feature,'${attrName}') != '${value}'`)\n      }\n    }\n  }\n  return filters\n}\n\nexport default configSchema => {\n  return types.compose(\n    'LinearFilteringDisplay',\n    BaseLinearDisplay,\n    types\n      .model({\n        type: types.literal('LinearFilteringDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        hideExpressions: types.optional(types.array(types.string), () => []),\n        height: 193,\n        filterControlsHeight: 70,\n        dragHandleHeight: 3,\n        filterOut: types.map(types.map(types.boolean)), // model[attrName][value] = true if filtering out\n      })\n      .views(self => ({\n        get renderProps() {\n          const filters = makeFilters(self)\n          return {\n            ...getParentRenderProps(self),\n            ...this.composedRenderProps,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.configuration.renderer,\n            filters,\n          }\n        },\n        get innerDisplayHeight() {\n          return self.height - self.dragHandleHeight - self.filterControlsHeight\n        },\n        get filterControlsMinHeight() {\n          return Math.min(self.filterControlsMaxHeight, 40)\n        },\n        get filterControlsMaxHeight() {\n          return Math.max(self.height - 20, 0)\n        },\n        get rendererTypeName() {\n          return self.configuration.renderer.type\n        },\n      }))\n      .actions(self => ({\n        setFilterControlsHeight(newHeight) {\n          if (newHeight > self.filterControlsMinHeight) {\n            if (newHeight < self.filterControlsMaxHeight) {\n              self.filterControlsHeight = newHeight\n            } else {\n              self.filterControlsHeight = self.filterControlsMaxHeight\n            }\n          } else {\n            self.filterControlsHeight = self.filterControlsMinHeight\n          }\n          return self.filterControlsHeight\n        },\n        resizeFilterControls(distance) {\n          const oldHeight = self.filterControlsHeight\n          const newHeight = self.setFilterControlsHeight(\n            self.filterControlsHeight - distance,\n          )\n          return oldHeight - newHeight\n        },\n        toggleFilter(attrName, value, checked) {\n          if (!self.filterOut.has(attrName)) {\n            self.filterOut.set(attrName, {})\n          }\n          const values = self.filterOut.get(attrName)\n          values.set(String(value), !checked)\n        },\n      })),\n  )\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { reaction } from 'mobx'\nimport { observer, PropTypes as MxPropTypes } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.default,\n    overflow: 'auto',\n    paddingTop: 0,\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  header: {\n    width: '100%',\n  },\n  title: {\n    // fontSize: '80%',\n  },\n})\n\nfunction visibleValues(model, attrName) {\n  const { features, filterOut } = model\n  const values = new Set()\n  for (const feature of features.values()) {\n    values.add(feature.get(attrName))\n  }\n  if (filterOut.has(attrName)) {\n    for (const value of filterOut.get(attrName).keys()) {\n      values.add(value)\n    }\n  }\n  return Array.from(values.values()).sort()\n}\n\nconst AttributeFilter = withStyles(styles)(\n  observer(({ attrName, model, classes, values }) => (\n    <FormControl component=\"fieldset\" className={classes.formControl}>\n      <FormLabel component=\"legend\">{attrName}</FormLabel>\n      <FormGroup row>\n        {!values.length ? (\n          <FormHelperText style={{ marginRight: '1em' }}>\n            no values seen yet\n          </FormHelperText>\n        ) : (\n          values.map(value => (\n            <FormControlLabel\n              key={`${attrName}-${value}`}\n              control={\n                <Checkbox\n                  checked={\n                    !(\n                      model.filterOut.has(attrName) &&\n                      model.filterOut.get(attrName).get(String(value))\n                    )\n                  }\n                  onChange={evt =>\n                    model.toggleFilter(attrName, value, evt.target.checked)\n                  }\n                />\n              }\n              label={value}\n            />\n          ))\n        )}\n      </FormGroup>\n    </FormControl>\n  )),\n)\n\nAttributeFilter.propTypes = {\n  attrName: ReactPropTypes.string.isRequired,\n  model: MxPropTypes.objectOrObservableObject.isRequired,\n  values: ReactPropTypes.arrayOf(ReactPropTypes.string).isRequired,\n}\n\nclass FilterControls extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { seenAttributes: {} }\n    const { model } = props\n    this.autorunDisposer = reaction(\n      () => {\n        const newSeenAttributes = {}\n        getConf(model, 'filterAttributes').forEach(attrName => {\n          if (!newSeenAttributes[attrName]) {\n            newSeenAttributes[attrName] = {}\n          }\n          visibleValues(model, attrName).forEach(value => {\n            newSeenAttributes[attrName][value] = true\n          })\n        })\n        return newSeenAttributes\n      },\n      newSeenAttributes => {\n        this.setState(state => {\n          const seenAttributes = {}\n          Object.keys(newSeenAttributes).forEach(attrName => {\n            seenAttributes[attrName] = {\n              ...(state.seenAttributes[attrName] || {}),\n              ...newSeenAttributes[attrName],\n            }\n          })\n          return { seenAttributes }\n        })\n      },\n      { delay: 400 },\n    )\n  }\n\n  componentWillUnmount() {\n    this.autorunDisposer()\n  }\n\n  render() {\n    const { classes, style, model } = this.props\n    const { seenAttributes } = this.state\n    return (\n      <div style={style} className={classes.root}>\n        <div className={classes.header}>\n          <Typography\n            className={classes.title}\n            variant=\"subtitle2\"\n            gutterBottom\n          >\n            Filters\n          </Typography>\n        </div>\n        {Object.keys(seenAttributes)\n          .sort()\n          .map(attrName => (\n            <AttributeFilter\n              key={attrName}\n              attrName={attrName}\n              model={model}\n              values={Object.keys(seenAttributes[attrName]).sort()}\n            />\n          ))}\n      </div>\n    )\n  }\n}\nFilterControls.propTypes = {\n  classes: ReactPropTypes.shape({\n    root: ReactPropTypes.string,\n    header: ReactPropTypes.string,\n    title: ReactPropTypes.string,\n  }).isRequired,\n  style: ReactPropTypes.shape({ height: ReactPropTypes.any }),\n  model: MxPropTypes.objectOrObservableObject.isRequired,\n}\n\nFilterControls.defaultProps = { style: {} }\n\nexport default withStyles(styles)(observer(FilterControls))\n","import { ResizeHandle } from '@jbrowse/core/ui'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer, PropTypes } from 'mobx-react'\nimport React from 'react'\nimport FilterControls from './FilterControls'\n\nconst useStyles = makeStyles(theme => ({\n  display: {\n    background: 'white',\n    height: '100%',\n    overflow: 'hidden',\n  },\n  innerDisplay: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n  },\n  filterControls: {\n    background: theme.palette.background.default,\n  },\n}))\n\nfunction LinearFilteringDisplay(props) {\n  const { model } = props\n  const classes = useStyles()\n  const { innerDisplayHeight, filterControlsHeight, dragHandleHeight } = model\n  return (\n    <div className={classes.display}>\n      <div\n        className={classes.innerDisplay}\n        style={{ height: innerDisplayHeight }}\n      >\n        <BaseLinearDisplayComponent {...props} />\n      </div>\n      <ResizeHandle\n        onDrag={model.resizeFilterControls}\n        style={{\n          height: dragHandleHeight,\n          background: '#ccc',\n          boxSizing: 'border-box',\n          borderTop: '1px solid #fafafa',\n        }}\n      />\n      <FilterControls style={{ height: filterControlsHeight }} {...props} />\n    </div>\n  )\n}\n\nLinearFilteringDisplay.propTypes = {\n  model: PropTypes.observableObject.isRequired,\n}\n\nexport default observer(LinearFilteringDisplay)\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchemaFactory as linearFilteringDisplayConfigSchemaFactory,\n  modelFactory as linearFilteringDisplayModelFactory,\n  ReactComponent as LinearFilteringDisplayReactComponent,\n} from './LinearFilteringDisplay'\n\nexport default class extends Plugin {\n  name = 'FilteringTrackPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearFilteringDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearFilteringDisplay',\n        configSchema,\n        stateModel: linearFilteringDisplayModelFactory(configSchema),\n        trackType: 'FilteringTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: LinearFilteringDisplayReactComponent,\n      })\n    })\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\nexport { default as modelFactory } from './model'\nexport { default as ReactComponent } from './components/LinearFilteringDisplay'\n\nexport function configSchemaFactory(pluginManager) {\n  return ConfigurationSchema(\n    'LinearFilteringDisplay',\n    {\n      filterAttributes: {\n        type: 'stringArray',\n        defaultValue: ['type'],\n        description: 'list of feature attributes to use for filtering',\n      },\n    },\n    {\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'Gff3TabixAdapter',\n  {\n    gffGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.gff.gz' },\n    },\n    index: ConfigurationSchema('Gff3TabixIndex', {\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      location: {\n        type: 'fileLocation',\n        defaultValue: { uri: '/path/to/my.gff.gz.tbi' },\n      },\n    }),\n    dontRedispatch: {\n      type: 'stringArray',\n      defaultValue: ['chromosome', 'region'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport { configSchema as gff3TabixAdapterConfigSchema } from './Gff3TabixAdapter'\n\nexport default class extends Plugin {\n  name = 'GFF3TabixPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'Gff3TabixAdapter',\n          configSchema: gff3TabixAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./Gff3TabixAdapter/Gff3TabixAdapter').then(r => r.default),\n        }),\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'NCListAdapter',\n  {\n    rootUrlTemplate: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my/{refseq}/trackData.json' },\n    },\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of refNames used by the NCList used for aliasing',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","const crc32Table =\n  '00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F 63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC 51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E 7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D 806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA 11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F 30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D'\n// Adapted from JBrowse1 crc32 implementation.\n// https://github.com/GMOD/jbrowse/blob/b8324df0033796b6d502696dc65c9ff888aae2f3/src/JBrowse/Digest/Crc32.js\n\n/**\n *  Returns an array of bytes given a string\n * @param str - string\n */\nexport function stringToBytes(str: string) {\n  let ch\n  let st\n  let re: number[] = []\n  for (let i = 0; i < str.length; i++) {\n    ch = str.charCodeAt(i) // get char\n    st = [] // set up \"stack\"\n    do {\n      st.push(ch & 0xff) // push byte to stack\n      ch >>= 8 // shift value down by 1 byte\n    } while (ch)\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat(st.reverse())\n  }\n  return re\n}\n\n/**\n * crc32 raw\n * @param bytes - bytes\n * @param start - number\n * @param end - number\n * @param crc - number\n */\nexport function crc32Raw(bytes: number[], start: number, end: number, crc = 0) {\n  let n = 0 // a number between 0 and 255\n  let x // a hex number\n  const table = crc32Table\n\n  crc ^= -1\n  for (let i = start, iTop = end; i < iTop; i++) {\n    n = (crc ^ bytes[i]) & 0xff\n    x = `0x${table.substr(n * 9, 8)}`\n    crc = (crc >>> 8) ^ parseInt(x, 16)\n  }\n  crc ^= -1\n  // convert to unsigned 32-bit int if needed\n  if (crc < 0) {\n    crc += 4294967296\n  }\n  return crc\n}\n\n/**\n * crc32 given a string\n * @param str - string\n * @param crc - number\n */\nexport function crc32(str: string, crc = 0) {\n  const bytes = stringToBytes(str)\n  let n = 0 // a number between 0 and 255\n  let x // a hex number\n  const table = crc32Table\n\n  crc ^= -1\n  for (let i = 0, iTop = bytes.length; i < iTop; i++) {\n    n = (crc ^ bytes[i]) & 0xff\n    x = `0x${table.substr(n * 9, 8)}`\n    crc = (crc >>> 8) ^ parseInt(x, 16)\n  }\n  crc ^= -1\n  // convert to unsigned 32-bit int if needed\n  if (crc < 0) {\n    crc += 4294967296\n  }\n  return crc\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\n * Helper class allows reading names index generated in JBrowse1\n * Adapted from https://github.com/GMOD/jbrowse/blob/master/src/JBrowse/Store/Hash.js\n */\nimport { crc32 } from './Crc32'\n\nexport default class HttpMap {\n  url: string\n\n  isElectron: boolean\n\n  hash_hex_characters?: number\n\n  compress?: number\n\n  tracks?: string[]\n\n  constructor(args: { url: string; isElectron: boolean }) {\n    // make sure url has a trailing slash\n    this.url = /\\/$/.test(args.url) ? args.url : `${args.url}/`\n\n    this.isElectron = args.isElectron\n  }\n\n  /**\n   * loads meta.json file from names directory and reads number of hash_bits used\n   */\n  async readMeta() {\n    try {\n      const meta = await this.loadFile('meta.json')\n      if (meta !== {}) {\n        const { compress, track_names: tracks } = meta\n        this.compress = compress\n        const hashHexCharacters = Math.ceil(meta.hash_bits / 4)\n        this.hash_hex_characters = hashHexCharacters\n        this.tracks = tracks\n        return { hashHexCharacters, compress, tracks }\n      }\n      throw new Error('Error parsing meta.json')\n\n      // const { compress } = meta\n      // this.compress = compress\n      // const hashHexCharacters = Math.ceil(meta.hash_bits / 4)\n      // this.hash_hex_characters = hashHexCharacters\n    } catch (err) {\n      // throw Error(err)\n      console.warn(`Error: ${err}`)\n    }\n    return {}\n  }\n\n  async getHashHexCharacters() {\n    if (this.hash_hex_characters) {\n      return this.hash_hex_characters\n    }\n    const meta = await this.readMeta()\n    return meta.hashHexCharacters\n  }\n\n  async getCompress() {\n    if (this.compress) {\n      return this.compress\n    }\n    const meta = await this.readMeta()\n    return meta.compress\n  }\n\n  async getTrackNames() {\n    if (this.tracks) {\n      return this.tracks\n    }\n    const meta = await this.readMeta()\n    return meta.tracks\n  }\n\n  /**\n   * Returns contents of a bucket given a key\n   * @param key - string\n   */\n  async get(key: string) {\n    const bucket: Record<string, any> = await this.getBucket(key)\n    return bucket[key]\n  }\n\n  /**\n   * Returns a bucket given a key\n   * @param key - string\n   */\n  async getBucket(key: string) {\n    const bucketIdent = this.hash(key)\n    try {\n      const hexToDirPath = await this.hexToDirPath(bucketIdent)\n      const value = await this.loadFile(hexToDirPath)\n      return value\n    } catch (err) {\n      if (this.isElectron || err.status === 404) {\n        // 404 is expected if the name is not in the store\n        return {}\n      }\n    }\n    return {}\n  }\n\n  /**\n   * Loads a file using the url and provided id.\n   * Returns response object with contents of the file\n   * @param id - string\n   */\n  async loadFile(id: string) {\n    const response = await fetch(`${this.url}${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    })\n    try {\n      const data = await response.json()\n      return data\n    } catch (err) {\n      // handle error\n      // throw Error(err)\n      console.warn(`Error: ${err}`)\n    }\n    return {}\n  }\n\n  /**\n   * Returns the corresponding path of the file given a hex string\n   * @param hex - hex string\n   */\n  async hexToDirPath(hex: string) {\n    // zero-pad the hex string to be 8 chars if necessary\n    const hashHexCharacters = await this.getHashHexCharacters()\n    if (hashHexCharacters) {\n      const compress = await this.getCompress()\n      while (hex.length < 8) {\n        hex = `0${hex}`\n      }\n      hex = hex.substr(8 - hashHexCharacters)\n      const dirpath = []\n      for (let i = 0; i < hex.length; i += 3) {\n        dirpath.push(hex.substring(i, i + 3))\n      }\n      return `${dirpath.join('/')}.json${compress ? 'z' : ''}`\n    }\n    return ''\n  }\n\n  /**\n   * Returns crc32 hash given a string.\n   * (Note: this is using JBrowse1 implementation of crc32.)\n   * @param data - string\n   */\n  hash(data: string) {\n    return crc32(data).toString(16).toLowerCase().replace('-', 'n')\n  }\n}\n","import {\n  BaseTextSearchAdapter,\n  BaseArgs,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport BaseResult, {\n  LocStringResult,\n} from '@jbrowse/core/TextSearch/BaseResults'\nimport { isElectron } from '@jbrowse/core/util'\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport MyConfigSchema from './configSchema'\nimport HttpMap from './HttpMap'\n\nexport interface TooManyHits {\n  name: string\n  hitLimit: number\n}\nexport type NamesIndexRecord = string | Array<string | number>\nexport default class JBrowse1TextSearchAdapter\n  extends BaseAdapter\n  implements BaseTextSearchAdapter {\n  /*\n  Jbrowse1 text search adapter\n  Uses index built by generate-names.pl\n   */\n  httpMap: HttpMap\n\n  tracksNames?: string[]\n\n  constructor(config: Instance<typeof MyConfigSchema>) {\n    super(config)\n    const namesIndexLocation = readConfObject(config, 'namesIndexLocation')\n    if (!namesIndexLocation) {\n      throw new Error('must provide namesIndexLocation')\n    }\n    this.httpMap = new HttpMap({\n      url: namesIndexLocation.baseUri\n        ? new URL(namesIndexLocation.uri, namesIndexLocation.baseUri).href\n        : namesIndexLocation.uri,\n      isElectron,\n    })\n  }\n\n  /**\n   * Returns the contents of the file containing the query if it exists\n   * else it returns empty\n   * @param query - string query\n   */\n  async loadIndexFile(query: string) {\n    const bucketContents: Record<\n      string,\n      Record<string, Array<NamesIndexRecord | TooManyHits>>\n    > = await this.httpMap.getBucket(query)\n    return bucketContents\n  }\n\n  /**\n   * Returns list of results\n   * @param args - search options/arguments include: search query\n   * limit of results to return, SearchType...prefix | full | exact\", etc.\n   */\n  async searchIndex(args: BaseArgs) {\n    const { searchType, queryString } = args\n    const tracks = this.tracksNames\n      ? this.tracksNames\n      : await this.httpMap.getTrackNames()\n    const entries = await this.loadIndexFile(queryString)\n    if (entries !== {} && entries[queryString]) {\n      // note: defaults to exact if no searchType is provided\n      return this.formatResults(\n        entries[queryString][searchType || 'exact'],\n        tracks,\n      )\n    }\n    return []\n  }\n  formatResults(\n    results: Array<NamesIndexRecord | TooManyHits>,\n    tracksNames: string[],\n  ) {\n    if (results.length === 0) {\n      return []\n    }\n    const formattedResults = results.map(result => {\n      if (result && Array.isArray(result)) {\n        const name = result[0] as string\n        const trackIndex = result[1] as number\n        const refName = result[3] as string\n        const start = result[4] as number\n        const end = result[5] as number\n        const locstring = `${refName || name}:${start}-${end}`\n        const formattedResult = new LocStringResult({\n          locString: locstring,\n          label: name,\n          matchedAttribute: 'name',\n          matchedObject: result,\n          trackId: tracksNames[trackIndex],\n        })\n        return formattedResult\n      }\n      // {\"name\":\"too many matches\",\"hitLimit\":1}\n      const defaultLabel = typeof result === 'object' ? result.name : result\n      const defaultResult = new BaseResult({\n        label: defaultLabel,\n        matchedAttribute: 'name',\n        matchedObject: { result: result },\n      })\n      return defaultResult\n    })\n    return formattedResults.filter(\n      result => result.getLabel() !== 'too many matches',\n    )\n  }\n\n  freeResources() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'JBrowse1TextSearchAdapter',\n  {\n    // metadata about tracks and assemblies covered by text search adapter\n    namesIndexLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/volvox/names' },\n      description: 'the location of the JBrowse1 names index data directory',\n    },\n    tracks: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of tracks covered by text search adapter',\n    },\n    assemblies: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of assemblies covered by text search adapter',\n    },\n  },\n  { explicitlyTyped: true, explicitIdentifier: 'textSearchAdapterId' },\n)\n","import { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'JBrowse1Connection',\n  {\n    dataDirLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'http://mysite.com/jbrowse/data/' },\n      description:\n        'the location of the JBrowse 1 data directory, often something like http://mysite.com/jbrowse/data/',\n    },\n    assemblyNames: {\n      description:\n        'name of the assembly the connection belongs to, should be a single entry',\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { baseConfiguration: baseConnectionConfig },\n)\n","import getValue from 'get-value'\nimport { Track, Source } from './types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTrack(arg: any): arg is Track {\n  return arg && arg.label && typeof arg.label === 'string'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isSource(arg: any): arg is Source {\n  return arg && arg.url && typeof arg.url === 'string'\n}\n\n/**\n * updates a with values from b, recursively\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Obj = Record<string, any>\nexport function deepUpdate(a: Obj, b: Obj): Obj {\n  for (const prop of Object.keys(b)) {\n    if (\n      prop in a &&\n      typeof b[prop] === 'object' &&\n      typeof a[prop] === 'object'\n    ) {\n      deepUpdate(a[prop], b[prop])\n    } else if (\n      typeof a[prop] === 'undefined' ||\n      typeof b[prop] !== 'undefined'\n    ) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * replace variables in a template string with values\n * @param template - String with variable names in curly brackets\n * e.g., `http://foo/{bar}?arg={baz.foo}`\n * @param fillWith - object with attribute-value mappings\n * e.g., `{ 'bar': 'someurl', 'baz': { 'foo': 42 } }`\n * @returns the template string with variables in fillWith replaced\n * e.g., 'htp://foo/someurl?arg=valueforbaz'\n */\nexport function fillTemplate(template: string, fillWith: Obj): string {\n  return template.replace(\n    /\\{([\\w\\s.]+)\\}/g,\n    (match, varName: string): string => {\n      varName = varName.replace(/\\s+/g, '') // remove all whitespace\n      const fill = getValue(fillWith, varName)\n      if (fill !== undefined) {\n        if (typeof fill === 'function') {\n          return fill(varName)\n        }\n        return fill\n      }\n      if (fillWith.callback) {\n        // @ts-ignore\n        const v = fillWith.callback.call(this, varName)\n        if (v !== undefined) {\n          return v\n        }\n      }\n      return match\n    },\n  )\n}\n\n/**\n * Clones objects (including DOM nodes) and all children.\n * Warning: do not clone cyclic structures\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n * @param src - The object to clone\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function clone(src: any): any {\n  if (\n    !src ||\n    typeof src !== 'object' ||\n    Object.prototype.toString.call(src) === '[object Function]'\n  ) {\n    // null, undefined, any non-object, or function\n    return src // anything\n  }\n  if (src.nodeType && 'cloneNode' in src) {\n    // DOM Node\n    return src.cloneNode(true) // Node\n  }\n  if (src instanceof Date) {\n    // Date\n    return new Date(src.getTime()) // Date\n  }\n  if (src instanceof RegExp) {\n    // RegExp\n    return new RegExp(src) // RegExp\n  }\n  let r\n  let i\n  let l\n  if (Array.isArray(src)) {\n    // array\n    r = []\n    for (i = 0, l = src.length; i < l; ++i) {\n      if (i in src) {\n        r[i] = clone(src[i])\n      }\n    }\n    // we don't clone functions for performance reasons\n    //    }else if(d.isFunction(src)){\n    //      // function\n    //      r = function(){ return src.apply(this, arguments); };\n  } else {\n    // generic objects\n    r = src.constructor ? new src.constructor() : {}\n  }\n  return mixin(r, src, clone)\n}\n\n/**\n * Copies/adds all properties of source to dest; returns dest.\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n *\n * All properties, including functions (sometimes termed \"methods\"), excluding\n * any non-standard extensions found in Object.prototype, are copied/added to\n * dest. Copying/adding each particular property is delegated to copyFunc\n * (if any); copyFunc defaults to the Javascript assignment operator if not\n * provided. Notice that by default, mixin executes a so-called \"shallow copy\"\n * and aggregate types are copied/added by reference.\n * @param dest - The object to which to copy/add all properties contained in\n * source.\n * @param source - The object from which to draw all properties to copy into dest.\n * @param copyFunc - The process used to copy/add a property in source; defaults\n * to the Javascript assignment operator.\n * @returns dest, as modified\n */\nfunction mixin(dest: Obj, source: Obj, copyFunc: Function): Obj {\n  let name\n  let s\n  const empty = {}\n  for (name in source) {\n    // the (!(name in empty) || empty[name] !== s) condition avoids copying\n    // properties in \"source\" inherited from Object.prototype.\t For example,\n    // if dest has a custom toString() method, don't overwrite it with the\n    // toString() method that source inherited from Object.prototype\n    s = source[name]\n    if (\n      !(name in dest) ||\n      // @ts-ignore\n      (dest[name] !== s && (!(name in empty) || empty[name] !== s))\n    ) {\n      dest[name] = copyFunc ? copyFunc(s) : s\n    }\n  }\n\n  return dest // Object\n}\n","/* eslint no-cond-assign: [\"error\", \"except-parens\"] */\nimport getValue from 'get-value'\nimport setValue from 'set-value'\nimport { objectHash } from '@jbrowse/core/util'\nimport { isSource, isTrack } from './util'\nimport { Config, Track, Source, Store, Names } from './types'\n\nexport function parseJB1Json(config: Config | string, url: string): Config {\n  if (typeof config === 'string') {\n    let parsedConf\n    try {\n      parsedConf = JSON.parse(config)\n    } catch (error) {\n      throw new Error(`${error} when parsing configuration.`)\n    }\n    return regularizeConf(parsedConf, url)\n  }\n  return regularizeConf(config, url)\n}\n\nexport function parseJB1Conf(config: string, url: string): Config {\n  let parsedConf\n  try {\n    parsedConf = parse(config, url)\n  } catch (error) {\n    throw new Error(`${error} when parsing configuration.`)\n  }\n  return regularizeConf(parsedConf, url)\n}\n\nfunction isAlwaysArray(varName: string): boolean {\n  if (varName === 'include') {\n    return true\n  }\n  return false\n}\n\nfunction parse(text: string, url: string): Config {\n  let section: string[] = []\n  let keyPath: string[] | undefined\n  let operation: string\n  let value: string | undefined\n  const data: Config = { tracks: {} }\n  let lineNumber: number\n\n  function recordVal(): void {\n    if (value !== undefined) {\n      let parsedValue:\n        | string\n        | number\n        | boolean\n        | string[]\n        | number[]\n        | boolean[]\n      try {\n        // parse json\n        const match = value.match(/^json:(.+)/i)\n        if (match) {\n          parsedValue = JSON.parse(match[1])\n        }\n        // parse numbers if it looks numeric\n        else if (/^[+-]?[\\d.,]+([eE][-+]?\\d+)?$/.test(value)) {\n          parsedValue = parseFloat(value.replace(/,/g, ''))\n        } else {\n          parsedValue = value\n        }\n\n        if (!keyPath) {\n          throw new Error(`Error parsing in section ${section.join(' - ')}`)\n        }\n        const path = section.concat(keyPath).join('.')\n        if (operation === '+=') {\n          let existing = getValue(data, path)\n          if (existing) {\n            if (!Array.isArray(existing)) {\n              existing = [existing]\n            }\n          } else {\n            existing = []\n          }\n\n          existing.push(parsedValue)\n          parsedValue = existing\n        }\n        if (parsedValue === 'true') {\n          parsedValue = true\n        }\n        if (parsedValue === 'false') {\n          parsedValue = false\n        }\n        setValue(data, path, parsedValue)\n      } catch (e) {\n        throw new Error(\n          `syntax error${url ? ` in ${url}` : ''}${\n            lineNumber ? ` at line ${lineNumber - 1}` : ''\n          }`,\n        )\n      }\n    }\n  }\n\n  text.split('\\n').forEach((textLine, i): void => {\n    lineNumber = i + 1\n    const line = textLine.replace(/^\\s*#.+/, '')\n\n    // new section\n    let match: RegExpMatchArray | null\n    if ((match = line.match(/^\\s*\\[([^\\]]+)/))) {\n      // new section\n      recordVal()\n      keyPath = undefined\n      value = undefined\n      section = match[1].trim().split(/\\s*\\.\\s*/)\n      if (section.length === 1 && section[0].toLowerCase() === 'general') {\n        section = []\n      }\n    }\n    // new value\n    else if (\n      (match = line.match(\n        value === undefined ? /^([^+=]+)(\\+?=)(.*)/ : /^(\\S[^+=]+)(\\+?=)(.*)/,\n      ))\n    ) {\n      recordVal()\n      keyPath = match[1].trim().split(/\\s*\\.\\s*/)\n      ;[, , operation] = match\n      if (isAlwaysArray(section.concat(keyPath).join('.'))) {\n        operation = '+='\n      }\n      value = match[3].trim()\n    }\n    // add to existing array value\n    else if (\n      keyPath !== undefined &&\n      (match = line.match(/^\\s{0,4}\\+\\s*(.+)/))\n    ) {\n      recordVal()\n      operation = '+='\n      value = match[1].trim()\n    }\n    // add to existing value\n    else if (value !== undefined && (match = line.match(/^\\s+(\\S.*)/))) {\n      value += value.length ? ` ${match[1].trim()}` : match[1].trim()\n    }\n    // done with last value\n    else {\n      recordVal()\n      keyPath = undefined\n      value = undefined\n    }\n  })\n\n  recordVal()\n\n  return data\n}\n\n/**\n * Applies defaults and any other necessary tweaks to the loaded configuration.\n * @param conf - the object containing the configuration, which it modifies\n * in-place\n * @param url - URL of the config file\n * @returns the same object it was passed\n */\nexport function regularizeConf(conf: Config, url: string): Config {\n  // if tracks is not an array, convert it to one\n  if (conf.tracks && !Array.isArray(conf.tracks)) {\n    // if it's a single track config, wrap it in an arrayref\n    if (isTrack(conf.tracks)) {\n      conf.tracks = [conf.tracks]\n    }\n    // otherwise, coerce it to an array\n    else {\n      const tracks: Track[] = []\n      for (const label of Object.keys(conf.tracks)) {\n        const track = conf.tracks[label]\n        if (isTrack(track)) {\n          tracks.push(track)\n        } else {\n          tracks.push({ label, ...track })\n        }\n      }\n      conf.tracks = tracks\n    }\n  }\n\n  // regularize trackMetadata.sources\n  const meta = conf.trackMetadata\n  if (meta && meta.sources) {\n    // if it's a single source config, wrap it in an arrayref\n    if (typeof meta.sources === 'string') {\n      meta.sources = [meta.sources]\n    }\n    if (isSource(meta.sources)) {\n      meta.sources = [meta.sources]\n    }\n\n    if (!Array.isArray(meta.sources)) {\n      const sources: Source[] = []\n      for (const name of Object.keys(meta.sources)) {\n        const source = meta.sources[name]\n        if (!('name' in source)) {\n          source.name = name\n        }\n        sources.push(source)\n      }\n      meta.sources = sources\n    }\n\n    // coerce any string source defs to be URLs, and try to detect their types\n    meta.sources = meta.sources.map(\n      (sourceDef: string | Source): Source => {\n        if (typeof sourceDef === 'string') {\n          const newSourceDef: Source = { url: sourceDef }\n          const typeMatch = sourceDef.match(/\\.(\\w+)$/)\n          if (typeMatch) {\n            newSourceDef.type = typeMatch[1].toLowerCase()\n          }\n          return newSourceDef\n        }\n        return sourceDef\n      },\n    )\n  }\n\n  conf.sourceUrl = conf.sourceUrl || url\n  if (conf.sourceUrl.startsWith('/')) {\n    conf.sourceUrl = new URL(conf.sourceUrl, window.location.href).href\n  }\n  conf.baseUrl = conf.baseUrl || new URL('.', conf.sourceUrl).href\n  if (conf.baseUrl.length && !conf.baseUrl.endsWith('/')) {\n    conf.baseUrl += '/'\n  }\n\n  if (conf.sourceUrl) {\n    // set a default baseUrl in each of the track and store confs, and the names\n    // conf, if needed\n    const addBase: (Track | Store | Names)[] = []\n    if (conf.tracks) {\n      addBase.push(...conf.tracks)\n    }\n    if (conf.stores) {\n      addBase.push(...Object.values(conf.stores))\n    }\n    if (conf.names) {\n      addBase.push(conf.names)\n    }\n\n    addBase.forEach((t): void => {\n      if (!t.baseUrl) {\n        t.baseUrl = conf.baseUrl || '/'\n      }\n    })\n\n    // resolve the refSeqs and nameUrl if present\n    if (conf.refSeqs && typeof conf.refSeqs === 'string') {\n      conf.refSeqs = new URL(conf.refSeqs, conf.sourceUrl).href\n    }\n    if (conf.nameUrl) {\n      conf.nameUrl = new URL(conf.nameUrl, conf.sourceUrl).href\n    }\n  }\n\n  conf.stores = conf.stores || {}\n  ;(conf.tracks || []).forEach((trackConfig: Track): void => {\n    // if there is a `config` subpart, just copy its keys in to the top-level\n    // config\n    if (trackConfig.config) {\n      const c = trackConfig.config\n      delete trackConfig.config\n      trackConfig = { ...c, ...trackConfig }\n    }\n\n    // skip if it's a new-style track def\n    if (trackConfig.store) {\n      return\n    }\n\n    let trackClassName: string\n    if (trackConfig.type === 'FeatureTrack') {\n      trackClassName = 'JBrowse/View/Track/HTMLFeatures'\n    } else if (trackConfig.type === 'ImageTrack') {\n      trackClassName = 'JBrowse/View/Track/FixedImage'\n    } else if (trackConfig.type === 'ImageTrack.Wiggle') {\n      trackClassName = 'JBrowse/View/Track/FixedImage/Wiggle'\n    } else if (trackConfig.type === 'SequenceTrack') {\n      trackClassName = 'JBrowse/View/Track/Sequence'\n    } else {\n      trackClassName = regularizeClass('JBrowse/View/Track', trackConfig.type)\n    }\n\n    trackConfig.type = trackClassName\n\n    synthesizeTrackStoreConfig(conf, trackConfig)\n\n    if (trackConfig.histograms) {\n      if (!trackConfig.histograms.baseUrl) {\n        trackConfig.histograms.baseUrl = trackConfig.baseUrl\n      }\n      synthesizeTrackStoreConfig(conf, trackConfig.histograms)\n    }\n  })\n\n  return conf\n}\n\n/**\n * prefix class name with `root` if it contains no slashes\n * @param root - Prefix root\n * @param className - class name\n */\nfunction regularizeClass(root: string, className: string | undefined): string {\n  if (!className) {\n    return ''\n  }\n  if (!className.includes('/')) {\n    className = `${root}/${className}`\n  }\n  className = className.replace(/^\\//, '')\n  return className\n}\n\nfunction guessStoreClass(\n  trackConfig: Track | undefined,\n  urlTemplate: string,\n): string {\n  if (!trackConfig) {\n    return ''\n  }\n  if (trackConfig.type && trackConfig.type.includes('/FixedImage')) {\n    return `JBrowse/Store/TiledImage/Fixed${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.jsonz?$/i.test(urlTemplate)) {\n    return `JBrowse/Store/SeqFeature/NCList${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.bam$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BAM'\n  }\n  if (/\\.cram$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/CRAM'\n  }\n  if (/\\.gff3?$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3'\n  }\n  if (/\\.bed$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BED'\n  }\n  if (/\\.vcf.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/VCFTabix'\n  }\n  if (/\\.gff3?.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3Tabix'\n  }\n  if (/\\.bed.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BEDTabix'\n  }\n  if (/\\.(bw|bigwig)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigWig'\n  }\n  if (/\\.(bb|bigbed)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigBed'\n  }\n  if (/\\.(fa|fasta)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/IndexedFasta'\n  }\n  if (/\\.(fa|fasta)\\.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BgzipIndexedFasta'\n  }\n  if (/\\.2bit$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/TwoBit'\n  }\n  if (trackConfig.type && trackConfig.type.endsWith('/Sequence')) {\n    return 'JBrowse/Store/Sequence/StaticChunked'\n  }\n  return ''\n}\n\nfunction synthesizeTrackStoreConfig(\n  mainConf: Config,\n  trackConfig: Track,\n): void {\n  // figure out what data store class to use with the track, applying some\n  // defaults if it is not explicit in the configuration\n  const { urlTemplate = '' } = trackConfig\n\n  let storeClass: string\n  if (trackConfig.storeClass) {\n    storeClass = regularizeClass('JBrowse/Store', trackConfig.storeClass)\n  } else {\n    storeClass = guessStoreClass(trackConfig, urlTemplate)\n  }\n\n  if (!storeClass) {\n    console.warn(\n      `Unable to determine an appropriate data store to use with track '${trackConfig.label}', please explicitly specify a storeClass in the configuration.`,\n    )\n    return\n  }\n\n  // synthesize a separate store conf\n  const storeConf: Store = { ...trackConfig, type: storeClass }\n\n  // if this is the first sequence store we see, and we have no refseqs store\n  // defined explicitly, make this the refseqs store.\n  if (\n    (storeClass === 'JBrowse/Store/Sequence/StaticChunked' ||\n      storeClass === 'JBrowse/Store/Sequence/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/TwoBit' ||\n      storeClass === 'JBrowse/Store/Sequence/TwoBit' ||\n      trackConfig.useAsRefSeqStore) &&\n    !(mainConf.stores && mainConf.stores.refseqs)\n  ) {\n    storeConf.name = 'refseqs'\n  } else {\n    storeConf.name = `store${objectHash(storeConf)}`\n  }\n  // record it\n  if (!mainConf.stores) {\n    mainConf.stores = {}\n  }\n  mainConf.stores[storeConf.name] = storeConf\n\n  // connect it to the track conf\n  trackConfig.store = storeConf.name\n}\n","import { openLocation } from '@jbrowse/core/util/io'\nimport { parseJB1Json, parseJB1Conf, regularizeConf } from './jb1ConfigParse'\nimport { clone, deepUpdate, fillTemplate } from './util'\nimport {\n  JBLocation,\n  UriLocation,\n  LocalPathLocation,\n  Config,\n  Track,\n  Include,\n} from './types'\n\nfunction isUriLocation(location: JBLocation): location is UriLocation {\n  return (location as UriLocation).uri !== undefined\n}\n\nfunction isLocalPathLocation(\n  location: JBLocation,\n): location is LocalPathLocation {\n  return (location as LocalPathLocation).localPath !== undefined\n}\n\nexport async function fetchJb1(\n  dataRoot: JBLocation = { uri: '' },\n  baseConfig: Config = {\n    include: ['{dataRoot}/trackList.json', '{dataRoot}/tracks.conf'],\n  },\n  baseConfigRoot: JBLocation = { uri: '' },\n): Promise<Config> {\n  const protocol = 'uri' in dataRoot ? 'uri' : 'localPath'\n  const dataRootReg = JSON.parse(JSON.stringify(dataRoot))\n  let dataRootLocation = ''\n  if (isUriLocation(dataRoot)) {\n    dataRootLocation = dataRoot.uri\n  }\n  if (isLocalPathLocation(dataRoot)) {\n    dataRootLocation = dataRoot.localPath\n  }\n  if (dataRootLocation.endsWith('/')) {\n    dataRootReg[protocol] = dataRootLocation.slice(\n      0,\n      dataRootLocation.length - 1,\n    )\n  }\n  if (\n    (isUriLocation(baseConfigRoot) && baseConfigRoot.uri) ||\n    (isLocalPathLocation(baseConfigRoot) && baseConfigRoot.localPath)\n  ) {\n    const baseProtocol = 'uri' in baseConfigRoot ? 'uri' : 'localPath'\n    let baseConfigLocation = ''\n    if (isUriLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.uri\n    }\n    if (isLocalPathLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.localPath\n    }\n    if (baseConfigLocation.endsWith('/')) {\n      baseConfigLocation = baseConfigLocation.slice(\n        0,\n        baseConfigLocation.length - 1,\n      )\n    }\n    let newConfig: Config = {}\n    for (const conf of ['jbrowse.conf', 'jbrowse_conf.json']) {\n      let fetchedConfig = null\n      try {\n        // @ts-ignore\n        fetchedConfig = await fetchConfigFile({\n          [baseProtocol]: `${baseConfigLocation}/${conf}`,\n        })\n      } catch (error) {\n        console.error(\n          `tried to access ${baseConfigLocation}/${conf}, but failed`,\n        )\n      }\n      newConfig = mergeConfigs(newConfig, fetchedConfig) || {}\n    }\n    if (dataRootReg[protocol]) {\n      newConfig.dataRoot = dataRootReg[protocol]\n    }\n    return createFinalConfig(newConfig)\n  }\n  const newConfig = regularizeConf(baseConfig, window.location.href)\n  if (dataRootReg[protocol]) {\n    newConfig.dataRoot = dataRootReg[protocol]\n  }\n  return createFinalConfig(newConfig)\n}\n\nexport async function createFinalConfig(\n  baseConfig: Config,\n  defaults = configDefaults,\n): Promise<Config> {\n  const configWithDefaults = deepUpdate(clone(defaults), baseConfig)\n  let finalConfig = await loadIncludes(configWithDefaults)\n  finalConfig = mergeConfigs(finalConfig, baseConfig) || finalConfig\n  fillTemplates(finalConfig, finalConfig)\n  validateConfig(finalConfig)\n  return finalConfig\n}\n\nexport async function fetchConfigFile(location: JBLocation): Promise<Config> {\n  const result = await openLocation(location).readFile('utf8')\n  if (typeof result !== 'string') {\n    throw new Error(`Error opening location: ${location}`)\n  }\n  if (isUriLocation(location)) {\n    return parseJb1(result, location.uri)\n  }\n  if (isLocalPathLocation(location)) {\n    return parseJb1(result, location.localPath)\n  }\n  return parseJb1(result)\n}\n\nexport function parseJb1(config: string, url = ''): Config {\n  if (config.trim().startsWith('{')) {\n    return parseJB1Json(config, url)\n  }\n  return parseJB1Conf(config, url)\n}\n\n/**\n * Merges config object b into a. Properties in b override those in a.\n */\nfunction mergeConfigs(a: Config | null, b: Config | null): Config | null {\n  if (b === null) {\n    return null\n  }\n\n  if (a === null) {\n    a = {}\n  }\n\n  for (const prop of Object.keys(b)) {\n    if (prop === 'tracks' && prop in a) {\n      const aTracks = a[prop] || []\n      const bTracks = b[prop] || []\n      if (Array.isArray(aTracks) && Array.isArray(bTracks)) {\n        a[prop] = mergeTrackConfigs(aTracks || [], bTracks || [])\n      } else {\n        throw new Error(\n          `Track config has not been properly regularized: ${aTracks} ${bTracks}`,\n        )\n      }\n    } else if (\n      !noRecursiveMerge(prop) &&\n      prop in a &&\n      // @ts-ignore\n      typeof b[prop] === 'object' &&\n      // @ts-ignore\n      typeof a[prop] === 'object'\n    ) {\n      // @ts-ignore\n      a[prop] = deepUpdate(a[prop], b[prop])\n    } else if (prop === 'dataRoot') {\n      if (\n        a[prop] === undefined ||\n        (a[prop] === 'data' && b[prop] !== undefined)\n      ) {\n        a[prop] = b[prop]\n      }\n      // @ts-ignore\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      // @ts-ignore\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Special-case merging of two `tracks` configuration arrays.\n */\nfunction mergeTrackConfigs(a: Track[], b: Track[]): Track[] {\n  if (!b.length) {\n    return a\n  }\n\n  // index the tracks in `a` by track label\n  const aTracks: Record<string, Track> = {}\n  a.forEach((t, i): void => {\n    t.index = i\n    aTracks[t.label] = t\n  })\n\n  b.forEach((bT): void => {\n    const aT = aTracks[bT.label]\n    if (aT) {\n      mergeConfigs(aT, bT)\n    } else {\n      a.push(bT)\n    }\n  })\n\n  return a\n}\n\n/**\n * Recursively fetch, parse, and merge all the includes in the given config\n * object.  Calls the callback with the resulting configuration when finished.\n * @param inputConfig - Config to load includes into\n */\nasync function loadIncludes(inputConfig: Config): Promise<Config> {\n  inputConfig = clone(inputConfig)\n\n  async function loadRecur(\n    config: Config,\n    upstreamConf: Config,\n  ): Promise<Config> {\n    const sourceUrl = config.sourceUrl || config.baseUrl\n    if (!sourceUrl) {\n      throw new Error(\n        `Could not determine source URL: ${JSON.stringify(config)}`,\n      )\n    }\n    const newUpstreamConf = mergeConfigs(clone(upstreamConf), config)\n    if (!newUpstreamConf) {\n      throw new Error('Problem merging configs')\n    }\n    const includes = fillTemplates(\n      regularizeIncludes(config.include || []),\n      newUpstreamConf,\n    )\n    delete config.include\n\n    const loads = includes.map(\n      async (include): Promise<Config> => {\n        include.cacheBuster = inputConfig.cacheBuster\n        const includedData = await fetchConfigFile({\n          uri: new URL(include.url, sourceUrl).href,\n        })\n        return loadRecur(includedData, newUpstreamConf)\n      },\n    )\n    const includedDataObjects = await Promise.all(loads)\n    includedDataObjects.forEach((includedData): void => {\n      config = mergeConfigs(config, includedData) || config\n    })\n    return config\n  }\n\n  return loadRecur(inputConfig, {})\n}\n\nfunction regularizeIncludes(\n  includes: Include | string | (Include | string)[] | null,\n): Include[] {\n  if (!includes) {\n    return []\n  }\n\n  // coerce include to an array\n  if (!Array.isArray(includes)) {\n    includes = [includes]\n  }\n\n  return includes.map(\n    (include): Include => {\n      // coerce bare strings in the includes to URLs\n      if (typeof include === 'string') {\n        include = { url: include }\n      }\n\n      // set defaults for format and version\n      if (!('format' in include)) {\n        include.format = include.url.endsWith('.conf') ? 'conf' : 'JB_json'\n      }\n      if (include.format === 'JB_json' && !('version' in include)) {\n        include.version = 1\n      }\n      return include\n    },\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction fillTemplates<T extends any>(subconfig: T, config: Config): T {\n  if (!subconfig) {\n    return subconfig\n  }\n  if (Array.isArray(subconfig)) {\n    for (let i = 0; i < subconfig.length; i += 1) {\n      subconfig[i] = fillTemplates(subconfig[i], config)\n    }\n  } else if (typeof subconfig === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const sub = subconfig as Record<string, any>\n    for (const name of Object.keys(sub)) {\n      sub[name] = fillTemplates(sub[name], config)\n    }\n  } else if (typeof subconfig === 'string') {\n    // @ts-ignore\n    return fillTemplate(subconfig, config)\n  }\n\n  return subconfig\n}\n\n/**\n * list of config properties that should not be recursively merged\n * @param propName - name of config property\n */\nfunction noRecursiveMerge(propName: string): boolean {\n  return propName === 'datasets'\n}\n\nconst configDefaults = {\n  tracks: [],\n\n  containerID: 'GenomeBrowser',\n  dataRoot: 'data',\n  show_tracklist: true,\n  show_nav: true,\n  show_menu: true,\n  show_overview: true,\n  show_fullviewlink: true,\n  update_browser_title: true,\n  updateBrowserURL: true,\n\n  refSeqs: '{dataRoot}/seq/refSeqs.json',\n  include: ['jbrowse.conf', 'jbrowse_conf.json'],\n  nameUrl: '{dataRoot}/names/root.json',\n\n  datasets: {\n    _DEFAULT_EXAMPLES: true,\n    volvox: { url: '?data=sample_data/json/volvox', name: 'Volvox Example' },\n    modencode: {\n      url: '?data=sample_data/json/modencode',\n      name: 'MODEncode Example',\n    },\n    yeast: { url: '?data=sample_data/json/yeast', name: 'Yeast Example' },\n  },\n\n  highlightSearchedRegions: false,\n  highResolutionMode: 'auto',\n}\n\n/**\n * Examine the loaded and merged configuration for errors.  Throws\n * exceptions if it finds anything amiss.\n * @returns nothing meaningful\n */\nfunction validateConfig(config: Config): void {\n  if (!config.tracks) {\n    config.tracks = []\n  }\n  if (!config.baseUrl) {\n    throw new Error('Must provide a `baseUrl` in configuration')\n  }\n}\n","import { openLocation } from '@jbrowse/core/util/io'\nimport { objectHash } from '@jbrowse/core/util'\nimport {\n  generateUnknownTrackConf,\n  generateUnsupportedTrackConf,\n  guessAdapter,\n  guessTrackType,\n  UNKNOWN,\n  UNSUPPORTED,\n} from '@jbrowse/core/util/tracks'\nimport { Track, RefSeqs, RefSeq } from './types'\n\ninterface Jb2Track {\n  trackId: string\n  name: string\n  description?: string\n  category?: string[]\n  adapter?: Jb2Adapter\n  type?: string\n  defaultRendering?: string\n}\n\ninterface Jb2Adapter {\n  type: string\n  features?: Jb2Feature[]\n  bamLocation?: Jb2Location\n  cramLocation?: Jb2Location\n  craiLocation?: Jb2Location\n  fastaLocation?: Jb2Location\n  faiLocation?: Jb2Location\n  gziLocation?: Jb2Location\n  twoBitLocation?: Jb2Location\n  bigWigLocation?: Jb2Location\n  bigBedLocation?: Jb2Location\n  vcfGzLocation?: Jb2Location\n  gffGzLocation?: Jb2Location\n  bedGzLocation?: Jb2Location\n  index?: { location: Jb2Location; indexType?: string }\n  rootUrlTemplate?: Jb2Location\n  sequenceAdapter?: Jb2Adapter\n}\n\ninterface Jb2Feature {\n  refName: string\n  uniqueId: string\n  start: number\n  end: number\n}\n\ninterface Jb2Location {\n  uri?: string\n  localPath?: string\n  blobId?: string\n}\n\nexport function convertTrackConfig(\n  jb1TrackConfig: Track,\n  dataRoot: string,\n  sequenceAdapter: Jb2Adapter,\n): Jb2Track {\n  const jb2TrackConfig: Jb2Track = {\n    trackId: objectHash(jb1TrackConfig),\n    name: jb1TrackConfig.key || jb1TrackConfig.label,\n  }\n\n  const description =\n    jb1TrackConfig.metadata &&\n    (jb1TrackConfig.metadata.description || jb1TrackConfig.metadata.Description)\n  if (description) {\n    jb2TrackConfig.description = description\n  }\n\n  const category =\n    jb1TrackConfig.category ||\n    (jb1TrackConfig.metadata && jb1TrackConfig.metadata.category)\n  jb2TrackConfig.category = category ? category.split(/\\s*\\/\\s*/) : []\n\n  const { storeClass } = jb1TrackConfig\n  if (!jb1TrackConfig.urlTemplate) {\n    if (!(storeClass && storeClass.endsWith('FromConfig'))) {\n      const trackIdentifier = jb1TrackConfig.key || jb1TrackConfig.label\n      console.warn(\n        `Could not import JBrowse1 track \"${trackIdentifier}\" because it does not have a \"urlTemplate\" or is not a \"FromConfig\" track`,\n      )\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        trackIdentifier,\n        jb2TrackConfig.category,\n      )\n    }\n    return generateFromConfigTrackConfig(jb1TrackConfig, jb2TrackConfig)\n  }\n\n  const resolveUrlTemplate = (urlTemplate: string) => {\n    return new URL(urlTemplate, `${dataRoot}/`).href\n      .replace(/%7B/gi, '{')\n      .replace(/%7D/gi, '}')\n  }\n  const urlTemplate = resolveUrlTemplate(jb1TrackConfig.urlTemplate)\n\n  if (storeClass) {\n    if (storeClass === 'JBrowse/Store/SeqFeature/BAM') {\n      const adapter: Jb2Adapter = {\n        type: 'BamAdapter',\n        bamLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.baiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.baiUrlTemplate) },\n        }\n      } else if (jb1TrackConfig.csiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate) },\n          indexType: 'CSI',\n        }\n      } else {\n        adapter.index = { location: { uri: `${urlTemplate}.bai` } }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'AlignmentsTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/CRAM') {\n      const adapter: Jb2Adapter = {\n        type: 'CramAdapter',\n        cramLocation: { uri: urlTemplate },\n        sequenceAdapter,\n      }\n      if (jb1TrackConfig.craiUrlTemplate) {\n        adapter.craiLocation = {\n          uri: resolveUrlTemplate(jb1TrackConfig.craiUrlTemplate),\n        }\n      } else {\n        adapter.craiLocation = { uri: `${urlTemplate}.crai` }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'AlignmentsTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/NCList') {\n      return {\n        ...jb2TrackConfig,\n        type: 'FeatureTrack',\n        adapter: {\n          type: 'NCListAdapter',\n          rootUrlTemplate: { uri: urlTemplate },\n        },\n      }\n    }\n    if (\n      storeClass === 'JBrowse/Store/SeqFeature/BigWig' ||\n      storeClass === 'JBrowse/Store/BigWig'\n    ) {\n      if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('XYPlot')) {\n        jb2TrackConfig.defaultRendering = 'xyplot'\n      } else if (\n        jb1TrackConfig.type &&\n        jb1TrackConfig.type.endsWith('Density')\n      ) {\n        jb2TrackConfig.defaultRendering = 'density'\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'QuantitativeTrack',\n        adapter: {\n          type: 'BigWigAdapter',\n          bigWigLocation: { uri: urlTemplate },\n        },\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/VCFTabix') {\n      const adapter: Jb2Adapter = {\n        type: 'VcfTabixAdapter',\n        vcfGzLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.tbiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate) },\n        }\n      } else if (jb1TrackConfig.csiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate) },\n          indexType: 'CSI',\n        }\n      } else {\n        adapter.index = { location: { uri: `${urlTemplate}.tbi` } }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'VariantTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/VCFTribble') {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `VCFTribble (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/GFF3') {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `GFF3 (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/BigBed') {\n      return {\n        ...jb2TrackConfig,\n        type: 'FeatureTrack',\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: { uri: urlTemplate },\n        },\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/GFF3Tabix') {\n      const adapter: Jb2Adapter = {\n        type: 'Gff3TabixAdapter',\n        gffGzLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.tbiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate) },\n        }\n      } else if (jb1TrackConfig.csiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate) },\n          indexType: 'CSI',\n        }\n      } else {\n        adapter.index = { location: { uri: `${urlTemplate}.tbi` } }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'FeatureTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/BED') {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `BED (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/BEDTabix') {\n      const adapter: Jb2Adapter = {\n        type: 'BedTabixAdapter',\n        bedGzLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.tbiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate) },\n        }\n      } else if (jb1TrackConfig.csiUrlTemplate) {\n        adapter.index = {\n          location: { uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate) },\n          indexType: 'CSI',\n        }\n      } else {\n        adapter.index = { location: { uri: `${urlTemplate}.tbi` } }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'FeatureTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/GTF') {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `GTF (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (\n      storeClass === 'JBrowse/Store/SeqFeature/StaticChunked' ||\n      storeClass === 'JBrowse/Store/Sequence/StaticChunked'\n    ) {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `StaticChunked (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/UnindexedFasta') {\n      return generateUnsupportedTrackConf(\n        jb2TrackConfig.name,\n        `UnindexedFasta (${urlTemplate})`,\n        jb2TrackConfig.category,\n      )\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta') {\n      const adapter: Jb2Adapter = {\n        type: 'IndexedFastaAdapter',\n        fastaLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.faiUrlTemplate) {\n        adapter.faiLocation = {\n          uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n        }\n      } else {\n        adapter.faiLocation = { uri: `${urlTemplate}.fai` }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'SequenceTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta') {\n      const adapter: Jb2Adapter = {\n        type: 'BgzipFastaAdapter',\n        fastaLocation: { uri: urlTemplate },\n      }\n      if (jb1TrackConfig.faiUrlTemplate) {\n        adapter.faiLocation = {\n          uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n        }\n      } else {\n        adapter.faiLocation = { uri: `${urlTemplate}.fai` }\n      }\n      if (jb1TrackConfig.gziUrlTemplate) {\n        adapter.gziLocation = {\n          uri: resolveUrlTemplate(jb1TrackConfig.gziUrlTemplate),\n        }\n      } else {\n        adapter.gziLocation = { uri: `${urlTemplate}.gzi` }\n      }\n      return {\n        ...jb2TrackConfig,\n        type: 'ReferenceSequenceTrack',\n        adapter,\n      }\n    }\n    if (storeClass === 'JBrowse/Store/SeqFeature/TwoBit') {\n      return {\n        ...jb2TrackConfig,\n        type: 'ReferenceSequenceTrack',\n        adapter: {\n          type: 'TwoBitAdapter',\n          twoBitLocation: { uri: urlTemplate },\n        },\n      }\n    }\n  }\n\n  // If we don't recogize the store class, make a best effort to guess by file type\n  jb2TrackConfig.adapter = guessAdapter(\n    { uri: urlTemplate },\n    undefined,\n    () => urlTemplate,\n  )\n  if (!jb2TrackConfig.adapter) {\n    throw new Error('Could not determine adapter')\n  }\n\n  if (jb2TrackConfig.adapter.type === UNSUPPORTED) {\n    return generateUnsupportedTrackConf(\n      jb2TrackConfig.name,\n      urlTemplate,\n      jb2TrackConfig.category,\n    )\n  }\n  if (jb2TrackConfig.adapter.type === UNKNOWN) {\n    return generateUnknownTrackConf(\n      jb2TrackConfig.name,\n      urlTemplate,\n      jb2TrackConfig.category,\n    )\n  }\n\n  jb2TrackConfig.type = guessTrackType(jb2TrackConfig.adapter.type)\n\n  if (jb2TrackConfig.type === 'QuantitativeTrack') {\n    if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('XYPlot')) {\n      jb2TrackConfig.defaultRendering = 'xyplot'\n    } else if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('Density')) {\n      jb2TrackConfig.defaultRendering = 'density'\n    }\n  }\n\n  return jb2TrackConfig\n}\n\nfunction generateFromConfigTrackConfig(\n  jb1TrackConfig: Track,\n  jb2TrackConfig: Jb2Track,\n): Jb2Track {\n  const jb1Features = jb1TrackConfig.features || []\n  const jb2Features = jb1Features.map(\n    (feature): Jb2Feature => {\n      const jb2Feature: Jb2Feature = JSON.parse(JSON.stringify(feature))\n      jb2Feature.refName = feature.seq_id\n      jb2Feature.uniqueId = `${feature.seq_id}:${feature.start}-${\n        feature.end\n      }:${feature.name || ''}`\n      return jb2Feature\n    },\n  )\n  jb2TrackConfig.adapter = {\n    type: 'FromConfigAdapter',\n    features: jb2Features,\n  }\n  jb2TrackConfig.type = 'FeatureTrack'\n  return jb2TrackConfig\n}\n\nexport async function createRefSeqsAdapter(\n  refSeqs: string | RefSeqs,\n): Promise<Jb2Adapter> {\n  if (typeof refSeqs === 'string') {\n    // assume refSeqs is a url if it is string\n    refSeqs = {\n      url: refSeqs,\n    }\n  }\n\n  // check refseq urls\n  if (refSeqs.url) {\n    if (refSeqs.url.match(/.fai$/)) {\n      return {\n        type: 'IndexedFastaAdapter',\n        fastaLocation: {\n          uri: refSeqs.url.slice(0, -4),\n        },\n        faiLocation: {\n          uri: refSeqs.url,\n        },\n      }\n    }\n    if (refSeqs.url.match(/.2bit$/)) {\n      return {\n        type: 'TwoBitAdapter',\n        twoBitLocation: { uri: refSeqs.url },\n      }\n    }\n    if (refSeqs.url.match(/.fa$/)) {\n      throw new Error('Unindexed FASTA adapter not available')\n    }\n    if (refSeqs.url.match(/.sizes/)) {\n      throw new Error('chromosome SIZES adapter not available')\n    }\n    const refSeqsJson = await openLocation({ uri: refSeqs.url }).readFile(\n      'utf8',\n    )\n    const refSeqsData: RefSeq[] = JSON.parse(refSeqsJson as string)\n    return refSeqAdapterFromConfig(refSeqsData)\n  }\n  if ('data' in refSeqs) {\n    return refSeqAdapterFromConfig(refSeqs.data || [])\n  }\n  throw new Error(\n    `Could not determine adapter for JBrowse1 refSeqs: ${\n      refSeqs.url || JSON.stringify(refSeqs)\n    }`,\n  )\n}\n\nfunction refSeqAdapterFromConfig(refSeqsData: RefSeq[]): Jb2Adapter {\n  const features = refSeqsData.map(\n    (refSeq): Jb2Feature => ({\n      refName: refSeq.name,\n      uniqueId: refSeq.name,\n      start: refSeq.start,\n      end: refSeq.end,\n    }),\n  )\n  return {\n    type: 'FromConfigAdapter',\n    features,\n  }\n}\n","import {\n  ConfigurationReference,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport { types } from 'mobx-state-tree'\nimport configSchema from './configSchema'\n\nimport { fetchJb1 } from './jb1ConfigLoad'\nimport { convertTrackConfig } from './jb1ToJb2'\n\nexport default function (pluginManager) {\n  return types.compose(\n    'JBrowse1Connection',\n    BaseConnectionModelFactory(pluginManager),\n    types\n      .model({\n        configuration: ConfigurationReference(configSchema),\n        type: types.literal('JBrowse1Connection'),\n      })\n      .actions(self => ({\n        connect() {\n          const dataDirLocation = readConfObject(\n            self.configuration,\n            'dataDirLocation',\n          )\n          const session = getSession(self)\n          fetchJb1(dataDirLocation)\n            .then(config => {\n              const assemblyName = readConfObject(\n                self.configuration,\n                'assemblyNames',\n              )[0]\n              if (!assemblyName) {\n                throw new Error(\n                  'assembly name required for JBrowse 1 connection',\n                )\n              }\n              const assemblyConf = session.assemblies.find(\n                assembly => readConfObject(assembly, 'name') === assemblyName,\n              )\n              const sequenceAdapter = readConfObject(assemblyConf, [\n                'sequence',\n                'adapter',\n              ])\n              const jb2Tracks = config.tracks.map(jb1Track => {\n                const jb2Track = convertTrackConfig(\n                  jb1Track,\n                  config.dataRoot,\n                  sequenceAdapter,\n                )\n                jb2Track.assemblyNames = [assemblyName]\n                return jb2Track\n              })\n              self.setTrackConfs(jb2Tracks)\n            })\n            .catch(error => {\n              console.error(error)\n              session.notify(\n                `There was a problem connecting to the JBrowse 1 data directory \"${self.name}\". Please make sure you have entered a valid location. The error that was thrown is: \"${error}\"`,\n                'error',\n              )\n              session.breakConnection(self.configuration)\n            })\n        },\n      })),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport TextSearchAdapterType from '@jbrowse/core/pluggableElementTypes/TextSearchAdapterType'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { configSchema as ncListAdapterConfigSchema } from './NCListAdapter'\nimport {\n  AdapterClass as JBrowse1TextSearchAdapterClass,\n  configSchema as jbrowse1AdapterConfigSchema,\n} from './JBrowse1TextSeachAdapter'\nimport {\n  configSchema as jbrowse1ConfigSchema,\n  modelFactory as jbrowse1ModelFactory,\n} from './JBrowse1Connection'\n\nexport default class LegacyJBrowsePlugin extends Plugin {\n  name = 'LegacyJBrowsePlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'NCListAdapter',\n          configSchema: ncListAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./NCListAdapter/NCListAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addTextSearchAdapterType(\n      () =>\n        new TextSearchAdapterType({\n          name: 'JBrowse1TextSearchAdapter',\n          configSchema: jbrowse1AdapterConfigSchema,\n          AdapterClass: JBrowse1TextSearchAdapterClass,\n          description: 'A JBrowse 1 text search adapter',\n        }),\n    )\n\n    pluginManager.addConnectionType(\n      () =>\n        new ConnectionType({\n          name: 'JBrowse1Connection',\n          configSchema: jbrowse1ConfigSchema,\n          stateModel: jbrowse1ModelFactory(pluginManager),\n          displayName: 'JBrowse 1 Data',\n          description: 'A JBrowse 1 data directory',\n          url: '//jbrowse.org/',\n        }),\n    )\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles({\n  loading: {\n    paddingLeft: '0.6em',\n    backgroundColor: '#f1f1f1',\n    backgroundImage:\n      'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n    height: '100%',\n    width: '100%',\n    textAlign: 'center',\n  },\n  error: {\n    display: 'block',\n    color: 'red',\n    width: '30em',\n    wordWrap: 'normal',\n    whiteSpace: 'normal',\n  },\n  blockMessage: {\n    background: '#f1f1f1',\n    padding: '10px',\n  },\n  blockError: {\n    background: '#f1f1f1',\n    padding: '10px',\n    color: 'red',\n  },\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const classes = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 300)\n    return () => clearTimeout(timeout)\n  })\n\n  return shown ? (\n    <div data-testid=\"loading-synteny\" className={classes.loading}>\n      Loading &hellip;\n      <LinearProgress />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const classes = useStyles()\n  return <div className={classes.blockMessage}>{messageText}</div>\n}\nBlockMessage.propTypes = {\n  messageText: PropTypes.string.isRequired,\n}\n\nfunction BlockError({ error }: { error: Error }) {\n  const classes = useStyles()\n  return <div className={classes.blockError}>{error.message}</div>\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ServerSideRenderedBlockContent = observer(({ model }: { model: any }) => {\n  if (model.error) {\n    return <BlockError error={model.error} />\n  }\n  if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  }\n  if (!model.filled) {\n    return <LoadingMessage />\n  }\n  return model.reactElement\n})\n\nexport default ServerSideRenderedBlockContent\n","import { observer, PropTypes as MobxPropTypes } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { LinearComparativeDisplay as LCD } from '..'\n\nconst LinearComparativeDisplay: React.FC<{\n  model: LCD\n  children?: React.ReactNode\n}> = props => {\n  const { model, children } = props\n  return (\n    <div>\n      <model.ReactComponent2 {...props} />\n      {children}\n    </div>\n  )\n}\nLinearComparativeDisplay.propTypes = {\n  model: MobxPropTypes.objectOrObservableObject.isRequired,\n  children: PropTypes.element,\n}\n\nLinearComparativeDisplay.defaultProps = {\n  children: null,\n}\nexport default observer(LinearComparativeDisplay)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  getConf,\n  readConfObject,\n  ConfigurationReference,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\nimport { types, getSnapshot, Instance } from 'mobx-state-tree'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport {\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport React from 'react'\nimport { LinearComparativeViewModel } from '../LinearComparativeView/model'\nimport ServerSideRenderedBlockContent from '../ServerSideRenderedBlockContent'\n\nexport { default as ReactComponent } from './components/LinearComparativeDisplay'\n\nexport function configSchemaFactory(pluginManager: any) {\n  return ConfigurationSchema(\n    'LinearComparativeDisplay',\n    { renderer: pluginManager.pluggableConfigSchemaType('renderer') },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n\nexport function stateModelFactory(configSchema: any) {\n  return types\n    .compose(\n      'LinearComparativeDisplay',\n      BaseDisplay,\n      types.model({\n        type: types.literal('LinearComparativeDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        height: 100,\n      }),\n    )\n    .volatile((/* self */) => ({\n      renderInProgress: undefined as AbortController | undefined,\n      filled: false,\n      data: undefined as any,\n      reactElement: undefined as React.ReactElement | undefined,\n      message: undefined as string | undefined,\n      renderingComponent: undefined as any,\n      ReactComponent2: (ServerSideRenderedBlockContent as unknown) as React.FC,\n    }))\n    .views(self => ({\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n      get renderProps() {\n        return {\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n        }\n      },\n    }))\n    .actions(self => {\n      let renderInProgress: undefined | AbortController\n\n      return {\n        afterAttach() {\n          makeAbortableReaction(\n            self as any,\n            renderBlockData as any,\n            renderBlockEffect as any,\n            {\n              name: `${self.type} ${self.id} rendering`,\n              delay: 1000,\n              fireImmediately: true,\n            },\n            this.setLoading,\n            this.setRendered,\n            this.setError,\n          )\n        },\n\n        setLoading(abortController: AbortController) {\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = abortController\n        },\n        setMessage(messageText: string) {\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          self.filled = false\n          self.message = messageText\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n        setRendered(args: {\n          data: any\n          reactElement: React.ReactElement\n          renderingComponent: React.Component\n        }) {\n          const { data, reactElement, renderingComponent } = args\n          self.filled = true\n          self.message = undefined\n          self.reactElement = reactElement\n          self.data = data\n          self.error = undefined\n          self.renderingComponent = renderingComponent\n          renderInProgress = undefined\n        },\n        setError(error: Error) {\n          console.error(error)\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          // the rendering failed for some reason\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = error\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n      }\n    })\n}\nfunction renderBlockData(self: LinearComparativeDisplay) {\n  const { rpcManager } = getSession(self) as any\n  const display = self\n\n  const {\n    renderProps,\n    rendererType,\n  }: { renderProps: any; rendererType: any } = display\n\n  // Alternative to readConfObject(config) is below\n  // used because renderProps is something under our control.\n  // Compare to serverSideRenderedBlock\n  readConfObject(self.configuration)\n\n  const { adapterConfig } = self\n  const parent = getContainingView(self) as LinearComparativeViewModel\n  const sessionId = getRpcSessionId(self)\n  getSnapshot(parent)\n\n  return {\n    rendererType,\n    rpcManager,\n    renderProps: {\n      ...renderProps,\n      view: getSnapshot(parent),\n    },\n    renderArgs: {\n      adapterConfig,\n      rendererType: rendererType.name,\n      sessionId,\n      timeout: 1000000,\n    },\n  }\n}\n\nasync function renderBlockEffect(props: ReturnType<typeof renderBlockData>) {\n  if (!props) {\n    throw new Error('cannot render with no props')\n  }\n\n  const { rendererType, rpcManager, renderProps, renderArgs } = props\n\n  const { reactElement, ...data } = await rendererType.renderInClient(\n    rpcManager,\n    {\n      ...renderArgs,\n      ...renderProps,\n    },\n  )\n\n  return { reactElement, data, renderingComponent: rendererType.ReactComponent }\n}\n\nexport type LinearComparativeDisplayModel = ReturnType<typeof stateModelFactory>\nexport type LinearComparativeDisplay = Instance<LinearComparativeDisplayModel>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { getSession, isSessionModelWithWidgets } from '@jbrowse/core/util'\nimport {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { transaction } from 'mobx'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  types,\n  getParent,\n  onAction,\n  addDisposer,\n  Instance,\n  resolveIdentifier,\n  getPath,\n  SnapshotIn,\n  cast,\n  ISerializedActionCall,\n  getRoot,\n} from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  const { jbrequire } = pluginManager\n  const { ElementId } = jbrequire('@jbrowse/core/util/types/mst')\n\n  const defaultHeight = 400\n  return types\n    .compose(\n      'LinearComparativeView',\n      BaseViewModel,\n      types.model({\n        id: ElementId,\n        type: types.literal('LinearComparativeView'),\n        height: defaultHeight,\n        trackSelectorType: 'hierarchical',\n        showIntraviewLinks: true,\n        linkViews: false,\n        interactToggled: false,\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n        views: types.array(\n          pluginManager.getViewType('LinearGenomeView')\n            .stateModel as LinearGenomeViewStateModel,\n        ),\n\n        // this represents tracks specific to this view\n        // specifically used for read vs ref dotplots where\n        // this track would not really apply elsewhere\n        viewTrackConfigs: types.array(\n          pluginManager.pluggableConfigSchemaType('track'),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      headerHeight: 0,\n      width: 800,\n    }))\n    .views(self => ({\n      get initialized() {\n        return self.views.length > 0\n      },\n\n      get refNames() {\n        return (self.views || []).map(v => [\n          ...new Set(v.staticBlocks.map(m => m.refName)),\n        ])\n      },\n\n      get assemblyNames() {\n        return [...new Set(self.views.map(v => v.assemblyNames).flat())]\n      },\n\n      // // Get a composite map of featureId->feature map for a track\n      // // across multiple views\n      //\n      // getTrackFeatures(trackIds: string[]) {\n      //   // @ts-ignore\n      //   const tracks = trackIds.map(t => resolveIdentifier(getSession(self), t))\n      //   return new CompositeMap<string, Feature>(tracks.map(t => t.features))\n      // },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          onAction(self, (param: ISerializedActionCall) => {\n            if (self.linkViews) {\n              const { name, path, args } = param\n              const actions = [\n                'horizontalScroll',\n                'zoomTo',\n                'setScaleFactor',\n                'showTrack',\n                'hideTrack',\n                'toggleTrack',\n              ]\n              if (actions.includes(name) && path) {\n                this.onSubviewAction(name, path, args)\n              }\n            }\n          }),\n        )\n      },\n\n      // automatically removes session assemblies associated with this view\n      // e.g. read vs ref\n      beforeDestroy() {\n        const session = getSession(self)\n        self.assemblyNames.forEach(name => {\n          if (name.endsWith('-temp')) {\n            session.removeAssembly?.(name)\n          }\n        })\n      },\n\n      onSubviewAction(actionName: string, path: string, args: any[] = []) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (ret.lastIndexOf(path) !== ret.length - path.length) {\n            // @ts-ignore\n            view[actionName](args[0])\n          }\n        })\n      },\n\n      setWidth(newWidth: number) {\n        self.width = newWidth\n        self.views.forEach(v => v.setWidth(newWidth))\n      },\n      setHeight(newHeight: number) {\n        self.height = newHeight\n      },\n\n      setViews(views: SnapshotIn<LinearGenomeViewModel>[]) {\n        self.views = cast(views)\n      },\n\n      removeView(view: LinearGenomeViewModel) {\n        self.views.remove(view)\n      },\n\n      closeView() {\n        getParent(self, 2).removeView(self)\n      },\n\n      setHeaderHeight(height: number) {\n        self.headerHeight = height\n      },\n\n      toggleInteract() {\n        self.interactToggled = !self.interactToggled\n      },\n      toggleIntraviewLinks() {\n        self.showIntraviewLinks = !self.showIntraviewLinks\n      },\n      toggleLinkViews() {\n        self.linkViews = !self.linkViews\n      },\n\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n          return undefined\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = this.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n        }\n      },\n\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        const trackType = pluginManager.getTrackType(configuration.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${configuration.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = viewType.displayTypes.map(\n          displayType => displayType.name,\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n          displays: [{ type: displayConf.type, configuration: displayConf }],\n        })\n        self.tracks.push(track)\n      },\n\n      hideTrack(trackId: string) {\n        const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n          'track',\n        )\n        const configuration = resolveIdentifier(\n          trackConfigSchema,\n          getRoot(self),\n          trackId,\n        )\n        // if we have any tracks with that configuration, turn them off\n        const shownTracks = self.tracks.filter(\n          t => t.configuration === configuration,\n        )\n        transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n        return shownTracks.length\n      },\n    }))\n    .views(self => ({\n      get menuItems(): MenuItem[] {\n        const menuItems: MenuItem[] = []\n        self.views.forEach((view, idx) => {\n          if (view.menuItems) {\n            menuItems.push({\n              label: `View ${idx + 1} Menu`,\n              subMenu: view.menuItems,\n            })\n          }\n        })\n        menuItems.push({\n          label: 'Open track selector',\n          onClick: self.activateTrackSelector,\n          icon: TrackSelectorIcon,\n        })\n        return menuItems\n      },\n    }))\n}\n\nexport type LinearComparativeViewStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearComparativeViewModel = Instance<LinearComparativeViewStateModel>\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport modelFactory from './model'\n\nexport default ({ jbrequire }: PluginManager) => {\n  const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n  return new ViewType({\n    name: 'LinearComparativeView',\n    stateModel: jbrequire(modelFactory),\n    ReactComponent: lazy(() => import('./components/LinearComparativeView')),\n  })\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport {\n  getConf,\n  ConfigurationReference,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getContainingView } from '@jbrowse/core/util'\nimport {\n  configSchemaFactory as baseConfigFactory,\n  stateModelFactory as baseModelFactory,\n} from '../LinearComparativeDisplay'\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\n\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearSyntenyDisplay',\n    {\n      trackIds: {\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'LinearSyntenyRenderer' },\n      ),\n      middle: { type: 'boolean', defaultValue: true },\n    },\n    {\n      baseConfiguration: baseConfigFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport function stateModelFactory(\n  configSchema: ReturnType<typeof configSchemaFactory>,\n) {\n  return types\n    .compose(\n      'LinearSyntenyDisplay',\n      baseModelFactory(configSchema),\n      types.model({\n        type: types.literal('LinearSyntenyDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => ({\n      get highResolutionScaling() {\n        return 1\n      },\n      get renderProps() {\n        const parentView = getContainingView(self) as LinearSyntenyViewModel\n        return {\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: getConf(self, 'renderer'),\n          width: parentView.width,\n          height: 100,\n        }\n      },\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n      get adapterConfig() {\n        // TODO possibly enriches with the adapters from associated trackIds\n        return {\n          name: self.parentTrack.configuration.adapter.type,\n          assemblyNames: getConf(self, 'assemblyNames'),\n          ...getConf(self.parentTrack, 'adapter'),\n        }\n      },\n\n      get trackIds() {\n        return getConf(self, 'trackIds') as string[]\n      },\n    }))\n}\n\nexport type LinearSyntenyDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearSyntenyDisplayModel = Instance<LinearSyntenyDisplayStateModel>\n","import { clamp } from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\n\nexport type LayoutRecord = [number, number, number, number]\n\nexport interface ReducedLinearGenomeView {\n  bpPerPx: number\n  offsetPx: number\n  staticBlocks: Region[]\n  dynamicBlocks: Region[]\n  displayedRegions: Region[]\n  headerHeight: number\n  scaleBarHeight: number\n  height: number\n  features: Feature[]\n  tracks: {\n    scrollTop: number\n    height: number\n    configuration: string\n    skip: number\n  }[]\n}\n\nconst [, TOP, , BOTTOM] = [0, 1, 2, 3]\n\nexport function cheight(chunk: LayoutRecord) {\n  return chunk[BOTTOM] - chunk[TOP]\n}\nfunction heightFromSpecificLevel(\n  views: ReducedLinearGenomeView[],\n  trackConfigId: string,\n  level: number,\n) {\n  const heightUpUntilThisPoint = views\n    .slice(0, level)\n    .map(v => v.height + 7)\n    .reduce((a, b) => a + b, 0)\n\n  return (\n    heightUpUntilThisPoint +\n    views[level].headerHeight +\n    views[level].scaleBarHeight +\n    getTrackPos(views[level], trackConfigId) +\n    1\n  )\n}\n\nexport function getTrackPos(\n  view: ReducedLinearGenomeView,\n  trackConfigId: string,\n) {\n  const idx = view.tracks.findIndex(t => t.configuration === trackConfigId)\n  let accum = 0\n  for (let i = 0; i < idx; i += 1) {\n    accum += view.tracks[i].height + 3 // +1px for trackresizehandle\n  }\n  return accum\n}\n\n// Uses bpToPx to get the screen pixel coordinates but ignores some conditions\n// where bpToPx could return undefined\nexport function getPxFromCoordinate(\n  view: ReducedLinearGenomeView,\n  refName: string,\n  coord: number,\n) {\n  return (\n    ((bpToPx(view, { refName, coord }) || {}).offsetPx || 0) - view.offsetPx\n  )\n}\n\n// Retrieves the y-position of a layout record in a track\n// If track not found returns 0\nexport function overlayYPos(\n  trackConfigId: string,\n  level: number,\n  views: ReducedLinearGenomeView[],\n  c: LayoutRecord,\n  cond: boolean,\n) {\n  const track = views[level].tracks.find(t => t.configuration === trackConfigId)\n  const ypos = track\n    ? clamp(c[TOP] - (track.scrollTop || 0), 0, track.height) +\n      heightFromSpecificLevel(views, trackConfigId, level) +\n      track.skip\n    : 0\n\n  return ypos + (cond ? cheight(c) : 0)\n}\n\n// Returns the pixel screen position of a refName:coord input, or undefined if\n// the input could not be located. Uses view.displayedRegions as a representation\n// of what is on the screen\n//\n// Note: does not consider that this refName:coord input could multi-match\nfunction bpToPx(\n  view: ReducedLinearGenomeView,\n  { refName, coord }: { refName: string; coord: number },\n) {\n  let offsetBp = 0\n\n  const index = view.displayedRegions.findIndex(r => {\n    if (refName === r.refName && coord >= r.start && coord <= r.end) {\n      offsetBp += coord - r.start\n      return true\n    }\n    offsetBp += r.end - r.start\n    return false\n  })\n  const foundRegion = view.displayedRegions[index]\n  if (foundRegion) {\n    return {\n      index,\n      offsetPx: Math.round(offsetBp / view.bpPerPx),\n    }\n  }\n  return undefined\n}\n\n// Returns either 0 or height depending on condition\nexport function interstitialYPos(cond: boolean, height: number) {\n  return cond ? 5 : height - 5\n}\n\nexport function* generateMatches(\n  l1: Feature[] = [],\n  l2: Feature[] = [],\n  cb: (arg0: Feature) => number,\n) {\n  let i = 0\n  let j = 0\n  while (i < l1.length && j < l2.length) {\n    const a = cb(l1[i])\n    const b = cb(l2[j])\n    if (a < b) {\n      i++\n    } else if (b < a) {\n      j++\n    } else {\n      yield [l1[i], l2[j]]\n      i++\n      j++\n    }\n  }\n}\n","import React, { useRef, useMemo, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n  Feature,\n} from '@jbrowse/core/util/simpleFeature'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport { interstitialYPos, overlayYPos, generateMatches } from '../../util'\nimport { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport { LinearComparativeDisplay } from '../../LinearComparativeDisplay'\n\nconst [LEFT, , RIGHT] = [0, 1, 2, 3]\n\ntype RectTuple = [number, number, number, number]\n\nconst { parseCigar } = MismatchParser\n\nfunction px(\n  view: LinearGenomeViewModel,\n  arg: { refName: string; coord: number },\n) {\n  return (view.bpToPx(arg) || {}).offsetPx || 0\n}\n\nfunction layoutMatches(features: Feature[][]) {\n  const matches = []\n  for (let i = 0; i < features.length; i++) {\n    for (let j = i; j < features.length; j++) {\n      if (i !== j) {\n        for (const [f1, f2] of generateMatches(features[i], features[j], feat =>\n          feat.get('syntenyId'),\n        )) {\n          let f1s = f1.get('start')\n          let f1e = f1.get('end')\n          const f2s = f2.get('start')\n          const f2e = f2.get('end')\n          if (f1.get('strand') === -1) {\n            ;[f1e, f1s] = [f1s, f1e]\n          }\n          matches.push([\n            {\n              feature: f1,\n              level: i,\n              refName: f1.get('refName'),\n              layout: [f1s, 0, f1e, 10] as RectTuple,\n            },\n            {\n              feature: f2,\n              level: j,\n              refName: f2.get('refName'),\n              layout: [f2s, 0, f2e, 10] as RectTuple,\n            },\n          ])\n        }\n      }\n    }\n  }\n  return matches\n}\n\n/**\n * A block whose content is rendered outside of the main thread and hydrated by\n * this component.\n */\nfunction LinearSyntenyRendering(props: {\n  width: number\n  height: number\n  displayModel: LinearComparativeDisplay\n  highResolutionScaling: number\n  features: SimpleFeatureSerialized[][]\n  trackIds: string[]\n}) {\n  const ref = useRef<HTMLCanvasElement>(null)\n  const {\n    height,\n    width,\n    displayModel = {},\n    highResolutionScaling = 1,\n    features,\n    trackIds,\n  } = props\n\n  const deserializedFeatures = useMemo(\n    () =>\n      features.map(level => {\n        return level\n          .map(f => new SimpleFeature(f))\n          .sort((a, b) => a.get('syntenyId') - b.get('syntenyId'))\n      }),\n    [features],\n  )\n  const matches = layoutMatches(deserializedFeatures)\n  const views = useMemo(() => {\n    try {\n      const parentView =\n        'type' in displayModel\n          ? (getContainingView(displayModel) as LinearSyntenyViewModel)\n          : undefined\n      return parentView?.views\n    } catch (e) {\n      console.warn('parent view gone')\n      return null\n    }\n  }, [displayModel])\n\n  const offsets = views?.map(view => view.offsetPx)\n  useEffect(() => {\n    if (!ref.current || !offsets || !views) {\n      return\n    }\n    if (!isAlive(displayModel)) {\n      return\n    }\n    const ctx = ref.current.getContext('2d')\n    if (!ctx) {\n      return\n    }\n    ctx.clearRect(0, 0, width, height)\n    ctx.scale(highResolutionScaling, highResolutionScaling)\n    ctx.fillStyle = getConf(displayModel, ['renderer', 'color'])\n    ctx.strokeStyle = getConf(displayModel, ['renderer', 'color'])\n    const showIntraviewLinks = false\n    const middle = true\n    const hideTiny = false\n    matches.forEach(m => {\n      // we follow a path in the list of chunks, not from top to bottom, just\n      // in series following x1,y1 -> x2,y2\n      for (let i = 0; i < m.length - 1; i += 1) {\n        const { layout: c1, feature: f1, level: l1, refName: ref1 } = m[i]\n        const { layout: c2, feature: f2, level: l2, refName: ref2 } = m[i + 1]\n        const v1 = views[l1]\n        const v2 = views[l2]\n\n        if (!c1 || !c2) {\n          console.warn('received null layout for a overlay feature')\n          return\n        }\n\n        // disable rendering connections in a single level\n        if (!showIntraviewLinks && l1 === l2) {\n          continue\n        }\n        const length1 = f1.get('end') - f1.get('start')\n        const length2 = f2.get('end') - f2.get('start')\n\n        if ((length1 < v1.bpPerPx || length2 < v2.bpPerPx) && hideTiny) {\n          continue\n        }\n\n        const x11 = px(v1, { refName: ref1, coord: c1[LEFT] }) - offsets[l1]\n        const x12 = px(v1, { refName: ref1, coord: c1[RIGHT] }) - offsets[l1]\n        const x21 = px(v2, { refName: ref2, coord: c2[LEFT] }) - offsets[l2]\n        const x22 = px(v2, { refName: ref2, coord: c2[RIGHT] }) - offsets[l2]\n\n        const y1 = middle\n          ? interstitialYPos(l1 < l2, height)\n          : // prettier-ignore\n            // @ts-ignore\n            overlayYPos(trackIds[0], l1, views, c1, l1 < l2)\n        const y2 = middle\n          ? interstitialYPos(l2 < l1, height)\n          : // prettier-ignore\n            // @ts-ignore\n            overlayYPos(trackIds[1], l2, views, c2, l2 < l1)\n\n        // drawing a line if the results are thin results in much less\n        // pixellation than filling in a thin polygon\n        if (length1 < v1.bpPerPx || length2 < v2.bpPerPx) {\n          ctx.beginPath()\n          ctx.moveTo(x11, y1)\n          ctx.lineTo(x21, y2)\n          ctx.stroke()\n        } else {\n          let currX1 = x11\n          let currX2 = x21\n\n          // flip the direction of the CIGAR drawing in horizontally flipped\n          // modes\n          const rev1 = x11 < x12 ? 1 : -1\n          const rev2 = x21 < x22 ? 1 : -1\n\n          const cigar = f1.get('cg') || f1.get('CIGAR')\n          if (cigar) {\n            const cigarOps = parseCigar(cigar)\n            for (let j = 0; j < cigarOps.length; j += 2) {\n              const val = +cigarOps[j]\n              const op = cigarOps[j + 1]\n\n              const prevX1 = currX1\n              const prevX2 = currX2\n\n              if (op === 'M' || op === '=') {\n                ctx.fillStyle = '#f003'\n                currX1 += (val / views[0].bpPerPx) * rev1\n                currX2 += (val / views[1].bpPerPx) * rev2\n              } else if (op === 'X') {\n                ctx.fillStyle = 'brown'\n                currX1 += (val / views[0].bpPerPx) * rev1\n                currX2 += (val / views[1].bpPerPx) * rev2\n              } else if (op === 'D') {\n                ctx.fillStyle = '#00f3'\n                currX1 += (val / views[0].bpPerPx) * rev1\n              } else if (op === 'N') {\n                ctx.fillStyle = '#0a03'\n                currX1 += (val / views[0].bpPerPx) * rev1\n              } else if (op === 'I') {\n                ctx.fillStyle = '#ff03'\n                currX2 += (val / views[1].bpPerPx) * rev2\n              }\n              ctx.beginPath()\n              ctx.moveTo(prevX1, y1)\n              ctx.lineTo(currX1, y1)\n              ctx.lineTo(currX2, y2)\n              ctx.lineTo(prevX2, y2)\n              ctx.closePath()\n              ctx.fill()\n            }\n          } else {\n            ctx.beginPath()\n            ctx.moveTo(x11, y1)\n            ctx.lineTo(x12, y1)\n            ctx.lineTo(x22, y2)\n            ctx.lineTo(x21, y2)\n            ctx.closePath()\n            ctx.fill()\n          }\n        }\n      }\n    })\n  }, [\n    displayModel,\n    highResolutionScaling,\n    trackIds,\n    width,\n    views,\n    offsets,\n    height,\n    matches,\n  ])\n\n  return (\n    <canvas\n      ref={ref}\n      data-testid=\"synteny_canvas\"\n      width={width}\n      height={height}\n    />\n  )\n}\n\nexport default observer(LinearSyntenyRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'LinearSyntenyRenderer',\n  {\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a synteny',\n      defaultValue: 'rgb(255,100,100,0.3)',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import ComparativeServerSideRendererType from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport Base1DView, { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport React from 'react'\n\nexport default class LinearSyntenyRenderer extends ComparativeServerSideRendererType {\n  async render(renderProps: {\n    height: number\n    width: number\n    view: { views: Base1DViewModel[] }\n  }) {\n    const {\n      width,\n      view: { views },\n    } = renderProps\n    const realizedViews = views.map(snap => {\n      const view = Base1DView.create(snap)\n      view.setVolatileWidth(width)\n      return view\n    })\n    const features = await Promise.all(\n      realizedViews.map(view =>\n        this.getFeatures({\n          ...renderProps,\n          regions: view.staticBlocks.contentBlocks,\n        }),\n      ),\n    )\n\n    const serializedFeatures = JSON.parse(JSON.stringify(features))\n    for (let i = 0; i < serializedFeatures.length; i++) {\n      for (let j = 0; j < serializedFeatures[i].length; j++) {\n        // eslint-disable-next-line no-underscore-dangle\n        serializedFeatures[i][j]._level = i\n      }\n    }\n\n    return {\n      reactElement: React.createElement(this.ReactComponent, {\n        ...renderProps,\n        features,\n      }),\n      features: serializedFeatures,\n    }\n  }\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport baseModel from '../LinearComparativeView/model'\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types.compose(\n    baseModel(pluginManager),\n    types.model('LinearSyntenyView', {\n      type: types.literal('LinearSyntenyView'),\n    }),\n  )\n}\nexport type LinearSyntenyViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearSyntenyViewModel = Instance<LinearSyntenyViewStateModel>\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport modelFactory from './model'\n\nexport default (pluginManager: PluginManager) => {\n  const { jbrequire } = pluginManager\n  const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n  return new ViewType({\n    name: 'LinearSyntenyView',\n    stateModel: jbrequire(modelFactory),\n    ReactComponent: lazy(() => import('./components/LinearSyntenyView')),\n  })\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region, FileLocation } from '@jbrowse/core/util/types'\nimport { GenericFilehandle } from 'generic-filehandle'\nimport { tap } from 'rxjs/operators'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport QuickLRU from '@jbrowse/core/util/QuickLRU'\n\ntype RowToGeneNames = {\n  name1: string\n  name2: string\n  score: number\n}[]\n\ninterface GeneNameToRows {\n  [key: string]: number[]\n}\n\nexport default class MCScanAnchorsAdapter extends BaseFeatureDataAdapter {\n  private cache = new AbortablePromiseCache({\n    cache: new QuickLRU({ maxSize: 1 }),\n    fill: () => this.setup(),\n  })\n\n  private initialized = false\n\n  private geneNameToRows: GeneNameToRows = {}\n\n  private rowToGeneName: RowToGeneNames = []\n\n  // @ts-ignore\n  private subadapters: BaseFeatureDataAdapter[]\n\n  // @ts-ignore\n  private assemblyNames: string[]\n\n  // @ts-ignore\n  private mcscanAnchorsLocation: GenericFilehandle\n\n  public static capabilities = ['getFeatures', 'getRefNames']\n\n  public async configure() {\n    const subadapters = readConfObject(this.config, 'subadapters')\n    const assemblyNames = readConfObject(this.config, 'assemblyNames')\n    this.mcscanAnchorsLocation = openLocation(\n      readConfObject(this.config, 'mcscanAnchorsLocation') as FileLocation,\n    )\n\n    this.subadapters = await Promise.all(\n      subadapters.map(async (subadapter: any) => {\n        const dataAdapter = (await this.getSubAdapter?.(subadapter))\n          ?.dataAdapter\n        if (dataAdapter instanceof BaseFeatureDataAdapter) {\n          return dataAdapter\n        }\n        throw new Error(\n          `invalid subadapter type '${this.config.subadapter.type}'`,\n        )\n      }),\n    )\n\n    this.assemblyNames = assemblyNames\n  }\n\n  async setup() {\n    if (!this.initialized) {\n      await this.configure()\n      const text = (await this.mcscanAnchorsLocation.readFile('utf8')) as string\n      text.split('\\n').forEach((line: string, index: number) => {\n        if (line.length && line !== '###') {\n          const [name1, name2, score] = line.split('\\t')\n          if (this.geneNameToRows[name1] === undefined) {\n            this.geneNameToRows[name1] = []\n          }\n          if (this.geneNameToRows[name2] === undefined) {\n            this.geneNameToRows[name2] = []\n          }\n          this.geneNameToRows[name1].push(index)\n          this.geneNameToRows[name2].push(index)\n          this.rowToGeneName[index] = { name1, name2, score: +score }\n        }\n      })\n      this.initialized = true\n    }\n  }\n\n  async hasDataForRefName() {\n    // determining this properly is basically a call to getFeatures\n    // so is not really that important, and has to be true or else\n    // getFeatures is never called (BaseFeatureDataAdapter filters it out)\n    return true\n  }\n\n  async getRefNames() {\n    // we cannot determine this accurately\n    return []\n  }\n\n  getFeatures(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      await this.cache.get('initialize', opts, opts.signal)\n\n      // The index of the assembly name in the region list corresponds to\n      // the adapter in the subadapters list\n      const index = this.assemblyNames.indexOf(region.assemblyName)\n      if (index !== -1) {\n        const features = this.subadapters[index].getFeatures(region)\n        await features\n          .pipe(\n            tap(feature => {\n              // We first fetch from the NCList and connect each result\n              // with the anchor file via geneNameToRows. Note that each\n              // gene name can correspond to multiple rows\n              const rows = this.geneNameToRows[feature.get('name')] || []\n              rows.forEach(row => {\n                observer.next(\n                  new SimpleFeature({\n                    ...feature.toJSON(),\n                    syntenyId: row,\n                  }),\n                )\n              })\n            }),\n          )\n          .toPromise()\n      }\n\n      observer.complete()\n    })\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the forseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'MCScanAnchorsAdapter',\n  {\n    mcscanAnchorsLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/mcscan.anchors' },\n    },\n    subadapters: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  CircularProgress,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Typography,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport CalendarIcon from '@material-ui/icons/CalendarViewDay'\nimport { ConfigurationSchema, getConf } from '@jbrowse/core/configuration'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AbstractSessionModel,\n  getSession,\n  getContainingView,\n  getContainingTrack,\n  isAbstractMenuManager,\n} from '@jbrowse/core/util'\n\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport { autorun } from 'mobx'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport {\n  configSchemaFactory as linearComparativeDisplayConfigSchemaFactory,\n  ReactComponent as LinearComparativeDisplayReactComponent,\n  stateModelFactory as linearComparativeDisplayStateModelFactory,\n} from './LinearComparativeDisplay'\nimport LinearComparativeViewFactory from './LinearComparativeView'\nimport {\n  configSchemaFactory as linearSyntenyDisplayConfigSchemaFactory,\n  stateModelFactory as linearSyntenyDisplayStateModelFactory,\n} from './LinearSyntenyDisplay'\nimport LinearSyntenyRenderer, {\n  configSchema as linearSyntenyRendererConfigSchema,\n  ReactComponent as LinearSyntenyRendererReactComponent,\n} from './LinearSyntenyRenderer'\nimport LinearSyntenyViewFactory from './LinearSyntenyView'\nimport {\n  AdapterClass as MCScanAnchorsAdapter,\n  configSchema as MCScanAnchorsConfigSchema,\n} from './MCScanAnchorsAdapter'\n\nconst { parseCigar } = MismatchParser\n\ninterface Track {\n  id: string\n  type: string\n  displays: {\n    addAdditionalContextMenuItemCallback: Function\n    additionalContextMenuItemCallbacks: Function[]\n    id: string\n    type: string\n    PileupDisplay: any\n  }[]\n}\ninterface View {\n  tracks: Track[]\n  views?: View[]\n  type: string\n}\ninterface Session {\n  views: View[]\n}\nfunction getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\nfunction getLength(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nfunction getLengthSansClipping(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\nfunction getClip(cigar: string, strand: number) {\n  return strand === -1\n    ? +(cigar.match(/(\\d+)[SH]$/) || [])[1] || 0\n    : +(cigar.match(/^(\\d+)([SH])/) || [])[1] || 0\n}\n\ninterface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  strand: number\n  seqLength: number\n  syntenyId?: number\n  uniqueId: string\n  mate: {\n    refName: string\n    start: number\n    end: number\n    syntenyId?: number\n    uniqueId?: string\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction getTag(f: Feature, tag: string) {\n  const tags = f.get('tags')\n  return tags ? tags[tag] : f.get(tag)\n}\n\nfunction WindowSizeDlg(props: {\n  feature: Feature\n  handleClose: () => void\n  track: any\n}) {\n  const classes = useStyles()\n  const { track, feature: preFeature, handleClose } = props\n\n  // window size stored as string, because it corresponds to a textfield which\n  // is parsed as number on submit\n  const [window, setWindowSize] = useState('0')\n  const [error, setError] = useState<Error>()\n  const windowSize = +window\n  const [primaryFeature, setPrimaryFeature] = useState<Feature>()\n  const [qualTrack, setQualTrack] = useState(false)\n\n  // we need to fetch the primary alignment if the selected feature is 2048.\n  // this should be the first in the list of the SA tag\n  useEffect(() => {\n    let done = false\n    ;(async () => {\n      if (preFeature.get('flags') & 2048) {\n        const SA: string = getTag(preFeature, 'SA') || ''\n        const primaryAln = SA.split(';')[0]\n        const [saRef, saStart] = primaryAln.split(',')\n        const { rpcManager } = getSession(track)\n        const adapterConfig = getConf(track, 'adapter')\n        const sessionId = getRpcSessionId(track)\n        const feats = (await rpcManager.call(sessionId, 'CoreGetFeatures', {\n          adapterConfig,\n          sessionId,\n          region: { refName: saRef, start: +saStart - 1, end: +saStart },\n        })) as any[]\n        const primaryFeat = feats.find(\n          f =>\n            f.get('name') === preFeature.get('name') &&\n            !(f.get('flags') & 2048),\n        )\n        if (!done) {\n          setPrimaryFeature(primaryFeat)\n        }\n      } else {\n        setPrimaryFeature(preFeature)\n      }\n    })()\n\n    return () => {\n      done = true\n    }\n  }, [preFeature, track])\n\n  function onSubmit() {\n    try {\n      const feature = primaryFeature || preFeature\n      const session = getSession(track)\n      const view = getContainingView(track)\n      const cigar = feature.get('CIGAR')\n      const clipPos = getClip(cigar, 1)\n      const flags = feature.get('flags')\n      const qual = feature.get('qual') as string\n      const SA: string = getTag(feature, 'SA') || ''\n      const readName = feature.get('name')\n\n      // the suffix -temp is used in the beforeDetach handler to\n      // automatically remove itself from the session when this view is\n      // destroyed\n      const readAssembly = `${readName}_assembly-temp`\n      const [trackAssembly] = getConf(track, 'assemblyNames')\n      const assemblyNames = [trackAssembly, readAssembly]\n      const trackId = `track-${Date.now()}`\n      const trackName = `${readName}_vs_${trackAssembly}`\n\n      // get the canonical refname for the read because if the\n      // read.get('refName') is chr1 and the actual fasta refName is 1 then no\n      // tracks can be opened on the top panel of the linear read vs ref\n      const { assemblyManager } = session\n      const assembly = assemblyManager.get(trackAssembly)\n\n      const supplementaryAlignments = SA.split(';')\n        .filter(aln => !!aln)\n        .map((aln, index) => {\n          const [saRef, saStart, , saCigar] = aln.split(',')\n          const saLengthOnRef = getLengthOnRef(saCigar)\n          const saLength = getLength(saCigar)\n          const saLengthSansClipping = getLengthSansClipping(saCigar)\n          // const saStrandNormalized = saStrand === '-' ? -1 : 1\n          const saClipPos = getClip(saCigar, 1)\n          const saRealStart = +saStart - 1\n          return {\n            refName: saRef,\n            start: saRealStart,\n            end: saRealStart + saLengthOnRef,\n            seqLength: saLength,\n            clipPos: saClipPos,\n            CIGAR: saCigar,\n            assemblyName: trackAssembly,\n            strand: 1, // saStrandNormalized,\n            uniqueId: `${feature.id()}_SA${index}`,\n            mate: {\n              start: saClipPos,\n              end: saClipPos + saLengthSansClipping,\n              refName: readName,\n            },\n          }\n        })\n\n      const feat = feature.toJSON()\n      feat.clipPos = clipPos\n      feat.strand = 1\n\n      feat.mate = {\n        refName: readName,\n        start: clipPos,\n        end: clipPos + getLengthSansClipping(cigar),\n      }\n\n      // if secondary alignment or supplementary, calculate length from SA[0]'s\n      // CIGAR which is the primary alignments. otherwise it is the primary\n      // alignment just use seq.length if primary alignment\n      const totalLength =\n        flags & 2048\n          ? getLength(supplementaryAlignments[0].CIGAR)\n          : getLength(cigar)\n\n      const features = [feat, ...supplementaryAlignments] as ReducedFeature[]\n\n      features.forEach((f, index) => {\n        f.refName = assembly?.getCanonicalRefName(f.refName) || f.refName\n        f.syntenyId = index\n        f.mate.syntenyId = index\n        f.mate.uniqueId = `${f.uniqueId}_mate`\n      })\n      features.sort((a, b) => a.clipPos - b.clipPos)\n\n      const featSeq = feature.get('seq')\n\n      // the config feature store includes synthetic mate features\n      // mapped to the read assembly\n      const configFeatureStore = features.concat(\n        // @ts-ignore\n        features.map(f => f.mate),\n      )\n\n      const expand = 2 * windowSize\n      const refLength = features.reduce(\n        (a, f) => a + f.end - f.start + expand,\n        0,\n      )\n\n      const seqTrackId = `${readName}_${Date.now()}`\n      const sequenceTrackConf = getConf(assembly, 'sequence')\n      const lgvRegions = features\n        .map(f => {\n          return {\n            ...f,\n            start: Math.max(0, f.start - windowSize),\n            end: f.end + windowSize,\n            assemblyName: trackAssembly,\n          }\n        })\n        .sort((a, b) => a.clipPos - b.clipPos)\n\n      session.addAssembly?.({\n        name: `${readAssembly}`,\n        sequence: {\n          type: 'ReferenceSequenceTrack',\n          trackId: seqTrackId,\n          assemblyNames: [readAssembly],\n          adapter: {\n            type: 'FromConfigSequenceAdapter',\n            noAssemblyManager: true,\n            features: [\n              {\n                start: 0,\n                end: totalLength,\n                seq: featSeq,\n                refName: readName,\n                uniqueId: `${Math.random()}`,\n              },\n            ],\n          },\n        },\n      })\n\n      session.addView('LinearSyntenyView', {\n        type: 'LinearSyntenyView',\n        views: [\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: refLength / view.width,\n            displayedRegions: lgvRegions,\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                assemblyNames: [trackAssembly],\n                configuration: sequenceTrackConf.trackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: false,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: totalLength / view.width,\n            displayedRegions: [\n              {\n                assemblyName: readAssembly,\n                start: 0,\n                end: totalLength,\n                refName: readName,\n              },\n            ],\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                configuration: seqTrackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: false,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n              ...(qualTrack\n                ? [\n                    {\n                      id: `${Math.random()}`,\n                      type: 'QuantitativeTrack',\n                      configuration: {\n                        trackId: 'qualTrack',\n                        assemblyNames: [readAssembly],\n                        name: 'Read quality',\n                        type: 'QuantitativeTrack',\n                        adapter: {\n                          type: 'FromConfigAdapter',\n                          noAssemblyManager: true,\n                          features: qual.split(' ').map((score, index) => {\n                            return {\n                              start: index,\n                              end: index + 1,\n                              refName: readName,\n                              score: +score,\n                              uniqueId: `feat_${index}`,\n                            }\n                          }),\n                        },\n                      },\n                      displays: [\n                        {\n                          id: `${Math.random()}`,\n                          type: 'LinearWiggleDisplay',\n                          height: 100,\n                        },\n                      ],\n                    },\n                  ]\n                : []),\n            ],\n          },\n        ],\n        viewTrackConfigs: [\n          {\n            type: 'SyntenyTrack',\n            assemblyNames,\n            adapter: {\n              type: 'FromConfigAdapter',\n              features: configFeatureStore,\n            },\n            trackId,\n            name: trackName,\n          },\n        ],\n        tracks: [\n          {\n            configuration: trackId,\n            type: 'SyntenyTrack',\n            displays: [\n              {\n                type: 'LinearSyntenyDisplay',\n                configuration: `${trackId}-LinearSyntenyDisplay`,\n              },\n            ],\n          },\n        ],\n        displayName: `${readName} vs ${trackAssembly}`,\n      })\n      handleClose()\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Set window size\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        {!primaryFeature ? (\n          <div>\n            <Typography>\n              To accurately perform comparison we are fetching the primary\n              alignment. Loading primary feature...\n            </Typography>\n            <CircularProgress />\n          </div>\n        ) : (\n          <div className={classes.root}>\n            <Typography>\n              Show an extra window size around each part of the split alignment.\n              Using a larger value can allow you to see more genomic context.\n            </Typography>\n            {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n\n            <TextField\n              value={window}\n              onChange={event => {\n                setWindowSize(event.target.value)\n              }}\n              label=\"Set window size\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={qualTrack}\n                  onChange={() => setQualTrack(val => !val)}\n                />\n              }\n              label=\"Show qual track\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginLeft: 20 }}\n              onClick={onSubmit}\n            >\n              Submit\n            </Button>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default class extends Plugin {\n  name = 'LinearComparativeViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(() =>\n      pluginManager.jbrequire(LinearComparativeViewFactory),\n    )\n    pluginManager.addViewType(() =>\n      pluginManager.jbrequire(LinearSyntenyViewFactory),\n    )\n\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'SyntenyTrack',\n        {},\n        { baseConfiguration: createBaseTrackConfig(pluginManager) },\n      )\n      return new TrackType({\n        name: 'SyntenyTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'SyntenyTrack',\n          configSchema,\n        ),\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearComparativeDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearComparativeDisplay',\n        configSchema,\n        stateModel: linearComparativeDisplayStateModelFactory(configSchema),\n        trackType: 'SyntenyTrack',\n        viewType: 'LinearComparativeView',\n        ReactComponent: LinearComparativeDisplayReactComponent,\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearSyntenyDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearSyntenyDisplay',\n        configSchema,\n        stateModel: linearSyntenyDisplayStateModelFactory(configSchema),\n        trackType: 'SyntenyTrack',\n        viewType: 'LinearSyntenyView',\n        ReactComponent: LinearComparativeDisplayReactComponent,\n      })\n    })\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'MCScanAnchorsAdapter',\n          configSchema: MCScanAnchorsConfigSchema,\n          AdapterClass: MCScanAnchorsAdapter,\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new LinearSyntenyRenderer({\n          name: 'LinearSyntenyRenderer',\n          configSchema: linearSyntenyRendererConfigSchema,\n          ReactComponent: LinearSyntenyRendererReactComponent,\n          pluginManager,\n        }),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Linear synteny view',\n        icon: CalendarIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearSyntenyView', {})\n        },\n      })\n    }\n\n    const callback = (feature: Feature, display: any) => {\n      return feature\n        ? [\n            {\n              label: 'Linear read vs ref',\n              icon: AddIcon,\n              onClick: () => {\n                getSession(display).setDialogComponent(WindowSizeDlg, {\n                  track: getContainingTrack(display),\n                  feature,\n                })\n              },\n            },\n          ]\n        : []\n    }\n\n    function checkCallback(obj: any) {\n      return obj.additionalContextMenuItemCallbacks.includes(callback)\n    }\n    function addCallback(obj: any) {\n      obj.addAdditionalContextMenuItemCallback(callback)\n    }\n    function addContextMenu(view: View) {\n      if (view.type === 'LinearGenomeView') {\n        view.tracks.forEach(track => {\n          if (track.type === 'AlignmentsTrack') {\n            track.displays.forEach(display => {\n              if (\n                display.type === 'LinearPileupDisplay' &&\n                !checkCallback(display)\n              ) {\n                addCallback(display)\n              } else if (\n                display.type === 'LinearAlignmentsDisplay' &&\n                display.PileupDisplay &&\n                !checkCallback(display.PileupDisplay)\n              ) {\n                addCallback(display.PileupDisplay)\n              }\n            })\n          }\n        })\n      }\n    }\n    autorun(() => {\n      const session = pluginManager.rootModel?.session as Session | undefined\n      if (session) {\n        session.views.forEach(view => {\n          if (view.views) {\n            view.views.forEach(v => addContextMenu(v))\n          } else {\n            addContextMenu(view)\n          }\n        })\n      }\n    })\n  }\n}\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\n\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearLollipopDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearLollipopDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => ({\n      get blockType() {\n        return 'dynamicBlocks'\n      },\n      get renderDelay() {\n        return 500\n      },\n      get renderProps() {\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          config: self.configuration.renderer,\n        }\n      },\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { contrastingTextColor } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\n\nfunction ScoreText({\n  feature,\n  config,\n  layoutRecord: {\n    y,\n    data: { anchorX, radiusPx, score },\n  },\n}) {\n  const innerColor = readConfObject(config, 'innerColor', { feature })\n\n  const scoreString = String(score)\n  const fontWidth = (radiusPx * 2) / scoreString.length\n  const fontHeight = fontWidth * 1.1\n  if (fontHeight < 12) {\n    return null\n  }\n  return (\n    <text\n      style={{ fontSize: fontHeight, fill: contrastingTextColor(innerColor) }}\n      x={anchorX}\n      y={y + radiusPx - fontHeight / 2.4}\n      textAnchor=\"middle\"\n      dominantBaseline=\"hanging\"\n    >\n      {scoreString}\n    </text>\n  )\n}\n\nScoreText.propTypes = {\n  feature: ReactPropTypes.shape({ get: ReactPropTypes.func.isRequired })\n    .isRequired,\n  layoutRecord: ReactPropTypes.shape({\n    x: ReactPropTypes.number.isRequired,\n    y: ReactPropTypes.number.isRequired,\n    width: ReactPropTypes.number.isRequired,\n    height: ReactPropTypes.number.isRequired,\n    data: ReactPropTypes.shape({\n      anchorX: ReactPropTypes.number.isRequired,\n      radiusPx: ReactPropTypes.number.isRequired,\n      score: ReactPropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\n\nfunction Lollipop(props) {\n  const onFeatureMouseDown = event => {\n    const { onFeatureMouseDown: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseEnter = event => {\n    const { onFeatureMouseEnter: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseOut = event => {\n    const { onFeatureMouseOut: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseOver = event => {\n    const { onFeatureMouseOver: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseUp = event => {\n    const { onFeatureMouseUp: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseLeave = event => {\n    const { onFeatureMouseLeave: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureMouseMove = event => {\n    const { onFeatureMouseMove: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, feature.id())\n  }\n\n  const onFeatureClick = event => {\n    const { onFeatureClick: handler, feature } = props\n    if (!handler) {\n      return undefined\n    }\n    event.stopPropagation()\n    return handler(event, feature.id())\n  }\n\n  const {\n    feature,\n    config,\n    layoutRecord: {\n      anchorLocation,\n      y,\n      data: { radiusPx, score },\n    },\n    selectedFeatureId,\n  } = props\n\n  const styleOuter = {\n    fill: readConfObject(config, 'strokeColor', { feature }),\n  }\n  if (String(selectedFeatureId) === String(feature.id())) {\n    styleOuter.fill = 'red'\n  }\n\n  const styleInner = {\n    fill: readConfObject(config, 'innerColor', { feature }),\n  }\n\n  const strokeWidth = readConfObject(config, 'strokeWidth', { feature })\n\n  return (\n    <g data-testid={feature.id()}>\n      <title>{readConfObject(config, 'caption', { feature })}</title>\n      <circle\n        cx={anchorLocation}\n        cy={y + radiusPx}\n        r={radiusPx}\n        style={styleOuter}\n        onMouseDown={onFeatureMouseDown}\n        onMouseEnter={onFeatureMouseEnter}\n        onMouseOut={onFeatureMouseOut}\n        onMouseOver={onFeatureMouseOver}\n        onMouseUp={onFeatureMouseUp}\n        onMouseLeave={onFeatureMouseLeave}\n        onMouseMove={onFeatureMouseMove}\n        onClick={onFeatureClick}\n        onFocus={onFeatureMouseOver}\n        onBlur={onFeatureMouseOut}\n      />\n      {radiusPx - strokeWidth <= 2 ? null : (\n        <circle\n          cx={anchorLocation}\n          cy={y + radiusPx}\n          r={radiusPx - strokeWidth}\n          style={styleInner}\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n        />\n      )}\n      <ScoreText {...props} score={score} />\n    </g>\n  )\n}\nLollipop.propTypes = {\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  // bpPerPx: ReactPropTypes.number.isRequired,\n  // region: CommonPropTypes.Region.isRequired,\n  // config: CommonPropTypes.ConfigSchema.isRequired,\n  layoutRecord: ReactPropTypes.shape({\n    x: ReactPropTypes.number.isRequired,\n    y: ReactPropTypes.number.isRequired,\n    anchorLocation: ReactPropTypes.number.isRequired,\n    data: ReactPropTypes.shape({\n      anchorX: ReactPropTypes.number.isRequired,\n      radiusPx: ReactPropTypes.number.isRequired,\n      score: ReactPropTypes.number.isRequired,\n    }),\n    width: ReactPropTypes.number.isRequired,\n    height: ReactPropTypes.number.isRequired,\n  }).isRequired,\n\n  selectedFeatureId: ReactPropTypes.string,\n\n  config: CommonPropTypes.ConfigSchema.isRequired,\n\n  onFeatureMouseDown: ReactPropTypes.func,\n  onFeatureMouseEnter: ReactPropTypes.func,\n  onFeatureMouseOut: ReactPropTypes.func,\n  onFeatureMouseOver: ReactPropTypes.func,\n  onFeatureMouseUp: ReactPropTypes.func,\n  onFeatureMouseLeave: ReactPropTypes.func,\n  onFeatureMouseMove: ReactPropTypes.func,\n\n  // synthesized from mouseup and mousedown\n  onFeatureClick: ReactPropTypes.func,\n}\n\nLollipop.defaultProps = {\n  selectedFeatureId: undefined,\n\n  onFeatureMouseDown: undefined,\n  onFeatureMouseEnter: undefined,\n  onFeatureMouseOut: undefined,\n  onFeatureMouseOver: undefined,\n  onFeatureMouseUp: undefined,\n  onFeatureMouseLeave: undefined,\n  onFeatureMouseMove: undefined,\n\n  onFeatureClick: undefined,\n}\nexport default observer(Lollipop)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\n\nfunction Stick(props) {\n  const {\n    feature,\n    config,\n    layoutRecord: {\n      anchorLocation,\n      y,\n      data: { radiusPx },\n    },\n    selectedFeatureId,\n  } = props\n\n  const style = { fill: readConfObject(config, 'bodyColor', { feature }) }\n  if (String(selectedFeatureId) === String(feature.id())) {\n    style.fill = 'red'\n  }\n  return (\n    <line\n      x1={anchorLocation}\n      y1={0}\n      x2={anchorLocation}\n      y2={y + 2 * radiusPx}\n      stroke={readConfObject(config, 'stickColor', { feature })}\n      strokeWidth={readConfObject(config, 'stickWidth', { feature })}\n    />\n  )\n}\nStick.propTypes = {\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  // bpPerPx: ReactPropTypes.number.isRequired,\n  // region: CommonPropTypes.Region.isRequired,\n  // config: CommonPropTypes.ConfigSchema.isRequired,\n  layoutRecord: ReactPropTypes.shape({\n    x: ReactPropTypes.number.isRequired,\n    y: ReactPropTypes.number.isRequired,\n    width: ReactPropTypes.number.isRequired,\n    height: ReactPropTypes.number.isRequired,\n    anchorLocation: ReactPropTypes.number.isRequired,\n    data: ReactPropTypes.shape({ radiusPx: ReactPropTypes.number.isRequired })\n      .isRequired,\n  }).isRequired,\n\n  selectedFeatureId: ReactPropTypes.string,\n\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\nStick.defaultProps = {\n  selectedFeatureId: undefined,\n}\n\nexport default observer(Stick)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { bpToPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\nimport Lollipop from './Lollipop'\nimport Stick from './Stick'\n\nfunction LollipopRendering(props) {\n  const onMouseDown = event => {\n    const { onMouseDown: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onMouseUp = event => {\n    const { onMouseUp: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onMouseEnter = event => {\n    const { onMouseEnter: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onMouseLeave = event => {\n    const { onMouseLeave: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onMouseOver = event => {\n    const { onMouseOver: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onMouseOut = event => {\n    const { onMouseOut: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  const onClick = event => {\n    const { onClick: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event)\n  }\n\n  function layoutFeat(args) {\n    const { feature, bpPerPx, region, layout } = args\n\n    const centerBp = Math.abs(feature.get('end') + feature.get('start')) / 2\n    const centerPx = bpToPx(centerBp, region, bpPerPx)\n    const radiusPx = readConfObject(args.config, 'radius', { feature })\n\n    if (!radiusPx) {\n      console.error(\n        new Error(\n          `lollipop radius ${radiusPx} configured for feature ${feature.id()}`,\n        ),\n      )\n    }\n    layout.add(feature.id(), centerPx, radiusPx * 2, radiusPx * 2, {\n      featureId: feature.id(),\n      anchorX: centerPx,\n      radiusPx,\n      score: readConfObject(args.config, 'score', { feature }),\n    })\n  }\n\n  const {\n    regions,\n    bpPerPx,\n    layout,\n    config,\n    features,\n    displayModel: { selectedFeatureId },\n  } = props\n\n  const [region] = regions\n  const sticksRendered = []\n  const lollipopsRendered = []\n  for (const feature of features.values()) {\n    layoutFeat({\n      feature,\n      bpPerPx,\n      region,\n      config,\n      layout,\n    })\n  }\n\n  for (const layoutRecord of layout.getLayout(config).values()) {\n    const feature = features.get(layoutRecord.data.featureId)\n    lollipopsRendered.push(\n      <Stick\n        {...props}\n        layoutRecord={layoutRecord}\n        feature={feature}\n        key={`stick-${feature.id()}`}\n        selectedFeatureId={selectedFeatureId}\n      />,\n    )\n  }\n\n  for (const layoutRecord of layout.getLayout(config).values()) {\n    const feature = features.get(layoutRecord.data.featureId)\n    lollipopsRendered.push(\n      <Lollipop\n        {...props}\n        layoutRecord={layoutRecord}\n        feature={feature}\n        key={`body-${feature.id()}`}\n        selectedFeatureId={selectedFeatureId}\n      />,\n    )\n  }\n\n  const width = (region.end - region.start) / bpPerPx\n  const height = layout.getTotalHeight()\n\n  return (\n    <svg\n      className=\"LollipopRendering\"\n      width={width}\n      height={height}\n      style={{\n        position: 'relative',\n      }}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onFocus={onMouseEnter}\n      onBlur={onMouseLeave}\n      onClick={onClick}\n    >\n      {sticksRendered}\n      {lollipopsRendered}\n    </svg>\n  )\n}\n\nLollipopRendering.propTypes = {\n  layout: ReactPropTypes.shape({\n    getLayout: ReactPropTypes.func.isRequired,\n    add: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n\n  regions: ReactPropTypes.arrayOf(CommonPropTypes.Region).isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  features: ReactPropTypes.instanceOf(Map),\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  displayModel: ReactPropTypes.shape({\n    /** id of the currently selected feature, if any */\n    selectedFeatureId: ReactPropTypes.string,\n  }),\n\n  onMouseDown: ReactPropTypes.func,\n  onMouseUp: ReactPropTypes.func,\n  onMouseEnter: ReactPropTypes.func,\n  onMouseLeave: ReactPropTypes.func,\n  onMouseOver: ReactPropTypes.func,\n  onMouseOut: ReactPropTypes.func,\n  onClick: ReactPropTypes.func,\n}\n\nLollipopRendering.defaultProps = {\n  displayModel: {},\n\n  features: new Map(),\n\n  onMouseDown: undefined,\n  onMouseUp: undefined,\n  onMouseEnter: undefined,\n  onMouseLeave: undefined,\n  onMouseOver: undefined,\n  onMouseOut: undefined,\n  onClick: undefined,\n}\n\nexport default observer(LollipopRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'LollipopRenderer',\n  {\n    strokeColor: {\n      type: 'color',\n      description: 'the outer color of each lollipop',\n      defaultValue: 'green',\n      contextVariable: ['feature'],\n    },\n    innerColor: {\n      type: 'color',\n      description: 'the inner color of each lollipop',\n      defaultValue: '#7fc75f',\n      contextVariable: ['feature'],\n    },\n    strokeWidth: {\n      type: 'number',\n      description: 'width of the stroked border',\n      defaultValue: 4,\n      contextVariable: ['feature'],\n    },\n    radius: {\n      type: 'number',\n      description: 'radius in pixels of each lollipop body',\n      defaultValue: `jexl:sqrt(max(3, (get(feature,'score')*10)/3.14))`,\n      contextVariable: ['feature'],\n    },\n    caption: {\n      type: 'string',\n      description:\n        'the tooltip caption displayed when the mouse hovers over a lollipop',\n      defaultValue: `jexl:get(feature,'name')`,\n      contextVariable: ['feature'],\n    },\n    minStickLength: {\n      type: 'number',\n      description: 'minimum lollipop \"stick\" length, in pixels',\n      defaultValue: 5,\n    },\n    stickColor: {\n      type: 'color',\n      description: 'color of the lollipop stick',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    stickWidth: {\n      type: 'number',\n      description: 'width in pixels of the lollipop stick',\n      defaultValue: 2,\n      contextVariable: ['feature'],\n    },\n    score: {\n      type: 'number',\n      description:\n        'the \"score\" of each lollipop, displayed as a number in the center of the circle',\n      defaultValue: `jexl:get(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\n\ninterface LayoutItem {\n  uniqueId: string\n  anchorLocation: number\n  width: number\n  height: number\n  data: { score: number }\n}\n\ntype LayoutEntry = LayoutItem & { x: number; y: number }\n\ntype LayoutMap = Map<string, LayoutEntry>\n\nexport class FloatingLayout {\n  width: number\n\n  totalHeight = 0\n\n  constructor({ width }: { width: number }) {\n    if (!width) {\n      throw new Error('width required to make a new FloatingLayout')\n    }\n    this.width = width\n  }\n\n  items: LayoutItem[] = []\n\n  layout: LayoutMap = new Map()\n\n  layoutDirty = false\n\n  add(\n    uniqueId: string,\n    anchorLocation: number,\n    width: number,\n    height: number,\n    data: { score: number },\n  ) {\n    this.items.push({ uniqueId, anchorLocation, width, height, data })\n    this.layoutDirty = true\n  }\n\n  /**\n   * @returns Map of `uniqueId => {x,y,anchorLocation,width,height,data}`\n   */\n  getLayout(configuration?: AnyConfigurationModel) {\n    if (!this.layoutDirty) {\n      return this.layout\n    }\n    if (!configuration) {\n      throw new Error('configuration object required')\n    }\n\n    const minY = readConfObject(configuration, 'minStickLength')\n\n    // sort them by score ascending, so higher scores will always end up\n    // stacked last (toward the bottom)\n    const sorted = this.items.sort((a, b) => a.data.score - b.data.score)\n\n    // bump them\n    let maxBottom = 0\n    const layoutEntries: [string, LayoutEntry][] = Array(sorted.length)\n    for (let i = 0; i < sorted.length; i += 1) {\n      const currentItem = sorted[i]\n      const { anchorLocation, width, height } = currentItem\n      const start = anchorLocation - width / 2\n      const end = start + width\n      let top = minY\n      let bottom = top + height\n\n      // figure out how far down to put it\n      for (let j = 0; j < i; j += 1) {\n        const [, previouslyLayedOutItem] = layoutEntries[j]\n        const {\n          x: prevStart,\n          y: prevTop,\n          width: prevWidth,\n          height: prevHeight,\n        } = previouslyLayedOutItem\n        const prevEnd = prevStart + prevWidth\n        const prevBottom = prevTop + prevHeight\n        if (\n          doesIntersect2(prevStart, prevEnd, start, end) &&\n          doesIntersect2(prevTop, prevBottom, top, bottom)\n        ) {\n          // bump this one to the bottom of the previous one\n          top = prevBottom\n          bottom = top + height\n          j = -1 // we need to check all of them again after bumping\n        }\n      }\n\n      // record the entry and update the maxBottom\n      layoutEntries[i] = [\n        currentItem.uniqueId,\n        { ...currentItem, x: start, y: top },\n      ]\n      if (bottom > maxBottom) {\n        maxBottom = bottom\n      }\n    }\n\n    // try to tile them left to right all at the same level\n    // if they don't fit, try to alternate them on 2 levels, then 3\n    this.totalHeight = maxBottom\n    this.layout = new Map(layoutEntries)\n    this.layoutDirty = false\n    return this.layout\n  }\n\n  getTotalHeight() {\n    if (this.layoutDirty) {\n      throw new Error('getTotalHeight does not work when the layout is dirty.')\n    }\n    return this.totalHeight\n  }\n\n  serializeRegion() {\n    return this.toJSON()\n  }\n\n  toJSON() {\n    if (this.layoutDirty) {\n      throw new Error('toJSON does not work when the layout is dirty.')\n    }\n    return { pairs: [...this.getLayout()], totalHeight: this.getTotalHeight() }\n  }\n\n  static fromJSON() {\n    throw new Error('not supported')\n  }\n}\n\nexport class PrecomputedFloatingLayout {\n  layout: LayoutMap\n\n  totalHeight: number\n\n  constructor({\n    pairs,\n    totalHeight,\n  }: {\n    pairs: [string, LayoutEntry][]\n    totalHeight: number\n  }) {\n    this.layout = new Map(pairs)\n    this.totalHeight = totalHeight\n  }\n\n  add(uniqueId: string) {\n    if (!this.layout.has(uniqueId)) {\n      throw new Error(`layout error, precomputed layout is missing ${uniqueId}`)\n    }\n  }\n\n  getLayout() {\n    return this.layout\n  }\n\n  getTotalHeight() {\n    return this.totalHeight\n  }\n\n  static fromJSON(\n    json: ConstructorParameters<typeof PrecomputedFloatingLayout>[0],\n  ) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import BoxRendererType, {\n  LayoutSession,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\nimport { FloatingLayout, PrecomputedFloatingLayout } from './Layout'\n\nclass FloatingLayoutSession extends LayoutSession {\n  makeLayout() {\n    'sequenceAdapter'\n\n    const { end, start } = this.regions[0]\n    const widthPx = (end - start) / this.bpPerPx\n    return new MultiLayout(FloatingLayout, { width: widthPx })\n  }\n\n  layoutIsValid(/* layout */) {\n    return false // layout.left layout.width === this.width\n  }\n}\n\nexport default class extends BoxRendererType {\n  createSession(args) {\n    return new FloatingLayoutSession(args)\n  }\n\n  deserializeLayoutInClient(json) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport {\n  configSchemaFactory as linearLollipopDisplayConfigSchemaFactory,\n  stateModelFactory as LinearLollipopDisplayStateModelFactory,\n} from './LinearLollipopDisplay'\nimport LollipopRenderer, {\n  configSchema as lollipopRendererConfigSchema,\n  ReactComponent as LollipopRendererReactComponent,\n} from './LollipopRenderer'\n\nexport default class extends Plugin {\n  name = 'LollipopPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new LollipopRenderer({\n          name: 'LollipopRenderer',\n          ReactComponent: LollipopRendererReactComponent,\n          configSchema: lollipopRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearLollipopDisplayConfigSchemaFactory(\n        pluginManager,\n      )\n      return new DisplayType({\n        name: 'LinearLollipopDisplay',\n        configSchema,\n        stateModel: LinearLollipopDisplayStateModelFactory(configSchema),\n        trackType: 'LollipopTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearLollipopDisplay',\n    { renderer: pluginManager.pluggableConfigSchemaType('renderer') },\n    {\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('AboutWidget', {})\n\nexport const stateModel = types.model('AboutWidget', {\n  id: ElementId,\n  type: types.literal('AboutWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('HelpWidget', {})\n\nexport const stateModel = types.model('HelpWidget', {\n  id: ElementId,\n  type: types.literal('HelpWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('ImportSessionWidget', {})\n\nexport const stateModel = types.model('ImportSessionWidget', {\n  id: ElementId,\n  type: types.literal('ImportSessionWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('SessionManager', {})\n\nexport const stateModel = types.model('SessionManager', {\n  id: ElementId,\n  type: types.literal('SessionManager'),\n})\n","import { lazy } from 'react'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AbstractSessionModel,\n  SessionWithWidgets,\n  isAbstractMenuManager,\n} from '@jbrowse/core/util'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport HelpIcon from '@material-ui/icons/Help'\nimport InfoIcon from '@material-ui/icons/Info'\nimport PublishIcon from '@material-ui/icons/Publish'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { saveAs } from 'file-saver'\nimport { getSnapshot, IAnyStateTreeNode } from 'mobx-state-tree'\nimport {\n  configSchema as aboutConfigSchema,\n  stateModel as aboutStateModel,\n} from './AboutWidget'\nimport {\n  configSchema as helpConfigSchema,\n  stateModel as helpStateModel,\n} from './HelpWidget'\nimport {\n  configSchema as importSessionConfigSchema,\n  stateModel as importSessionStateModel,\n} from './ImportSessionWidget'\nimport {\n  configSchema as sessionManagerConfigSchema,\n  stateModel as sessionManagerStateModel,\n} from './SessionManager'\n\nexport default class extends Plugin {\n  name = 'MenusPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AboutWidget',\n        heading: 'About',\n        configSchema: aboutConfigSchema,\n        stateModel: aboutStateModel,\n        ReactComponent: lazy(\n          () => import('./AboutWidget/components/AboutWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'HelpWidget',\n        heading: 'Help',\n        configSchema: helpConfigSchema,\n        stateModel: helpStateModel,\n        ReactComponent: lazy(\n          () => import('./HelpWidget/components/HelpWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'ImportSessionWidget',\n        heading: 'Import session',\n        configSchema: importSessionConfigSchema,\n        stateModel: importSessionStateModel,\n        ReactComponent: lazy(\n          () => import('./ImportSessionWidget/components/ImportSessionWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'SessionManager',\n        heading: 'Sessions',\n        configSchema: sessionManagerConfigSchema,\n        stateModel: sessionManagerStateModel,\n        ReactComponent: lazy(\n          () => import('./SessionManager/components/SessionManager'),\n        ),\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'About',\n        icon: InfoIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('AboutWidget', 'aboutWidget')\n          session.showWidget(widget)\n        },\n      })\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'Help',\n        icon: HelpIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('HelpWidget', 'helpWidget')\n          session.showWidget(widget)\n        },\n      })\n      pluginManager.rootModel.insertInMenu(\n        'File',\n        {\n          label: 'Export session',\n          icon: GetAppIcon,\n          onClick: (session: IAnyStateTreeNode) => {\n            const sessionBlob = new Blob(\n              [JSON.stringify({ session: getSnapshot(session) }, null, 2)],\n              { type: 'text/plain;charset=utf-8' },\n            )\n            saveAs(sessionBlob, 'session.json')\n          },\n        },\n        1,\n      )\n      pluginManager.rootModel.insertInMenu(\n        'File',\n        {\n          label: 'Import session…',\n          icon: PublishIcon,\n          onClick: (session: SessionWithWidgets) => {\n            const widget = session.addWidget(\n              'ImportSessionWidget',\n              'importSessionWidget',\n            )\n            session.showWidget(widget)\n          },\n        },\n        1,\n      )\n      pluginManager.rootModel.insertInMenu(\n        'File',\n        {\n          label: 'Open session…',\n          icon: FolderOpenIcon,\n          onClick: (session: SessionWithWidgets) => {\n            const widget = session.addWidget('SessionManager', 'sessionManager')\n            session.showWidget(widget)\n          },\n        },\n        1,\n      )\n      pluginManager.rootModel.insertInMenu(\n        'File',\n        {\n          label: 'Save session',\n          icon: SaveIcon,\n          onClick: (session: SessionWithWidgets) => {\n            // @ts-ignore\n            if (session.saveSessionToLocalStorage) {\n              // @ts-ignore\n              session.saveSessionToLocalStorage()\n              // @ts-ignore\n              session.notify(`Saved session \"${session.name}\"`, 'success')\n            }\n          },\n        },\n        1,\n      )\n      pluginManager.rootModel.insertInMenu(\n        'File',\n        {\n          label: 'Duplicate session',\n          icon: FileCopyIcon,\n          onClick: (session: AbstractSessionModel) => {\n            session.duplicateCurrentSession?.()\n          },\n        },\n        1,\n      )\n    }\n  }\n}\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport format from 'string-template'\n\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport MyConfigSchema from './configSchema'\n\ninterface SPARQLEntry {\n  type: string\n  value: string\n  dataTypes?: string\n}\n\ninterface SPARQLBinding {\n  [key: string]: SPARQLEntry\n}\n\ninterface SPARQLResponseHead {\n  vars: string[]\n}\n\ninterface SPARQLResponseResults {\n  bindings: SPARQLBinding[]\n}\n\ninterface SPARQLResponse {\n  head: SPARQLResponseHead\n  results: SPARQLResponseResults\n}\n\ninterface SPARQLFeatureData {\n  start: number\n  end: number\n  strand: number\n  subfeatures?: SPARQLFeatureData[]\n  uniqueId: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [propName: string]: any\n}\n\ninterface SPARQLFeature {\n  data: SPARQLFeatureData\n}\n\nexport default class SPARQLAdapter extends BaseFeatureDataAdapter {\n  private endpoint: string\n\n  private queryTemplate: string\n\n  private refNamesQueryTemplate: string\n\n  private additionalQueryParams: string[]\n\n  private configRefNames: string[]\n\n  private refNames: string[] | undefined\n\n  public constructor(config: Instance<typeof MyConfigSchema>) {\n    super(config)\n    this.endpoint = readConfObject(config, 'endpoint').uri\n    this.queryTemplate = readConfObject(config, 'queryTemplate')\n    this.additionalQueryParams = readConfObject(config, 'additionalQueryParams')\n    this.refNamesQueryTemplate = readConfObject(config, 'refNamesQueryTemplate')\n    this.configRefNames = readConfObject(config, 'refNames')\n  }\n\n  public async getRefNames(opts: BaseOptions = {}): Promise<string[]> {\n    if (this.refNames) {\n      return this.refNames\n    }\n    let refNames = [] as string[]\n    if (this.refNamesQueryTemplate) {\n      const queryTemplate = encodeURIComponent(this.refNamesQueryTemplate)\n      const results = await this.querySparql(queryTemplate, opts)\n      refNames = this.resultsToRefNames(results)\n    } else if (this.configRefNames) {\n      refNames = this.configRefNames\n    }\n    this.refNames = refNames\n    return refNames\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const filledTemplate = encodeURIComponent(\n        format(this.queryTemplate, query),\n      )\n      const { refName } = query\n      const results = await this.querySparql(filledTemplate, opts)\n      this.resultsToFeatures(results, refName).forEach(feature => {\n        observer.next(feature)\n      })\n      observer.complete()\n    }, opts.signal)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private async querySparql(query: string, opts?: BaseOptions): Promise<any> {\n    let additionalQueryParams = ''\n    if (this.additionalQueryParams.length) {\n      additionalQueryParams = `&${this.additionalQueryParams.join('&')}`\n    }\n    const signal = opts && opts.signal\n    const response = await fetch(\n      `${this.endpoint}?query=${query}${additionalQueryParams}`,\n      {\n        headers: { accept: 'application/json,application/sparql-results+json' },\n        signal,\n      },\n    )\n    return response.json()\n  }\n\n  private resultsToRefNames(response: SPARQLResponse): string[] {\n    const rows = ((response || {}).results || {}).bindings || []\n    if (!rows.length) {\n      return []\n    }\n    const fields = response.head.vars\n    if (!fields.includes('refName')) {\n      throw new Error('\"refName\" not found in refNamesQueryTemplate response')\n    }\n    return rows.map(row => row.refName.value)\n  }\n\n  private resultsToFeatures(\n    results: SPARQLResponse,\n    refName: string,\n  ): SimpleFeature[] {\n    const rows = ((results || {}).results || {}).bindings || []\n    if (!rows.length) {\n      return []\n    }\n    const fields = results.head.vars\n    const requiredFields = ['start', 'end', 'uniqueId']\n    requiredFields.forEach(requiredField => {\n      if (!fields.includes(requiredField)) {\n        console.error(\n          `Required field ${requiredField} missing from feature data`,\n        )\n      }\n    })\n    const seenFeatures: Record<string, SPARQLFeature> = {}\n    rows.forEach(row => {\n      const rawData: Record<string, string>[] = [{}]\n      fields.forEach(field => {\n        if (field in row) {\n          const { value } = row[field]\n          let idx = 0\n          while (field.startsWith('sub_')) {\n            field = field.slice(4)\n            idx += 1\n          }\n          while (idx > rawData.length - 1) {\n            rawData.push({})\n          }\n          rawData[idx][field] = value\n        }\n      })\n\n      rawData.forEach((rd, idx) => {\n        const { uniqueId } = rd\n        if (idx < rawData.length - 1) {\n          rawData[idx + 1].parentUniqueId = uniqueId\n        }\n        seenFeatures[uniqueId] = {\n          data: {\n            ...rd,\n            uniqueId,\n            refName,\n            start: parseInt(rd.start, 10),\n            end: parseInt(rd.end, 10),\n            strand: parseInt(rd.strand, 10) || 0,\n          },\n        }\n      })\n    })\n\n    // resolve subfeatures, keeping only top-level features in seenFeatures\n    for (const [uniqueId, f] of Object.entries(seenFeatures)) {\n      const pid = f.data.parentUniqueId\n      delete f.data.parentUniqueId\n      if (pid) {\n        const p = seenFeatures[pid]\n        if (p) {\n          if (!p.data.subfeatures) {\n            p.data.subfeatures = []\n          }\n          p.data.subfeatures.push({\n            ...f.data,\n            uniqueId,\n          })\n          delete seenFeatures[uniqueId]\n        } else {\n          const subfeatures = Object.values(seenFeatures)\n            .map(sf => sf.data.subfeatures)\n            .filter(sf => !!sf)\n            .flat()\n          let found = false\n          for (const subfeature of subfeatures) {\n            if (subfeature && subfeature.uniqueId === pid) {\n              if (!subfeature.subfeatures) {\n                subfeature.subfeatures = []\n              }\n              subfeature.subfeatures.push({\n                ...f.data,\n                uniqueId,\n              })\n              delete seenFeatures[uniqueId]\n              found = true\n              break\n            } else if (subfeature && subfeature.subfeatures) {\n              subfeatures.push(...subfeature.subfeatures)\n            }\n          }\n          if (!found) {\n            console.error(`Could not find parentID ${pid}`)\n          }\n        }\n      }\n    }\n\n    return Object.keys(seenFeatures).map(\n      seenFeature =>\n        new SimpleFeature({\n          ...seenFeatures[seenFeature].data,\n          uniqueId: seenFeature,\n          subfeatures: seenFeatures[seenFeature].data.subfeatures,\n        }),\n    )\n  }\n\n  public async hasDataForRefName(\n    refName: string,\n    opts: BaseOptions = {},\n  ): Promise<boolean> {\n    const refNames = await this.getRefNames(opts)\n    if (refNames.length && !refNames.includes(refName)) {\n      return false\n    }\n    return true\n  }\n\n  public freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'SPARQLAdapter',\n  {\n    endpoint: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'https://somesite.com/sparql' },\n      description: 'URL of the SPARQL endpoint',\n    },\n    queryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query where {start} {end} and {refName} will get replaced for each call',\n    },\n    refNamesQueryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query that returns the possible refNames in a ?refName column',\n    },\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Possible refNames used by the SPARQL endpoint (ignored if \"refNamesQueryTemplate\" is provided)',\n    },\n    additionalQueryParams: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Additional parameters to add to the query, e.g. \"format=JSON\"',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AdapterClass as SPARQLAdapterClass,\n  configSchema as sparqlAdapterConfigSchema,\n} from './SPARQLAdapter'\n\nexport default class RdfPlugin extends Plugin {\n  name = 'RdfPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'SPARQLAdapter',\n          configSchema: sparqlAdapterConfigSchema,\n          AdapterClass: SPARQLAdapterClass,\n        }),\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'BgzipFastaAdapter',\n  {\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.gz' },\n    },\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.gz.fai' },\n    },\n    gziLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.gz.gzi' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'ChromSizesAdapter',\n  {\n    chromSizesLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/species.chrom.sizes' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { contrastingTextColor } from '@jbrowse/core/util/color'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { Region } from '@jbrowse/core/util/types'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport {\n  bpSpanPx,\n  revcom,\n  complement,\n  defaultStarts,\n  defaultStops,\n  defaultCodonTable,\n  generateCodonTable,\n} from '@jbrowse/core/util'\n\ninterface MyProps {\n  exportSVG?: { rasterizeLayers: boolean }\n  features: Map<string, Feature>\n  regions: Region[]\n  bpPerPx: number\n  config: AnyConfigurationModel\n  highResolutionScaling: number\n  theme: any\n  showForward: boolean\n  showReverse: boolean\n  showTranslation: boolean\n}\n\nfunction Translation(props: {\n  codonTable: any\n  seq: string\n  frame: number\n  bpPerPx: number\n  region: Region\n  reverse?: boolean\n  height: number\n  y: number\n  theme?: any\n}) {\n  const {\n    codonTable,\n    seq,\n    frame,\n    bpPerPx,\n    region,\n    height,\n    y,\n    reverse = false,\n    theme,\n  } = props\n  const scale = bpPerPx\n\n  // the tilt variable normalizes the frame to where we are starting from,\n  // which increases consistency across blocks\n  const tilt = 3 - (region.start % 3)\n\n  // the effectiveFrame incorporates tilt and the frame to say what the\n  // effective frame that is plotted. The +3 is for when frame is -2 and this\n  // can otherwise result in effectiveFrame -1\n  const effectiveFrame = (frame + tilt + 3) % 3\n\n  const seqSliced = seq.slice(effectiveFrame)\n\n  const translated: { letter: string; codon: string }[] = []\n  for (let i = 0; i < seqSliced.length; i += 3) {\n    const codon = seqSliced.slice(i, i + 3)\n    const normalizedCodon = reverse ? revcom(codon) : codon\n    const aminoAcid = codonTable[normalizedCodon] || ''\n    translated.push({ letter: aminoAcid, codon: normalizedCodon.toUpperCase() })\n  }\n\n  const w = (1 / scale) * 3\n  const drop = region.start === 0 ? 0 : w\n  const render = 1 / bpPerPx >= 12\n  const width = (region.end - region.start) / bpPerPx\n\n  const map = ['#d8d8d8', '#adadad', '#8f8f8f'].reverse()\n  return (\n    <>\n      {translated.map((element, index) => {\n        const x = region.reversed\n          ? width - (w * (index + 1) + effectiveFrame / scale - drop)\n          : w * index + effectiveFrame / scale - drop\n        const { letter, codon } = element\n        return (\n          <React.Fragment key={`${index}-${letter}`}>\n            <rect\n              x={x}\n              y={y}\n              width={\n                render ? w : w + 0.7 /* small fudge factor when zoomed out*/\n              }\n              height={height}\n              stroke={render ? '#555' : 'none'}\n              fill={\n                defaultStarts.includes(codon)\n                  ? theme.palette.startCodon\n                  : defaultStops.includes(codon)\n                  ? theme.palette.stopCodon\n                  : map[Math.abs(frame)]\n              }\n            />\n            {render ? (\n              <text\n                x={x + w / 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n              >\n                {letter}\n              </text>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nfunction DNA(props: {\n  seq: string\n  theme: any\n  bpPerPx: number\n  height: number\n  region: Region\n  feature: Feature\n  y: number\n}) {\n  const { bpPerPx, region, feature, theme, height, seq, y } = props\n  const render = 1 / bpPerPx >= 12\n\n  const [leftPx, rightPx] = bpSpanPx(\n    feature.get('start'),\n    feature.get('end'),\n    region,\n    bpPerPx,\n  )\n  const reverse = region.reversed\n  const len = feature.get('end') - feature.get('start')\n  const w = Math.max((rightPx - leftPx) / len, 0.8)\n\n  return (\n    <>\n      {seq.split('').map((letter, index) => {\n        const color = theme.palette.bases[letter.toUpperCase()]\n        const x = reverse ? rightPx - (index + 1) * w : leftPx + index * w\n        return (\n          <React.Fragment key={index}>\n            <rect\n              x={x}\n              y={y}\n              width={w}\n              height={height}\n              fill={color ? color.main : '#aaa'}\n              stroke={render ? '#555' : 'none'}\n            />\n            {render ? (\n              <text\n                x={x + w / 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                fill={color ? contrastingTextColor(color.main) : 'black'}\n              >\n                {letter}\n              </text>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nconst SequenceSVG = ({\n  regions,\n  theme: configTheme,\n  features = new Map(),\n  showReverse,\n  showForward,\n  showTranslation,\n  bpPerPx,\n}: any) => {\n  const [region] = regions\n  const theme = createJBrowseTheme(configTheme)\n  const codonTable = generateCodonTable(defaultCodonTable)\n  const height = 20\n  const [feature] = [...features.values()]\n  if (!feature) {\n    return null\n  }\n  const seq: string = feature.get('seq')\n  if (!seq) {\n    return null\n  }\n\n  // incrementer for the y-position of the current sequence being rendered\n  // (applies to both translation rows and dna rows)\n  let currY = -20\n\n  return (\n    <>\n      {/* the upper translation row. if the view is reversed, the reverse\n        translation is on the top */}\n      {showTranslation && (region.reversed ? showReverse : showForward)\n        ? [2, 1, 0].map(index => (\n            <Translation\n              key={`translation-${index}`}\n              seq={seq}\n              y={(currY += 20)}\n              codonTable={codonTable}\n              frame={index}\n              bpPerPx={bpPerPx}\n              region={region}\n              theme={theme}\n              height={height}\n              reverse={region.reversed}\n            />\n          ))\n        : null}\n\n      {showForward ? (\n        <DNA\n          height={height}\n          y={(currY += 20)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? complement(seq) : seq}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {showReverse ? (\n        <DNA\n          height={height}\n          y={(currY += 20)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? seq : complement(seq)}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {/* the lower translation row. if the view is reversed, the forward\n        translation is on the bottom */}\n      {showTranslation && (region.reversed ? showForward : showReverse)\n        ? [0, -1, -2].map(index => (\n            <Translation\n              key={`rev-translation-${index}`}\n              seq={seq}\n              y={(currY += 20)}\n              codonTable={codonTable}\n              frame={index}\n              bpPerPx={bpPerPx}\n              region={region}\n              theme={theme}\n              height={height}\n              reverse={!region.reversed}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nconst Wrapper = ({ exportSVG, width, totalHeight, children }: any) => {\n  return exportSVG ? (\n    <>{children}</>\n  ) : (\n    <svg\n      width={width}\n      height={totalHeight}\n      style={{ width, height: totalHeight }}\n    >\n      {children}\n    </svg>\n  )\n}\n\nfunction Sequence(props: MyProps) {\n  const { regions, bpPerPx } = props\n  const [region] = regions\n  const width = (region.end - region.start) / bpPerPx\n  const totalHeight = 200\n\n  return (\n    <Wrapper {...props} totalHeight={totalHeight} width={width}>\n      <SequenceSVG {...props} />\n    </Wrapper>\n  )\n}\n\nexport default observer(Sequence)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'DivSequenceRenderer',\n  {\n    height: {\n      type: 'number',\n      description: 'height in pixels of each line of sequence',\n      defaultValue: 16,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'IndexedFastaAdapter',\n  {\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa' },\n    },\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.fai' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { configSchema as divSequenceRendererConfigSchema } from '../DivSequenceRenderer'\n\nexport const configSchema = ConfigurationSchema(\n  'LinearReferenceSequenceDisplay',\n  { renderer: divSequenceRendererConfigSchema },\n  { explicitIdentifier: 'displayId', explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'TwoBitAdapter',\n  {\n    twoBitLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.2bit' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'GCContentAdapter',\n    {\n      sequenceAdapter: pluginManager.pluggableConfigSchemaType('adapter'),\n    },\n    { explicitlyTyped: true },\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  return {\n    configSchema: pluginManager.load(configSchemaF),\n    getAdapterClass: () => import('./GCContentAdapter').then(r => r.default),\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport { Region } from '@jbrowse/core/util/types'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { configSchema as bgzipFastaAdapterConfigSchema } from './BgzipFastaAdapter'\nimport { configSchema as chromSizesAdapterConfigSchema } from './ChromSizesAdapter'\nimport {\n  configSchema as divSequenceRendererConfigSchema,\n  ReactComponent as DivSequenceRendererReactComponent,\n} from './DivSequenceRenderer'\nimport { configSchema as indexedFastaAdapterConfigSchema } from './IndexedFastaAdapter'\nimport {\n  configSchema as linearReferenceSequenceDisplayConfigSchema,\n  modelFactory as linearReferenceSequenceDisplayModelFactory,\n} from './LinearReferenceSequenceDisplay'\nimport { configSchema as twoBitAdapterConfigSchema } from './TwoBitAdapter'\nimport GCContentAdapterF from './GCContentAdapter'\nimport { createReferenceSeqTrackConfig } from './referenceSeqTrackConfig'\n\n/* adjust in both directions */\nclass DivSequenceRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  getExpandedRegion(region: Region) {\n    return {\n      ...region,\n      start: Math.max(region.start - 3, 0),\n      end: region.end + 3,\n    }\n  }\n}\n\nexport default class SequencePlugin extends Plugin {\n  name = 'SequencePlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'TwoBitAdapter',\n          configSchema: twoBitAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./TwoBitAdapter/TwoBitAdapter').then(r => r.default),\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'ChromSizesAdapter',\n          configSchema: chromSizesAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./ChromSizesAdapter/ChromSizesAdapter').then(\n              r => r.default,\n            ),\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'IndexedFastaAdapter',\n          configSchema: indexedFastaAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./IndexedFastaAdapter/IndexedFastaAdapter').then(\n              r => r.default,\n            ),\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'BgzipFastaAdapter',\n          configSchema: bgzipFastaAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./BgzipFastaAdapter/BgzipFastaAdapter').then(\n              r => r.default,\n            ),\n        }),\n    )\n\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'GCContentAdapter',\n          ...pluginManager.load(GCContentAdapterF),\n        }),\n    )\n    pluginManager.addTrackType(() => {\n      const configSchema = createReferenceSeqTrackConfig(pluginManager)\n\n      return new TrackType({\n        name: 'ReferenceSequenceTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'ReferenceSequenceTrack',\n          configSchema,\n        ),\n      })\n    })\n\n    pluginManager.addDisplayType(() => {\n      const stateModel = linearReferenceSequenceDisplayModelFactory(\n        linearReferenceSequenceDisplayConfigSchema,\n      )\n      return {\n        name: 'LinearReferenceSequenceDisplay',\n        configSchema: linearReferenceSequenceDisplayConfigSchema,\n        stateModel,\n        trackType: 'ReferenceSequenceTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      }\n    })\n\n    pluginManager.addRendererType(\n      () =>\n        new DivSequenceRenderer({\n          name: 'DivSequenceRenderer',\n          ReactComponent: DivSequenceRendererReactComponent,\n          configSchema: divSequenceRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/*\nNote: this is primarily a copy of createBaseTrackConfig, except with a subset\nof the config slots, to avoid including fields that don't make sense for the\nReferenceSequenceTrack\n*/\nexport function createReferenceSeqTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'ReferenceSequenceTrack',\n    {\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n    },\n    {\n      preProcessSnapshot: s => {\n        const snap = JSON.parse(JSON.stringify(s))\n        const displayTypes = new Set()\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          displays.forEach((d: any) => d && displayTypes.add(d.type))\n          const trackType = pluginManager.getTrackType(snap.type)\n          trackType.displayTypes.forEach(displayType => {\n            if (!displayTypes.has(displayType.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${displayType.name}`,\n                type: displayType.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n      actions: (self: any) => ({\n        addDisplayConf(displayConf: { type: string; displayId: string }) {\n          const { type } = displayConf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            (d: any) => d && d.displayId === displayConf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(displayConf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\nimport {\n  BaseLinearDisplay,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\nimport { getContainingView } from '@jbrowse/core/util'\n\nexport function modelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReferenceSequenceDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearReferenceSequenceDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        showForward: types.optional(types.boolean, true),\n        showReverse: types.optional(types.boolean, true),\n        showTranslation: types.optional(types.boolean, true),\n        height: 180,\n      }),\n    )\n    .views(self => ({\n      get renderProps() {\n        const { showForward, showReverse, showTranslation } = self\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          config: self.configuration.renderer,\n          showForward,\n          showReverse,\n          showTranslation,\n        }\n      },\n      regionCannotBeRendered(/* region */) {\n        const view = getContainingView(self) as LinearGenomeViewModel\n        if (view && view.bpPerPx >= 1) {\n          return 'Zoom in to see sequence'\n        }\n        return undefined\n      },\n\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n    .actions(self => ({\n      toggleShowForward() {\n        self.showForward = !self.showForward\n      },\n      toggleShowReverse() {\n        self.showReverse = !self.showReverse\n      },\n      toggleShowTranslation() {\n        self.showTranslation = !self.showTranslation\n      },\n    }))\n    .views(self => ({\n      get trackMenuItems() {\n        return [\n          {\n            label: 'Show forward',\n            type: 'checkbox',\n            checked: self.showForward,\n            onClick: () => {\n              self.toggleShowForward()\n            },\n          },\n          {\n            label: 'Show reverse',\n            type: 'checkbox',\n            checked: self.showReverse,\n            onClick: () => {\n              self.toggleShowReverse()\n            },\n          },\n          {\n            label: 'Show translation',\n            type: 'checkbox',\n            checked: self.showTranslation,\n            onClick: () => {\n              self.toggleShowTranslation()\n            },\n          },\n        ]\n      },\n    }))\n}\n","import { inDevelopment } from '..'\n\ninterface AbsoluteCache {\n  dirty: boolean\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n  width?: number\n  height?: number\n}\n\nexport default class SceneGraph {\n  private name: string\n\n  public left: number\n\n  public top: number\n\n  public width: number\n\n  public height: number\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data?: Record<string, any>\n\n  private children: Map<string, SceneGraph>\n\n  private absoluteCache: AbsoluteCache\n\n  public parent?: SceneGraph\n\n  /**\n   * note: all coordinates are inter-base or inter-pixel coordinates\n   */\n  constructor(\n    name: string,\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: Record<string, any>,\n  ) {\n    if (\n      inDevelopment &&\n      (typeof name !== 'string' ||\n        typeof left !== 'number' ||\n        Number.isNaN(left) ||\n        typeof top !== 'number' ||\n        Number.isNaN(top) ||\n        typeof width !== 'number' ||\n        Number.isNaN(width) ||\n        typeof height !== 'number' ||\n        Number.isNaN(height))\n    ) {\n      throw new TypeError('invalid SceneGraph arguments')\n    }\n\n    this.name = name\n    this.left = left\n    this.top = top\n    this.width = width\n    this.height = height\n    this.data = data\n    this.children = new Map()\n    this.absoluteCache = { dirty: true }\n  }\n\n  addChild(\n    nameOrSceneGraph: string | SceneGraph,\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: Record<string, any>,\n  ): SceneGraph {\n    let child: SceneGraph\n    if (nameOrSceneGraph instanceof SceneGraph) {\n      child = nameOrSceneGraph\n    } else {\n      child = new SceneGraph(nameOrSceneGraph, left, top, width, height, data)\n    }\n\n    if (!(child instanceof SceneGraph)) {\n      throw new TypeError(\n        'argument to addChild must be an array or a SceneGraph',\n      )\n    }\n\n    if (this.children.has(child.name)) {\n      throw new Error(`child named \"${child.name}\" already exists`)\n    }\n\n    // update the bounds to match the child\n    child.parent = this\n    const {\n      left: childLeft,\n      right: childRight,\n      top: childTop,\n      bottom: childBottom,\n    } = child.absolute\n    if (\n      childLeft !== undefined &&\n      childRight !== undefined &&\n      childTop !== undefined &&\n      childBottom !== undefined\n    ) {\n      this.expand(childLeft, childRight, childTop, childBottom)\n      this.children.set(child.name, child)\n    }\n    return child\n  }\n\n  getSubRecord(name: string): SceneGraph | undefined {\n    return this.children.get(name)\n  }\n\n  /**\n   * if the record does not already cover the given\n   * absolute extents, extend it to cover them\n   *\n   * @param left -\n   * @param right -\n   * @param top -\n   * @param bottom -\n   */\n  expand(\n    newLeft: number,\n    newRight: number,\n    newTop: number,\n    newBottom: number,\n  ): void {\n    const { left, right, top, bottom } = this.absolute\n    if (left !== undefined && newLeft < left) {\n      const diff = left - newLeft\n      this.width += diff\n      this.left -= diff\n    }\n    if (right !== undefined && newRight > right) {\n      this.width += newRight - right\n    }\n    if (top !== undefined && newTop < top) {\n      const diff = top - newTop\n      this.height += diff\n      this.top -= diff\n    }\n    if (bottom !== undefined && newBottom > bottom) {\n      this.height += newBottom - bottom\n    }\n    if (this.parent) {\n      this.parent.expand(newLeft, newRight, newTop, newBottom)\n    }\n    this.absoluteCache.dirty = true\n  }\n\n  get bottom(): number {\n    return this.top + this.height\n  }\n\n  get right(): number {\n    return this.left + this.width\n  }\n\n  walkParents(callback: Function): void {\n    if (this.parent) {\n      callback(this.parent)\n      this.parent.walkParents(callback)\n    }\n  }\n\n  walkChildren(callback: Function): void {\n    for (const sub of this.children.values()) {\n      callback(sub)\n      sub.walkChildren(callback)\n    }\n  }\n\n  get absolute(): AbsoluteCache {\n    if (this.absoluteCache.dirty) {\n      let xOffset = 0\n      let yOffset = 0\n      this.walkParents((node: SceneGraph) => {\n        xOffset += node.left\n        yOffset += node.top\n      })\n      this.absoluteCache = {\n        dirty: false,\n        left: this.left + xOffset,\n        right: this.right + xOffset,\n        top: this.top + yOffset,\n        bottom: this.bottom + yOffset,\n        width: this.width,\n        height: this.height,\n      }\n    }\n    return this.absoluteCache\n  }\n\n  move(x: number, y: number): void {\n    this.left += x\n    this.top += y\n\n    this.absoluteCache.dirty = true\n    this.walkChildren((c: SceneGraph) => {\n      c.absoluteCache.dirty = true\n    })\n    const { left, right, top, bottom } = this.absolute\n    if (\n      left !== undefined &&\n      right !== undefined &&\n      top !== undefined &&\n      bottom !== undefined\n    ) {\n      this.expand(left, right, top, bottom)\n    }\n  }\n}\n","import React from 'react'\nimport { measureText } from '@jbrowse/core/util'\n\nexport default function Label(props: {\n  text: string\n  x: number\n  y: number\n  color?: string\n  fontHeight?: number\n  featureWidth?: number\n  allowedWidthExpansion?: number\n  reversed?: boolean\n  fontWidthScaleFactor?: number\n}) {\n  const {\n    text,\n    x,\n    y,\n    color = 'black',\n    fontHeight = 13,\n    featureWidth = 0,\n    reversed,\n    allowedWidthExpansion,\n    fontWidthScaleFactor = 0.6,\n  } = props\n\n  const fontWidth = fontHeight * fontWidthScaleFactor\n  const totalWidth =\n    featureWidth && allowedWidthExpansion\n      ? featureWidth + allowedWidthExpansion\n      : Infinity\n\n  const measuredTextWidth = measureText(text, fontHeight)\n\n  return (\n    <text\n      x={reversed ? x + featureWidth - measuredTextWidth : x}\n      y={y + fontHeight}\n      style={{ fontSize: fontHeight, fill: color, cursor: 'default' }}\n    >\n      {measuredTextWidth > totalWidth\n        ? `${text.slice(0, totalWidth / fontWidth)}...`\n        : text}\n    </text>\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport FeatureLabel from './FeatureLabel'\n\nfunction FeatureGlyph(props) {\n  const {\n    feature,\n    rootLayout,\n    selected,\n    config,\n    name,\n    shouldShowName,\n    description,\n    shouldShowDescription,\n    fontHeight,\n    allowedWidthExpansion,\n    reversed,\n  } = props\n\n  const featureLayout = rootLayout.getSubRecord(String(feature.id()))\n  const { GlyphComponent } = featureLayout.data\n\n  const glyphComponents = [\n    <GlyphComponent\n      key={`glyph-${feature.id()}`}\n      {...props}\n      feature={feature}\n      featureLayout={featureLayout}\n      selected={selected}\n    />,\n  ]\n\n  if (shouldShowName) {\n    glyphComponents.push(\n      <FeatureLabel\n        key={`glyph-name-${feature.id()}`}\n        text={name}\n        x={rootLayout.getSubRecord('nameLabel').absolute.left}\n        y={rootLayout.getSubRecord('nameLabel').absolute.top}\n        color={readConfObject(config, ['labels', 'nameColor'], { feature })}\n        fontHeight={fontHeight}\n        reversed={reversed}\n        featureWidth={featureLayout.width}\n        allowedWidthExpansion={allowedWidthExpansion}\n      />,\n    )\n  }\n\n  if (shouldShowDescription) {\n    glyphComponents.push(\n      <FeatureLabel\n        key={`glyph-description-${feature.id()}`}\n        text={description}\n        x={rootLayout.getSubRecord('descriptionLabel').absolute.left}\n        y={rootLayout.getSubRecord('descriptionLabel').absolute.top}\n        color={readConfObject(config, ['labels', 'descriptionColor'], {\n          feature,\n        })}\n        fontHeight={fontHeight}\n        featureWidth={featureLayout.width}\n        reversed={reversed}\n        allowedWidthExpansion={allowedWidthExpansion}\n      />,\n    )\n  }\n\n  return <g>{glyphComponents}</g>\n}\n\nFeatureGlyph.propTypes = {\n  feature: PropTypes.shape({\n    id: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n  }).isRequired,\n  layout: PropTypes.shape({\n    addRect: PropTypes.func.isRequired,\n    getTotalHeight: PropTypes.func.isRequired,\n  }).isRequired,\n  rootLayout: PropTypes.shape({\n    addChild: PropTypes.func.isRequired,\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: PropTypes.number.isRequired,\n  reversed: PropTypes.bool,\n  selected: PropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  name: PropTypes.string,\n  shouldShowName: PropTypes.bool,\n  description: PropTypes.string,\n  shouldShowDescription: PropTypes.bool,\n  fontHeight: PropTypes.number,\n  allowedWidthExpansion: PropTypes.number,\n  movedDuringLastMouseDown: PropTypes.bool.isRequired,\n}\n\nFeatureGlyph.defaultProps = {\n  reversed: false,\n  selected: false,\n  name: '',\n  shouldShowName: false,\n  description: '',\n  shouldShowDescription: false,\n  fontHeight: undefined,\n  allowedWidthExpansion: undefined,\n}\n\nexport default observer(FeatureGlyph)\n","import { bpSpanPx } from '@jbrowse/core/util'\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature'\nimport { Region } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport React from 'react'\n\ntype LayoutRecord = [number, number, number, number]\ninterface SvgOverlayProps {\n  region: Region\n  displayModel: {\n    getFeatureByID: (arg0: string) => LayoutRecord\n    selectedFeatureId?: string\n    featureIdUnderMouse?: string\n    contextMenuFeature?: SimpleFeature\n  }\n  bpPerPx: number\n  blockKey: string\n  movedDuringLastMouseDown: boolean\n  onFeatureMouseDown?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseEnter?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOut?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOver?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseUp?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseLeave?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseMove?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  // synthesized from mouseup and mousedown\n  onFeatureClick?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureContextMenu?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n}\n\ninterface OverlayRectProps extends React.SVGProps<SVGRectElement> {\n  rect?: LayoutRecord\n  region: Region\n  bpPerPx: number\n}\n\nfunction OverlayRect({\n  rect,\n  region,\n  bpPerPx,\n  ...rectProps\n}: OverlayRectProps) {\n  if (!rect) {\n    return null\n  }\n  const [leftBp, topPx, rightBp, bottomPx] = rect\n  const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n  const rectTop = Math.round(topPx)\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const rectHeight = Math.round(bottomPx - topPx)\n  const width = rightPx - leftPx\n\n  if (leftPx + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(leftPx, 0)\n  const diff = leftWithinBlock - leftPx\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      x={leftWithinBlock - 2}\n      y={rectTop - 2}\n      width={widthWithinBlock + 4}\n      height={rectHeight + 4}\n      {...rectProps}\n    />\n  )\n}\n\nfunction SvgOverlay({\n  displayModel,\n  blockKey,\n  region,\n  bpPerPx,\n  movedDuringLastMouseDown,\n  ...handlers\n}: SvgOverlayProps) {\n  const {\n    selectedFeatureId,\n    featureIdUnderMouse,\n    contextMenuFeature,\n  } = displayModel\n\n  const mouseoverFeatureId = featureIdUnderMouse || contextMenuFeature?.id()\n\n  function onFeatureMouseDown(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseDown: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseEnter(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseEnter: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOut(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOut: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOver(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOver: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseUp(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseUp: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseLeave(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseLeave: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseMove(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseMove: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureClick(event: React.MouseEvent<SVGRectElement, MouseEvent>) {\n    if (movedDuringLastMouseDown) {\n      return undefined\n    }\n    const { onFeatureClick: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    event.stopPropagation()\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureContextMenu(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureContextMenu: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  return (\n    <>\n      {mouseoverFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(mouseoverFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          fill=\"#000\"\n          fillOpacity=\"0.2\"\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onContextMenu={onFeatureContextMenu}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n          data-testid={mouseoverFeatureId}\n        />\n      ) : null}\n      {selectedFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(selectedFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          stroke=\"#00b8ff\"\n          fill=\"none\"\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(SvgOverlay)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\n\nfunction Box(props) {\n  const { feature, region, config, featureLayout, selected, bpPerPx } = props\n  const screenWidth = (region.end - region.start) / bpPerPx\n\n  const color1 = readConfObject(config, 'color1', { feature })\n  let emphasizedColor1\n  try {\n    emphasizedColor1 = emphasize(color1, 0.3)\n  } catch (error) {\n    emphasizedColor1 = color1\n  }\n  const color2 = readConfObject(config, 'color2', { feature })\n\n  const { left, top, width, height } = featureLayout.absolute\n\n  if (left + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      data-testid={`box-${feature.id()}`}\n      x={leftWithinBlock}\n      y={top}\n      width={widthWithinBlock}\n      height={height}\n      fill={selected ? emphasizedColor1 : color1}\n      stroke={selected ? color2 : undefined}\n    />\n  )\n}\n\nBox.propTypes = {\n  feature: ReactPropTypes.shape({\n    get: ReactPropTypes.func.isRequired,\n    id: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  featureLayout: ReactPropTypes.shape({\n    absolute: ReactPropTypes.shape({\n      top: ReactPropTypes.number.isRequired,\n      left: ReactPropTypes.number.isRequired,\n      width: ReactPropTypes.number.isRequired,\n      height: ReactPropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  selected: ReactPropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\n\nBox.defaultProps = {\n  selected: false,\n}\n\nexport default observer(Box)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React from 'react'\nimport { isUTR } from './util'\n\nconst utrHeightFraction = 0.65\n\nfunction Chevron(props) {\n  const {\n    feature,\n    bpPerPx,\n    region,\n    config,\n    featureLayout,\n    selected,\n    reversed,\n  } = props\n\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const width = Math.max(featureLayout.absolute.width, 1)\n  const { left } = featureLayout.absolute\n  let { top, height } = featureLayout.absolute\n  if (isUTR(feature)) {\n    top += ((1 - utrHeightFraction) / 2) * height\n    height *= utrHeightFraction\n  }\n\n  const strand = feature.get('strand')\n  const direction = strand * (reversed ? -1 : 1)\n  const color = isUTR(feature)\n    ? readConfObject(config, 'color3', { feature })\n    : readConfObject(config, 'color1', { feature })\n  let emphasizedColor\n  try {\n    emphasizedColor = emphasize(color, 0.3)\n  } catch (error) {\n    emphasizedColor = color\n  }\n  const color2 = readConfObject(config, 'color2', { feature })\n\n  if (left + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <>\n      <rect\n        data-testid={feature.id()}\n        stroke={selected ? color2 : undefined}\n        fill={selected ? emphasizedColor : color}\n        x={leftWithinBlock}\n        y={top}\n        width={widthWithinBlock}\n        height={height}\n      />\n      {direction < 0 && diff === 0 ? (\n        <polygon\n          stroke={selected ? color2 : undefined}\n          fill={selected ? emphasizedColor : color}\n          points={[\n            [left, top],\n            [left - height / 2, top + height / 2],\n            [left, top + height],\n          ]}\n        />\n      ) : null}\n      {direction > 0 && leftWithinBlock + widthWithinBlock < screenWidth ? (\n        <polygon\n          stroke={selected ? color2 : undefined}\n          fill={selected ? emphasizedColor : color}\n          points={[\n            [leftWithinBlock + widthWithinBlock, top],\n            [leftWithinBlock + widthWithinBlock + height / 2, top + height / 2],\n            [leftWithinBlock + widthWithinBlock, top + height],\n          ]}\n        />\n      ) : null}\n    </>\n  )\n}\n\nChevron.propTypes = {\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  featureLayout: ReactPropTypes.shape({\n    absolute: ReactPropTypes.shape({\n      top: ReactPropTypes.number.isRequired,\n      left: ReactPropTypes.number.isRequired,\n      width: ReactPropTypes.number.isRequired,\n      height: ReactPropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  selected: ReactPropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  reversed: ReactPropTypes.bool,\n}\n\nChevron.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nexport default observer(Chevron)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { emphasize } from '@jbrowse/core/util/color'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nfunction Segments(props) {\n  const {\n    feature,\n    featureLayout,\n    selected,\n    config,\n    reversed,\n    // some subfeatures may be computed e.g. makeUTRs,\n    // so these are passed as a prop\n    // eslint-disable-next-line react/prop-types\n    subfeatures: subfeaturesProp,\n  } = props\n\n  const subfeatures = subfeaturesProp || feature.get('subfeatures')\n  const color2 = readConfObject(config, 'color2', { feature })\n  let emphasizedColor2\n  try {\n    emphasizedColor2 = emphasize(color2, 0.3)\n  } catch (error) {\n    emphasizedColor2 = color2\n  }\n  const { left, top, width, height } = featureLayout.absolute\n  const points = [\n    [left, top + height / 2],\n    [left + width, top + height / 2],\n  ]\n  const strand = feature.get('strand')\n  if (strand) {\n    points.push(\n      [left + width - height / 4, top + height / 4],\n      [left + width - height / 4, top + 3 * (height / 4)],\n      [left + width, top + height / 2],\n    )\n  }\n\n  return (\n    <>\n      <polyline\n        data-testid={feature.id()}\n        transform={\n          strand && ((!reversed && strand < 0) || (reversed && strand > 0))\n            ? `rotate(180,${left + width / 2},${top + height / 2})`\n            : undefined\n        }\n        points={points}\n        stroke={selected ? emphasizedColor2 : color2}\n      />\n      {\n        // eslint-disable-next-line react/prop-types\n        subfeatures.map(subfeature => {\n          const subfeatureId = String(subfeature.id())\n          const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n          // This subfeature got filtered out\n          if (!subfeatureLayout) {\n            return null\n          }\n          const { GlyphComponent } = subfeatureLayout.data\n          return (\n            <GlyphComponent\n              key={`glyph-${subfeatureId}`}\n              {...props}\n              feature={subfeature}\n              featureLayout={subfeatureLayout}\n              selected={selected}\n            />\n          )\n        })\n      }\n    </>\n  )\n}\n\nSegments.propTypes = {\n  feature: PropTypes.shape({\n    id: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n  }).isRequired,\n  featureLayout: PropTypes.shape({\n    absolute: PropTypes.shape({\n      top: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    }),\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  selected: PropTypes.bool,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  reversed: PropTypes.bool,\n}\n\nSegments.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nexport default observer(Segments)\n","import { observer } from 'mobx-react'\nimport React from 'react'\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport Segments from './Segments'\nimport { layOutFeature, layOutSubfeatures } from './util'\n\nfunction ProcessedTranscript(props) {\n  // eslint-disable-next-line react/prop-types\n  const { feature, config } = props\n  const subfeatures = getSubparts(feature, config)\n\n  // we manually compute some subfeatures, so pass these separately\n  return <Segments {...props} subfeatures={subfeatures} />\n}\n\n// make a function that will filter features features according to the\n// subParts conf var\nfunction makeSubpartsFilter(confKey = 'subParts', config) {\n  let filter = readConfObject(config, confKey)\n\n  if (typeof filter == 'string') {\n    // convert to array\n    filter = filter.split(/\\s*,\\s*/)\n  }\n\n  if (Array.isArray(filter)) {\n    const typeNames = filter.map(typeName => typeName.toLowerCase())\n    return feature => {\n      return typeNames.includes(feature.get('type').toLowerCase())\n    }\n  }\n  if (typeof filter === 'function') {\n    return filter\n  }\n  return () => true\n}\n\nfunction filterSubpart(feature, config) {\n  return makeSubpartsFilter('subParts', config)(feature)\n}\n\nfunction isUTR(feature) {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n\nfunction makeUTRs(parent, subs) {\n  // based on Lincoln's UTR-making code in Bio::Graphics::Glyph::processed_transcript\n  const subparts = [...subs]\n\n  let codeStart = Infinity\n  let codeEnd = -Infinity\n\n  let haveLeftUTR\n  let haveRightUTR\n\n  // gather exons, find coding start and end, and look for UTRs\n  const exons = []\n  for (let i = 0; i < subparts.length; i++) {\n    const type = subparts[i].get('type')\n    if (/^cds/i.test(type)) {\n      if (codeStart > subparts[i].get('start')) {\n        codeStart = subparts[i].get('start')\n      }\n      if (codeEnd < subparts[i].get('end')) {\n        codeEnd = subparts[i].get('end')\n      }\n    } else if (/exon/i.test(type)) {\n      exons.push(subparts[i])\n    } else if (isUTR(subparts[i])) {\n      haveLeftUTR = subparts[i].get('start') === parent.get('start')\n      haveRightUTR = subparts[i].get('end') === parent.get('end')\n    }\n  }\n\n  // bail if we don't have exons and CDS\n  if (!(exons.length && codeStart < Infinity && codeEnd > -Infinity)) {\n    return subparts\n  }\n\n  // make sure the exons are sorted by coord\n  exons.sort((a, b) => a.get('start') - b.get('start'))\n\n  const strand = parent.get('strand')\n\n  // make the left-hand UTRs\n  let start\n  let end\n  if (!haveLeftUTR) {\n    for (let i = 0; i < exons.length; i++) {\n      start = exons[i].get('start')\n      if (start >= codeStart) {\n        break\n      }\n      end = codeStart > exons[i].get('end') ? exons[i].get('end') : codeStart\n      const type = strand >= 0 ? 'five_prime_UTR' : 'three_prime_UTR'\n      subparts.unshift(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  // make the right-hand UTRs\n  if (!haveRightUTR) {\n    for (let i = exons.length - 1; i >= 0; i--) {\n      end = exons[i].get('end')\n      if (end <= codeEnd) {\n        break\n      }\n\n      start = codeEnd < exons[i].get('start') ? exons[i].get('start') : codeEnd\n      const type = strand >= 0 ? 'three_prime_UTR' : 'five_prime_UTR'\n      subparts.push(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  return subparts\n}\n\nfunction getSubparts(f, config) {\n  let c = f.get('subfeatures')\n  if (!c || !c.length) {\n    return []\n  }\n  const hasUTRs = !!c.find(child => isUTR(child))\n  const isTranscript = ['mRNA', 'transcript'].includes(f.get('type'))\n  const impliedUTRs = !hasUTRs && isTranscript\n\n  // if we think we should use impliedUTRs, or it is specifically in the\n  // config, then makeUTRs\n  if (impliedUTRs || readConfObject(config, 'impliedUTRs')) {\n    c = makeUTRs(f, c)\n  }\n\n  return c.filter(element => filterSubpart(element, config))\n}\n\nProcessedTranscript.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  const subfeatures = getSubparts(feature, config)\n  layOutSubfeatures({\n    layout: subLayout,\n    subfeatures,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  return subLayout\n}\n\nexport default observer(ProcessedTranscript)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { chooseGlyphComponent, layOut, layOutFeature } from './util'\n\nfunction Subfeatures(props) {\n  const { feature, featureLayout, selected } = props\n\n  return (\n    <>\n      {feature.get('subfeatures').map(subfeature => {\n        const subfeatureId = String(subfeature.id())\n        const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n        const { GlyphComponent } = subfeatureLayout.data\n        return (\n          <GlyphComponent\n            key={`glyph-${subfeatureId}`}\n            {...props}\n            feature={subfeature}\n            featureLayout={subfeatureLayout}\n            selected={selected}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nSubfeatures.propTypes = {\n  feature: PropTypes.shape({ get: PropTypes.func.isRequired }).isRequired,\n  featureLayout: PropTypes.shape({\n    getSubRecord: PropTypes.func.isRequired,\n  }).isRequired,\n  selected: PropTypes.bool,\n  reversed: PropTypes.bool,\n}\n\nSubfeatures.defaultProps = {\n  selected: false,\n  reversed: false,\n}\n\nSubfeatures.layOut = ({ layout, feature, bpPerPx, reversed, config }) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  const displayMode = readConfObject(config, 'displayMode')\n  if (displayMode !== 'reducedRepresentation') {\n    const subfeatures = feature.get('subfeatures') || []\n    let topOffset = 0\n    subfeatures.forEach(subfeature => {\n      const SubfeatureGlyphComponent = chooseGlyphComponent(subfeature)\n      const subfeatureHeight = readConfObject(config, 'height', {\n        feature: subfeature,\n      })\n\n      const subSubLayout = (SubfeatureGlyphComponent.layOut || layOut)({\n        layout: subLayout,\n        feature: subfeature,\n        bpPerPx,\n        reversed,\n        config,\n      })\n      subSubLayout.move(0, topOffset)\n      topOffset +=\n        displayMode === 'collapse'\n          ? 0\n          : (displayMode === 'compact'\n              ? subfeatureHeight / 3\n              : subfeatureHeight) + 2\n    })\n  }\n  return subLayout\n}\n\nexport default observer(Subfeatures)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport Box from './Box'\nimport Chevron from './Chevron'\nimport ProcessedTranscript from './ProcessedTranscript'\nimport Segments from './Segments'\nimport Subfeatures from './Subfeatures'\n\ninterface Glyph extends React.FunctionComponent {\n  layOut?: Function\n}\n\nexport function chooseGlyphComponent(feature: Feature): Glyph {\n  const type = feature.get('type')\n  const strand = feature.get('strand')\n  const subfeatures: Feature[] = feature.get('subfeatures')\n\n  if (subfeatures) {\n    const hasSubSub = subfeatures.find(subfeature => {\n      return !!subfeature.get('subfeatures')\n    })\n    if (hasSubSub) {\n      return Subfeatures\n    }\n    const transcriptTypes = ['mRNA', 'transcript']\n    if (\n      transcriptTypes.includes(type) &&\n      subfeatures.find(f => f.get('type') === 'CDS')\n    ) {\n      return ProcessedTranscript\n    }\n    return Segments\n  }\n  return [1, -1].includes(strand) ? Chevron : Box\n}\n\ninterface BaseLayOutArgs {\n  layout: SceneGraph\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n}\n\ninterface FeatureLayOutArgs extends BaseLayOutArgs {\n  feature: Feature\n}\n\ninterface SubfeatureLayOutArgs extends BaseLayOutArgs {\n  subfeatures: Feature[]\n}\n\nexport function layOut({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n}: FeatureLayOutArgs): SceneGraph {\n  const displayMode = readConfObject(config, 'displayMode')\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  if (displayMode !== 'reducedRepresentation') {\n    layOutSubfeatures({\n      layout: subLayout,\n      subfeatures: feature.get('subfeatures') || [],\n      bpPerPx,\n      reversed,\n      config,\n    })\n  }\n  return subLayout\n}\n\nexport function layOutFeature(args: FeatureLayOutArgs): SceneGraph {\n  const { layout, feature, bpPerPx, reversed, config } = args\n  const displayMode = readConfObject(config, 'displayMode')\n  const GlyphComponent =\n    displayMode === 'reducedRepresentation'\n      ? Chevron\n      : chooseGlyphComponent(feature)\n  const parentFeature = feature.parent()\n  let x = 0\n  if (parentFeature) {\n    x = reversed\n      ? (parentFeature.get('end') - feature.get('end')) / bpPerPx\n      : (feature.get('start') - parentFeature.get('start')) / bpPerPx\n  }\n  const height = readConfObject(config, 'height', { feature })\n  const width = (feature.get('end') - feature.get('start')) / bpPerPx\n  const layoutParent = layout.parent\n  const top = layoutParent ? layoutParent.top : 0\n  const subLayout = layout.addChild(\n    String(feature.id()),\n    x,\n    displayMode === 'collapse' ? 0 : top,\n    width,\n    displayMode === 'compact' ? height / 2 : height,\n    { GlyphComponent },\n  )\n  return subLayout\n}\n\nexport function layOutSubfeatures(args: SubfeatureLayOutArgs): void {\n  const { layout: subLayout, subfeatures, bpPerPx, reversed, config } = args\n  subfeatures.forEach(subfeature => {\n    const SubfeatureGlyphComponent = chooseGlyphComponent(subfeature)\n    ;(SubfeatureGlyphComponent.layOut || layOut)({\n      layout: subLayout,\n      feature: subfeature,\n      bpPerPx,\n      reversed,\n      config,\n    })\n  })\n}\n\nexport function isUTR(feature: Feature): boolean {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { PropTypes as CommonPropTypes } from '@jbrowse/core/util/types/mst'\nimport { bpToPx, measureText } from '@jbrowse/core/util'\nimport SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport FeatureGlyph from './FeatureGlyph'\nimport SvgOverlay from './SvgOverlay'\nimport { chooseGlyphComponent, layOut } from './util'\n\nconst renderingStyle = {\n  position: 'relative',\n}\n\n// used to make features have a little padding for their labels\nconst nameWidthPadding = 2\nconst textVerticalPadding = 2\n\n// used so that user can click-away-from-feature below the laid out features\n// (issue #1248)\nconst svgHeightPadding = 100\n\nfunction RenderedFeatureGlyph(props) {\n  const { feature, bpPerPx, region, config, displayMode, layout } = props\n  const { reversed } = region\n  const start = feature.get(reversed ? 'end' : 'start')\n  const startPx = bpToPx(start, region, bpPerPx)\n  const labelsAllowed = displayMode !== 'compact' && displayMode !== 'collapsed'\n\n  const rootLayout = new SceneGraph('root', 0, 0, 0, 0)\n  const GlyphComponent = chooseGlyphComponent(feature)\n  const featureLayout = (GlyphComponent.layOut || layOut)({\n    layout: rootLayout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n  })\n  let shouldShowName\n  let shouldShowDescription\n  let name\n  let description\n  let fontHeight\n  let expansion\n  if (labelsAllowed) {\n    const showLabels = readConfObject(config, 'showLabels')\n    fontHeight = readConfObject(config, ['labels', 'fontSize'], { feature })\n    expansion = readConfObject(config, 'maxFeatureGlyphExpansion') || 0\n    name = readConfObject(config, ['labels', 'name'], { feature }) || ''\n    shouldShowName = /\\S/.test(name) && showLabels\n\n    description =\n      readConfObject(config, ['labels', 'description'], { feature }) || ''\n    shouldShowDescription = /\\S/.test(description) && showLabels\n\n    let nameWidth = 0\n    if (shouldShowName) {\n      nameWidth =\n        Math.round(\n          Math.min(measureText(name, fontHeight), rootLayout.width + expansion),\n        ) + nameWidthPadding\n      rootLayout.addChild(\n        'nameLabel',\n        0,\n        featureLayout.bottom + textVerticalPadding,\n        nameWidth,\n        fontHeight,\n      )\n    }\n\n    let descriptionWidth = 0\n    if (shouldShowDescription) {\n      const aboveLayout = shouldShowName\n        ? rootLayout.getSubRecord('nameLabel')\n        : featureLayout\n      descriptionWidth =\n        Math.round(\n          Math.min(\n            measureText(description, fontHeight),\n            rootLayout.width + expansion,\n          ),\n        ) + nameWidthPadding\n      rootLayout.addChild(\n        'descriptionLabel',\n        0,\n        aboveLayout.bottom + textVerticalPadding,\n        descriptionWidth,\n        fontHeight,\n      )\n    }\n  }\n\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start'),\n    feature.get('start') + rootLayout.width * bpPerPx,\n    rootLayout.height,\n  )\n  if (topPx === null) {\n    return null\n  }\n  rootLayout.move(startPx, topPx)\n\n  return (\n    <FeatureGlyph\n      key={`svg-feature-${feature.id()}`}\n      feature={feature}\n      layout={layout}\n      rootLayout={rootLayout}\n      bpPerPx={bpPerPx}\n      config={config}\n      name={String(name)}\n      shouldShowName={shouldShowName}\n      description={String(description)}\n      shouldShowDescription={shouldShowDescription}\n      fontHeight={fontHeight}\n      allowedWidthExpansion={expansion}\n      reversed={region.reversed}\n      {...props}\n    />\n  )\n}\n\nRenderedFeatureGlyph.propTypes = {\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n\n  displayMode: ReactPropTypes.string.isRequired,\n  region: CommonPropTypes.Region.isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  feature: ReactPropTypes.shape({\n    id: ReactPropTypes.func.isRequired,\n    get: ReactPropTypes.func.isRequired,\n  }).isRequired,\n  config: CommonPropTypes.ConfigSchema.isRequired,\n}\n\nconst RenderedFeatures = observer(props => {\n  const { features } = props\n  const featuresRendered = []\n  for (const feature of features.values()) {\n    featuresRendered.push(\n      <RenderedFeatureGlyph key={feature.id()} feature={feature} {...props} />,\n    )\n  }\n  return <>{featuresRendered}</>\n})\nRenderedFeatures.propTypes = {\n  features: ReactPropTypes.oneOfType([\n    ReactPropTypes.instanceOf(Map),\n    ReactPropTypes.arrayOf(ReactPropTypes.shape()),\n  ]),\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\n\nRenderedFeatures.defaultProps = {\n  features: [],\n}\n\nfunction SvgFeatureRendering(props) {\n  const {\n    layout,\n    blockKey,\n    regions,\n    bpPerPx,\n    features,\n    config,\n    displayModel,\n    exportSVG,\n  } = props\n  const [region] = regions || []\n  const width = (region.end - region.start) / bpPerPx\n  const displayMode = readConfObject(config, 'displayMode')\n\n  const ref = useRef()\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] = useState(\n    false,\n  )\n  const [height, setHeight] = useState(0)\n  const {\n    onMouseOut,\n    onMouseDown,\n    onMouseLeave,\n    onMouseEnter,\n    onMouseOver,\n    onMouseMove,\n    onMouseUp,\n    onClick,\n  } = props\n\n  const mouseDown = useCallback(\n    event => {\n      setMouseIsDown(true)\n      setMovedDuringLastMouseDown(false)\n      const handler = onMouseDown\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseDown],\n  )\n\n  const mouseUp = useCallback(\n    event => {\n      setMouseIsDown(false)\n      const handler = onMouseUp\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseUp],\n  )\n\n  const mouseEnter = useCallback(\n    event => {\n      const handler = onMouseEnter\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseEnter],\n  )\n\n  const mouseLeave = useCallback(\n    event => {\n      const handler = onMouseLeave\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseLeave],\n  )\n\n  const mouseOver = useCallback(\n    event => {\n      const handler = onMouseOver\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseOver],\n  )\n\n  const mouseOut = useCallback(\n    event => {\n      const handler = onMouseOut\n      if (!handler) {\n        return undefined\n      }\n      return handler(event)\n    },\n    [onMouseOut],\n  )\n\n  const mouseMove = useCallback(\n    event => {\n      if (mouseIsDown) {\n        setMovedDuringLastMouseDown(true)\n      }\n      let offsetX = 0\n      let offsetY = 0\n      if (ref.current) {\n        offsetX = ref.current.getBoundingClientRect().left\n        offsetY = ref.current.getBoundingClientRect().top\n      }\n      offsetX = event.clientX - offsetX\n      offsetY = event.clientY - offsetY\n      const px = region.reversed ? width - offsetX : offsetX\n      const clientBp = region.start + bpPerPx * px\n\n      const featureIdCurrentlyUnderMouse = displayModel.getFeatureOverlapping(\n        blockKey,\n        clientBp,\n        offsetY,\n      )\n\n      if (onMouseMove) {\n        onMouseMove(event, featureIdCurrentlyUnderMouse)\n      }\n    },\n    [\n      blockKey,\n      bpPerPx,\n      mouseIsDown,\n      onMouseMove,\n      region.reversed,\n      region.start,\n      displayModel,\n      width,\n    ],\n  )\n\n  const click = useCallback(\n    event => {\n      // don't select a feature if we are clicking and dragging\n      if (movedDuringLastMouseDown) {\n        return\n      }\n      if (onClick) {\n        onClick(event)\n      }\n    },\n    [movedDuringLastMouseDown, onClick],\n  )\n\n  useEffect(() => {\n    setHeight(layout.getTotalHeight())\n  }, [layout])\n\n  if (exportSVG) {\n    return (\n      <RenderedFeatures\n        features={features}\n        displayMode={displayMode}\n        {...props}\n        region={region}\n      />\n    )\n  }\n  return (\n    <div style={renderingStyle}>\n      <svg\n        ref={ref}\n        className=\"SvgFeatureRendering\"\n        width={width}\n        height={height + svgHeightPadding}\n        onMouseDown={mouseDown}\n        onMouseUp={mouseUp}\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}\n        onMouseOver={mouseOver}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n        onFocus={mouseEnter}\n        onBlur={mouseLeave}\n        onClick={click}\n        style={{ display: 'block' }}\n      >\n        <RenderedFeatures\n          features={features}\n          displayMode={displayMode}\n          {...props}\n          region={region}\n          movedDuringLastMouseDown={movedDuringLastMouseDown}\n        />\n        <SvgOverlay {...props} region={region} />\n      </svg>\n    </div>\n  )\n}\n\nSvgFeatureRendering.propTypes = {\n  layout: ReactPropTypes.shape({\n    addRect: ReactPropTypes.func.isRequired,\n    getTotalHeight: ReactPropTypes.func.isRequired,\n  }).isRequired,\n\n  regions: ReactPropTypes.arrayOf(CommonPropTypes.Region).isRequired,\n  bpPerPx: ReactPropTypes.number.isRequired,\n  features: ReactPropTypes.oneOfType([\n    ReactPropTypes.instanceOf(Map),\n    ReactPropTypes.arrayOf(ReactPropTypes.shape()),\n  ]),\n  config: CommonPropTypes.ConfigSchema.isRequired,\n  displayModel: ReactPropTypes.shape({\n    configuration: ReactPropTypes.shape({}),\n    getFeatureOverlapping: ReactPropTypes.func,\n    selectedFeatureId: ReactPropTypes.string,\n    featureIdUnderMouse: ReactPropTypes.string,\n  }),\n\n  onMouseDown: ReactPropTypes.func,\n  onMouseUp: ReactPropTypes.func,\n  onMouseEnter: ReactPropTypes.func,\n  onMouseLeave: ReactPropTypes.func,\n  onMouseOver: ReactPropTypes.func,\n  onMouseOut: ReactPropTypes.func,\n  onMouseMove: ReactPropTypes.func,\n  onClick: ReactPropTypes.func,\n  onContextMenu: ReactPropTypes.func,\n  onFeatureClick: ReactPropTypes.func,\n  onFeatureContextMenu: ReactPropTypes.func,\n  blockKey: ReactPropTypes.string,\n  exportSVG: ReactPropTypes.shape({}),\n}\n\nSvgFeatureRendering.defaultProps = {\n  displayModel: {},\n  exportSVG: undefined,\n\n  features: new Map(),\n  blockKey: undefined,\n\n  onMouseDown: undefined,\n  onMouseUp: undefined,\n  onMouseEnter: undefined,\n  onMouseLeave: undefined,\n  onMouseOver: undefined,\n  onMouseOut: undefined,\n  onMouseMove: undefined,\n  onClick: undefined,\n  onContextMenu: undefined,\n  onFeatureClick: undefined,\n  onFeatureContextMenu: undefined,\n}\n\nexport default observer(SvgFeatureRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nexport default ConfigurationSchema(\n  'SvgFeatureRenderer',\n  {\n    color1: {\n      type: 'color',\n      description: 'the main color of each feature',\n      defaultValue: 'goldenrod',\n      contextVariable: ['feature'],\n    },\n    color2: {\n      type: 'color',\n      description:\n        'the secondary color of each feature, used for connecting lines, etc',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    color3: {\n      type: 'color',\n      description:\n        'the tertiary color of each feature, often used for contrasting fills, like on UTRs',\n      defaultValue: '#357089',\n      contextVariable: ['feature'],\n    },\n    height: {\n      type: 'number',\n      description: 'height in pixels of the main body of each feature',\n      defaultValue: 10,\n      contextVariable: ['feature'],\n    },\n    showLabels: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    labels: ConfigurationSchema('SvgFeatureLabels', {\n      name: {\n        type: 'string',\n        description:\n          'the primary name of the feature to show, if space is available',\n        defaultValue: `jexl:get(feature,'name') || get(feature,'id')`,\n        contextVariable: ['feature'],\n      },\n      nameColor: {\n        type: 'color',\n        description: 'the color of the name label, if shown',\n        defaultValue: 'black',\n        contextVariable: ['feature'],\n      },\n      description: {\n        type: 'string',\n        description: 'the text description to show, if space is available',\n        defaultValue: `jexl:get(feature,'note') || get(feature,'description')`,\n        contextVariable: ['feature'],\n      },\n      descriptionColor: {\n        type: 'color',\n        description: 'the color of the description, if shown',\n        defaultValue: 'blue',\n        contextVariable: ['feature'],\n      },\n      fontSize: {\n        type: 'number',\n        description:\n          'height in pixels of the text to use for names and descriptions',\n        defaultValue: 13,\n        contextVariable: ['feature'],\n      },\n    }),\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'reducedRepresentation',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    maxFeatureGlyphExpansion: {\n      type: 'number',\n      description:\n        \"maximum number of pixels on each side of a feature's bounding coordinates that a glyph is allowed to use\",\n      defaultValue: 500,\n    },\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a svg rendering',\n      defaultValue: 600,\n    },\n    subParts: {\n      type: 'string',\n      description: 'subparts for a glyph',\n      defaultValue: 'CDS,UTR,five_prime_UTR,three_prime_UTR',\n    },\n    impliedUTRs: {\n      type: 'boolean',\n      description: 'imply UTR from the exon and CDS differences',\n      defaultValue: false,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as svgFeatureRendererConfigSchema,\n  ReactComponent as SvgFeatureRendererReactComponent,\n} from './SvgFeatureRenderer'\n\nclass SvgFeatureRenderer extends BoxRendererType {\n  supportsSVG = true\n}\n\nexport default class SVGPlugin extends Plugin {\n  name = 'SVGPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new SvgFeatureRenderer({\n          name: 'SvgFeatureRenderer',\n          ReactComponent: SvgFeatureRendererReactComponent,\n          configSchema: svgFeatureRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n  }\n}\n\nexport { svgFeatureRendererConfigSchema, SvgFeatureRendererReactComponent }\n","import { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'TheTrackHubRegistryConnection',\n  {\n    trackDbId: {\n      type: 'string',\n      defaultValue: '',\n      description: 'id of the trackDb in The Track Hub Registry',\n    },\n  },\n  { baseConfiguration: baseConnectionConfig },\n)\n","import { objectHash } from '@jbrowse/core/util'\nimport { generateUnsupportedTrackConf } from '@jbrowse/core/util/tracks'\n\nexport function generateTracks(trackDb, assemblyName, sequenceAdapter) {\n  // eslint-disable-next-line no-underscore-dangle\n  const { configuration } = trackDb._source\n  const subTracks = getSubtracks({ members: configuration })\n  return subTracks.map(subTrack => {\n    const ret = makeTrackConfig(\n      subTrack,\n      // eslint-disable-next-line no-underscore-dangle\n      trackDb._source.hub.url,\n      sequenceAdapter,\n    )\n    ret.trackId = `trackhub-registry-${objectHash(ret)}`\n    ret.assemblyNames = [assemblyName]\n    return ret\n  })\n\n  function getSubtracks(track, trackPath = []) {\n    if (track.members) {\n      return Object.values(track.members)\n        .map(subTrack =>\n          getSubtracks(\n            subTrack,\n            track.shortLabel ? trackPath.concat([track.shortLabel]) : trackPath,\n          ),\n        )\n        .flat()\n    }\n    track.categories = trackPath\n    return [track]\n  }\n}\n\nfunction makeTrackConfig(track, trackDbUrl, sequenceAdapter) {\n  const trackType = track.type\n  let baseTrackType = trackType.split(' ')[0].toLowerCase()\n  if (\n    baseTrackType === 'bam' &&\n    track.bigDataUrl.toLowerCase().endsWith('cram')\n  ) {\n    baseTrackType = 'cram'\n  }\n  const { bigDataUrl } = track\n  const bigDataLocation = {\n    uri: new URL(bigDataUrl, trackDbUrl).href,\n  }\n  const { categories } = track\n  let bigDataIndexLocation\n  switch (baseTrackType) {\n    case 'bam':\n      if (trackDbUrl) {\n        bigDataIndexLocation = track.bigDataIndex\n          ? {\n              uri: new URL(track.bigDataIndex, trackDbUrl).href,\n            }\n          : {\n              uri: new URL(`${track.bigDataUrl}.bai`, trackDbUrl).href,\n            }\n      } else {\n        bigDataIndexLocation = track.bigDataIndex\n          ? { localPath: track.bigDataIndex }\n          : { localPath: `${track.bigDataUrl}.bai` }\n      }\n      return {\n        type: 'AlignmentsTrack',\n        name: track.shortLabel,\n        description: track.longLabel,\n        category: categories,\n        adapter: {\n          type: 'BamAdapter',\n          bamLocation: bigDataLocation,\n          index: {\n            location: bigDataIndexLocation,\n          },\n        },\n      }\n    case 'bed':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bed5floatscore':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bedgraph':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bedrnaelements':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bigbarchart':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bigbed':\n      return {\n        type: 'FeatureTrack',\n        name: track.shortLabel,\n        description: track.longLabel,\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'bigchain':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'biginteract':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bigmaf':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bigpsl':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'bigwig':\n      return {\n        type: 'QuantitativeTrack',\n        name: track.shortLabel,\n        description: track.longLabel,\n        category: categories,\n        adapter: {\n          type: 'BigWigAdapter',\n          bigWigLocation: bigDataLocation,\n        },\n      }\n    case 'broadpeak':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'coloredexon':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'cram':\n      if (trackDbUrl) {\n        bigDataIndexLocation = track.bigDataIndex\n          ? {\n              uri: new URL(track.bigDataIndex, trackDbUrl).href,\n            }\n          : {\n              uri: new URL(`${track.bigDataUrl}.bai`, trackDbUrl).href,\n            }\n      } else {\n        bigDataIndexLocation = track.bigDataIndex\n          ? { localPath: track.bigDataIndex }\n          : { localPath: `${track.bigDataUrl}.bai` }\n      }\n      return {\n        type: 'AlignmentsTrack',\n        name: track.shortLabel,\n        description: track.longLabel,\n        category: categories,\n        adapter: {\n          type: 'CramAdapter',\n          bamLocation: bigDataLocation,\n          index: { location: bigDataIndexLocation },\n          sequenceAdapter,\n        },\n      }\n    case 'gvf':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'ld2':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'narrowpeak':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'peptidemapping':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'vcftabix':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'wig':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    case 'wigmaf':\n      return generateUnsupportedTrackConf(\n        track.shortLabel,\n        baseTrackType,\n        categories,\n      )\n    default:\n      throw new Error(`Unsupported track type: ${baseTrackType}`)\n  }\n}\n","import {\n  ConfigurationReference,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession } from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\nimport configSchema from './configSchema'\nimport { generateTracks } from './tracks'\n\nexport default function (pluginManager) {\n  return types.compose(\n    'TheTrackHubRegistryConnection',\n    BaseConnectionModelFactory(pluginManager),\n    types\n      .model({\n        type: types.literal('TheTrackHubRegistryConnection'),\n        configuration: ConfigurationReference(configSchema),\n      })\n      .actions(self => ({\n        connect(connectionConf) {\n          self.clear()\n          const trackDbId = readConfObject(connectionConf, 'trackDbId')\n          fetch(\n            `https://www.trackhubregistry.org/api/search/trackdb/${trackDbId}`,\n          )\n            .then(rawResponse => rawResponse.json())\n            .then(trackDb => {\n              // eslint-disable-next-line no-underscore-dangle\n              const assemblyName = trackDb._source.assembly.name\n              const session = getSession(self)\n              const assembly = session.assemblyManager.get(assemblyName)\n              const assemblyConf = assembly.configuration\n              const sequenceAdapter = readConfObject(assemblyConf, [\n                'sequence',\n                'adapter',\n              ])\n              self.setTrackConfs(\n                generateTracks(trackDb, assemblyName, sequenceAdapter),\n              )\n            })\n            .catch(error => {\n              console.error(error)\n            })\n        },\n      })),\n  )\n}\n","import { lazy } from 'react'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { configSchema, modelFactory } from './trackhub-registry'\n\nexport default class TrackHubRegistryPlugin extends Plugin {\n  name = 'TrackHubRegistryPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addConnectionType(\n      () =>\n        new ConnectionType({\n          name: 'TheTrackHubRegistryConnection',\n          configSchema,\n          configEditorComponent: lazy(\n            () => import('./trackhub-registry/TrackHubRegistrySelect'),\n          ),\n          stateModel: modelFactory(pluginManager),\n          displayName: 'The Track Hub Registry',\n          description: 'A hub from The Track Hub Registry',\n          url: '//trackhubregistry.org/',\n        }),\n    )\n  }\n}\n","export default pluginManager => {\n  const { jbrequire } = pluginManager\n  const { types } = jbrequire('mobx-state-tree')\n\n  /** utility function for assembling the MST model of a column data type */\n  function MakeSpreadsheetColumnType(\n    name,\n    {\n      DataCellReactComponent = null,\n      FilterModelType = null,\n      compare,\n      displayName = undefined,\n      categoryName = undefined,\n    },\n  ) {\n    return types\n      .model(`ColumnDataType${name}`, {\n        type: types.literal(name),\n      })\n      .volatile(() => ({\n        DataCellReactComponent,\n        FilterModelType,\n        displayName: displayName || name,\n        categoryName,\n      }))\n      .views(() => ({\n        compare,\n        get hasFilter() {\n          return !!FilterModelType\n        },\n      }))\n  }\n\n  return MakeSpreadsheetColumnType\n}\n","import { doesIntersect2, isContainedWithin } from '@jbrowse/core/util/range'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport { when } from '@jbrowse/core/util'\nimport MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\n\nexport default pluginManager => {\n  const { jbrequire } = pluginManager\n  const { types, getType, getParent } = jbrequire('mobx-state-tree')\n  const { observer } = jbrequire('mobx-react')\n  const React = jbrequire('react')\n\n  const { getPropertyType, getEnumerationValues, getSubType } = jbrequire(\n    '@jbrowse/core/util/mst-reflection',\n  )\n\n  const { compareLocs, getSession, parseLocString } = jbrequire(\n    '@jbrowse/core/util',\n  )\n\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const IconButton = jbrequire('@material-ui/core/IconButton')\n  const TextField = jbrequire('@material-ui/core/TextField')\n  const MenuItem = jbrequire('@material-ui/core/MenuItem')\n  const InputAdornment = jbrequire('@material-ui/core/InputAdornment')\n  const Select = jbrequire('@material-ui/core/Select')\n\n  const useStyles = makeStyles((/* theme */) => {\n    return {\n      textFilterControlAdornment: { marginRight: '-18px' },\n      textFilterControl: {\n        margin: [[0, 0, 0, '0.4rem']],\n        '& .MuiInput-formControl': {\n          marginTop: 8,\n        },\n        '& .MuiInputLabel-formControl': {\n          top: '-7px',\n          '&.MuiInputLabel-shrink': {\n            top: '-3px',\n          },\n        },\n      },\n    }\n  })\n\n  // React component for the column filter control\n  const FilterReactComponent = observer(({ filterModel }) => {\n    const classes = useStyles()\n    const operationChoices = getEnumerationValues(\n      getSubType(getPropertyType(getType(filterModel), 'operation')),\n    )\n    return (\n      <>\n        <Select\n          value={filterModel.operation}\n          onChange={event => {\n            filterModel.setOperation(String(event.target.value))\n          }}\n        >\n          {operationChoices.map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>{' '}\n        <TextField\n          label=\"range\"\n          placeholder=\"chr1:100-200\"\n          error={filterModel.locStringIsInvalid}\n          value={filterModel.locString}\n          onChange={evt => filterModel.setLocString(evt.target.value)}\n          className={classes.textFilterControl}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                className={classes.textFilterControlAdornment}\n                position=\"end\"\n              >\n                <IconButton\n                  aria-label=\"clear filter\"\n                  onClick={() => filterModel.setLocString('')}\n                  color=\"secondary\"\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </>\n    )\n  })\n\n  const OPERATIONS = [\n    'overlaps with',\n    'contained within',\n    'fully contains',\n    'does not overlap',\n    'not contained within',\n    'does not contain',\n  ]\n\n  // NOTE: assembly names, if present, are ignored in all of these predicates\n  const OPERATION_PREDICATES = {\n    'overlaps with': (cellLocation, specifiedLocation) => {\n      return (\n        cellLocation.refName === specifiedLocation.refName &&\n        doesIntersect2(\n          cellLocation.start,\n          cellLocation.end,\n          specifiedLocation.start,\n          specifiedLocation.end,\n        )\n      )\n    },\n    'contained within': (cellLocation, specifiedLocation) => {\n      return (\n        cellLocation.refName === specifiedLocation.refName &&\n        isContainedWithin(\n          cellLocation.start,\n          cellLocation.end,\n          specifiedLocation.start,\n          specifiedLocation.end,\n        )\n      )\n    },\n    'fully contains': (cellLocation, specifiedLocation) => {\n      return (\n        cellLocation.refName === specifiedLocation.refName &&\n        isContainedWithin(\n          specifiedLocation.start,\n          specifiedLocation.end,\n          cellLocation.start,\n          cellLocation.end,\n        )\n      )\n    },\n  }\n  OPERATION_PREDICATES['does not overlap'] = (\n    cellLocation,\n    specifiedLocation,\n  ) => {\n    return !OPERATION_PREDICATES['overlaps with'](\n      cellLocation,\n      specifiedLocation,\n    )\n  }\n  OPERATION_PREDICATES['not contained within'] = (\n    cellLocation,\n    specifiedLocation,\n  ) => {\n    return !OPERATION_PREDICATES['contained within'](\n      cellLocation,\n      specifiedLocation,\n    )\n  }\n  OPERATION_PREDICATES['does not contain'] = (\n    cellLocation,\n    specifiedLocation,\n  ) => {\n    return !OPERATION_PREDICATES['fully contains'](\n      cellLocation,\n      specifiedLocation,\n    )\n  }\n\n  // MST model for the column filter control\n  const FilterModelType = types\n    .model('ColumnLocStringFilter', {\n      type: types.literal('LocString'),\n      columnNumber: types.integer,\n      locString: '',\n      operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n    })\n    .views(self => ({\n      get locStringIsInvalid() {\n        if (self.locString) {\n          const parsed = self.parsedLocString\n          return (\n            !parsed ||\n            parsed.refName === '' ||\n            typeof parsed.start !== 'number' ||\n            typeof parsed.end !== 'number' ||\n            parsed.start > parsed.end\n          )\n        }\n        return false\n      },\n      get parsedLocString() {\n        const session = getSession(self)\n        const model = getParent(self, 3).spreadsheet\n        const { assemblyName } = model\n        try {\n          return parseLocString(self.locString, refName =>\n            session.assemblyManager.isValidRefName(refName, assemblyName),\n          )\n        } catch (e) {\n          return undefined\n        }\n      },\n      // returns a function that tests the given row\n      get predicate() {\n        if (!self.locString || self.locStringIsInvalid) {\n          return function alwaysTrue() {\n            return true\n          }\n        }\n\n        const { parsedLocString, operation, columnNumber } = self // avoid closing over self\n        return function stringPredicate(sheet, row) {\n          const { cellsWithDerived: cells } = row\n          const cell = cells[columnNumber]\n\n          if (!cell || !cell.text || !cell.extendedData) {\n            return false\n          }\n          const parsedCellText = cell.extendedData\n          if (!parsedCellText.refName) {\n            return false\n          }\n\n          const predicate = OPERATION_PREDICATES[operation]\n          if (!predicate) {\n            throw new Error(`\"${operation}\" not implemented in location filter`)\n          }\n\n          return predicate(parsedCellText, parsedLocString)\n        }\n      },\n    }))\n    .actions(self => ({\n      setLocString(s) {\n        self.locString = s\n      },\n      setOperation(op) {\n        self.operation = op\n      },\n    }))\n    .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\n  // opens a new LGV at the location described in the locString in the cell text\n  async function locationLinkClick(spreadsheet, columnNumber, cell) {\n    const session = getSession(spreadsheet)\n    const { assemblyManager } = session\n    const { assemblyName } = spreadsheet\n    const { id } = getParent(spreadsheet)\n    const assembly = await assemblyManager.waitForAssembly(assemblyName)\n    try {\n      const loc = parseLocString(cell.text, name =>\n        assemblyManager.isValidRefName(name, spreadsheet.assemblyName),\n      )\n      const { refName } = loc\n      const canonicalRefName = assembly.getCanonicalRefName(refName)\n      const newDisplayedRegion = assembly.regions.find(\n        region => region.refName === canonicalRefName,\n      )\n\n      const newViewId = `${id}_${assemblyName}`\n      let view = session.views.find(v => v.id === newViewId)\n      if (!view) {\n        view = session.addView('LinearGenomeView', {\n          displayName: assemblyName,\n          id: newViewId,\n        })\n        await when(() => view.initialized)\n\n        // note that we have to clone this because otherwise it adds \"same object\n        // twice to the mst tree\"\n        view.setDisplayedRegions([\n          JSON.parse(JSON.stringify(newDisplayedRegion)),\n        ])\n      }\n      view.navToLocString(cell.text)\n    } catch (e) {\n      session.notify(`${e}`, 'error')\n    }\n  }\n\n  const DataCellReactComponent = observer(\n    ({ cell, columnNumber, spreadsheet }) => {\n      function click(evt) {\n        evt.preventDefault()\n        locationLinkClick(spreadsheet, columnNumber, cell)\n      }\n      return (\n        <a\n          onClick={click}\n          title=\"open a new linear genome view here\"\n          href=\"#link\"\n        >\n          {cell.text}\n        </a>\n      )\n    },\n  )\n\n  const LocStringColumnType = MakeSpreadsheetColumnType('LocString', {\n    categoryName: 'Location',\n    displayName: 'Full location',\n    compare(cellA, cellB) {\n      return compareLocs(cellA.extendedData, cellB.extendedData)\n    },\n    FilterModelType,\n    DataCellReactComponent,\n  })\n\n  return LocStringColumnType\n}\n","import ClearIcon from '@material-ui/icons/Clear'\nimport MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\n\nexport default pluginManager => {\n  const { jbrequire } = pluginManager\n  const { types, getType } = jbrequire('mobx-state-tree')\n  const { observer } = jbrequire('mobx-react')\n  const React = jbrequire('react')\n\n  const { getPropertyType, getEnumerationValues, getSubType } = jbrequire(\n    '@jbrowse/core/util/mst-reflection',\n  )\n\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const OPERATIONS = [\n    'equals',\n    'contains',\n    'does not contain',\n    'does not equal',\n    'starts with',\n    'ends with',\n  ]\n\n  // NOTE: assembly names, if present, are ignored in all of these predicates\n  const OPERATION_PREDICATES = {\n    contains: (textInCell, stringToFind) => {\n      return textInCell.toLowerCase().indexOf(stringToFind) !== -1\n    },\n    equals: (textInCell, stringToFind) => {\n      return textInCell.toLowerCase() === stringToFind\n    },\n    'starts with': (textInCell, stringToFind) => {\n      return textInCell.toLowerCase().indexOf(stringToFind) === 0\n    },\n    'ends with': (textInCell, stringToFind) => {\n      const index = textInCell.toLowerCase().indexOf(stringToFind)\n      if (index === -1) {\n        return false\n      }\n      return index === textInCell.length - stringToFind.length\n    },\n  }\n  OPERATION_PREDICATES['does not contain'] = (textInCell, stringToFind) => {\n    return !OPERATION_PREDICATES.contains(textInCell, stringToFind)\n  }\n  OPERATION_PREDICATES['does not equal'] = (textInCell, stringToFind) => {\n    return !OPERATION_PREDICATES.equals(textInCell, stringToFind)\n  }\n\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const IconButton = jbrequire('@material-ui/core/IconButton')\n  const TextField = jbrequire('@material-ui/core/TextField')\n  const MenuItem = jbrequire('@material-ui/core/MenuItem')\n  const InputAdornment = jbrequire('@material-ui/core/InputAdornment')\n  const Select = jbrequire('@material-ui/core/Select')\n\n  const useStyles = makeStyles((/* theme */) => {\n    return {\n      textFilterControlAdornment: { marginRight: '-18px' },\n      textFilterControl: {\n        margin: 0,\n        '& .MuiInput-formControl': {\n          marginTop: 8,\n        },\n        '& .MuiInputLabel-formControl': {\n          top: '-7px',\n          '&.MuiInputLabel-shrink': {\n            top: '-3px',\n          },\n        },\n      },\n    }\n  })\n\n  // React component for the column filter control\n  const FilterReactComponent = observer(({ filterModel }) => {\n    const classes = useStyles()\n    const operationChoices = getEnumerationValues(\n      getSubType(getPropertyType(getType(filterModel), 'operation')),\n    )\n    return (\n      <>\n        <Select\n          value={filterModel.operation}\n          onChange={event => {\n            filterModel.setOperation(String(event.target.value))\n          }}\n        >\n          {operationChoices.map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>{' '}\n        <TextField\n          label=\"text\"\n          value={filterModel.stringToFind}\n          onChange={evt => filterModel.setString(evt.target.value)}\n          className={classes.textFilterControl}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                className={classes.textFilterControlAdornment}\n                position=\"end\"\n              >\n                <IconButton\n                  aria-label=\"clear filter\"\n                  onClick={() => filterModel.setString('')}\n                  color=\"secondary\"\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </>\n    )\n  })\n\n  // MST model for the column filter control\n  const ColumnTextFilter = types\n    .model('ColumnTextFilter', {\n      type: types.literal('Text'),\n      columnNumber: types.integer,\n      stringToFind: '',\n      operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n    })\n    .views(self => ({\n      // returns a function that tests the given row\n      get predicate() {\n        const { stringToFind, columnNumber, operation } = self // avoid closing over self\n        if (!stringToFind) {\n          return function alwaysTrue() {\n            return true\n          }\n        }\n        const s = stringToFind.toLowerCase() // case insensitive match\n        return function stringPredicate(sheet, row) {\n          const { cellsWithDerived } = row\n          const cell = cellsWithDerived[columnNumber]\n          if (!cell || !cell.text) {\n            return false\n          }\n          const predicate = OPERATION_PREDICATES[operation]\n          if (!predicate) {\n            throw new Error(`\"${operation}\" not implemented in location filter`)\n          }\n          return predicate(cell.text, s)\n        }\n      },\n    }))\n    .actions(self => ({\n      setString(s) {\n        self.stringToFind = s\n      },\n      setOperation(op) {\n        self.operation = op\n      },\n    }))\n    .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\n  const TextColumnType = MakeSpreadsheetColumnType('Text', {\n    compare(cellA, cellB) {\n      return cellA.text.localeCompare(cellB.text)\n    },\n    FilterModelType: ColumnTextFilter,\n  })\n\n  return { TextColumn: TextColumnType, FilterModelType: ColumnTextFilter }\n}\n","import MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\nimport TextFactory from './Text'\n\nexport default ({ jbrequire }) => {\n  const { types } = jbrequire('mobx-state-tree')\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const { FilterModelType: NumberFilterModel } = jbrequire(TextFactory)\n\n  const FilterModelType = types.compose(\n    NumberFilterModel,\n    types.model({\n      type: types.literal('LocRef'),\n    }),\n  )\n\n  const LocRef = MakeSpreadsheetColumnType('LocRef', {\n    categoryName: 'Location',\n    displayName: 'Reference seq',\n    compare(cellA, cellB) {\n      return cellA.text.localeCompare(cellB.text)\n    },\n    FilterModelType,\n  })\n\n  return LocRef\n}\n","import MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\n\nexport default ({ jbrequire }) => {\n  const { types } = jbrequire('mobx-state-tree')\n  const { observer } = jbrequire('mobx-react')\n  const React = jbrequire('react')\n\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const TextField = jbrequire('@material-ui/core/TextField')\n  const MenuItem = jbrequire('@material-ui/core/MenuItem')\n  const Select = jbrequire('@material-ui/core/Select')\n\n  const OPERATIONS = [\n    'equals',\n    'greater than',\n    'less than',\n    'between',\n    'not between',\n  ]\n\n  // NOTE: assembly names, if present, are ignored in all of these predicates\n  const OPERATION_PREDICATES = {\n    equals: (numberInCell, firstNumber) => {\n      return numberInCell === firstNumber\n    },\n    'greater than': (numberInCell, firstNumber) => {\n      return numberInCell > firstNumber\n    },\n    'less than': (numberInCell, firstNumber) => {\n      return numberInCell < firstNumber\n    },\n    between: (numberInCell, firstNumber, secondNumber) => {\n      return numberInCell > firstNumber && numberInCell < secondNumber\n    },\n  }\n  OPERATION_PREDICATES['not between'] = (\n    numberInCell,\n    firstNumber,\n    secondNumber,\n  ) => {\n    return !OPERATION_PREDICATES.between(\n      numberInCell,\n      firstNumber,\n      secondNumber,\n    )\n  }\n\n  const useStyles = makeStyles((/* theme */) => {\n    return {\n      textFilterControlAdornment: { marginRight: '-18px' },\n      textFilterControl: {\n        margin: [[0, 0, 0, '0.4rem']],\n        '& .MuiInput-formControl': {\n          marginTop: 8,\n        },\n        '& .MuiInputLabel-formControl': {\n          top: '-7px',\n          '&.MuiInputLabel-shrink': {\n            top: '-3px',\n          },\n        },\n      },\n    }\n  })\n\n  // React component for the column filter control\n  const FilterReactComponent = observer(({ filterModel }) => {\n    const classes = useStyles()\n\n    const operationChoices = OPERATIONS\n\n    return (\n      <>\n        <Select\n          value={filterModel.operation}\n          onChange={event => {\n            filterModel.setOperation(String(event.target.value))\n          }}\n        >\n          {operationChoices.map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>{' '}\n        <TextField\n          label=\"number\"\n          placeholder=\"123\"\n          type=\"number\"\n          error={filterModel.firstNumberIsInvalid}\n          defaultValue={filterModel.firstNumber}\n          onChange={evt => {\n            filterModel.setFirstNumber(parseFloat(evt.target.value))\n          }}\n          className={classes.textFilterControl}\n        />\n        {filterModel.operation !== 'between' &&\n        filterModel.operation !== 'not between' ? null : (\n          <>\n            {' and '}\n            <TextField\n              label=\"number\"\n              placeholder=\"456\"\n              type=\"number\"\n              error={filterModel.secondNumberIsInvalid}\n              defaultValue={filterModel.secondNumber}\n              onChange={evt =>\n                filterModel.setSecondNumber(parseFloat(evt.target.value))\n              }\n              className={classes.textFilterControl}\n            />\n          </>\n        )}\n      </>\n    )\n  })\n\n  // MST model for the column filter control\n  const FilterModelType = types\n    .model('ColumnNumberFilter', {\n      type: types.literal('Number'),\n      columnNumber: types.integer,\n      firstNumber: types.maybe(types.number),\n      secondNumber: types.maybe(types.number),\n      operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n    })\n    .views(self => ({\n      // returns a function that tests the given row\n      get predicate() {\n        if (typeof self.firstNumber !== 'number') {\n          return function alwaysTrue() {\n            return true\n          }\n        }\n\n        const { firstNumber, secondNumber, operation, columnNumber } = self // avoid closing over self\n        return function stringPredicate(sheet, row) {\n          const { cellsWithDerived } = row\n          const cell = cellsWithDerived[columnNumber]\n\n          if (!cell || !cell.text) {\n            return false\n          }\n\n          const parsedCellText = parseFloat(cell.text)\n          if (typeof parsedCellText !== 'number') {\n            return false\n          }\n\n          const predicate = OPERATION_PREDICATES[operation]\n          if (!predicate) {\n            throw new Error(`\"${operation}\" not implemented in location filter`)\n          }\n\n          return predicate(parsedCellText, firstNumber, secondNumber)\n        }\n      },\n    }))\n    .actions(self => ({\n      setFirstNumber(n) {\n        if (Number.isNaN(n) || typeof n !== 'number') {\n          self.firstNumber = undefined\n        } else {\n          self.firstNumber = n\n        }\n      },\n      setSecondNumber(n) {\n        if (Number.isNaN(n) || typeof n !== 'number') {\n          self.secondNumber = undefined\n        } else {\n          self.secondNumber = n\n        }\n      },\n      setOperation(op) {\n        self.operation = op\n      },\n    }))\n    .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\n  const NumberColumn = MakeSpreadsheetColumnType('Number', {\n    compare(cellA, cellB) {\n      return parseFloat(cellA.text) - parseFloat(cellB.text)\n    },\n    FilterModelType,\n  })\n\n  return { NumberColumn, FilterModelType }\n}\n","import MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\nimport NumberFactory from './Number'\n\nexport default ({ jbrequire }) => {\n  const { types } = jbrequire('mobx-state-tree')\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const { FilterModelType: NumberFilterModel } = jbrequire(NumberFactory)\n\n  const FilterModelType = types.compose(\n    NumberFilterModel,\n    types.model({\n      type: types.literal('LocStart'),\n    }),\n  )\n\n  const LocStart = MakeSpreadsheetColumnType('LocStart', {\n    categoryName: 'Location',\n    displayName: 'Start',\n    compare(cellA, cellB) {\n      return parseFloat(cellA.text) - parseFloat(cellB.text)\n    },\n    FilterModelType,\n  })\n\n  return LocStart\n}\n","import MakeSpreadsheetColumnTypeFactory from './MakeSpreadsheetColumnType'\nimport NumberFactory from './Number'\n\nexport default ({ jbrequire }) => {\n  const { types } = jbrequire('mobx-state-tree')\n  const MakeSpreadsheetColumnType = jbrequire(MakeSpreadsheetColumnTypeFactory)\n\n  const { FilterModelType: NumberFilterModel } = jbrequire(NumberFactory)\n\n  const FilterModelType = types.compose(\n    NumberFilterModel,\n    types.model({\n      type: types.literal('LocEnd'),\n    }),\n  )\n\n  const LocEnd = MakeSpreadsheetColumnType('LocEnd', {\n    categoryName: 'Location',\n    displayName: 'End',\n    compare(cellA, cellB) {\n      return parseFloat(cellA.text) - parseFloat(cellB.text)\n    },\n    FilterModelType,\n  })\n\n  return LocEnd\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport LocStringFactory from './LocString'\nimport LocRefFactory from './LocRef'\nimport LocStartFactory from './LocStart'\nimport LocEndFactory from './LocEnd'\nimport NumberFactory from './Number'\nimport TextFactory from './Text'\n\nexport default (pluginManager: PluginManager) => {\n  const { jbrequire } = pluginManager\n  const { types } = jbrequire('mobx-state-tree')\n\n  const { NumberColumn: Number } = jbrequire(NumberFactory)\n  const { TextColumn: Text } = jbrequire(TextFactory)\n\n  const ColumnTypes = {\n    Number,\n    Text,\n    LocString: jbrequire(LocStringFactory),\n    LocRef: jbrequire(LocRefFactory),\n    LocStart: jbrequire(LocStartFactory),\n    LocEnd: jbrequire(LocEndFactory),\n  }\n\n  const allColumnTypes = Object.values(ColumnTypes)\n  const AnyColumnType = types.union(...allColumnTypes)\n\n  return Object.freeze({\n    ColumnTypes,\n    AnyColumnType,\n    // make a type union of all the different filter model types\n    AnyFilterModelType: types.union(\n      ...allColumnTypes\n        .map(columnType => {\n          // just instantiate the blank types to get their filter model types\n          const { FilterModelType } = columnType.create({\n            type: columnType.properties.type.value,\n          })\n          return FilterModelType\n        })\n        // some column types might not have filter machinery, filter those out\n        .filter(t => !!t),\n    ),\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  const { lib } = pluginManager\n  const { types, getParent } = lib['mobx-state-tree']\n\n  const CellModel = types.model('SpreadsheetCell', {\n    text: types.string,\n    extendedData: types.maybe(types.frozen()),\n  })\n\n  const RowModel = types\n    .model('SpreadsheetRow', {\n      id: types.identifier,\n      cells: types.array(CellModel),\n      extendedData: types.maybe(types.frozen()),\n      isSelected: false,\n    })\n    .actions(self => ({\n      toggleSelect() {\n        self.isSelected = !self.isSelected\n      },\n      unSelect() {\n        self.isSelected = false\n      },\n      select() {\n        self.isSelected = true\n      },\n      setExtendedData(data: unknown) {\n        self.extendedData = data\n      },\n    }))\n    .views(self => ({\n      get cellsWithDerived() {\n        const { columns } = getParent(self, 3)\n        let i = 0\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return columns.map((column: { isDerived: boolean; expr: any }) => {\n          if (column.isDerived) {\n            return column.expr.evalSync({\n              row: self,\n            })\n          }\n          return self.cells[i++]\n        })\n      },\n    }))\n\n  return RowModel\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Row from './Row'\n\nconst StaticRowSetComponentF = (pluginManager: PluginManager) => {\n  const { lib, load } = pluginManager\n  const { types, getParent } = lib['mobx-state-tree']\n  const RowModel = load(Row)\n\n  return types\n    .model('StaticRowSet', {\n      isLoaded: types.literal(true),\n      rows: types.array(RowModel),\n    })\n    .views(self => ({\n      get count() {\n        return self.rows.length\n      },\n\n      get passingFiltersCount() {\n        return this.sortedFilteredRows.length\n      },\n\n      get selectedCount() {\n        return this.selectedRows.length\n      },\n\n      get selectedAndPassingFiltersCount() {\n        return this.selectedFilteredRows.length\n      },\n\n      get sortedRows() {\n        const parent = getParent(self)\n        return self.rows.slice().sort(parent.rowSortingComparisonFunction)\n      },\n\n      get selectedRows() {\n        return self.rows.filter(r => r.isSelected)\n      },\n\n      get selectedFilteredRows() {\n        const sheet = getParent(self)\n        const view = getParent(sheet)\n        const { filterControls } = view\n        return this.selectedRows.filter(row =>\n          filterControls.rowPassesFilters(sheet, row),\n        )\n      },\n\n      // the set of all rows that pass the filters, sorted\n      get sortedFilteredRows() {\n        const sheet = getParent(self)\n        const view = getParent(sheet)\n        const { filterControls } = view\n        return self.rows\n          .filter(row => filterControls.rowPassesFilters(sheet, row))\n          .sort(sheet.rowSortingComparisonFunction)\n      },\n    }))\n    .actions(self => ({\n      unselectAll() {\n        self.rows.forEach(row => row.unSelect())\n      },\n    }))\n}\n\nexport default StaticRowSetComponentF\n","import { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSession } from '@jbrowse/core/util'\nimport { SnapshotIn, Instance, addDisposer } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport ColumnDataTypes from './ColumnDataTypes'\nimport StaticRowSetF from './StaticRowSet'\nimport RowF from './Row'\n\nconst SpreadsheetModelF = (pluginManager: PluginManager) => {\n  const { lib, load } = pluginManager\n  const { types, getParent } = lib['mobx-state-tree']\n\n  const { ColumnTypes, AnyColumnType } = load(ColumnDataTypes)\n\n  const StaticRowSetModel = load(StaticRowSetF)\n  type Row = Instance<ReturnType<typeof RowF>>\n\n  const ColumnDefinition = types\n    .model('ColumnDefinition', {\n      name: types.maybe(types.string),\n      dataType: types.optional(AnyColumnType, () => ({\n        type: 'Text',\n      })),\n      // set to true if column is derived from other columns\n      // if the column is derived, each cell will have a\n      // `derivationFunction` that is called to get its value\n      isDerived: false,\n      // if this cell is derived from other cells, execute this function to get the value\n      derivationFunctionText: types.maybe(types.string),\n    })\n    .views(self => ({\n      get expr() {\n        if (self.isDerived) {\n          // compile this as a jexl expression\n          return stringToJexlExpression(\n            String(self.derivationFunctionText),\n            pluginManager.jexl,\n          )\n        }\n        return undefined\n      },\n    }))\n\n  type RowMenuPosition = { anchorEl: Element; rowNumber: number } | null\n  const stateModel = types\n    .model('Spreadsheet', {\n      rowSet: types.optional(StaticRowSetModel, () =>\n        StaticRowSetModel.create(),\n      ),\n      columns: types.array(ColumnDefinition),\n      columnDisplayOrder: types.array(types.number),\n      hasColumnNames: false,\n\n      sortColumns: types.array(\n        types\n          .model('SortColumns', {\n            columnNumber: types.number,\n            descending: false,\n          })\n          .actions(self => ({\n            switchDirection() {\n              self.descending = !self.descending\n            },\n          })),\n      ),\n\n      assemblyName: types.maybe(types.string),\n    })\n    .volatile(() => ({\n      defaultDataType: ColumnTypes.Text,\n      rowMenuPosition: null as RowMenuPosition,\n      isLoaded: false,\n    }))\n    .views(self => ({\n      get initialized() {\n        const session = getSession(self)\n        const name = self.assemblyName\n        if (name) {\n          const asm = session.assemblyManager.get(name)\n          return asm && asm.initialized\n        }\n        return true\n      },\n      get hideRowSelection() {\n        // just delegates to parent\n        return getParent(self).hideRowSelection\n      },\n\n      // list of data type names to be made available in the column\n      // dropdown menu\n      get dataTypeChoices() {\n        const typeNames = Object.keys(\n          ColumnTypes,\n        ) as (keyof typeof ColumnTypes)[]\n        return typeNames.map(typeName => {\n          const dataType = ColumnTypes[typeName].create({ type: typeName })\n          const { displayName, categoryName } = dataType\n          return { typeName, displayName, categoryName }\n        })\n      },\n\n      rowSortingComparisonFunction(rowA: Row, rowB: Row) {\n        for (let i = 0; i < self.sortColumns.length; i += 1) {\n          const { columnNumber, descending } = self.sortColumns[i]\n          const { dataType } = self.columns[columnNumber]\n          const result = dataType.compare(\n            rowA.cellsWithDerived[columnNumber],\n            rowB.cellsWithDerived[columnNumber],\n          )\n          if (result) {\n            return descending ? -result : result\n          }\n        }\n        return 0\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(async () => {\n            const session = getSession(self)\n            const { assemblyManager } = session\n            try {\n              if (self.assemblyName) {\n                await assemblyManager.waitForAssembly(self.assemblyName)\n                this.setLoaded(true)\n              }\n            } catch (error) {\n              session.notify(\n                `failed to load assembly ${self.assemblyName} ${error}`,\n                'error',\n              )\n            }\n          }),\n        )\n      },\n\n      setLoaded(flag: boolean) {\n        self.isLoaded = flag\n      },\n\n      setRowMenuPosition(newPosition: RowMenuPosition) {\n        self.rowMenuPosition = newPosition\n      },\n\n      setSortColumns(\n        newSort: NonNullable<SnapshotIn<typeof self.sortColumns>>,\n      ) {\n        if (newSort) {\n          // @ts-ignore\n          self.sortColumns = newSort\n        }\n      },\n      setColumnType(columnNumber: number, newTypeName: string) {\n        self.columns[columnNumber].dataType = { type: newTypeName }\n      },\n      unselectAll() {\n        return self.rowSet.unselectAll()\n      },\n    }))\n\n  return stateModel\n}\n\nexport default SpreadsheetModelF\n","import { getSession } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// 30MB\nconst IMPORT_SIZE_LIMIT = 30_000_000\n\nexport default (pluginManager: PluginManager) => {\n  const { lib } = pluginManager\n  const { types, getParent, getRoot } = lib['mobx-state-tree']\n  const { openLocation } = lib['@jbrowse/core/util/io']\n  const { readConfObject } = lib['@jbrowse/core/configuration']\n\n  const fileTypes = ['CSV', 'TSV', 'VCF', 'BED', 'BEDPE', 'STAR-Fusion']\n  const fileTypeParsers = {\n    CSV: () =>\n      import('../importAdapters/ImportUtils').then(r => r.parseCsvBuffer),\n    TSV: () =>\n      import('../importAdapters/ImportUtils').then(r => r.parseTsvBuffer),\n    VCF: () =>\n      import('../importAdapters/VcfImport').then(r => r.parseVcfBuffer),\n    BED: () =>\n      import('../importAdapters/BedImport').then(r => r.parseBedBuffer),\n    BEDPE: () =>\n      import('../importAdapters/BedImport').then(r => r.parseBedPEBuffer),\n    'STAR-Fusion': () =>\n      import('../importAdapters/STARFusionImport').then(\n        r => r.parseSTARFusionBuffer,\n      ),\n  }\n  // regexp used to guess the type of a file or URL from its file extension\n  const fileTypesRegexp = new RegExp(\n    `\\\\.(${fileTypes.join('|')})(\\\\.gz)?$`,\n    'i',\n  )\n\n  return types\n    .model('SpreadsheetImportWizard', {\n      fileType: types.optional(types.enumeration(fileTypes), 'CSV'),\n      hasColumnNameLine: true,\n      columnNameLineNumber: 1,\n      selectedAssemblyIdx: 0,\n    })\n    .volatile(() => ({\n      fileTypes,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fileSource: undefined as any,\n      error: undefined as Error | undefined,\n      loading: false,\n    }))\n    .views(self => ({\n      get isReadyToOpen() {\n        return (\n          !self.error &&\n          self.fileSource &&\n          (self.fileSource.blobId ||\n            self.fileSource.localPath ||\n            self.fileSource.uri)\n        )\n      },\n      get canCancel() {\n        return getParent(self).readyToDisplay\n      },\n      get assemblyChoices() {\n        return getRoot(self).jbrowse.assemblies\n      },\n      get selectedAssemblyName() {\n        const asm = getRoot(self).jbrowse.assemblies[self.selectedAssemblyIdx]\n        if (asm) {\n          return readConfObject(asm, 'name')\n        }\n        return undefined\n      },\n\n      get fileName() {\n        return (\n          self.fileSource.uri ||\n          self.fileSource.localPath ||\n          (self.fileSource.blobId && self.fileSource.name)\n        )\n      },\n\n      get requiresUnzip() {\n        return this.fileName.endsWith('gz')\n      },\n\n      isValidRefName(refName: string, assemblyName?: string) {\n        return getSession(self).assemblyManager.isValidRefName(\n          refName,\n          assemblyName,\n        )\n      },\n    }))\n    .actions(self => ({\n      setFileSource(newSource: unknown) {\n        self.fileSource = newSource\n        self.error = undefined\n\n        if (self.fileSource) {\n          // try to autodetect the file type, ignore errors\n          const name = self.fileName\n\n          if (name) {\n            const match = fileTypesRegexp.exec(name)\n            if (match && match[1]) {\n              if (match[1] === 'tsv' && name.includes('star-fusion')) {\n                self.fileType = 'STAR-Fusion'\n              } else {\n                self.fileType = match[1].toUpperCase()\n              }\n            }\n          }\n        }\n      },\n\n      setSelectedAssemblyIdx(idx: number) {\n        self.selectedAssemblyIdx = idx\n      },\n\n      toggleHasColumnNameLine() {\n        self.hasColumnNameLine = !self.hasColumnNameLine\n      },\n\n      setColumnNameLineNumber(newnumber: number) {\n        if (newnumber > 0) {\n          self.columnNameLineNumber = newnumber\n        }\n      },\n\n      setFileType(typeName: string) {\n        self.fileType = typeName\n      },\n\n      setError(error: Error) {\n        console.error(error)\n        self.loading = false\n        self.error = error\n      },\n\n      setLoaded() {\n        self.loading = false\n        self.error = undefined\n      },\n\n      cancelButton() {\n        self.error = undefined\n        getParent(self).setDisplayMode()\n      },\n\n      // fetch and parse the file, make a new Spreadsheet model for it,\n      // then set the parent to display it\n      async import() {\n        try {\n          if (!self.fileSource) {\n            return\n          }\n\n          if (self.loading) {\n            throw new Error('cannot import, load already in progress')\n          }\n          self.loading = true\n          const typeParser = await fileTypeParsers[\n            self.fileType as keyof typeof fileTypeParsers\n          ]()\n          if (!typeParser) {\n            throw new Error(`cannot open files of type '${self.fileType}'`)\n          }\n\n          const { unzip } = await import('@gmod/bgzf-filehandle')\n\n          const filehandle = openLocation(self.fileSource)\n          filehandle\n            .stat()\n            .then(stat => {\n              if (stat.size > IMPORT_SIZE_LIMIT) {\n                throw new Error(\n                  `File is too big. Tabular files are limited to at most ${(\n                    IMPORT_SIZE_LIMIT / 1000\n                  ).toLocaleString()}kb.`,\n                )\n              }\n            })\n            .then(() => filehandle.readFile())\n            .then(buffer => {\n              return self.requiresUnzip ? unzip(buffer) : buffer\n            })\n            .then(buffer => typeParser(buffer as Buffer, self))\n            .then(spreadsheet => {\n              this.setLoaded()\n              getParent(self).displaySpreadsheet(spreadsheet)\n            })\n            .catch(this.setError)\n        } catch (error) {\n          this.setError(error)\n        }\n      },\n    }))\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport ColumnDataTypes from './ColumnDataTypes'\n\nexport default (pluginManager: PluginManager) => {\n  const { lib, load } = pluginManager\n  const { types, getParent } = lib['mobx-state-tree']\n\n  const { AnyFilterModelType: AnyColumnFilter } = load(ColumnDataTypes)\n\n  // filter that finds a simple string in any of the cells of a row\n  const RowFullTextFilter = types\n    .model('RowFullTextFilter', {\n      type: types.literal('RowFullText'),\n      stringToFind: '',\n    })\n    .views(self => ({\n      // returns a function that tests the given row\n      get predicate() {\n        let s = self.stringToFind // avoid closing over self\n        if (!s) {\n          return function alwaysTrue() {\n            return true\n          }\n        }\n        s = s.toLowerCase()\n        return function stringPredicate(\n          _sheet: unknown,\n          row: { cellsWithDerived: { text: string }[] },\n        ) {\n          const { cellsWithDerived } = row\n          for (\n            let columnNumber = 0;\n            columnNumber < cellsWithDerived.length;\n            columnNumber += 1\n          ) {\n            const cell = cellsWithDerived[columnNumber]\n            // note: case insensitive\n            if (cell.text && cell.text.toLowerCase().includes(s)) {\n              return true\n            }\n          }\n          return false\n        }\n      },\n    }))\n    .actions(self => ({\n      setString(s: string) {\n        self.stringToFind = s\n      },\n      clear() {\n        self.stringToFind = ''\n      },\n    }))\n\n  return types\n    .model('SpreadsheetFilterControls', {\n      rowFullText: types.optional(\n        RowFullTextFilter,\n        () =>\n          ({\n            type: 'RowFullText',\n            stringToFind: '',\n          } as SnapshotIn<typeof RowFullTextFilter>),\n      ),\n      columnFilters: types.array(AnyColumnFilter),\n    })\n    .views(self => ({\n      get filters() {\n        return [self.rowFullText, ...self.columnFilters].filter(f => !!f)\n      },\n      setRowFullTextFilter(stringToFind: string) {\n        // @ts-ignore\n        self.rowFullText = {\n          type: 'RowFullText',\n          stringToFind,\n        }\n      },\n      rowPassesFilters(sheet: unknown, row: unknown) {\n        for (let i = 0; i < this.filters.length; i += 1) {\n          if (!this.filters[i].predicate(sheet, row)) {\n            return false\n          }\n        }\n        return true\n      },\n    }))\n    .actions(self => ({\n      addBlankColumnFilter(columnNumber: number) {\n        const { dataType } = getParent(self).spreadsheet.columns[columnNumber]\n        self.columnFilters.push({\n          type: dataType.type,\n          columnNumber,\n        })\n      },\n      removeColumnFilter(filter: typeof AnyColumnFilter) {\n        return self.columnFilters.remove(filter)\n      },\n      clearAllFilters() {\n        self.columnFilters.clear()\n        self.rowFullText.clear()\n      },\n    }))\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { SnapshotIn, Instance } from 'mobx-state-tree'\nimport { getSession, InstanceOfModelReturnedBy } from '@jbrowse/core/util'\nimport DoneIcon from '@material-ui/icons/Done'\nimport Spreadsheet from './Spreadsheet'\nimport ImportWizard from './ImportWizard'\nimport FilterControls from './FilterControls'\n\nexport type MenuItemWithDisabledCallback = MenuItem & {\n  disabled?:\n    | boolean\n    | ((\n        viewModel: unknown,\n        spreadsheetModel: InstanceOfModelReturnedBy<typeof Spreadsheet>,\n        rowNumber: number,\n        row: Instance<ReturnType<typeof Spreadsheet>>['rowSet']['rows'][0],\n      ) => boolean)\n}\n\nconst defaultRowMenuItems: MenuItemWithDisabledCallback[] = [\n  {\n    label: 'Toggle select',\n    icon: DoneIcon,\n    onClick(\n      _view: unknown,\n      spreadsheet: Instance<ReturnType<typeof Spreadsheet>>,\n    ) {\n      const rowNumber = spreadsheet.rowMenuPosition?.rowNumber\n      if (rowNumber !== undefined) {\n        spreadsheet.rowSet.rows[rowNumber - 1].toggleSelect()\n      }\n    },\n  },\n]\n\nconst SpreadsheetViewModelF = (pluginManager: PluginManager) => {\n  const { lib, load } = pluginManager\n  const { mobx } = lib\n  const { types, getParent, getEnv } = lib['mobx-state-tree']\n  const { BaseViewModel } = lib['@jbrowse/core/pluggableElementTypes/models']\n\n  const SpreadsheetModel = load(Spreadsheet)\n  const ImportWizardModel = load(ImportWizard)\n  const FilterControlsModel = load(FilterControls)\n\n  const minHeight = 40\n  const defaultHeight = 440\n  const model = types\n    .model('SpreadsheetView', {\n      type: types.literal('SpreadsheetView'),\n      offsetPx: 0,\n      height: types.optional(\n        types.refinement(\n          'SpreadsheetViewHeight',\n          types.number,\n          n => n >= minHeight,\n        ),\n        defaultHeight,\n      ),\n\n      hideViewControls: false,\n      hideVerticalResizeHandle: false,\n      hideFilterControls: false,\n\n      filterControls: types.optional(FilterControlsModel, () =>\n        FilterControlsModel.create({}),\n      ),\n\n      // switch specifying whether we are showing the import wizard or the spreadsheet in our viewing area\n      mode: types.optional(\n        types.enumeration('SpreadsheetViewMode', ['import', 'display']),\n        'import',\n      ),\n      importWizard: types.optional(ImportWizardModel, () =>\n        ImportWizardModel.create(),\n      ),\n      spreadsheet: types.maybe(SpreadsheetModel),\n    })\n    .volatile(() => ({\n      width: 400,\n      rowMenuItems: mobx.observable(defaultRowMenuItems),\n    }))\n    .views(self => ({\n      get readyToDisplay() {\n        return !!self.spreadsheet && self.spreadsheet.isLoaded\n      },\n\n      get hideRowSelection() {\n        return !!getEnv(self).hideRowSelection\n      },\n\n      get outputRows() {\n        if (self.spreadsheet && self.spreadsheet.rowSet.isLoaded) {\n          const selected = self.spreadsheet.rowSet.selectedFilteredRows\n          if (selected.length) {\n            return selected\n          }\n          return self.spreadsheet.rowSet.sortedFilteredRows\n        }\n        return undefined\n      },\n\n      get assembly() {\n        if (self.spreadsheet && self.spreadsheet.assemblyName) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const assemblies = getSession(self).assemblies as any[]\n          const assembly = (assemblies || []).find(\n            asm =>\n              readConfObject(asm, 'name') === self.spreadsheet?.assemblyName,\n          )\n          if (assembly) {\n            return assembly\n          }\n        }\n        return undefined\n      },\n    }))\n    .actions(self => ({\n      setRowMenuItems(newItems: MenuItem[]) {\n        self.rowMenuItems.replace(newItems)\n      },\n      setWidth(newWidth: number) {\n        self.width = newWidth\n        return self.width\n      },\n      setHeight(newHeight: number) {\n        if (newHeight > minHeight) {\n          self.height = newHeight\n        } else {\n          self.height = minHeight\n        }\n        return self.height\n      },\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n      resizeWidth(distance: number) {\n        const oldWidth = self.width\n        const newWidth = this.setWidth(self.width + distance)\n        return newWidth - oldWidth\n      },\n\n      /** load a new spreadsheet and set our mode to display it */\n      displaySpreadsheet(spreadsheet: SnapshotIn<typeof SpreadsheetModel>) {\n        self.filterControls.clearAllFilters()\n        // @ts-ignore\n        self.spreadsheet = spreadsheet\n        self.mode = 'display'\n      },\n\n      setImportMode() {\n        self.mode = 'import'\n      },\n\n      setDisplayMode() {\n        if (self.readyToDisplay) {\n          self.mode = 'display'\n        }\n      },\n\n      closeView() {\n        getParent(self, 2).removeView(self)\n      },\n    }))\n\n  const stateModel = types.compose(BaseViewModel, model)\n\n  return stateModel\n}\n\nexport default SpreadsheetViewModelF\n","import { lazy } from 'react'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport stateModelFactory from './SpreadsheetView/models/SpreadsheetView'\n\nexport default class SpreadsheetViewPlugin extends Plugin {\n  name = 'SpreadsheetViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(() => {\n      return new ViewType({\n        name: 'SpreadsheetView',\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./SpreadsheetView/components/SpreadsheetView'),\n        ),\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Spreadsheet view',\n        icon: ViewComfyIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SpreadsheetView', {})\n        },\n      })\n    }\n  }\n}\n","import FolderOpenIcon from '@material-ui/icons/FolderOpen'\n\nconst SvInspectorComponentF = pluginManager => {\n  const { jbrequire } = pluginManager\n  const { observer, PropTypes } = jbrequire('mobx-react')\n  const React = jbrequire('react')\n  const IconButton = jbrequire('@material-ui/core/IconButton')\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const Grid = jbrequire('@material-ui/core/Grid')\n  const FormControlLabel = jbrequire('@material-ui/core/FormControlLabel')\n  const Checkbox = jbrequire('@material-ui/core/Checkbox')\n  const { ResizeHandle } = jbrequire('@jbrowse/core/ui')\n  const { grey } = jbrequire('@material-ui/core/colors')\n\n  const headerHeight = 52\n\n  const style = {\n    width: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  }\n  const useStyles = makeStyles(theme => {\n    return {\n      root: {\n        marginBottom: theme.spacing(1),\n        background: 'white',\n        overflow: 'hidden',\n      },\n      header: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        height: headerHeight,\n        background: grey[200],\n        // borderBottom: '1px solid #a2a2a2',\n      },\n      viewControls: {\n        margin: 0,\n      },\n      viewsContainer: {\n        display: 'flex',\n      },\n      spreadsheetViewContainer: {\n        borderRight: [['1px', 'solid', grey[400]]],\n        overflow: 'hidden',\n      },\n      circularViewOptions: {\n        padding: theme.spacing(1),\n        background: grey[200],\n      },\n    }\n  })\n\n  const ViewControls = observer(({ model }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const classes = useStyles()\n    return (\n      <Grid\n        className={classes.viewControls}\n        container\n        spacing={1}\n        direction=\"row\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <IconButton\n            onClick={() => model.setImportMode()}\n            className={classes.iconButton}\n            title=\"open a tabular file\"\n            data-testid=\"sv_inspector_view_open\"\n            color=\"secondary\"\n          >\n            <FolderOpenIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    )\n  })\n\n  const CircularViewOptions = observer(({ svInspector }) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const classes = useStyles()\n\n    return (\n      <Grid\n        container\n        className={classes.circularViewOptions}\n        style={{ height: svInspector.circularViewOptionsBarHeight }}\n      >\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Checkbox\n                className={classes.rowSelector}\n                checked={svInspector.onlyDisplayRelevantRegionsInCircularView}\n                onClick={evt =>\n                  svInspector.setOnlyDisplayRelevantRegionsInCircularView(\n                    evt.target.checked,\n                  )\n                }\n              />\n            }\n            label=\"show only regions with data\"\n          />\n        </Grid>\n      </Grid>\n    )\n  })\n\n  function SvInspectorView({ model }) {\n    const classes = useStyles()\n\n    const {\n      resizeHeight,\n      dragHandleHeight,\n      SpreadsheetViewReactComponent,\n      CircularViewReactComponent,\n      showCircularView,\n    } = model\n\n    return (\n      <div className={classes.root} data-testid={model.id}>\n        <Grid container direction=\"row\" className={classes.header}>\n          <Grid item>\n            <ViewControls model={model} />\n          </Grid>\n        </Grid>\n        <div className={classes.viewsContainer}>\n          <div className={classes.spreadsheetViewContainer}>\n            <SpreadsheetViewReactComponent model={model.spreadsheetView} />\n          </div>\n\n          {showCircularView ? (\n            <>\n              <ResizeHandle\n                onDrag={distance => {\n                  const ret1 = model.circularView.resizeWidth(-distance)\n                  const ret2 = model.spreadsheetView.resizeWidth(-ret1)\n                  return ret2\n                }}\n                vertical\n                flexbox\n                style={style}\n              />\n              <div\n                className={classes.circularViewContainer}\n                style={{ width: model.circularView.width }}\n              >\n                <CircularViewOptions svInspector={model} />\n                <CircularViewReactComponent model={model.circularView} />\n              </div>\n            </>\n          ) : null}\n        </div>\n        <ResizeHandle\n          onDrag={resizeHeight}\n          style={{\n            height: dragHandleHeight,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      </div>\n    )\n  }\n  SvInspectorView.propTypes = {\n    model: PropTypes.objectOrObservableObject.isRequired,\n  }\n  return observer(SvInspectorView)\n}\n\nexport default SvInspectorComponentF\n","// this file contains the rather verbose functions for\n// creating features from CSV/TSV lines\nexport default ({ jbrequire }) => {\n  const { parseLocString } = jbrequire('@jbrowse/core/util')\n\n  function makeAdHocFeature(\n    columns,\n    columnsAlreadyUsedInLocations,\n    row,\n    loc1,\n    loc2,\n    rowNumber,\n  ) {\n    // load all the other data in the row into an `otherData` object\n    const otherData = {}\n    columns.forEach((column, columnNumber) => {\n      if (columnsAlreadyUsedInLocations.includes(columnNumber)) {\n        return\n      }\n      let { text } = row.cells[columnNumber]\n      if (column.dataType.type === 'Number') {\n        text = parseFloat(text)\n      }\n      otherData[column.name] = text\n    })\n\n    // make the final feature data out of otherData + the parsed locations\n    return {\n      ...otherData,\n      uniqueId: `sv-inspector-adhoc-${rowNumber}`,\n      refName: loc1.refName,\n      start: loc1.start,\n      end: loc1.end,\n      mate: {\n        refName: loc2.refName,\n        start: loc2.start,\n        end: loc2.end,\n      },\n    }\n  }\n\n  function makeAdHocSvFeatureFromTwoLocations(\n    columns,\n    locationColumnNumbers,\n    row,\n    rowNumber,\n    isValidRefName,\n  ) {\n    // use the first two locations we found (first according to *displayed* order)\n    const loc1 = parseLocString(\n      row.cells[locationColumnNumbers[0]].text,\n      isValidRefName,\n    )\n    const loc2 = parseLocString(\n      row.cells[locationColumnNumbers[1]].text,\n      isValidRefName,\n    )\n\n    const columnsAlreadyUsedInLocations = [\n      locationColumnNumbers[0],\n      locationColumnNumbers[1],\n    ]\n\n    return makeAdHocFeature(\n      columns,\n      columnsAlreadyUsedInLocations,\n      row,\n      loc1,\n      loc2,\n      rowNumber,\n    )\n  }\n\n  function makeAdHocSvFeatureFromTwoRefStartEndSets(\n    columns,\n    locRefColumnNumbers,\n    locStartColumnNumbers,\n    locEndColumnNumbers,\n    row,\n    rowNumber,\n  ) {\n    const textOf = colno => row.cells[colno].text\n    const loc1 = {\n      refName: textOf(locRefColumnNumbers[0]),\n      start: parseInt(textOf(locStartColumnNumbers[0]), 10) - 1,\n      end: parseInt(textOf(locEndColumnNumbers[0]), 10),\n    }\n    const loc2 = {\n      refName: textOf(locRefColumnNumbers[1]),\n      start: parseInt(textOf(locStartColumnNumbers[1]), 10) - 1,\n      end: parseInt(textOf(locEndColumnNumbers[1]), 10),\n    }\n    const columnsAlreadyUsedInLocations = [\n      locRefColumnNumbers[0],\n      locStartColumnNumbers[0],\n      locEndColumnNumbers[0],\n      locRefColumnNumbers[1],\n      locStartColumnNumbers[1],\n      locEndColumnNumbers[1],\n    ]\n    return makeAdHocFeature(\n      columns,\n      columnsAlreadyUsedInLocations,\n      row,\n      loc1,\n      loc2,\n      rowNumber,\n    )\n  }\n\n  // makes a feature data object (passed as `data` to a SimpleFeature constructor)\n  // out of table row if the row has 2 location columns. undefined if not\n  function makeAdHocSvFeature(sheet, rowNumber, row, isValidRefName) {\n    const { columns, columnDisplayOrder } = sheet\n    const columnTypes = {}\n    columnDisplayOrder.forEach(columnNumber => {\n      const columnDefinition = columns[columnNumber]\n      if (!columnTypes[columnDefinition.dataType.type]) {\n        columnTypes[columnDefinition.dataType.type] = []\n      }\n      columnTypes[columnDefinition.dataType.type].push(columnNumber)\n    })\n    const locationColumnNumbers = columnTypes.LocString || []\n    const locStartColumnNumbers = columnTypes.LocStart || []\n    const locEndColumnNumbers = columnTypes.LocEnd || []\n    const locRefColumnNumbers = columnTypes.LocRef || []\n\n    // if we have 2 or more columns of type location, make a feature from them\n    if (locationColumnNumbers.length >= 2) {\n      return makeAdHocSvFeatureFromTwoLocations(\n        columns,\n        locationColumnNumbers,\n        row,\n        rowNumber,\n        isValidRefName,\n      )\n    }\n    if (\n      locRefColumnNumbers.length >= 2 &&\n      locStartColumnNumbers.length >= 2 &&\n      locEndColumnNumbers.length >= 2\n    ) {\n      return makeAdHocSvFeatureFromTwoRefStartEndSets(\n        columns,\n        locRefColumnNumbers,\n        locStartColumnNumbers,\n        locEndColumnNumbers,\n        row,\n        rowNumber,\n      )\n    }\n    return undefined\n  }\n\n  return {\n    makeAdHocSvFeature,\n    makeAdHocSvFeatureFromTwoLocations,\n    makeAdHocSvFeatureFromTwoRefStartEndSets,\n  }\n}\n","import SimpleFeature from '@jbrowse/core/util/simpleFeature'\nimport adhocFeatureUtilsFactory from './adhocFeatureUtils'\n\nexport default pluginManager => {\n  const { jbrequire } = pluginManager\n  const { getSession } = jbrequire('@jbrowse/core/util')\n\n  const { makeAdHocSvFeature } = jbrequire(adhocFeatureUtilsFactory)\n\n  function getSerializedFeatureForRow(\n    session,\n    spreadsheetView,\n    row,\n    rowNumber,\n  ) {\n    if (row.extendedData) {\n      if (row.extendedData.vcfFeature) {\n        return row.extendedData.vcfFeature\n      }\n      if (row.extendedData.feature) {\n        return row.extendedData.feature\n      }\n    }\n    const adhocFeature = makeAdHocSvFeature(\n      spreadsheetView.spreadsheet,\n      rowNumber,\n      row,\n      session.assemblyManager.isValidRefName,\n    )\n    if (adhocFeature) {\n      return adhocFeature\n    }\n    return undefined\n  }\n\n  function breakpointSplitViewSnapshotFromTableRow(\n    svInspectorView,\n    spreadsheetView,\n    spreadsheet,\n    row,\n    rowNumber,\n  ) {\n    const session = getSession(spreadsheetView)\n    const featureData = getSerializedFeatureForRow(\n      session,\n      spreadsheet,\n      row,\n      rowNumber,\n    )\n    if (featureData) {\n      const feature = new SimpleFeature(featureData)\n      session.setSelection(feature)\n      const viewType = pluginManager.getViewType('BreakpointSplitView')\n      const { circularView } = svInspectorView\n      const viewSnapshot = viewType.snapshotFromBreakendFeature(\n        feature,\n        circularView,\n      )\n      return viewSnapshot\n    }\n    return undefined\n  }\n\n  function openBreakpointSplitViewFromTableRow(\n    svInspectorView,\n    spreadsheetView,\n    spreadsheet,\n    row,\n    rowNumber,\n  ) {\n    const viewSnapshot = breakpointSplitViewSnapshotFromTableRow(\n      svInspectorView,\n      spreadsheetView,\n      spreadsheet,\n      row,\n      rowNumber,\n    )\n    if (viewSnapshot) {\n      // try to center the offsetPx\n      const { circularView } = svInspectorView\n      viewSnapshot.views[0].offsetPx -= circularView.width / 2 + 100\n      viewSnapshot.views[1].offsetPx -= circularView.width / 2 + 100\n\n      const session = getSession(spreadsheetView)\n      session.addView('BreakpointSplitView', viewSnapshot)\n    }\n  }\n\n  function canOpenBreakpointSplitViewFromTableRow(\n    svInspectorView,\n    spreadsheetView,\n    spreadsheet,\n    row,\n    rowNumber,\n  ) {\n    try {\n      const viewSnapshot = breakpointSplitViewSnapshotFromTableRow(\n        svInspectorView,\n        spreadsheetView,\n        spreadsheet,\n        row,\n        rowNumber,\n      )\n      return Boolean(viewSnapshot)\n    } catch (e) {\n      return false\n    }\n  }\n\n  return {\n    getSerializedFeatureForRow,\n    breakpointSplitViewSnapshotFromTableRow,\n    canOpenBreakpointSplitViewFromTableRow,\n    openBreakpointSplitViewFromTableRow,\n  }\n}\n","import OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport breakpointSplitViewFromTableRowFactory from './breakpointSplitViewFromTableRow'\n\nfunction defaultOnChordClick(feature, chordTrack, pluginManager) {\n  const { jbrequire } = pluginManager\n  // const { getConf } = jbrequire('@jbrowse/core/configuration')\n  const { getContainingView, getSession } = jbrequire('@jbrowse/core/util')\n  // const { resolveIdentifier } = jbrequire('mobx-state-tree')\n\n  const session = getSession(chordTrack)\n  session.setSelection(feature)\n  const view = getContainingView(chordTrack)\n  const viewType = pluginManager.getViewType('BreakpointSplitView')\n  const viewSnapshot = viewType.snapshotFromBreakendFeature(feature, view)\n\n  // disabling this for now since there isn't a way to set configRelationships\n  // on the generated chord display from the SV inspector\n\n  // // open any evidence tracks defined in configRelationships for this track\n  // const tracks = getConf(chordTrack, 'configRelationships')\n  //   .map(entry => {\n  //     const type = pluginManager.pluggableConfigSchemaType('track')\n  //     const trackConfig = resolveIdentifier(type, session, entry.target)\n  //     return trackConfig\n  //       ? {\n  //           type: trackConfig.type,\n  //           height: 100,\n  //           configuration: trackConfig.trackId,\n  //           selectedRendering: '',\n  //         }\n  //       : null\n  //   })\n  //   .filter(f => !!f)\n  // viewSnapshot.views[0].tracks = tracks\n  // viewSnapshot.views[1].tracks = tracks\n\n  // try to center the offsetPx\n  viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n  viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n  viewSnapshot.featureData = feature.data\n\n  session.addView('BreakpointSplitView', viewSnapshot)\n}\n\nconst SvInspectorViewF = pluginManager => {\n  const { jbrequire } = pluginManager\n  const { autorun, reaction } = pluginManager.lib.mobx\n  const { types, getParent, addDisposer } = pluginManager.lib['mobx-state-tree']\n  const { BaseViewModel } = jbrequire(\n    '@jbrowse/core/pluggableElementTypes/models',\n  )\n  const { getSession } = jbrequire('@jbrowse/core/util')\n  const { readConfObject } = jbrequire('@jbrowse/core/configuration')\n\n  const SpreadsheetViewType = pluginManager.getViewType('SpreadsheetView')\n  const CircularViewType = pluginManager.getViewType('CircularView')\n\n  const minHeight = 400\n  const defaultHeight = 500\n  const headerHeight = 52\n  const circularViewOptionsBarHeight = 52\n\n  const {\n    canOpenBreakpointSplitViewFromTableRow,\n    openBreakpointSplitViewFromTableRow,\n    getSerializedFeatureForRow,\n  } = jbrequire(breakpointSplitViewFromTableRowFactory)\n\n  const model = types\n    .model('SvInspectorView', {\n      type: types.literal('SvInspectorView'),\n      dragHandleHeight: 4,\n      height: types.optional(\n        types.refinement(\n          'SvInspectorViewHeight',\n          types.number,\n          n => n >= minHeight,\n        ),\n        defaultHeight,\n      ),\n\n      onlyDisplayRelevantRegionsInCircularView: false,\n\n      // switch specifying whether we are showing the import wizard or the\n      // spreadsheet in our viewing area\n      mode: types.optional(\n        types.enumeration('SvInspectorViewMode', ['import', 'display']),\n        'import',\n      ),\n\n      spreadsheetView: types.optional(SpreadsheetViewType.stateModel, () =>\n        SpreadsheetViewType.stateModel.create({\n          type: 'SpreadsheetView',\n          hideViewControls: true,\n          hideVerticalResizeHandle: true,\n        }),\n      ),\n\n      circularView: types.optional(CircularViewType.stateModel, () =>\n        CircularViewType.stateModel.create({\n          type: 'CircularView',\n          hideVerticalResizeHandle: true,\n          hideTrackSelectorButton: true,\n          disableImportForm: true,\n        }),\n      ),\n    })\n    .volatile(() => ({\n      width: 800,\n    }))\n    .views(self => ({\n      get selectedRows() {\n        return self.spreadsheetView.rowSet.selectedRows\n      },\n\n      get assemblyName() {\n        const { assembly } = self.spreadsheetView\n        if (assembly) {\n          return readConfObject(assembly, 'name')\n        }\n        return undefined\n      },\n\n      get showCircularView() {\n        return self.spreadsheetView.mode === 'display'\n      },\n\n      get featuresAdapterConfigSnapshot() {\n        const session = getSession(self)\n        return {\n          type: 'FromConfigAdapter',\n          features: (self.spreadsheetView.outputRows || [])\n            .map((row, rowNumber) =>\n              getSerializedFeatureForRow(\n                session,\n                self.spreadsheetView,\n                row,\n                rowNumber,\n              ),\n            )\n            .filter(f => Boolean(f)),\n        }\n      },\n\n      // Promise<string[]> of refnames\n      get featuresRefNamesP() {\n        const {\n          AdapterClass: FromConfigAdapter,\n        } = pluginManager.getAdapterType('FromConfigAdapter')\n        const adapter = new FromConfigAdapter(\n          self.featuresAdapterConfigSnapshot,\n        )\n        return adapter.getRefNames()\n      },\n\n      get featuresCircularTrackConfiguration() {\n        pluginManager.jexl.addFunction(\n          'defaultOnChordClick',\n          defaultOnChordClick,\n        )\n        const configuration = {\n          type: 'VariantTrack',\n          trackId: `sv-inspector-variant-track-${self.id}`,\n          name: 'features from tabular data',\n          adapter: self.featuresAdapterConfigSnapshot,\n          assemblyNames: [self.assemblyName],\n          displays: [\n            {\n              type: 'ChordVariantDisplay',\n              displayId: `sv-inspector-variant-track-chord-display-${self.id}`,\n              onChordClick: `jexl:defaultOnChordClick(feature, track, pluginManager)`,\n              renderer: { type: 'StructuralVariantChordRenderer' },\n            },\n          ],\n        }\n        return configuration\n      },\n    }))\n    .volatile(() => ({\n      SpreadsheetViewReactComponent: SpreadsheetViewType.ReactComponent,\n      CircularViewReactComponent: CircularViewType.ReactComponent,\n      circularViewOptionsBarHeight,\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // synchronize subview widths\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              const borderWidth = 1\n              if (self.showCircularView) {\n                const spreadsheetWidth = Math.round(self.width * 0.66)\n                const circularViewWidth = self.width - spreadsheetWidth\n                self.spreadsheetView.setWidth(spreadsheetWidth - borderWidth)\n                self.circularView.setWidth(circularViewWidth)\n              } else {\n                self.spreadsheetView.setWidth(self.width)\n              }\n            },\n            { name: 'SvInspectorView width binding' },\n          ),\n        )\n        // synchronize subview heights\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              self.spreadsheetView.setHeight(self.height - headerHeight)\n              self.circularView.setHeight(\n                self.height - headerHeight - circularViewOptionsBarHeight,\n              )\n            },\n            { name: 'SvInspectorView height binding' },\n          ),\n        )\n        // bind circularview displayedRegions to spreadsheet assembly, mediated by\n        // the onlyRelevantRegions toggle\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              const {\n                assemblyName,\n                onlyDisplayRelevantRegionsInCircularView,\n                circularView,\n                featuresRefNamesP,\n              } = self\n              const { tracks } = circularView\n              const session = getSession(self)\n              if (assemblyName) {\n                const assembly = await session.assemblyManager.waitForAssembly(\n                  assemblyName,\n                )\n                if (assembly) {\n                  const {\n                    getCanonicalRefName,\n                    regions: assemblyRegions = [],\n                  } = assembly\n                  if (onlyDisplayRelevantRegionsInCircularView) {\n                    if (tracks.length === 1) {\n                      featuresRefNamesP\n                        .then(featureRefNames => {\n                          // canonicalize the store's ref names if necessary\n                          const canonicalFeatureRefNames = new Set(\n                            featureRefNames.map(\n                              refName =>\n                                getCanonicalRefName(refName) || refName,\n                            ),\n                          )\n                          const displayedRegions = assemblyRegions.filter(r =>\n                            canonicalFeatureRefNames.has(r.refName),\n                          )\n                          circularView.setDisplayedRegions(\n                            JSON.parse(JSON.stringify(displayedRegions)),\n                          )\n                        })\n                        .catch(e => circularView.setError(e))\n                    }\n                  } else {\n                    circularView.setDisplayedRegions(assemblyRegions)\n                  }\n                } else {\n                  circularView.setDisplayedRegions([])\n                }\n              }\n            },\n            { name: 'SvInspectorView displayed regions bind' },\n          ),\n        )\n\n        // bind circularview tracks to our track snapshot view\n        addDisposer(\n          self,\n          reaction(\n            () => ({\n              generatedTrackConf:\n                self && self.featuresCircularTrackConfiguration,\n              assemblyName: self && self.assemblyName,\n            }),\n            data => {\n              if (!data) {\n                return\n              }\n              const { assemblyName, generatedTrackConf } = data\n              // hide any visible tracks\n              if (self.circularView.tracks.length) {\n                self.circularView.tracks.forEach(track => {\n                  self.circularView.hideTrack(track.configuration.trackId)\n                })\n              }\n\n              // put our track in as the only track\n              if (assemblyName && generatedTrackConf) {\n                self.circularView.addTrackConf(generatedTrackConf, {\n                  assemblyName,\n                })\n              }\n            },\n            {\n              name: 'SvInspectorView track configuration binding',\n              fireImmediately: true,\n            },\n          ),\n        )\n\n        // bind spreadsheetView row menu actions to us\n        addDisposer(\n          self,\n          autorun(() => {\n            self.spreadsheetView.setRowMenuItems(\n              // these are the MenuItem entries for the row menu actions in the spreadsheet view.\n              // these are installed into the child SpreadsheetView using an autorun below\n              [\n                {\n                  label: 'Open split detail view',\n                  icon: OpenInNewIcon,\n                  disabled(spreadsheetView, spreadsheet, rowNumber, row) {\n                    return !canOpenBreakpointSplitViewFromTableRow(\n                      self,\n                      spreadsheetView,\n                      spreadsheet,\n                      row,\n                      rowNumber,\n                    )\n                  },\n                  onClick(spreadsheetView, spreadsheet, rowNumber, row) {\n                    openBreakpointSplitViewFromTableRow(\n                      self,\n                      spreadsheetView,\n                      spreadsheet,\n                      row,\n                      rowNumber,\n                    )\n                  },\n                },\n              ],\n            )\n          }),\n        )\n      },\n      setWidth(newWidth) {\n        self.width = newWidth\n      },\n      setHeight(newHeight) {\n        if (newHeight > minHeight) {\n          self.height = newHeight\n        } else {\n          self.height = minHeight\n        }\n        return self.height\n      },\n      resizeHeight(distance) {\n        const oldHeight = self.height\n        const newHeight = self.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n\n      setImportMode() {\n        self.spreadsheetView.setImportMode()\n      },\n\n      setDisplayMode() {\n        self.spreadsheetView.setDisplayMode()\n      },\n\n      closeView() {\n        getParent(self, 2).removeView(self)\n      },\n\n      setDisplayedRegions(regions) {\n        self.circularView.setDisplayedRegions(regions)\n      },\n\n      setOnlyDisplayRelevantRegionsInCircularView(val) {\n        self.onlyDisplayRelevantRegionsInCircularView = Boolean(val)\n      },\n    }))\n\n  const stateModel = types.compose(BaseViewModel, model)\n\n  return { stateModel }\n}\n\nexport default SvInspectorViewF\n","import ReactComponentFactory from './components/SvInspectorView'\nimport StateModelFactory from './models/SvInspectorView'\n\nconst SvInspectorViewF = ({ jbrequire }) => {\n  const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n\n  const ReactComponent = jbrequire(ReactComponentFactory)\n  const { stateModel } = jbrequire(StateModelFactory)\n\n  return new ViewType({ name: 'SvInspectorView', stateModel, ReactComponent })\n}\n\nexport default SvInspectorViewF\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport {\n  AbstractSessionModel,\n  isAbstractMenuManager,\n} from '@jbrowse/core/util/types'\nimport TableChartIcon from '@material-ui/icons/TableChart'\nimport SvInspectorViewTypeFactory from './SvInspectorView/SvInspectorViewType'\n\nexport default class SvInspectorViewPlugin extends Plugin {\n  name = 'SvInspectorViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(() =>\n      pluginManager.jbrequire(SvInspectorViewTypeFactory),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'SV inspector',\n        icon: TableChartIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SvInspectorView', {})\n        },\n      })\n    }\n  }\n}\n","import { Region } from '@jbrowse/core/util/types'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { BaseLinearDisplayModel } from '@jbrowse/plugin-linear-genome-view'\n\nfunction HicRendering(props: {\n  blockKey: string\n  displayModel: BaseLinearDisplayModel\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n}) {\n  const { width, height } = props\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div\n      className=\"PileupRendering\"\n      style={{ position: 'relative', width: canvasWidth, height }}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default observer(HicRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'HicRenderer',\n  {\n    baseColor: {\n      type: 'color',\n      description: 'base color to be used in the hic alignment',\n      defaultValue: '#f00',\n    },\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a hic alignment',\n      defaultValue: `jexl:colorString(hsl(alpha(baseColor,min(1,count/(maxScore/20)))))`,\n      contextVariable: ['count', 'maxScore', 'baseColor'],\n    },\n\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a hic rendering',\n      defaultValue: 600,\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import Color from 'color'\nimport ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderResults,\n  ResultsSerialized as ServerSideResultsSerialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\nimport { Region } from '@jbrowse/core/util/types'\nimport { abortBreakPoint } from '@jbrowse/core/util'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { toArray } from 'rxjs/operators'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\ninterface HicFeature {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicDataAdapter extends BaseFeatureDataAdapter {\n  getResolution: (bp: number) => Promise<number>\n}\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  regions: Region[]\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  regions: Region[]\n  dataAdapter: HicDataAdapter\n  bpPerPx: number\n  highResolutionScaling: number\n  resolution: number\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: HicFeature[]\n}\n\nexport type { RenderArgsSerialized, RenderResults }\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport type ResultsDeserialized = ServerSideResultsDeserialized\n\nexport default class HicRenderer extends ServerSideRendererType {\n  supportsSVG = true\n\n  async makeImageData(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { features, config, bpPerPx, signal, dataAdapter, resolution } = props\n    const res = await dataAdapter.getResolution(bpPerPx / resolution)\n    const w = res / (bpPerPx * Math.sqrt(2))\n    const baseColor = Color(readConfObject(config, 'baseColor'))\n    if (features.length) {\n      const offset = features[0].bin1\n      let maxScore = 0\n      let minBin = 0\n      let maxBin = 0\n      await abortBreakPoint(signal)\n      for (let i = 0; i < features.length; i++) {\n        const { bin1, bin2, counts } = features[i]\n        maxScore = Math.max(counts, maxScore)\n        minBin = Math.min(Math.min(bin1, bin2), minBin)\n        maxBin = Math.max(Math.max(bin1, bin2), maxBin)\n      }\n      await abortBreakPoint(signal)\n      ctx.rotate(-Math.PI / 4)\n      let start = Date.now()\n      for (let i = 0; i < features.length; i++) {\n        const { bin1, bin2, counts } = features[i]\n        ctx.fillStyle = readConfObject(config, 'color', {\n          count: counts,\n          maxScore,\n          baseColor,\n        })\n        ctx.fillRect((bin1 - offset) * w, (bin2 - offset) * w, w, w)\n        if (+Date.now() - start > 400) {\n          await abortBreakPoint(signal)\n          start = +Date.now()\n        }\n      }\n    }\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const { config, regions, bpPerPx } = renderProps\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n    const height = readConfObject(config, 'maxHeight')\n    const features = await this.getFeatures(renderProps)\n\n    const res = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      (ctx: CanvasRenderingContext2D) => {\n        return this.makeImageData(ctx, {\n          ...renderProps,\n          features,\n        })\n      },\n    )\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      region: renderProps.regions[0],\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      height,\n      width,\n    }\n  }\n\n  async getFeatures(args: RenderArgsDeserialized) {\n    const { dataAdapter, regions } = args\n    const features = await dataAdapter\n      .getFeatures(regions[0], args)\n      .pipe(toArray())\n      .toPromise()\n    // cast to any to avoid return-type conflict, because the\n    // types of features returned by our getFeatures are quite\n    // different from the base interface\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return features as any\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst HicTrackConfigFactory = (pluginManager: PluginManager) => {\n  const HicRendererConfigSchema = pluginManager.getRendererType('HicRenderer')\n    .configSchema\n\n  return ConfigurationSchema(\n    'LinearHicDisplay',\n    { renderer: HicRendererConfigSchema },\n    { baseConfiguration: baseLinearDisplayConfigSchema, explicitlyTyped: true },\n  )\n}\n\nexport type HicTrackConfigModel = ReturnType<typeof HicTrackConfigFactory>\nexport type HicTrackConfig = Instance<HicTrackConfigModel>\nexport default HicTrackConfigFactory\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types, getEnv } from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration/configurationSchema'\n\nexport default (configSchema: AnyConfigurationSchemaType) =>\n  types\n    .compose(\n      'LinearHicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearHicDisplay'),\n        configuration: ConfigurationReference(configSchema),\n        resolution: types.optional(types.number, 1),\n      }),\n    )\n    .views(self => ({\n      get blockType() {\n        return 'dynamicBlocks'\n      },\n      get rendererTypeName() {\n        return 'HicRenderer'\n      },\n\n      /**\n       * the react props that are passed to the Renderer when data\n       * is rendered in this track\n       */\n      get renderProps() {\n        const config = self.rendererType.configSchema.create(\n          getConf(self, 'renderer') || {},\n          getEnv(self),\n        )\n\n        return {\n          ...self.composedRenderProps,\n          ...getParentRenderProps(self),\n          config,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          resolution: self.resolution,\n        }\n      },\n    }))\n    .actions(self => ({\n      setResolution(n: number) {\n        self.resolution = n\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems } = self\n      return {\n        get composedTrackMenuItems() {\n          return [\n            {\n              label: 'Resolution',\n              subMenu: [\n                {\n                  label: 'Finer resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution * 2)\n                  },\n                },\n                {\n                  label: 'Coarser resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution / 2)\n                  },\n                },\n              ],\n            },\n          ]\n        },\n\n        get trackMenuItems() {\n          return [...trackMenuItems, ...this.composedTrackMenuItems]\n        },\n      }\n    })\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'HicAdapter',\n  {\n    hicLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.hic' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport {\n  createBaseTrackConfig,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport Color from 'color'\nimport HicRenderer, {\n  configSchema as hicRendererConfigSchema,\n  ReactComponent as HicRendererReactComponent,\n} from './HicRenderer'\nimport {\n  configSchemaFactory as linearHicdisplayConfigSchemaFactory,\n  modelFactory as linearHicdisplayModelFactory,\n} from './LinearHicDisplay'\nimport hicAdapterConfigSchema from './HicAdapter/configSchema'\n\nexport default class HicPlugin extends Plugin {\n  name = 'HicPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'HicAdapter',\n          configSchema: hicAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./HicAdapter/HicAdapter').then(r => r.default),\n        }),\n    )\n    pluginManager.addRendererType(\n      () =>\n        new HicRenderer({\n          name: 'HicRenderer',\n          ReactComponent: HicRendererReactComponent,\n          configSchema: hicRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n    pluginManager.addTrackType(() => {\n      const configSchema = ConfigurationSchema(\n        'HicTrack',\n        {},\n        {\n          baseConfiguration: createBaseTrackConfig(pluginManager),\n          explicitIdentifier: 'trackId',\n        },\n      )\n      return new TrackType({\n        name: 'HicTrack',\n        configSchema,\n        stateModel: createBaseTrackModel(\n          pluginManager,\n          'HicTrack',\n          configSchema,\n        ),\n      })\n    })\n    pluginManager.addDisplayType(() => {\n      const configSchema = linearHicdisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearHicDisplay',\n        configSchema,\n        stateModel: linearHicdisplayModelFactory(configSchema),\n        trackType: 'HicTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    pluginManager.jexl.addFunction('alpha', (color: Color, value: number) =>\n      color.alpha(value),\n    )\n    pluginManager.jexl.addFunction('hsl', (color: Color) => color.hsl())\n    pluginManager.jexl.addFunction('colorString', (color: Color) =>\n      color.string(),\n    )\n  }\n}\n","import Alignments from '@jbrowse/plugin-alignments'\nimport Bed from '@jbrowse/plugin-bed'\nimport BreakpointSplitView from '@jbrowse/plugin-breakpoint-split-view'\nimport CircularView from '@jbrowse/plugin-circular-view'\nimport Config from '@jbrowse/plugin-config'\nimport DataManagement from '@jbrowse/plugin-data-management'\nimport DotplotView from '@jbrowse/plugin-dotplot-view'\nimport Filtering from '@jbrowse/plugin-filtering'\nimport Gff3Tabix from '@jbrowse/plugin-gff3'\nimport LegacyJBrowse from '@jbrowse/plugin-legacy-jbrowse'\nimport LinearGenomeView from '@jbrowse/plugin-linear-genome-view'\nimport LinearComparativeView from '@jbrowse/plugin-linear-comparative-view'\nimport Lollipop from '@jbrowse/plugin-lollipop'\nimport Menus from '@jbrowse/plugin-menus'\nimport RDF from '@jbrowse/plugin-rdf'\nimport Sequence from '@jbrowse/plugin-sequence'\nimport SVG from '@jbrowse/plugin-svg'\nimport TrackHubRegistry from '@jbrowse/plugin-trackhub-registry'\nimport Variants from '@jbrowse/plugin-variants'\nimport Wiggle from '@jbrowse/plugin-wiggle'\nimport SpreadsheetViewPlugin from '@jbrowse/plugin-spreadsheet-view'\nimport SvInspectorPlugin from '@jbrowse/plugin-sv-inspector'\nimport HicPlugin from '@jbrowse/plugin-hic'\n\nconst corePlugins = [\n  SVG,\n  LinearGenomeView,\n  Alignments,\n  Bed,\n  CircularView,\n  Config,\n  DataManagement,\n  DotplotView,\n  Filtering,\n  Gff3Tabix,\n  LegacyJBrowse,\n  LinearComparativeView,\n  Lollipop,\n  Menus,\n  RDF,\n  Sequence,\n  TrackHubRegistry,\n  Variants,\n  Wiggle,\n  SpreadsheetViewPlugin,\n  SvInspectorPlugin,\n  BreakpointSplitView,\n  HicPlugin,\n]\n\nexport default corePlugins\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport ShareIcon from '@material-ui/icons/Share'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  IconButton,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core'\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CloseIcon from '@material-ui/icons/Close'\nimport copy from 'copy-to-clipboard'\nimport { alpha } from '@material-ui/core/styles'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { toUrlSafeB64 } from '@jbrowse/core/util'\nimport { shareSessionToDynamo } from './sessionSharing'\nimport { SessionModel } from './sessionModelFactory'\n\nconst useStyles = makeStyles(theme => ({\n  shareDiv: {\n    textAlign: 'center',\n    paddingLeft: '2px',\n  },\n  shareButton: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.primary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  loadingMessage: {\n    padding: theme.spacing(5),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nconst SHARE_URL_LOCALSTORAGE_KEY = 'jbrowse-shareURL'\n\nfunction SettingsDialog(props: {\n  open: boolean\n  onClose: Function\n  currentSetting: string\n}) {\n  const classes = useStyles()\n  const { onClose, open, currentSetting } = props\n  const [setting, setSetting] = useState(currentSetting)\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false)\n\n  const handleClose = () => {\n    localStorage.setItem(SHARE_URL_LOCALSTORAGE_KEY, setting)\n    onClose(setting)\n  }\n\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open}>\n        <DialogTitle>\n          Configure session sharing\n          {handleClose ? (\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Select between generating long or short URLs for the session sharing\n            <IconButton onClick={() => setInfoDialogOpen(true)}>\n              <HelpOutlineIcon />\n            </IconButton>\n          </DialogContentText>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              value={setting}\n              onChange={event => {\n                const val = event.target.value\n                setSetting(val)\n              }}\n            >\n              <FormControlLabel\n                value=\"short\"\n                control={<Radio />}\n                label=\"Short URL\"\n              />\n              <FormControlLabel\n                value=\"long\"\n                control={<Radio />}\n                label=\"Long URL\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n      <InfoDialog\n        open={infoDialogOpen}\n        onClose={() => {\n          setInfoDialogOpen(false)\n        }}\n      />\n    </>\n  )\n}\nfunction InfoDialog(props: { open: boolean; onClose: Function }) {\n  const classes = useStyles()\n  const { onClose, open } = props\n\n  const handleClose = () => {\n    onClose()\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle id=\"simple-dialog-title\">\n        Info about session URLs\n        {onClose ? (\n          <IconButton className={classes.closeButton} onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Because everything about the JBrowse session is encoded in the URL\n          (e.g. state of the tracks, views, features selected, etc.) the\n          sessions can get very long. Therefore, we created a URL shortener,\n          both as a convenience and because long URLs can break some programs.\n          Note that both the long and short URLs encode the same data, but due\n          to long URLs causing problems with some programs, we recommend sharing\n          short URLs.\n        </DialogContentText>\n        <DialogContentText>\n          We generate the short URLs in a secure manner which involves\n          encrypting the session on the client side with a random password\n          string and uploading them to a central database. Then the random\n          password is added to the URL but is not uploaded to the central\n          database, making these short URLs effectively &quot;end-to-end\n          encrypted&quot;\n        </DialogContentText>\n        <DialogContentText>\n          Only users with a share link can read the session.\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst ShareDialog = observer(\n  ({\n    handleClose,\n    session,\n  }: {\n    handleClose: () => void\n    session: SessionModel\n  }) => {\n    const classes = useStyles()\n    const [shortUrl, setShortUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState<Error>()\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false)\n\n    const url = session.shareURL\n    const currentSetting =\n      localStorage.getItem(SHARE_URL_LOCALSTORAGE_KEY) || 'short'\n    const snap = getSnapshot(session)\n\n    useEffect(() => {\n      let cancelled = false\n      ;(async () => {\n        if (currentSetting === 'short') {\n          try {\n            setLoading(true)\n            const locationUrl = new URL(window.location.href)\n            const result = await shareSessionToDynamo(\n              snap,\n              url,\n              locationUrl.href,\n            )\n            if (!cancelled) {\n              setLoading(false)\n              const params = new URLSearchParams(locationUrl.search)\n              params.set('session', `share-${result.json.sessionId}`)\n              params.set('password', result.password)\n              locationUrl.search = params.toString()\n              setShortUrl(locationUrl.href)\n            }\n          } catch (e) {\n            setLoading(false)\n            setError(e)\n          }\n        }\n      })()\n\n      return () => {\n        cancelled = true\n      }\n    }, [currentSetting, url, snap])\n\n    // generate long URL\n    const sess = `${toUrlSafeB64(JSON.stringify(getSnapshot(session)))}`\n    const longUrl = new URL(window.location.href)\n    const longParams = new URLSearchParams(longUrl.search)\n    longParams.set('session', `encoded-${sess}`)\n    longUrl.search = longParams.toString()\n    return (\n      <>\n        <Dialog\n          maxWidth=\"xl\"\n          open\n          onClose={handleClose}\n          data-testid=\"share-dialog\"\n        >\n          <DialogTitle>\n            JBrowse Shareable Link\n            {handleClose ? (\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </DialogTitle>\n          <Divider />\n\n          <>\n            <DialogContent>\n              <DialogContentText>\n                Copy the URL below to share your current JBrowse session.\n                <IconButton onClick={() => setSettingsDialogOpen(true)}>\n                  <SettingsIcon />\n                </IconButton>\n              </DialogContentText>\n            </DialogContent>\n\n            <DialogContent>\n              {currentSetting === 'short' ? (\n                error ? (\n                  <Typography color=\"error\">{`${error}`}</Typography>\n                ) : loading ? (\n                  <Typography>Generating short URL...</Typography>\n                ) : (\n                  <TextField\n                    label=\"URL\"\n                    value={shortUrl}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                    inputProps={{ 'data-testid': 'share-url-text' }}\n                    variant=\"filled\"\n                    style={{ width: '100%' }}\n                    onClick={event => {\n                      const target = event.target as HTMLTextAreaElement\n                      target.select()\n                    }}\n                    data-testid=\"share-url-field\"\n                  />\n                )\n              ) : (\n                <TextField\n                  label=\"URL\"\n                  value={longUrl.toString()}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  variant=\"filled\"\n                  style={{ width: '100%' }}\n                  onClick={event => {\n                    const target = event.target as HTMLTextAreaElement\n                    target.select()\n                  }}\n                />\n              )}\n            </DialogContent>\n          </>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                copy(shortUrl || longUrl.toString())\n                session.notify('Copied to clipboard', 'success')\n              }}\n              color=\"primary\"\n              startIcon={<ContentCopyIcon />}\n              disabled={currentSetting === 'short' && loading}\n            >\n              Copy URL to Clipboard\n            </Button>\n\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <SettingsDialog\n          open={settingsDialogOpen}\n          onClose={() => {\n            setSettingsDialogOpen(false)\n          }}\n          currentSetting={currentSetting}\n        />\n      </>\n    )\n  },\n)\n\nconst ShareButton = observer((props: { session: SessionModel }) => {\n  const [open, setOpen] = useState(false)\n\n  const { session } = props\n  const classes = useStyles()\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.shareDiv}>\n      <Button\n        data-testid=\"share_button\"\n        onClick={async () => {\n          setOpen(true)\n        }}\n        size=\"small\"\n        color=\"inherit\"\n        startIcon={<ShareIcon />}\n        classes={{ root: classes.shareButton }}\n      >\n        Share\n      </Button>\n      {open ? (\n        <ShareDialog handleClose={handleClose} session={session} />\n      ) : null}\n    </div>\n  )\n})\n\nexport default ShareButton\n","import React from 'react'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type DataManagementPluginType from '@jbrowse/plugin-data-management'\nimport { AppRootModel } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\n\ninterface JBrowse {\n  defaultSession: {\n    name: string\n  }\n}\n\nfunction AdminComponent({ pluginManager }: { pluginManager: PluginManager }) {\n  const { rootModel } = pluginManager\n  const DataManagementPlugin = pluginManager.getPlugin('DataManagementPlugin')\n\n  if (!DataManagementPlugin) {\n    throw new Error('Data Management plugin must be installed')\n  }\n\n  const {\n    AssemblyManager,\n    SetDefaultSession,\n  } = (DataManagementPlugin as DataManagementPluginType).exports\n\n  const {\n    isAssemblyEditing,\n    isDefaultSessionEditing,\n    setDefaultSessionEditing,\n    setAssemblyEditing,\n    jbrowse,\n  } = rootModel as AppRootModel\n\n  return (\n    <>\n      <AssemblyManager\n        rootModel={rootModel}\n        open={isAssemblyEditing}\n        onClose={() => {\n          setAssemblyEditing(false)\n        }}\n      />\n      <SetDefaultSession\n        rootModel={rootModel}\n        open={isDefaultSessionEditing}\n        onClose={() => {\n          setDefaultSessionEditing(false)\n        }}\n        currentDefault={(jbrowse as JBrowse).defaultSession.name}\n      />\n    </>\n  )\n}\n\nexport default observer(AdminComponent)\n","import React, { useEffect } from 'react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { useQueryParam, StringParam } from 'use-query-params'\nimport { App, createJBrowseTheme } from '@jbrowse/core/ui'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport ShareButton from './ShareButton'\nimport AdminComponent from './AdminComponent'\n\nfunction deleteBaseUris(config) {\n  if (typeof config === 'object') {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object') {\n        deleteBaseUris(config[key])\n      } else if (key === 'uri') {\n        delete config.baseUri\n      }\n    }\n  }\n}\n\nconst JBrowse = observer(({ pluginManager }) => {\n  const [adminKey] = useQueryParam('adminKey', StringParam)\n  const [adminServer] = useQueryParam('adminServer', StringParam)\n  const [, setSessionId] = useQueryParam('session', StringParam)\n  const { rootModel } = pluginManager\n  const { error, jbrowse, session } = rootModel || {}\n  const { id: currentSessionId } = session\n\n  useEffect(() => {\n    setSessionId(`local-${currentSessionId}`)\n    window.JBrowseRootModel = rootModel\n    window.JBrowseSession = session\n  }, [currentSessionId, rootModel, session, setSessionId])\n\n  useEffect(() => {\n    onSnapshot(jbrowse, async snapshot => {\n      if (adminKey) {\n        const config = JSON.parse(JSON.stringify(snapshot))\n        deleteBaseUris(config)\n        const payload = { adminKey, config }\n\n        const response = await fetch(adminServer || `/updateConfig`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        if (!response.ok) {\n          const message = await response.text()\n          session.notify(\n            `Admin server error: ${response.status} (${response.statusText}) ${\n              message || ''\n            }`,\n          )\n        }\n      }\n    })\n  }, [jbrowse, session, adminKey, adminServer])\n\n  if (error) {\n    throw error\n  }\n\n  const theme = getConf(rootModel.jbrowse, 'theme')\n  return (\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <CssBaseline />\n      <App\n        session={session}\n        HeaderButtons={<ShareButton session={session} />}\n      />\n      {adminKey ? <AdminComponent pluginManager={pluginManager} /> : null}\n    </ThemeProvider>\n  )\n})\n\nexport default JBrowse\n","import jsonStableStringify from 'json-stable-stringify'\nimport { getParent, IAnyType, types, Instance } from 'mobx-state-tree'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { readConfObject } from '../configuration'\nimport {\n  BaseRefNameAliasAdapter,\n  RegionsAdapter,\n} from '../data_adapters/BaseAdapter'\nimport PluginManager from '../PluginManager'\nimport { Region } from '../util/types'\nimport { makeAbortableReaction, when } from '../util'\nimport QuickLRU from '../util/QuickLRU'\n\n// Based on the UCSC Genome Browser chromosome color palette:\n// https://github.com/ucscGenomeBrowser/kent/blob/a50ed53aff81d6fb3e34e6913ce18578292bc24e/src/hg/inc/chromColors.h\n// Some colors darkened to have at least a 3:1 contrast ratio on a white\n// background\nconst refNameColors = [\n  'rgb(153, 102, 0)',\n  'rgb(102, 102, 0)',\n  'rgb(153, 153, 30)',\n  'rgb(204, 0, 0)',\n  'rgb(255, 0, 0)',\n  'rgb(255, 0, 204)',\n  'rgb(165, 132, 132)', // originally 'rgb(255, 204, 204)'\n  'rgb(204, 122, 0)', // originally rgb(255, 153, 0)'\n  'rgb(178, 142, 0)', // originally 'rgb(255, 204, 0)'\n  'rgb(153, 153, 0)', // originally 'rgb(255, 255, 0)'\n  'rgb(122, 153, 0)', // originally 'rgb(204, 255, 0)'\n  'rgb(0, 165, 0)', // originally 'rgb(0, 255, 0)'\n  'rgb(53, 128, 0)',\n  'rgb(0, 0, 204)',\n  'rgb(96, 145, 242)', // originally 'rgb(102, 153, 255)'\n  'rgb(107, 142, 178)', // originally 'rgb(153, 204, 255)'\n  'rgb(0, 165, 165)', // originally 'rgb(0, 255, 255)'\n  'rgb(122, 153, 153)', // originally 'rgb(204, 255, 255)'\n  'rgb(153, 0, 204)',\n  'rgb(204, 51, 255)',\n  'rgb(173, 130, 216)', // originally 'rgb(204, 153, 255)'\n  'rgb(102, 102, 102)',\n  'rgb(145, 145, 145)', // originally 'rgb(153, 153, 153)'\n  'rgb(142, 142, 142)', // originally 'rgb(204, 204, 204)'\n  'rgb(142, 142, 107)', // originally 'rgb(204, 204, 153)'\n  'rgb(96, 163, 48)', // originally 'rgb(121, 204, 61)'\n]\n\nasync function loadRefNameMap(\n  assembly: Assembly,\n  adapterConf: unknown,\n  options: BaseOptions,\n  signal?: AbortSignal,\n) {\n  const { sessionId } = options\n  await when(() => Boolean(assembly.regions && assembly.refNameAliases), {\n    signal,\n    name: 'when assembly ready',\n  })\n\n  const refNames = await assembly.rpcManager.call(\n    sessionId,\n    'CoreGetRefNames',\n    {\n      adapterConfig: adapterConf,\n      signal,\n      ...options,\n    },\n    { timeout: 1000000 },\n  )\n  const refNameMap: Record<string, string> = {}\n  const { refNameAliases } = assembly\n  if (!refNameAliases) {\n    throw new Error(`error loading assembly ${assembly.name}'s refNameAliases`)\n  }\n\n  refNames.forEach((refName: string) => {\n    checkRefName(refName)\n    const canon = assembly.getCanonicalRefName(refName)\n    if (canon) {\n      refNameMap[canon] = refName\n    }\n  })\n\n  // make the reversed map too\n  const reversed: Record<string, string> = {}\n  for (const [canonicalName, adapterName] of Object.entries(refNameMap)) {\n    reversed[adapterName] = canonicalName\n  }\n\n  return {\n    forwardMap: refNameMap,\n    reverseMap: reversed,\n  }\n}\n\nfunction checkRefName(refName: string) {\n  // Valid refName pattern from https://samtools.github.io/hts-specs/SAMv1.pdf\n  if (\n    !refName.match(\n      /[0-9A-Za-z!#$%&+./:;?@^_|~-][0-9A-Za-z!#$%&*+./:;=?@^_|~-]*/,\n    )\n  ) {\n    throw new Error(`Encountered invalid refName: \"${refName}\"`)\n  }\n}\n\nfunction getAdapterId(adapterConf: unknown) {\n  return jsonStableStringify(adapterConf)\n}\n\ntype RefNameAliases = Record<string, string>\n\nexport interface BaseOptions {\n  signal?: AbortSignal\n  sessionId: string\n  statusCallback?: Function\n}\ninterface CacheData {\n  adapterConf: unknown\n  self: Assembly\n  sessionId: string\n  options: BaseOptions\n}\nexport default function assemblyFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const adapterLoads = new AbortablePromiseCache({\n    cache: new QuickLRU({ maxSize: 1000 }),\n    async fill(\n      args: CacheData,\n      abortSignal?: AbortSignal,\n      statusCallback?: Function,\n    ) {\n      const { adapterConf, self, options } = args\n      return loadRefNameMap(\n        self,\n        adapterConf,\n        { ...options, statusCallback },\n        abortSignal,\n      )\n    },\n  })\n\n  return types\n    .model({\n      configuration: types.safeReference(assemblyConfigType),\n    })\n    .volatile(() => ({\n      regions: undefined as\n        | {\n            start: number\n            end: number\n            refName: string\n            assemblyName: string\n          }[]\n        | undefined,\n      refNameAliases: undefined as { [key: string]: string } | undefined,\n    }))\n    .views(self => ({\n      get initialized() {\n        return Boolean(self.refNameAliases)\n      },\n      get name(): string {\n        return readConfObject(self.configuration, 'name')\n      },\n\n      get aliases(): string[] {\n        return readConfObject(self.configuration, 'aliases')\n      },\n\n      hasName(name: string) {\n        return this.name === name || this.aliases.includes(name)\n      },\n\n      get allAliases() {\n        return [this.name, ...this.aliases]\n      },\n      get refNames() {\n        return self.regions && self.regions.map(region => region.refName)\n      },\n      get allRefNames() {\n        if (!self.refNameAliases) {\n          return undefined\n        }\n        return Object.keys(self.refNameAliases)\n      },\n      get rpcManager() {\n        return getParent(self, 2).rpcManager\n      },\n      get refNameColors() {\n        const colors = readConfObject(\n          self.configuration,\n          'refNameColors',\n        ) as string[]\n        if (colors.length === 0) {\n          return refNameColors\n        }\n        return colors\n      },\n    }))\n    .views(self => ({\n      getCanonicalRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'aliases not loaded, we expect them to be loaded before getCanonicalRefName can be called',\n          )\n        }\n        return self.refNameAliases[refName]\n      },\n      getRefNameColor(refName: string) {\n        const idx = self.refNames?.findIndex(r => r === refName)\n        if (idx === undefined || idx === -1) {\n          return undefined\n        }\n        return self.refNameColors[idx % self.refNameColors.length]\n      },\n      isValidRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'isValidRefName cannot be called yet, the assembly has not finished loading',\n          )\n        }\n        return !!this.getCanonicalRefName(refName)\n      },\n    }))\n    .actions(self => ({\n      setLoading() {},\n      setLoaded({\n        adapterRegionsWithAssembly,\n        refNameAliases,\n      }: {\n        adapterRegionsWithAssembly: Region[]\n        refNameAliases: RefNameAliases\n      }) {\n        this.setRegions(adapterRegionsWithAssembly)\n        this.setRefNameAliases(refNameAliases)\n      },\n      setError(error: Error) {\n        if (!getParent(self, 3).isAssemblyEditing) {\n          getParent(self, 3).setError(error)\n        }\n      },\n      setRegions(regions: Region[]) {\n        self.regions = regions\n      },\n      setRefNameAliases(refNameAliases: RefNameAliases) {\n        self.refNameAliases = refNameAliases\n      },\n      afterAttach() {\n        makeAbortableReaction(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          self as any,\n          // @ts-ignore\n          makeLoadAssemblyData(pluginManager),\n          loadAssemblyReaction,\n          { name: `${self.name} assembly loading`, fireImmediately: true },\n          this.setLoading,\n          this.setLoaded,\n          this.setError,\n        )\n      },\n    }))\n    .views(self => ({\n      getAdapterMapEntry(adapterConf: unknown, options: BaseOptions) {\n        const { signal, statusCallback, ...rest } = options\n        if (!options.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const adapterId = getAdapterId(adapterConf)\n        return adapterLoads.get(\n          adapterId,\n          {\n            adapterConf,\n            self: self as Assembly,\n            options: rest,\n          } as CacheData,\n          signal,\n          statusCallback,\n        )\n      },\n\n      /**\n       * get Map of `canonical-name -> adapter-specific-name`\n       */\n      async getRefNameMapForAdapter(adapterConf: unknown, opts: BaseOptions) {\n        if (!opts || !opts.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.forwardMap\n      },\n\n      /**\n       * get Map of `adapter-specific-name -> canonical-name`\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        opts: BaseOptions,\n      ) {\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.reverseMap\n      },\n    }))\n}\nfunction makeLoadAssemblyData(pluginManager: PluginManager) {\n  return (self: Assembly) => {\n    if (self.configuration) {\n      // use full configuration instead of snapshot of the config, the\n      // rpcManager normally receives a snapshot but we bypass rpcManager here\n      // to avoid spinning up a webworker\n      const sequenceAdapterConfig = self.configuration.sequence.adapter\n      const refNameAliasesAdapterConfig =\n        self.configuration.refNameAliases?.adapter\n      return {\n        sequenceAdapterConfig,\n        assemblyName: self.name,\n        refNameAliasesAdapterConfig,\n        pluginManager,\n      }\n    }\n    return undefined\n  }\n}\nasync function loadAssemblyReaction(\n  props: ReturnType<ReturnType<typeof makeLoadAssemblyData>> | undefined,\n  signal: AbortSignal,\n) {\n  if (!props) {\n    return\n  }\n\n  const {\n    sequenceAdapterConfig,\n    assemblyName,\n    refNameAliasesAdapterConfig,\n    pluginManager,\n  } = props\n\n  const dataAdapterType = pluginManager.getAdapterType(\n    sequenceAdapterConfig.type,\n  )\n  const { AdapterClass, getAdapterClass } = dataAdapterType\n  const CLASS = AdapterClass || (await getAdapterClass?.())\n  if (!CLASS) {\n    throw new Error('Failed to get adapter class')\n  }\n  const adapter = new CLASS(sequenceAdapterConfig) as RegionsAdapter\n  const adapterRegions = (await adapter.getRegions({ signal })) as Region[]\n\n  const adapterRegionsWithAssembly = adapterRegions.map(adapterRegion => {\n    const { refName } = adapterRegion\n    checkRefName(refName)\n    return { ...adapterRegion, assemblyName }\n  })\n  const refNameAliases: RefNameAliases = {}\n  if (refNameAliasesAdapterConfig) {\n    const refAliasAdapterType = pluginManager.getAdapterType(\n      refNameAliasesAdapterConfig.type,\n    )\n    const {\n      AdapterClass: RefAdapterClass,\n      getAdapterClass: getRefAdapterClass,\n    } = refAliasAdapterType\n    const REFCLASS = RefAdapterClass || (await getRefAdapterClass?.())\n    if (!REFCLASS) {\n      throw new Error('Failed to get REFCLASS')\n    }\n    const refNameAliasAdapter = new REFCLASS(\n      refNameAliasesAdapterConfig,\n    ) as BaseRefNameAliasAdapter\n    const refNameAliasesList = (await refNameAliasAdapter.getRefNameAliases({\n      signal,\n    })) as {\n      refName: string\n      aliases: string[]\n    }[]\n\n    refNameAliasesList.forEach(({ refName, aliases }) => {\n      aliases.forEach(alias => {\n        checkRefName(alias)\n        refNameAliases[alias] = refName\n      })\n    })\n  }\n\n  // add identity to the refNameAliases list\n  adapterRegionsWithAssembly.forEach(region => {\n    refNameAliases[region.refName] = region.refName\n  })\n  return { adapterRegionsWithAssembly, refNameAliases }\n}\nexport type Assembly = Instance<ReturnType<typeof assemblyFactory>>\n","import { reaction } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  IAnyType,\n  Instance,\n  types,\n} from 'mobx-state-tree'\nimport { when } from '../util'\nimport { readConfObject } from '../configuration'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nimport assemblyFactory from './assembly'\nimport PluginManager from '../PluginManager'\n\nexport default function assemblyManagerFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const Assembly = assemblyFactory(assemblyConfigType, pluginManager)\n  return types\n    .model({\n      assemblies: types.array(Assembly),\n    })\n    .views(self => ({\n      get(assemblyName: string) {\n        return self.assemblies.find(assembly => assembly.hasName(assemblyName))\n      },\n\n      get assemblyList() {\n        // name is the explicit identifier and can be accessed without getConf,\n        // hence the union with {name:string}\n        const {\n          jbrowse: { assemblies },\n          session: { sessionAssemblies = [] },\n        } = getParent(self)\n        return [\n          ...assemblies,\n          ...sessionAssemblies,\n        ] as (AnyConfigurationModel & { name: string })[]\n      },\n\n      get rpcManager() {\n        return getParent(self).rpcManager\n      },\n      get pluginManager() {\n        return getParent(self).pluginManager\n      },\n      get allPossibleRefNames() {\n        let refNames: string[] = []\n        for (const assembly of self.assemblies) {\n          if (!assembly.allRefNames) {\n            return undefined\n          }\n          refNames = refNames.concat(assembly.allRefNames)\n        }\n        return refNames\n      },\n    }))\n    .views(self => ({\n      // use this method instead of assemblyManager.get(assemblyName)\n      // get an assembly with regions loaded\n      async waitForAssembly(assemblyName: string) {\n        if (!assemblyName) {\n          throw new Error('no assembly name supplied to waitForAssembly')\n        }\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          await when(() => Boolean(assembly.regions && assembly.refNameAliases))\n          return assembly\n        }\n        return undefined\n      },\n\n      async getRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        await when(() => Boolean(self.get(assemblyName)), {\n          signal: opts.signal,\n          name: 'when assembly ready',\n        })\n\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          return assembly.getRefNameMapForAdapter(adapterConf, opts)\n        }\n        return undefined\n      },\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        await when(() => Boolean(self.get(assemblyName)), {\n          signal: opts.signal,\n          name: 'when assembly ready',\n        })\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          return assembly.getReverseRefNameMapForAdapter(adapterConf, opts)\n        }\n        return undefined\n      },\n      isValidRefName(refName: string, assemblyName?: string) {\n        if (assemblyName) {\n          const assembly = self.get(assemblyName)\n          if (assembly) {\n            return assembly.isValidRefName(refName)\n          }\n          throw new Error(\n            `isValidRefName for ${assemblyName} failed, assembly does not exist`,\n          )\n        }\n        if (!self.allPossibleRefNames) {\n          throw new Error(\n            `isValidRefName not available, assemblyManager has not yet finished loading. If you are looking for a refname in a specific assembly, pass assembly argument`,\n          )\n        }\n        return self.allPossibleRefNames.includes(refName)\n      },\n    }))\n    .actions(self => ({\n      removeAssembly(asm: Instance<typeof Assembly>) {\n        self.assemblies.remove(asm)\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          reaction(\n            // have to slice it to be properly reacted to\n            () => self.assemblyList,\n            assemblyConfigs => {\n              self.assemblies.forEach(asm => {\n                if (!asm.configuration) {\n                  this.removeAssembly(asm)\n                }\n              })\n              assemblyConfigs.forEach(assemblyConfig => {\n                const existingAssemblyIdx = self.assemblies.findIndex(\n                  assembly =>\n                    assembly.name === readConfObject(assemblyConfig, 'name'),\n                )\n                if (existingAssemblyIdx === -1) {\n                  this.addAssembly(assemblyConfig)\n                }\n              })\n            },\n            { fireImmediately: true, name: 'assemblyManagerAfterAttach' },\n          ),\n        )\n      },\n\n      // this can take an active instance of an assembly, in which case it is\n      // referred to, or it can take an identifier e.g. assembly name, which is\n      // used as a reference. snapshots cannot be used\n      addAssembly(\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies.push({ configuration: assemblyConfig })\n      },\n\n      replaceAssembly(\n        idx: number,\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies[idx] = cast({\n          configuration: assemblyConfig,\n        })\n      },\n    }))\n}\n","import { SnapshotIn } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../configuration'\nimport PluginManager from '../PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  const BaseAssemblyConfigSchema = ConfigurationSchema(\n    'BaseAssembly',\n    {\n      aliases: {\n        type: 'stringArray',\n        defaultValue: [],\n        description: 'Other possible names for the assembly',\n      },\n      sequence: pluginManager.getTrackType('ReferenceSequenceTrack')\n        .configSchema,\n      refNameColors: {\n        type: 'stringArray',\n        defaultValue: [],\n        description:\n          'Define custom colors for each reference sequence. Will cycle through this list if there are not enough colors for every sequence.',\n      },\n    },\n    { explicitIdentifier: 'name' },\n  )\n\n  const AssemblyConfigSchema = ConfigurationSchema(\n    'Assembly',\n    {\n      refNameAliases: ConfigurationSchema('RefNameAliases', {\n        adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n      }),\n    },\n    { baseConfiguration: BaseAssemblyConfigSchema },\n  )\n\n  function dispatcher(\n    snapshot:\n      | SnapshotIn<typeof BaseAssemblyConfigSchema>\n      | SnapshotIn<typeof AssemblyConfigSchema>,\n  ) {\n    if (!snapshot) {\n      return BaseAssemblyConfigSchema\n    }\n    const { refNameAliases } = snapshot\n    if (refNameAliases) {\n      return AssemblyConfigSchema\n    }\n    return BaseAssemblyConfigSchema\n  }\n\n  return {\n    assemblyConfigSchemas: [AssemblyConfigSchema, BaseAssemblyConfigSchema],\n    dispatcher,\n  }\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../configuration'\n\nconst MainThreadRpcDriverConfigSchema = ConfigurationSchema(\n  'MainThreadRpcDriver',\n  {},\n  { explicitlyTyped: true },\n)\nconst WebWorkerRpcDriverConfigSchema = ConfigurationSchema(\n  'WebWorkerRpcDriver',\n  {},\n  { explicitlyTyped: true },\n)\nconst ElectronRpcDriverConfigSchema = ConfigurationSchema(\n  'ElectronRpcDriver',\n  {},\n  { explicitlyTyped: true },\n)\n\nexport default ConfigurationSchema(\n  'RpcOptions',\n  {\n    defaultDriver: {\n      type: 'string',\n      description:\n        'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',\n      defaultValue: 'MainThreadRpcDriver',\n    },\n    drivers: types.optional(\n      types.map(\n        types.union(\n          MainThreadRpcDriverConfigSchema,\n          WebWorkerRpcDriverConfigSchema,\n          ElectronRpcDriverConfigSchema,\n        ),\n      ),\n      { MainThreadRpcDriver: { type: 'MainThreadRpcDriver' } },\n    ),\n  },\n  {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    actions: (self: any) => ({\n      addDriverConfig(configName: string, configSnapshot: { type: string }) {\n        self.drivers.set(configName, configSnapshot)\n      },\n    }),\n  },\n)\n","import { isAlive, isStateTreeNode } from 'mobx-state-tree'\nimport { objectFromEntries } from '../util'\nimport { serializeAbortSignal } from './remoteAbortSignals'\nimport PluginManager from '../PluginManager'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nexport interface WorkerHandle {\n  status?: string\n  error?: Error\n  on?: (channel: string, callback: (message: string) => void) => void\n  off?: (channel: string, callback: (message: string) => void) => void\n  destroy(): void\n  call(\n    functionName: string,\n    args?: unknown,\n    options?: {\n      statusCallback?(message: string): void\n      timeout?: number\n      rpcDriverClassName: string\n    },\n  ): Promise<unknown>\n}\n\nexport interface RpcDriverConstructorArgs {\n  config: AnyConfigurationModel\n}\n\nfunction isClonable(thing: unknown): boolean {\n  if (typeof thing === 'function') {\n    return false\n  }\n  if (thing instanceof Error) {\n    return false\n  }\n  return true\n}\n\n// watches the given worker object, returns a promise that will be rejected if\n// the worker times out\nexport async function watchWorker(\n  worker: WorkerHandle,\n  pingTime: number,\n  rpcDriverClassName: string,\n) {\n  // first ping call has no timeout, wait for worker download\n  await worker.call('ping', [], { timeout: 100000000, rpcDriverClassName })\n\n  // after first ping succeeds, apply wait for timeout\n  return new Promise((_resolve, reject) => {\n    function delay() {\n      setTimeout(async () => {\n        try {\n          await worker.call('ping', [], {\n            timeout: pingTime * 2,\n            rpcDriverClassName,\n          })\n          delay()\n        } catch (e) {\n          reject(e)\n        }\n      }, pingTime)\n    }\n    delay()\n  })\n}\n\nfunction detectHardwareConcurrency() {\n  const mainThread = typeof window !== 'undefined'\n  const canDetect = mainThread && 'hardwareConcurrency' in window.navigator\n  if (mainThread && canDetect) {\n    return window.navigator.hardwareConcurrency\n  }\n  return 1\n}\nclass LazyWorker {\n  worker?: WorkerHandle\n\n  driver: BaseRpcDriver\n\n  constructor(driver: BaseRpcDriver) {\n    this.driver = driver\n  }\n\n  getWorker(pluginManager: PluginManager, rpcDriverClassName: string) {\n    if (!this.worker) {\n      const worker = this.driver.makeWorker(pluginManager)\n      watchWorker(worker, this.driver.maxPingTime, rpcDriverClassName).catch(\n        error => {\n          if (this.worker) {\n            console.warn(\n              `worker did not respond, killing and generating new one ${error}`,\n            )\n            this.worker.destroy()\n            this.worker.status = 'killed'\n            this.worker.error = error\n            this.worker = undefined\n          }\n        },\n      )\n      this.worker = worker\n    }\n    return this.worker\n  }\n}\n\nexport default abstract class BaseRpcDriver {\n  abstract name: string\n\n  private lastWorkerAssignment = -1\n\n  private workerAssignments = new Map<string, number>() // sessionId -> worker number\n\n  private workerCount = 0\n\n  abstract makeWorker(pluginManager: PluginManager): WorkerHandle\n\n  private workerPool?: LazyWorker[]\n\n  maxPingTime = 30000\n\n  workerCheckFrequency = 5000\n\n  config: AnyConfigurationModel\n\n  constructor(args: RpcDriverConstructorArgs) {\n    this.config = args.config\n  }\n\n  // filter the given object and just remove any non-clonable things from it\n  filterArgs<THING_TYPE>(\n    thing: THING_TYPE,\n    pluginManager: PluginManager,\n    sessionId: string,\n  ): THING_TYPE {\n    if (Array.isArray(thing)) {\n      return (thing\n        .filter(isClonable)\n        .map(t =>\n          this.filterArgs(t, pluginManager, sessionId),\n        ) as unknown) as THING_TYPE\n    }\n    if (typeof thing === 'object' && thing !== null) {\n      // AbortSignals are specially handled\n      if (thing instanceof AbortSignal) {\n        return (serializeAbortSignal(\n          thing,\n          this.remoteAbort.bind(this, pluginManager, sessionId),\n        ) as unknown) as THING_TYPE\n      }\n\n      if (isStateTreeNode(thing) && !isAlive(thing)) {\n        throw new Error('dead state tree node passed to RPC call')\n      }\n\n      // special case, don't try to iterate the file's subelements as the\n      // object entries below would\n      if (thing instanceof File) {\n        return thing\n      }\n\n      return objectFromEntries(\n        Object.entries(thing)\n          .filter(e => isClonable(e[1]))\n          .map(([k, v]) => [k, this.filterArgs(v, pluginManager, sessionId)]),\n      ) as THING_TYPE\n    }\n    return thing\n  }\n\n  remoteAbort(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    signalId: number,\n  ) {\n    const worker = this.getWorker(sessionId, pluginManager)\n    worker.call(\n      functionName,\n      { signalId },\n      { timeout: 1000000, rpcDriverClassName: this.name },\n    )\n  }\n\n  createWorkerPool(): LazyWorker[] {\n    const hardwareConcurrency = detectHardwareConcurrency()\n\n    const workerCount =\n      this.workerCount || Math.max(1, Math.ceil((hardwareConcurrency - 2) / 3))\n\n    return [...new Array(workerCount)].map(() => new LazyWorker(this))\n  }\n\n  getWorkerPool() {\n    if (!this.workerPool) {\n      const res = this.createWorkerPool()\n      this.workerPool = res\n      return res // making this several steps makes TS happy\n    }\n    return this.workerPool\n  }\n\n  getWorker(sessionId: string, pluginManager: PluginManager): WorkerHandle {\n    const workers = this.getWorkerPool()\n    let workerNumber = this.workerAssignments.get(sessionId)\n    if (workerNumber === undefined) {\n      const workerAssignment = (this.lastWorkerAssignment + 1) % workers.length\n      this.workerAssignments.set(sessionId, workerAssignment)\n      this.lastWorkerAssignment = workerAssignment\n      workerNumber = workerAssignment\n    }\n\n    // console.log(`${sessionId} -> worker ${workerNumber}`)\n    const worker = workers[workerNumber].getWorker(pluginManager, this.name)\n    if (!worker) {\n      throw new Error('no web workers registered for RPC')\n    }\n    return worker\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: { statusCallback?: (message: string) => void },\n    options = {},\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const worker = this.getWorker(sessionId, pluginManager)\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const filteredAndSerializedArgs = this.filterArgs(\n      serializedArgs,\n      pluginManager,\n      sessionId,\n    )\n\n    // now actually call the worker\n    const callP = worker.call(functionName, filteredAndSerializedArgs, {\n      timeout: 5 * 60 * 1000, // 5 minutes\n      statusCallback: args.statusCallback,\n      rpcDriverClassName: this.name,\n      ...options,\n    })\n\n    // check every 5 seconds to see if the worker has been killed, and\n    // reject the killedP promise if it has\n    let killedCheckInterval: ReturnType<typeof setInterval>\n    const killedP = new Promise((_resolve, reject) => {\n      killedCheckInterval = setInterval(() => {\n        // must've been killed\n        if (worker.status === 'killed') {\n          reject(\n            new Error(\n              `operation timed out, worker process stopped responding, ${worker.error}`,\n            ),\n          )\n        }\n      }, this.workerCheckFrequency)\n    }).finally(() => {\n      clearInterval(killedCheckInterval)\n    })\n\n    // the result is a race between the actual result promise, and the \"killed\"\n    // promise. the killed promise will only actually win if the worker was\n    // killed before the call could return\n    const resultP = Promise.race([callP, killedP])\n\n    return rpcMethod.deserializeReturn(await resultP, args, this.name)\n  }\n}\n","import Rpc from '@librpc/web'\nimport shortid from 'shortid'\nimport BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport { PluginDefinition } from '../PluginLoader'\n\ninterface WebpackWorker {\n  new (): Worker\n  prototype: Worker\n}\n\ninterface WebWorkerRpcDriverConstructorArgs extends RpcDriverConstructorArgs {\n  WorkerClass: WebpackWorker\n}\n\nclass WebWorkerHandle extends Rpc.Client {\n  destroy(): void {\n    this.workers[0].terminate()\n  }\n\n  async call(\n    functionName: string,\n    args: Record<string, unknown>,\n    opts: {\n      statusCallback?: (arg0: string) => void\n      rpcDriverClassName: string\n    },\n  ) {\n    const { statusCallback, rpcDriverClassName } = opts\n    const channel = `message-${shortid.generate()}`\n    const listener = (message: string) => {\n      if (statusCallback) {\n        statusCallback(message)\n      }\n    }\n    this.on(channel, listener)\n    const result = await super.call(\n      functionName,\n      { ...args, channel, rpcDriverClassName },\n      opts,\n    )\n    this.off(channel, listener)\n    return result\n  }\n}\n\nexport default class WebWorkerRpcDriver extends BaseRpcDriver {\n  name = 'WebWorkerRpcDriver'\n\n  WorkerClass: WebpackWorker\n\n  workerBootConfiguration: { plugins: PluginDefinition[] }\n\n  constructor(\n    args: WebWorkerRpcDriverConstructorArgs,\n    workerBootConfiguration: { plugins: PluginDefinition[] },\n  ) {\n    super(args)\n    this.WorkerClass = args.WorkerClass\n    this.workerBootConfiguration = workerBootConfiguration\n  }\n\n  makeWorker() {\n    // note that we are making a Rpc.Client connection with a worker pool of one for each worker,\n    // because we want to do our own state-group-aware load balancing rather than using librpc's\n    // builtin round-robin\n    const worker = new WebWorkerHandle({ workers: [new this.WorkerClass()] })\n    // send the worker its boot configuration using info from the pluginManager\n    worker.workers[0].postMessage(this.workerBootConfiguration)\n    return worker\n  }\n}\n","import BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport PluginManager from '../PluginManager'\n\nclass DummyHandle {\n  destroy(): void {}\n\n  async call(\n    _functionName: string,\n    _filteredArgs?: {},\n    _options = {},\n  ): Promise<unknown> {\n    return undefined\n  }\n}\n\n/**\n * Stub RPC driver class that runs RPC functions in-band in the main thread.\n *\n * @param rpcFuncs - object containing runnable rpc functions\n */\nexport default class MainThreadRpcDriver extends BaseRpcDriver {\n  name = 'MainThreadRpcDriver'\n\n  makeWorker: () => DummyHandle\n\n  constructor(args: RpcDriverConstructorArgs) {\n    super(args)\n    this.makeWorker = (): DummyHandle => new DummyHandle()\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: {},\n  ): Promise<unknown> {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const result = await rpcMethod.execute(serializedArgs, this.name)\n    return rpcMethod.deserializeReturn(result, args, this.name)\n  }\n}\n","import PluginManager from '../PluginManager'\nimport { readConfObject } from '../configuration'\n\nimport rpcConfigSchema from './configSchema'\nimport WebWorkerRpcDriver from './WebWorkerRpcDriver'\nimport MainThreadRpcDriver from './MainThreadRpcDriver'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\ntype DriverClass = WebWorkerRpcDriver | MainThreadRpcDriver\ntype BackendConfigurations = {\n  WebWorkerRpcDriver?: Omit<\n    ConstructorParameters<typeof WebWorkerRpcDriver>[0],\n    'config'\n  >\n  MainThreadRpcDriver?: Omit<\n    ConstructorParameters<typeof MainThreadRpcDriver>[0],\n    'config'\n  >\n}\nconst DriverClasses = {\n  WebWorkerRpcDriver,\n  MainThreadRpcDriver,\n}\n\nexport default class RpcManager {\n  static configSchema = rpcConfigSchema\n\n  driverObjects: Map<string, DriverClass>\n\n  pluginManager: PluginManager\n\n  mainConfiguration: AnyConfigurationModel\n\n  backendConfigurations: BackendConfigurations\n\n  constructor(\n    pluginManager: PluginManager,\n    mainConfiguration: AnyConfigurationModel,\n    backendConfigurations: BackendConfigurations,\n  ) {\n    if (!mainConfiguration) {\n      throw new Error('RpcManager requires at least a main configuration')\n    }\n    this.pluginManager = pluginManager\n    this.mainConfiguration = mainConfiguration\n    this.backendConfigurations = backendConfigurations\n    this.driverObjects = new Map()\n  }\n\n  getDriver(backendName: keyof typeof DriverClasses): DriverClass {\n    const driver = this.driverObjects.get(backendName)\n    if (driver) {\n      return driver\n    }\n\n    const backendConfiguration = this.backendConfigurations[backendName]\n    const DriverClassImpl = DriverClasses[backendName]\n\n    if (!DriverClassImpl) {\n      throw new Error(`requested RPC driver \"${backendName}\" is not installed`)\n    } else if (!backendConfiguration) {\n      throw new Error(`requested RPC driver \"${backendName}\" is missing config`)\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const newDriver = new DriverClassImpl(backendConfiguration as any, {\n      plugins: this.pluginManager.runtimePluginDefinitions,\n    })\n    this.driverObjects.set(backendName, newDriver)\n    return newDriver\n  }\n\n  getDriverForCall(\n    _sessionId: string,\n    _functionName: string,\n    args: { rpcDriverName?: string },\n  ) {\n    const backendName =\n      args.rpcDriverName ||\n      readConfObject(this.mainConfiguration, 'defaultDriver')\n\n    return this.getDriver(backendName)\n  }\n\n  async call(sessionId: string, functionName: string, args: {}, opts = {}) {\n    // console.log(sessionId, functionName)\n    if (!sessionId) {\n      throw new Error('sessionId is required')\n    }\n    return this.getDriverForCall(sessionId, functionName, args).call(\n      this.pluginManager,\n      sessionId,\n      functionName,\n      args,\n      opts,\n    )\n  }\n}\n","/*  text-searching controller */\nimport BaseResult from './BaseResults'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nimport PluginManager from '../PluginManager'\nimport QuickLRU from '../util/QuickLRU'\nimport { SearchType, BaseTextSearchAdapter } from '../data_adapters/BaseAdapter'\nimport { readConfObject } from '../configuration'\n\nexport interface BaseArgs {\n  searchType: SearchType\n  queryString: string\n  signal?: AbortSignal\n  limit?: number\n  pageNumber?: number\n}\n\nexport interface SearchScope {\n  includeAggregateIndexes: boolean\n  assemblyName: string\n  tracks?: Array<string>\n}\n\nexport default (pluginManager: PluginManager) => {\n  return class TextSearchManager {\n    adapterCache: QuickLRU\n\n    textSearchAdapters: BaseTextSearchAdapter[]\n\n    constructor() {\n      this.textSearchAdapters = []\n      this.adapterCache = new QuickLRU({\n        maxSize: 15,\n      })\n    }\n\n    /**\n     * Instantiate/initialize list of relevant adapters\n     */\n    loadTextSearchAdapters(searchScope: SearchScope) {\n      const adaptersToUse: BaseTextSearchAdapter[] = []\n      // initialize relevant adapters\n      this.relevantAdapters(searchScope).forEach(\n        (adapterConfig: AnyConfigurationModel) => {\n          const adapterId = readConfObject(adapterConfig, 'textSearchAdapterId')\n          if (this.adapterCache.has(adapterId)) {\n            const adapterFromCache = this.adapterCache.get(adapterId)\n            adaptersToUse.push(adapterFromCache)\n          } else {\n            const textSearchAdapterType = pluginManager.getTextSearchAdapterType(\n              adapterConfig.type,\n            )\n            const textSearchAdapter = new textSearchAdapterType.AdapterClass(\n              adapterConfig,\n            ) as BaseTextSearchAdapter\n            this.adapterCache.set(adapterId, textSearchAdapter)\n            adaptersToUse.push(textSearchAdapter)\n          }\n        },\n      )\n      return adaptersToUse\n    }\n\n    /**\n     * Returns list of relevant text search adapters to use\n     * @param args - search options/arguments include: search query\n     */\n    relevantAdapters(searchScope: SearchScope) {\n      // Note: (in the future we can add a condition to check if not aggregate\n      // only return track text search adapters that cover relevant tracks,\n      // for now only returning text search adapters that cover configured assemblies)\n      // root level adapters and track adapters\n      const { aggregateTextSearchAdapters, tracks } = pluginManager.rootModel // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ?.jbrowse as any\n      let trackTextSearchAdapters: AnyConfigurationModel[] = []\n      tracks.forEach((trackConfig: AnyConfigurationModel) => {\n        const trackTextSearchAdapter = trackConfig.textSearchAdapter\n        if (trackTextSearchAdapter.textSearchAdapterId !== 'placeholderId') {\n          trackTextSearchAdapters.push(trackTextSearchAdapter)\n        }\n      })\n      // get adapters that cover assemblies\n      const rootTextSearchAdapters = this.getAdaptersWithAssembly(\n        searchScope.assemblyName,\n        aggregateTextSearchAdapters,\n      )\n      trackTextSearchAdapters = this.getAdaptersWithAssembly(\n        searchScope.assemblyName,\n        trackTextSearchAdapters,\n      )\n      return rootTextSearchAdapters.concat(trackTextSearchAdapters)\n    }\n\n    getAdaptersWithAssembly(\n      searchScopeAssemblyName: string,\n      adapterList: AnyConfigurationModel[],\n    ) {\n      const adaptersWithAssemblies = adapterList.filter(\n        (adapterConfig: AnyConfigurationModel) => {\n          const adapterAssemblies = readConfObject(adapterConfig, 'assemblies')\n          return adapterAssemblies?.includes(searchScopeAssemblyName)\n        },\n      )\n      return adaptersWithAssemblies\n    }\n\n    /**\n     * Returns list of relevant results given a search query and options\n     * @param args - search options/arguments include: search query\n     * limit of results to return, searchType...prefix | full | exact\", etc.\n     */\n    async search(\n      args: BaseArgs,\n      searchScope: SearchScope,\n      rankSearchResults: (results: BaseResult[]) => BaseResult[],\n    ) {\n      // determine list of relevant adapters based on scope\n      this.textSearchAdapters = this.loadTextSearchAdapters(searchScope)\n      const results: Array<BaseResult[]> = await Promise.all(\n        this.textSearchAdapters.map(async adapter => {\n          // search with given search args\n          const currentResults: BaseResult[] = await adapter.searchIndex(args)\n          return currentResults\n        }),\n      )\n\n      // aggregate and return relevant results\n      const relevantResults = this.sortResults(\n        results.flat(),\n        rankSearchResults,\n      )\n\n      if (args.limit && relevantResults.length > 0) {\n        return relevantResults.slice(0, args.limit)\n      }\n      return relevantResults\n    }\n\n    /**\n     * Returns array of revelevant and sorted results\n     * @param results - array of results from all text search adapters\n     * @param rankSearchResults - function that updates results scores\n     * based on more relevance\n     */\n    sortResults(\n      results: BaseResult[],\n      rankSearchResults: (results: BaseResult[]) => BaseResult[],\n    ) {\n      // first sort results in alphabetical order\n      const sortedResults = results.sort(\n        (a, b) => -b.getLabel().localeCompare(a.getLabel()),\n      )\n      // sort results based on score\n      const sortedScoredResults = rankSearchResults(sortedResults).sort(\n        function (result1: BaseResult, result2: BaseResult) {\n          if (result1.getScore() < result2.getScore()) {\n            return 1\n          }\n          if (result1.getScore() > result2.getScore()) {\n            return -1\n          }\n          return 0\n        },\n      )\n      return sortedScoredResults\n    }\n  }\n}\n","import {\n  ConfigurationSchema,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport {\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n} from 'mobx-state-tree'\nimport { toJS } from 'mobx'\n\n// poke some things for testing (this stuff will eventually be removed)\nwindow.getSnapshot = getSnapshot\nwindow.resolveIdentifier = resolveIdentifier\n\nexport default function JBrowseWeb(\n  pluginManager,\n  Session,\n  assemblyConfigSchemasType,\n) {\n  const JBrowseModel = types\n    .model('JBrowseWeb', {\n      configuration: ConfigurationSchema('Root', {\n        rpc: RpcManager.configSchema,\n        // possibly consider this for global config editor\n        highResolutionScaling: {\n          type: 'number',\n          defaultValue: 2,\n        },\n        shareURL: {\n          type: 'string',\n          defaultValue: 'https://share.jbrowse.org/api/v1/',\n        },\n        featureDetails: ConfigurationSchema('FeatureDetails', {\n          sequenceTypes: {\n            type: 'stringArray',\n            defaultValue: ['mRNA', 'transcript'],\n          },\n        }),\n        disableAnalytics: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n        theme: { type: 'frozen', defaultValue: {} },\n        logoPath: {\n          type: 'fileLocation',\n          defaultValue: { uri: '' },\n        },\n        ...pluginManager.pluginConfigurationSchemas(),\n      }),\n      plugins: types.array(types.frozen()),\n      assemblies: types.array(assemblyConfigSchemasType),\n      // track configuration is an array of track config schemas. multiple\n      // instances of a track can exist that use the same configuration\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n      aggregateTextSearchAdapters: types.array(\n        pluginManager.pluggableConfigSchemaType('text search adapter'),\n      ),\n      connections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      defaultSession: types.optional(types.frozen(Session), {\n        name: `New session`,\n      }),\n    })\n    .actions(self => ({\n      afterCreate() {\n        const seen = []\n        self.assemblyNames.forEach(assemblyName => {\n          if (!assemblyName) {\n            throw new Error('Encountered an assembly with no \"name\" defined')\n          }\n          if (seen.includes(assemblyName)) {\n            throw new Error(\n              `Found two assemblies with the same name: ${assemblyName}`,\n            )\n          } else {\n            seen.push(assemblyName)\n          }\n        })\n      },\n      addAssemblyConf(assemblyConf) {\n        const { name } = assemblyConf\n        if (!name) {\n          throw new Error('Can\\'t add assembly with no \"name\"')\n        }\n        const assembly = self.assemblies.find(asm => asm.name === name)\n        if (assembly) {\n          return assembly\n        }\n        const length = self.assemblies.push({\n          ...assemblyConf,\n          sequence: {\n            type: 'ReferenceSequenceTrack',\n            trackId: `${name}-${Date.now()}`,\n            ...(assemblyConf.sequence || {}),\n          },\n        })\n        return self.assemblies[length - 1]\n      },\n      removeAssemblyConf(assemblyName) {\n        const toRemove = self.assemblies.find(\n          assembly => assembly.name === assemblyName,\n        )\n        if (toRemove) {\n          self.assemblies.remove(toRemove)\n        }\n      },\n      addTrackConf(trackConf) {\n        const { type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackConf.trackId)\n        if (track) {\n          return track\n        }\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      addDisplayConf(trackId, displayConf) {\n        const { type } = displayConf\n        if (!type) {\n          throw new Error(`unknown display type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackId)\n        if (!track) {\n          throw new Error(`could not find track with id ${trackId}`)\n        }\n        return track.addDisplayConf(displayConf)\n      },\n      addConnectionConf(connectionConf) {\n        const { type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connections.push(connectionConf)\n        return self.connections[length - 1]\n      },\n\n      deleteConnectionConf(configuration) {\n        const idx = self.connections.findIndex(\n          conn => conn.id === configuration.id,\n        )\n        if (idx === -1) {\n          return undefined\n        }\n        return self.connections.splice(idx, 1)\n      },\n\n      deleteTrackConf(trackConf) {\n        const { trackId } = trackConf\n        const idx = self.tracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n\n        return self.tracks.splice(idx, 1)\n      },\n      setDefaultSessionConf(sessionConf) {\n        let newDefault\n        if (getParent(self).session.name === sessionConf.name) {\n          newDefault = getSnapshot(sessionConf)\n        } else {\n          newDefault = toJS(sessionConf)\n        }\n        const { name } = newDefault\n        if (!name) {\n          throw new Error(`unable to set default session to ${name}`)\n        }\n        self.defaultSession = newDefault\n      },\n      addPlugin(plugin) {\n        self.plugins = [...self.plugins, plugin]\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      removePlugin(pluginUrl) {\n        self.plugins = self.plugins.filter(plugin => plugin.url !== pluginUrl)\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n    }))\n    .views(self => ({\n      get assemblyNames() {\n        return self.assemblies.map(assembly => readConfObject(assembly, 'name'))\n      },\n      get rpcManager() {\n        return getParent(self).rpcManager\n      },\n    }))\n\n  return types.snapshotProcessor(JBrowseModel, {\n    postProcessor(snapshot) {\n      function removeAttr(obj, attr) {\n        for (const prop in obj) {\n          if (prop === attr) {\n            delete obj[prop]\n          } else if (typeof obj[prop] === 'object') {\n            removeAttr(obj[prop])\n          }\n        }\n      }\n      removeAttr(snapshot, 'baseUri')\n      return snapshot\n    },\n  })\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { lazy } from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport {\n  readConfObject,\n  getConf,\n  isConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport {\n  Region,\n  NotificationLevel,\n  AbstractSessionModel,\n  TrackViewModel,\n  JBrowsePlugin,\n  DialogComponentType,\n} from '@jbrowse/core/util/types'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observable } from 'mobx'\nimport {\n  getMembers,\n  getParent,\n  getRoot,\n  getSnapshot,\n  getType,\n  IAnyStateTreeNode,\n  isAlive,\n  isModelType,\n  isReferenceType,\n  SnapshotIn,\n  types,\n  walk,\n  Instance,\n} from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CopyIcon from '@material-ui/icons/FileCopy'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport shortid from 'shortid'\n\nconst AboutDialog = lazy(() => import('@jbrowse/core/ui/AboutDialog'))\n\ndeclare interface ReferringNode {\n  node: IAnyStateTreeNode\n  key: string\n}\n\nexport default function sessionModelFactory(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType = types.frozen(), // if not using sessionAssemblies\n) {\n  const minDrawerWidth = 128\n  const sessionModel = types\n    .model('JBrowseWebSessionModel', {\n      id: types.optional(types.identifier, shortid()),\n      name: types.string,\n      margin: 0,\n      drawerWidth: types.optional(\n        types.refinement(types.integer, width => width >= minDrawerWidth),\n        384,\n      ),\n      views: types.array(pluginManager.pluggableMstType('view', 'stateModel')),\n      widgets: types.map(\n        pluginManager.pluggableMstType('widget', 'stateModel'),\n      ),\n      activeWidgets: types.map(\n        types.safeReference(\n          pluginManager.pluggableMstType('widget', 'stateModel'),\n        ),\n      ),\n      connectionInstances: types.array(\n        pluginManager.pluggableMstType('connection', 'stateModel'),\n      ),\n      sessionTracks: types.array(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n      sessionConnections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      sessionAssemblies: types.array(assemblyConfigSchemasType),\n      sessionPlugins: types.array(types.frozen()),\n      minimized: types.optional(types.boolean, false),\n    })\n    .volatile((/* self */) => ({\n      /**\n       * this is the globally \"selected\" object. can be anything.\n       * code that wants to deal with this should examine it to see what\n       * kind of thing it is.\n       */\n      selection: undefined,\n      /**\n       * this is the current \"task\" that is being performed in the UI.\n       * this is usually an object of the form\n       * `{ taskName: \"configure\", target: thing_being_configured }`\n       */\n      task: undefined,\n\n      DialogComponent: undefined as DialogComponentType | undefined,\n      DialogProps: undefined as any,\n    }))\n    .views(self => ({\n      get shareURL() {\n        return getConf(getParent(self).jbrowse, 'shareURL')\n      },\n      get rpcManager() {\n        return getParent(self).jbrowse.rpcManager as RpcManager\n      },\n      get configuration() {\n        return getParent(self).jbrowse.configuration\n      },\n      get assemblies() {\n        return getParent(self).jbrowse.assemblies\n      },\n      get assemblyNames() {\n        return getParent(self).jbrowse.assemblyNames\n      },\n      get tracks() {\n        return [...self.sessionTracks, ...getParent(self).jbrowse.tracks]\n      },\n      get connections() {\n        return [\n          ...self.sessionConnections,\n          ...getParent(self).jbrowse.connections,\n        ]\n      },\n      get adminMode() {\n        return getParent(self).adminMode\n      },\n      get savedSessions() {\n        return getParent(self).savedSessions\n      },\n      get previousAutosaveId() {\n        return getParent(self).previousAutosaveId\n      },\n      get savedSessionNames() {\n        return getParent(self).savedSessionNames\n      },\n      get history() {\n        return getParent(self).history\n      },\n      get menus() {\n        return getParent(self).menus\n      },\n      get assemblyManager() {\n        return getParent(self).assemblyManager\n      },\n      get version() {\n        return getParent(self).version\n      },\n      get renderProps() {\n        return { theme: readConfObject(this.configuration, 'theme') }\n      },\n      get visibleWidget() {\n        if (isAlive(self)) {\n          // returns most recently added item in active widgets\n          return Array.from(self.activeWidgets.values())[\n            self.activeWidgets.size - 1\n          ]\n        }\n        return undefined\n      },\n      /**\n       * See if any MST nodes currently have a types.reference to this object.\n       * @param object - object\n       * @returns An array where the first element is the node referring\n       * to the object and the second element is they property name the node is\n       * using to refer to the object\n       */\n      getReferring(object: IAnyStateTreeNode) {\n        const refs: ReferringNode[] = []\n        walk(getParent(self), node => {\n          if (isModelType(getType(node))) {\n            const members = getMembers(node)\n            Object.entries(members.properties).forEach(([key, value]) => {\n              // @ts-ignore\n              if (isReferenceType(value) && node[key] === object) {\n                refs.push({ node, key })\n              }\n            })\n          }\n        })\n        return refs\n      },\n    }))\n    .actions(self => ({\n      setDialogComponent(comp?: DialogComponentType, props?: any) {\n        self.DialogComponent = comp\n        self.DialogProps = props\n      },\n      setName(str: string) {\n        self.name = str\n      },\n\n      addAssembly(assemblyConfig: AnyConfigurationModel) {\n        self.sessionAssemblies.push(assemblyConfig)\n      },\n      addSessionPlugin(plugin: JBrowsePlugin) {\n        if (self.sessionPlugins.find(p => p.name === plugin.name)) {\n          throw new Error('session plugin cannot be installed twice')\n        }\n        self.sessionPlugins.push(plugin)\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      removeAssembly(assemblyName: string) {\n        const index = self.sessionAssemblies.findIndex(\n          asm => asm.name === assemblyName,\n        )\n        if (index !== -1) {\n          self.sessionAssemblies.splice(index, 1)\n        }\n      },\n      removeSessionPlugin(pluginUrl: string) {\n        const index = self.sessionPlugins.findIndex(\n          plugin => plugin.url === pluginUrl,\n        )\n        if (index !== -1) {\n          self.sessionPlugins.splice(index, 1)\n        }\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      makeConnection(\n        configuration: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const { type } = configuration\n        if (!type) {\n          throw new Error('track configuration has no `type` listed')\n        }\n        const name = readConfObject(configuration, 'name')\n        const connectionType = pluginManager.getConnectionType(type)\n        if (!connectionType) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connectionData = {\n          ...initialSnapshot,\n          name,\n          type,\n          configuration,\n        }\n        const length = self.connectionInstances.push(connectionData)\n        return self.connectionInstances[length - 1]\n      },\n\n      removeReferring(\n        referring: any,\n        track: any,\n        callbacks: Function[],\n        dereferenceTypeCount: Record<string, number>,\n      ) {\n        referring.forEach(({ node }: ReferringNode) => {\n          let dereferenced = false\n          try {\n            // If a view is referring to the track config, remove the track\n            // from the view\n            const type = 'open track(s)'\n            const view = getContainingView(node) as TrackViewModel\n            callbacks.push(() => view.hideTrack(track.trackId))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          } catch (err1) {\n            // ignore\n          }\n\n          // @ts-ignore\n          if (self.widgets.has(node.id)) {\n            // If a configuration editor widget has the track config\n            // open, close the widget\n            const type = 'configuration editor widget(s)'\n            callbacks.push(() => this.hideWidget(node))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          }\n          if (!dereferenced) {\n            throw new Error(\n              `Error when closing this connection, the following node is still referring to a track configuration: ${JSON.stringify(\n                getSnapshot(node),\n              )}`,\n            )\n          }\n        })\n      },\n\n      prepareToBreakConnection(configuration: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (connection) {\n          connection.tracks.forEach((track: any) => {\n            const referring = self.getReferring(track)\n            this.removeReferring(\n              referring,\n              track,\n              callbacksToDereferenceTrack,\n              dereferenceTypeCount,\n            )\n          })\n          const safelyBreakConnection = () => {\n            callbacksToDereferenceTrack.forEach(cb => cb())\n            this.breakConnection(configuration)\n          }\n          return [safelyBreakConnection, dereferenceTypeCount]\n        }\n        return undefined\n      },\n\n      breakConnection(configuration: AnyConfigurationModel) {\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        self.connectionInstances.remove(connection)\n      },\n\n      deleteConnection(configuration: AnyConfigurationModel) {\n        let deletedConn\n        if (self.adminMode) {\n          deletedConn = getParent(self).jbrowse.deleteConnectionConf(\n            configuration,\n          )\n        }\n        if (!deletedConn) {\n          const { connectionId } = configuration\n          const idx = self.sessionConnections.findIndex(\n            c => c.connectionId === connectionId,\n          )\n          if (idx === -1) {\n            return undefined\n          }\n          return self.sessionConnections.splice(idx, 1)\n        }\n        return deletedConn\n      },\n\n      updateDrawerWidth(drawerWidth: number) {\n        if (drawerWidth === self.drawerWidth) {\n          return self.drawerWidth\n        }\n        let newDrawerWidth = drawerWidth\n        if (newDrawerWidth < minDrawerWidth) {\n          newDrawerWidth = minDrawerWidth\n        }\n        self.drawerWidth = newDrawerWidth\n        return newDrawerWidth\n      },\n\n      resizeDrawer(distance: number) {\n        const oldDrawerWidth = self.drawerWidth\n        const newDrawerWidth = this.updateDrawerWidth(oldDrawerWidth - distance)\n        const actualDistance = oldDrawerWidth - newDrawerWidth\n        return actualDistance\n      },\n\n      addView(typeName: string, initialState = {}) {\n        const typeDefinition = pluginManager.getElementType('view', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown view type ${typeName}`)\n        }\n\n        const length = self.views.push({\n          ...initialState,\n          type: typeName,\n        })\n        return self.views[length - 1]\n      },\n\n      removeView(view: any) {\n        for (const [, widget] of self.activeWidgets) {\n          if (widget.view && widget.view.id === view.id) {\n            this.hideWidget(widget)\n          }\n        }\n        self.views.remove(view)\n      },\n\n      addAssemblyConf(assemblyConf: AnyConfigurationModel) {\n        return getParent(self).jbrowse.addAssemblyConf(assemblyConf)\n      },\n\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        if (self.adminMode) {\n          return getParent(self).jbrowse.addTrackConf(trackConf)\n        }\n        const { trackId, type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.sessionTracks.find((t: any) => t.trackId === trackId)\n        if (track) {\n          return track\n        }\n        const length = self.sessionTracks.push(trackConf)\n        return self.sessionTracks[length - 1]\n      },\n\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const referring = self.getReferring(trackConf)\n        this.removeReferring(\n          referring,\n          trackConf,\n          callbacksToDereferenceTrack,\n          dereferenceTypeCount,\n        )\n        callbacksToDereferenceTrack.forEach(cb => cb())\n        if (self.adminMode) {\n          return getParent(self).jbrowse.deleteTrackConf(trackConf)\n        }\n        const { trackId } = trackConf\n        const idx = self.sessionTracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n        return self.sessionTracks.splice(idx, 1)\n      },\n\n      addConnectionConf(connectionConf: any) {\n        if (self.adminMode) {\n          return getParent(self).jbrowse.addConnectionConf(connectionConf)\n        }\n        const { connectionId, type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connection = self.sessionTracks.find(\n          (c: any) => c.connectionId === connectionId,\n        )\n        if (connection) {\n          return connection\n        }\n        const length = self.sessionConnections.push(connectionConf)\n        return self.sessionConnections[length - 1]\n      },\n\n      addLinearGenomeViewOfAssembly(assemblyName: string, initialState = {}) {\n        return this.addViewOfAssembly(\n          'LinearGenomeView',\n          assemblyName,\n          initialState,\n        )\n      },\n\n      addViewOfAssembly(\n        viewType: any,\n        assemblyName: string,\n        initialState: any = {},\n      ) {\n        const assembly = self.assemblies.find(\n          (s: AnyConfigurationModel) =>\n            readConfObject(s, 'name') === assemblyName,\n        )\n        if (!assembly) {\n          throw new Error(\n            `Could not add view of assembly \"${assemblyName}\", assembly name not found`,\n          )\n        }\n        initialState.displayRegionsFromAssemblyName = readConfObject(\n          assembly,\n          'name',\n        )\n        return this.addView(viewType, initialState)\n      },\n\n      addViewFromAnotherView(\n        viewType: string,\n        otherView: any,\n        initialState: { displayedRegions?: Region[] } = {},\n      ) {\n        const state = { ...initialState }\n        state.displayedRegions = getSnapshot(otherView.displayedRegions)\n        return this.addView(viewType, state)\n      },\n\n      addWidget(\n        typeName: string,\n        id: string,\n        initialState = {},\n        configuration = { type: typeName },\n      ) {\n        const typeDefinition = pluginManager.getElementType('widget', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown widget type ${typeName}`)\n        }\n        const data = {\n          ...initialState,\n          id,\n          type: typeName,\n          configuration,\n        }\n        self.widgets.set(id, data)\n        return self.widgets.get(id)\n      },\n\n      showWidget(widget: any) {\n        if (self.activeWidgets.has(widget.id)) {\n          self.activeWidgets.delete(widget.id)\n        }\n        self.activeWidgets.set(widget.id, widget)\n        self.minimized = false\n      },\n\n      hasWidget(widget: any) {\n        return self.activeWidgets.has(widget.id)\n      },\n\n      hideWidget(widget: any) {\n        self.activeWidgets.delete(widget.id)\n      },\n      minimizeWidgetDrawer() {\n        self.minimized = true\n      },\n      showWidgetDrawer() {\n        self.minimized = false\n      },\n      hideAllWidgets() {\n        self.activeWidgets.clear()\n      },\n\n      /**\n       * set the global selection, i.e. the globally-selected object.\n       * can be a feature, a view, just about anything\n       * @param thing -\n       */\n      setSelection(thing: any) {\n        self.selection = thing\n      },\n\n      /**\n       * clears the global selection\n       */\n      clearSelection() {\n        self.selection = undefined\n      },\n\n      clearConnections() {\n        self.connectionInstances.length = 0\n      },\n\n      addSavedSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent(self).addSavedSession(sessionSnapshot)\n      },\n\n      removeSavedSession(sessionSnapshot: any) {\n        return getParent(self).removeSavedSession(sessionSnapshot)\n      },\n\n      renameCurrentSession(sessionName: string) {\n        return getParent(self).renameCurrentSession(sessionName)\n      },\n\n      duplicateCurrentSession() {\n        return getParent(self).duplicateCurrentSession()\n      },\n      activateSession(sessionName: any) {\n        return getParent(self).activateSession(sessionName)\n      },\n      setDefaultSession() {\n        return getParent(self).setDefaultSession()\n      },\n      saveSessionToLocalStorage() {\n        return getParent(self).saveSessionToLocalStorage()\n      },\n      loadAutosaveSession() {\n        return getParent(self).loadAutosaveSession()\n      },\n      setSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent(self).setSession(sessionSnapshot)\n      },\n    }))\n    .extend(() => {\n      const snackbarMessages = observable.array()\n\n      return {\n        views: {\n          get snackbarMessages() {\n            return snackbarMessages\n          },\n        },\n        actions: {\n          notify(message: string, level?: NotificationLevel) {\n            return this.pushSnackbarMessage(message, level)\n          },\n\n          pushSnackbarMessage(message: string, level?: NotificationLevel) {\n            return snackbarMessages.push([message, level])\n          },\n\n          popSnackbarMessage() {\n            return snackbarMessages.pop()\n          },\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * opens a configuration editor to configure the given thing,\n       * and sets the current task to be configuring it\n       * @param configuration -\n       */\n      editConfiguration(configuration: AnyConfigurationModel) {\n        if (!isConfigurationModel(configuration)) {\n          throw new Error(\n            'must pass a configuration model to editConfiguration',\n          )\n        }\n        const editableConfigSession = self\n        const editor = editableConfigSession.addWidget(\n          'ConfigurationEditorWidget',\n          'configEditor',\n          { target: configuration },\n        )\n        editableConfigSession.showWidget(editor)\n      },\n      editTrackConfiguration(configuration: AnyConfigurationModel) {\n        if (\n          !self.adminMode &&\n          self.sessionTracks.indexOf(configuration) === -1\n        ) {\n          throw new Error(\"Can't edit the configuration of a non-session track\")\n        }\n        this.editConfiguration(configuration)\n      },\n    }))\n    .views(self => ({\n      getTrackActionMenuItems(config: any) {\n        const session = self\n        const canEdit =\n          session.adminMode ||\n          session.sessionTracks.find(track => {\n            return track.trackId === config.trackId\n          })\n\n        // disable if it is a reference sequence track\n        const isRefSeqTrack =\n          readConfObject(config, 'type') === 'ReferenceSequenceTrack'\n        return [\n          {\n            label: 'About track',\n            onClick: () => {\n              session.setDialogComponent(AboutDialog, { config })\n            },\n            icon: InfoIcon,\n          },\n          {\n            label: 'Settings',\n            disabled: !canEdit,\n            onClick: () => {\n              session.editTrackConfiguration(config)\n            },\n            icon: SettingsIcon,\n          },\n          {\n            label: 'Delete track',\n            disabled: !canEdit || isRefSeqTrack,\n            onClick: () => {\n              session.deleteTrackConf(config)\n            },\n            icon: DeleteIcon,\n          },\n          {\n            label: 'Copy track',\n            disabled: isRefSeqTrack,\n            onClick: () => {\n              const trackSnapshot = JSON.parse(\n                JSON.stringify(getSnapshot(config)),\n              )\n              const now = Date.now()\n              trackSnapshot.trackId += `-${now}`\n              trackSnapshot.displays.forEach(\n                (display: { displayId: string }) => {\n                  display.displayId += `-${now}`\n                },\n              )\n              // the -sessionTrack suffix to trackId is used as metadata for\n              // the track selector to store the track in a special category,\n              // and default category is also cleared\n              if (!session.adminMode) {\n                trackSnapshot.trackId += '-sessionTrack'\n                trackSnapshot.category = undefined\n              }\n              trackSnapshot.name += ' (copy)'\n              session.addTrackConf(trackSnapshot)\n            },\n            icon: CopyIcon,\n          },\n        ]\n      },\n    }))\n\n  return types.snapshotProcessor(sessionModel, {\n    // @ts-ignore\n    preProcessor(snapshot) {\n      if (snapshot) {\n        // @ts-ignore\n        const { connectionInstances, ...rest } = snapshot || {}\n        // connectionInstances schema changed from object to an array, so any\n        // old connectionInstances as object is in snapshot, filter it out\n        // https://github.com/GMOD/jbrowse-components/issues/1903\n        if (!Array.isArray(connectionInstances)) {\n          return rest\n        }\n      }\n      return snapshot\n    },\n  })\n}\n\nexport type SessionStateModel = ReturnType<typeof sessionModelFactory>\nexport type SessionModel = Instance<SessionStateModel>\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction z(x: Instance<SessionStateModel>): AbstractSessionModel {\n  // this function's sole purpose is to get typescript to check\n  // that the session model implements all of AbstractSessionModel\n  return x\n}\n","import {\n  addDisposer,\n  cast,\n  getSnapshot,\n  getParent,\n  getType,\n  getPropertyMembers,\n  getChildType,\n  IAnyStateTreeNode,\n  IAnyType,\n  Instance,\n  isArrayType,\n  isModelType,\n  isReferenceType,\n  isValidReference,\n  isMapType,\n  SnapshotIn,\n  types,\n} from 'mobx-state-tree'\nimport { observable, autorun } from 'mobx'\n// jbrowse\nimport assemblyManagerFactory, {\n  assemblyConfigSchemas as AssemblyConfigSchemasFactory,\n} from '@jbrowse/core/assemblyManager'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport TextSearchManagerF from '@jbrowse/core/TextSearch/TextSearchManager'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n// material ui\nimport { MenuItem } from '@jbrowse/core/ui'\nimport AddIcon from '@material-ui/icons/Add'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport AppsIcon from '@material-ui/icons/Apps'\n\n// other\nimport corePlugins from './corePlugins'\nimport jbrowseWebFactory from './jbrowseModel'\n// @ts-ignore\nimport RenderWorker from './rpc.worker'\nimport sessionModelFactory from './sessionModelFactory'\n\n// attempts to remove undefined references from the given MST model. can only actually\n// remove them from arrays and maps. throws MST undefined ref error if it encounters\n// undefined refs in model properties\nfunction filterSessionInPlace(node: IAnyStateTreeNode, nodeType: IAnyType) {\n  type MSTArray = Instance<ReturnType<typeof types.array>>\n  type MSTMap = Instance<ReturnType<typeof types.map>>\n\n  // makes it work with session sharing\n  if (node === undefined) {\n    return\n  }\n  if (isArrayType(nodeType)) {\n    const array = node as MSTArray\n    const childType = getChildType(node)\n    if (isReferenceType(childType)) {\n      // filter array elements\n      for (let i = 0; i < array.length; ) {\n        if (!isValidReference(() => array[i])) {\n          array.splice(i, 1)\n        } else {\n          i += 1\n        }\n      }\n    }\n    array.forEach(el => {\n      filterSessionInPlace(el, childType)\n    })\n  } else if (isMapType(nodeType)) {\n    const map = node as MSTMap\n    const childType = getChildType(map)\n    if (isReferenceType(childType)) {\n      // filter the map members\n      for (const key in map.keys()) {\n        if (!isValidReference(() => map.get(key))) {\n          map.delete(key)\n        }\n      }\n    }\n    map.forEach(child => {\n      filterSessionInPlace(child, childType)\n    })\n  } else if (isModelType(nodeType)) {\n    // iterate over children\n    const { properties } = getPropertyMembers(node)\n\n    Object.entries(properties).forEach(([pname, ptype]) => {\n      // @ts-ignore\n      filterSessionInPlace(node[pname], ptype)\n    })\n  }\n}\n\ninterface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\n\nexport default function RootModel(\n  pluginManager: PluginManager,\n  adminMode = false,\n) {\n  const { assemblyConfigSchemas, dispatcher } = AssemblyConfigSchemasFactory(\n    pluginManager,\n  )\n  const assemblyConfigSchemasType = types.union(\n    { dispatcher },\n    ...assemblyConfigSchemas,\n  )\n  const Session = sessionModelFactory(pluginManager, assemblyConfigSchemasType)\n  const assemblyManagerType = assemblyManagerFactory(\n    assemblyConfigSchemasType,\n    pluginManager,\n  )\n  const TextSearchManager = pluginManager.load(TextSearchManagerF)\n  return types\n    .model('Root', {\n      jbrowse: jbrowseWebFactory(\n        pluginManager,\n        Session,\n        assemblyConfigSchemasType,\n      ),\n      configPath: types.maybe(types.string),\n      session: types.maybe(Session),\n      assemblyManager: assemblyManagerType,\n      version: types.maybe(types.string),\n      isAssemblyEditing: false,\n      isDefaultSessionEditing: false,\n    })\n    .volatile(self => ({\n      pluginsUpdated: false,\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          WebWorkerRpcDriver: { WorkerClass: RenderWorker },\n          MainThreadRpcDriver: {},\n        },\n      ),\n      savedSessionsVolatile: observable.map({}),\n      textSearchManager: new TextSearchManager(),\n      pluginManager,\n      error: undefined as undefined | Error,\n    }))\n    .views(self => ({\n      get savedSessions() {\n        return Array.from(self.savedSessionsVolatile.values())\n      },\n      localStorageId(name: string) {\n        return `localSaved-${name}-${self.configPath}`\n      },\n      get autosaveId() {\n        return `autosave-${self.configPath}`\n      },\n      get previousAutosaveId() {\n        return `previousAutosave-${self.configPath}`\n      },\n    }))\n    .views(self => ({\n      get savedSessionNames() {\n        return self.savedSessions.map(session => session.name)\n      },\n      get currentSessionId() {\n        const locationUrl = new URL(window.location.href)\n        const params = new URLSearchParams(locationUrl.search)\n        return params?.get('session')?.split('local-')[1]\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        Object.entries(localStorage)\n          .filter(([key, _val]) => key.startsWith('localSaved-'))\n          .filter(\n            ([key, _val]) => key.indexOf(self.configPath || 'undefined') !== -1,\n          )\n          .forEach(([key, val]) => {\n            try {\n              const { session } = JSON.parse(val)\n              self.savedSessionsVolatile.set(key, session)\n            } catch (e) {\n              console.error('bad session encountered', key, val)\n            }\n          })\n        addDisposer(\n          self,\n          autorun(() => {\n            for (const [, val] of self.savedSessionsVolatile.entries()) {\n              try {\n                const key = self.localStorageId(val.name)\n                localStorage.setItem(key, JSON.stringify({ session: val }))\n              } catch (e) {\n                if (e.code === '22' || e.code === '1024') {\n                  alert(\n                    'Local storage is full! Please use the \"Open sessions\" panel to remove old sessions',\n                  )\n                }\n              }\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.session) {\n                const noSession = { name: 'empty' }\n                const snapshot = getSnapshot(self.session) || noSession\n                sessionStorage.setItem(\n                  'current',\n                  JSON.stringify({ session: snapshot }),\n                )\n\n                localStorage.setItem(\n                  `autosave-${self.configPath}`,\n                  JSON.stringify({\n                    session: {\n                      ...snapshot,\n                      name: `${snapshot.name}-autosaved`,\n                    },\n                  }),\n                )\n                if (self.pluginsUpdated) {\n                  // reload app to get a fresh plugin manager\n                  window.location.reload()\n                }\n              }\n            },\n            { delay: 400 },\n          ),\n        )\n      },\n      setSession(sessionSnapshot?: SnapshotIn<typeof Session>) {\n        const oldSession = self.session\n        self.session = cast(sessionSnapshot)\n        if (self.session) {\n          // validate all references in the session snapshot\n          try {\n            filterSessionInPlace(self.session, getType(self.session))\n          } catch (error) {\n            // throws error if session filtering failed\n            self.session = oldSession\n            throw error\n          }\n        }\n      },\n      setAssemblyEditing(flag: boolean) {\n        self.isAssemblyEditing = flag\n      },\n      setDefaultSessionEditing(flag: boolean) {\n        self.isDefaultSessionEditing = flag\n      },\n      setPluginsUpdated(flag: boolean) {\n        self.pluginsUpdated = flag\n      },\n      setDefaultSession() {\n        const { defaultSession } = self.jbrowse\n        const newSession = {\n          ...defaultSession,\n          name: `${defaultSession.name} ${new Date().toLocaleString()}`,\n        }\n\n        this.setSession(newSession)\n      },\n      renameCurrentSession(sessionName: string) {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          snapshot.name = sessionName\n          this.setSession(snapshot)\n        }\n      },\n\n      addSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        self.savedSessionsVolatile.set(key, session)\n      },\n\n      removeSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        localStorage.removeItem(key)\n        self.savedSessionsVolatile.delete(key)\n      },\n\n      duplicateCurrentSession() {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          let newSnapshotName = `${self.session.name} (copy)`\n          if (self.savedSessionNames.includes(newSnapshotName)) {\n            let newSnapshotCopyNumber = 2\n            do {\n              newSnapshotName = `${self.session.name} (copy ${newSnapshotCopyNumber})`\n              newSnapshotCopyNumber += 1\n            } while (self.savedSessionNames.includes(newSnapshotName))\n          }\n          snapshot.name = newSnapshotName\n          this.setSession(snapshot)\n        }\n      },\n      activateSession(name: string) {\n        const localId = self.localStorageId(name)\n        const newSessionSnapshot = localStorage.getItem(localId)\n        if (!newSessionSnapshot) {\n          throw new Error(\n            `Can't activate session ${name}, it is not in the savedSessions`,\n          )\n        }\n\n        this.setSession(JSON.parse(newSessionSnapshot).session)\n      },\n      saveSessionToLocalStorage() {\n        if (self.session) {\n          const key = self.localStorageId(self.session.name)\n          self.savedSessionsVolatile.set(key, getSnapshot(self.session))\n        }\n      },\n      loadAutosaveSession() {\n        const previousAutosave = localStorage.getItem(self.previousAutosaveId)\n        const autosavedSession = previousAutosave\n          ? JSON.parse(previousAutosave).session\n          : {}\n        const { name } = autosavedSession\n        autosavedSession.name = `${name.replace('-autosaved', '')}-restored`\n        this.setSession(autosavedSession)\n      },\n\n      setError(error?: Error) {\n        self.error = error\n      },\n    }))\n    .volatile(self => ({\n      history: {},\n      menus: [\n        {\n          label: 'File',\n          menuItems: [\n            {\n              label: 'New session',\n              icon: AddIcon,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              onClick: (session: any) => {\n                const lastAutosave = localStorage.getItem(self.autosaveId)\n                if (lastAutosave) {\n                  localStorage.setItem(self.previousAutosaveId, lastAutosave)\n                }\n                session.setDefaultSession()\n              },\n            },\n            {\n              label: 'Return to splash screen',\n              icon: AppsIcon,\n              onClick: () => {\n                self.setSession(undefined)\n              },\n            },\n          ],\n        },\n        ...(adminMode\n          ? [\n              {\n                label: 'Admin',\n                menuItems: [\n                  {\n                    label: 'Open assembly manager',\n                    icon: SettingsIcon,\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    onClick: (session: any) => {\n                      const rootModel = getParent(session)\n                      rootModel.setAssemblyEditing(true)\n                    },\n                  },\n                  {\n                    label: 'Set default session',\n                    icon: SettingsIcon,\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    onClick: (session: any) => {\n                      const rootModel = getParent(session)\n                      rootModel.setDefaultSessionEditing(true)\n                    },\n                  },\n                ],\n              },\n            ]\n          : []),\n      ] as Menu[],\n      adminMode,\n    }))\n    .actions(self => ({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      setHistory(history: any) {\n        self.history = history\n      },\n      setMenus(newMenus: Menu[]) {\n        self.menus = newMenus\n      },\n      /**\n       * Add a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @returns The new length of the top-level menus array\n       */\n      appendMenu(menuName: string) {\n        return self.menus.push({ label: menuName, menuItems: [] })\n      },\n      /**\n       * Insert a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @param position - Position to insert menu. If negative, counts from th\n       * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n       * second-to-last one.\n       * @returns The new length of the top-level menus array\n       */\n      insertMenu(menuName: string, position: number) {\n        const insertPosition =\n          position < 0 ? self.menus.length + position : position\n        self.menus.splice(insertPosition, 0, { label: menuName, menuItems: [] })\n        return self.menus.length\n      },\n      /**\n       * Add a menu item to a top-level menu\n       * @param menuName - Name of the top-level menu to append to.\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the menu\n       */\n      appendToMenu(menuName: string, menuItem: MenuItem) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        return menu.menuItems.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a top-level menu\n       * @param menuName - Name of the top-level menu to insert into\n       * @param menuItem - Menu item to insert\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the menu\n       */\n      insertInMenu(menuName: string, menuItem: MenuItem, position: number) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        const insertPosition =\n          position < 0 ? menu.menuItems.length + position : position\n        menu.menuItems.splice(insertPosition, 0, menuItem)\n        return menu.menuItems.length\n      },\n      /**\n       * Add a menu item to a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the sub-menu\n       */\n      appendToSubMenu(menuPath: string[], menuItem: MenuItem) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        return subMenu.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to insert.\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the sub-menu\n       */\n      insertInSubMenu(\n        menuPath: string[],\n        menuItem: MenuItem,\n        position: number,\n      ) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        subMenu.splice(position, 0, menuItem)\n        return subMenu.length\n      },\n    }))\n}\n\nexport function createTestSession(snapshot = {}, adminMode = false) {\n  const pluginManager = new PluginManager(corePlugins.map(P => new P()))\n  pluginManager.createPluggableElements()\n\n  const JBrowseRootModel = RootModel(pluginManager, adminMode)\n  const root = JBrowseRootModel.create(\n    {\n      jbrowse: {\n        configuration: { rpc: { defaultDriver: 'MainThreadRpcDriver' } },\n      },\n      assemblyManager: {},\n    },\n    { pluginManager },\n  )\n  root.setSession({\n    name: 'testSession',\n    ...snapshot,\n  })\n  // @ts-ignore\n  root.session.views.map(view => view.setWidth(800))\n  pluginManager.setRootModel(root)\n\n  pluginManager.configure()\n  return root.session as AbstractSessionModel\n}\n","export default async function factoryReset() {\n  // @ts-ignore\n  window.location = window.location.pathname\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { lazy, useEffect, useState, Suspense } from 'react'\nimport PluginManager, { PluginLoadRecord } from '@jbrowse/core/PluginManager'\nimport PluginLoader, {\n  PluginDefinition,\n  PluginRecord,\n} from '@jbrowse/core/PluginLoader'\nimport { observer } from 'mobx-react'\nimport { inDevelopment, fromUrlSafeB64 } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  StringParam,\n  QueryParamProvider,\n  useQueryParam,\n} from 'use-query-params'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { types, addDisposer, Instance, SnapshotOut } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport { FatalErrorDialog } from '@jbrowse/core/ui'\nimport 'fontsource-roboto'\nimport 'requestidlecallback-polyfill'\nimport 'core-js/stable'\nimport queryString from 'query-string'\nimport shortid from 'shortid'\nimport {\n  writeAWSAnalytics,\n  writeGAAnalytics,\n} from '@jbrowse/core/util/analytics'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { readSessionFromDynamo } from './sessionSharing'\nimport Loading from './Loading'\nimport corePlugins from './corePlugins'\nimport JBrowse from './JBrowse'\nimport JBrowseRootModelFactory from './rootModel'\nimport packagedef from '../package.json'\nimport factoryReset from './factoryReset'\n\nconst SessionWarningDialog = lazy(() => import('./SessionWarningDialog'))\nconst ConfigWarningDialog = lazy(() => import('./ConfigWarningDialog'))\nconst StartScreen = lazy(() => import('./StartScreen'))\n\nfunction NoConfigMessage() {\n  const links = [\n    ['test_data/volvox/config.json', 'Volvox sample data'],\n    ['test_data/config.json', 'Human basic'],\n    ['test_data/config_demo.json', 'Human sample data'],\n    ['test_data/tomato/config.json', 'Tomato SVs'],\n    ['test_data/breakpoint/config.json', 'Breakpoint'],\n    ['test_data/config_dotplot.json', 'Grape/Peach dotplot'],\n    ['test_data/config_synteny_grape_peach.json', 'Grape/Peach synteny'],\n    ['test_data/yeast_synteny/config.json', 'Yeast synteny'],\n    ['test_data/config_many_contigs.json', 'Many contigs'],\n    ['test_data/config_honeybee.json', 'Honeybee'],\n    ['test_data/config_wormbase.json', 'Wormbase'],\n    ['test_data/wgbs/config.json', 'WGBS methylation'],\n  ]\n  return (\n    <div>\n      <h4>\n        Configuration not found. You may have arrived here if you requested a\n        config that does not exist or you have not set up your JBrowse yet.\n      </h4>\n\n      <p>\n        If you want to complete your setup, visit our{' '}\n        <a href=\"https://jbrowse.org/jb2/docs/quickstart_web\">\n          Quick start guide\n        </a>\n      </p>\n\n      {inDevelopment ? (\n        <>\n          <div>Sample JBrowse configs:</div>\n          <ul>\n            {links.map(([link, name]) => {\n              const { href, search } = window.location\n              const { config, ...rest } = queryString.parse(search)\n              const root = href.split('?')[0]\n              const params = queryString.stringify({\n                ...rest,\n                config: link,\n              })\n              return (\n                <li key={name}>\n                  <a href={`${root}?${params}`}>{name}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </>\n      ) : (\n        <>\n          <div>Sample JBrowse config:</div>\n          <ul>\n            <li>\n              <a href=\"?config=test_data/volvox/config.json\">\n                Volvox sample data\n              </a>\n            </li>\n          </ul>\n        </>\n      )}\n    </div>\n  )\n}\n\nasync function checkPlugins(pluginsToCheck: { url: string }[]) {\n  const fetchResult = await fetch(\n    'https://jbrowse.org/plugin-store/plugins.json',\n  )\n  if (!fetchResult.ok) {\n    throw new Error('Failed to fetch plugin data')\n  }\n  const array = (await fetchResult.json()) as {\n    plugins: { url: string }[]\n  }\n  const allowedPluginUrls = array.plugins.map(p => p.url)\n  return pluginsToCheck.every(p => allowedPluginUrls.includes(p.url))\n}\n\ntype Config = SnapshotOut<AnyConfigurationModel>\n\nconst SessionLoader = types\n  .model({\n    configPath: types.maybe(types.string),\n    sessionQuery: types.maybe(types.string),\n    password: types.maybe(types.string),\n    adminKey: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    blankSession: false as any,\n    sessionTriaged: undefined as any,\n    shareWarningOpen: false as any,\n    configSnapshot: undefined as any,\n    sessionSnapshot: undefined as any,\n    runtimePlugins: [] as PluginRecord[],\n    sessionPlugins: [] as PluginRecord[],\n    sessionError: undefined as Error | undefined,\n    configError: undefined as Error | undefined,\n    bc1:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_request_session'),\n    bc2:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_respond_session'),\n  }))\n  .views(self => ({\n    get sharedSession() {\n      return self.sessionQuery?.startsWith('share-')\n    },\n\n    get encodedSession() {\n      return self.sessionQuery?.startsWith('encoded-')\n    },\n\n    get jsonSession() {\n      return self.sessionQuery?.startsWith('json-')\n    },\n\n    get localSession() {\n      return self.sessionQuery?.startsWith('local-')\n    },\n\n    get ready() {\n      return this.sessionLoaded && !self.configError\n    },\n\n    get error() {\n      return self.configError || self.sessionError\n    },\n\n    get sessionLoaded() {\n      return (\n        !!self.sessionError || !!self.sessionSnapshot || !!self.blankSession\n      )\n    },\n    get configLoaded() {\n      return !!self.configError || !!self.configSnapshot\n    },\n  }))\n  .actions(self => ({\n    setSessionQuery(session?: any) {\n      self.sessionQuery = session\n    },\n    setConfigError(error: Error) {\n      self.configError = error\n    },\n    setSessionError(error: Error) {\n      self.sessionError = error\n    },\n    setRuntimePlugins(plugins: PluginRecord[]) {\n      self.runtimePlugins = plugins\n    },\n    setSessionPlugins(plugins: PluginRecord[]) {\n      self.sessionPlugins = plugins\n    },\n    setConfigSnapshot(snap: unknown) {\n      self.configSnapshot = snap\n    },\n\n    setBlankSession(flag: boolean) {\n      self.blankSession = flag\n    },\n    setSessionTriaged(args?: {\n      snap: unknown\n      origin: string\n      reason: { url: string }[]\n    }) {\n      self.sessionTriaged = args\n    },\n    setSessionSnapshotSuccess(snap: unknown) {\n      self.sessionSnapshot = snap\n    },\n  }))\n  .actions(self => ({\n    async fetchPlugins(config: { plugins: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(config.plugins)\n        pluginLoader.installGlobalReExports(window)\n        const runtimePlugins = await pluginLoader.load()\n        self.setRuntimePlugins([...runtimePlugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    async fetchSessionPlugins(snap: { sessionPlugins?: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(snap.sessionPlugins || [])\n        pluginLoader.installGlobalReExports(window)\n        const plugins = await pluginLoader.load()\n        self.setSessionPlugins([...plugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    // passed\n    async setSessionSnapshot(\n      snap: { sessionPlugins?: PluginDefinition[] },\n      userAcceptedConfirmation?: boolean,\n    ) {\n      try {\n        const { sessionPlugins = [] } = snap\n        const sessionPluginsAllowed = sessionPlugins.length\n          ? await checkPlugins(sessionPlugins)\n          : true\n        if (sessionPluginsAllowed || userAcceptedConfirmation) {\n          await this.fetchSessionPlugins(snap)\n          self.setSessionSnapshotSuccess(snap)\n        } else {\n          self.setSessionTriaged({\n            snap,\n            origin: 'session',\n            reason: sessionPlugins,\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    async fetchConfig() {\n      const { configPath = 'config.json' } = self\n      const config = JSON.parse(\n        (await openLocation({ uri: configPath }).readFile('utf8')) as string,\n      )\n      const configUri = new URL(configPath, window.location.href)\n      addRelativeUris(config, configUri)\n\n      // cross origin config check\n      if (configUri.hostname !== window.location.hostname) {\n        const configPlugins = config.plugins || []\n        const configPluginsAllowed = configPlugins.length\n          ? await checkPlugins(configPlugins)\n          : true\n        if (!configPluginsAllowed) {\n          self.setSessionTriaged({\n            snap: config,\n            origin: 'config',\n            reason: configPlugins,\n          })\n        } else {\n          await this.fetchPlugins(config)\n          self.setConfigSnapshot(config)\n        }\n      } else {\n        await this.fetchPlugins(config)\n        self.setConfigSnapshot(config)\n      }\n    },\n\n    async fetchSessionStorageSession() {\n      const sessionStr = sessionStorage.getItem('current')\n      const query = (self.sessionQuery as string).replace('local-', '')\n\n      // check if\n      if (sessionStr) {\n        const sessionSnap = JSON.parse(sessionStr).session || {}\n        if (query === sessionSnap.id) {\n          await this.setSessionSnapshot(sessionSnap)\n          return\n        }\n      }\n      if (self.bc1) {\n        self.bc1.postMessage(query)\n        const resultP = new Promise((resolve, reject) => {\n          if (self.bc2) {\n            self.bc2.onmessage = msg => {\n              resolve(msg.data)\n            }\n          }\n          setTimeout(() => reject(), 1000)\n        })\n\n        try {\n          const result = await resultP\n          // @ts-ignore\n          await self.setSessionSnapshot({ ...result, id: shortid() })\n          return\n        } catch (e) {\n          // the broadcast channels did not find the session in another tab\n          // clear session param, so just ignore\n        }\n      }\n      throw new Error('Local storage session not found')\n    },\n\n    async fetchSharedSession() {\n      // raw readConf alternative for before conf is initialized\n      const readConf = (\n        conf: { configuration?: { [key: string]: string } },\n        attr: string,\n        def: string,\n      ) => {\n        return (conf.configuration || {})[attr] || def\n      }\n\n      const defaultURL = 'https://share.jbrowse.org/api/v1/'\n      const decryptedSession = await readSessionFromDynamo(\n        `${readConf(self.configSnapshot, 'shareURL', defaultURL)}load`,\n        self.sessionQuery || '',\n        self.password || '',\n      )\n\n      const session = JSON.parse(fromUrlSafeB64(decryptedSession))\n\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    async decodeEncodedUrlSession() {\n      const session = JSON.parse(\n        // @ts-ignore\n        fromUrlSafeB64(self.sessionQuery.replace('encoded-', '')),\n      )\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    async decodeJsonUrlSession() {\n      // @ts-ignore\n      const session = JSON.parse(self.sessionQuery.replace('json-', ''))\n      await this.setSessionSnapshot({ ...session.session, id: shortid() })\n    },\n\n    async afterCreate() {\n      const {\n        localSession,\n        encodedSession,\n        sharedSession,\n        jsonSession,\n        configPath,\n      } = self\n\n      try {\n        // rename autosave to previousAutosave\n        const lastAutosave = localStorage.getItem(`autosave-${configPath}`)\n        if (lastAutosave) {\n          localStorage.setItem(`previousAutosave-${configPath}`, lastAutosave)\n        }\n      } catch (e) {\n        console.error('failed to create previousAutosave')\n      }\n\n      try {\n        // fetch config\n        await this.fetchConfig()\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n        return\n      }\n\n      addDisposer(\n        self,\n        autorun(async () => {\n          try {\n            if (self.configSnapshot) {\n              if (sharedSession) {\n                await this.fetchSharedSession()\n              } else if (encodedSession) {\n                await this.decodeEncodedUrlSession()\n              } else if (jsonSession) {\n                await this.decodeJsonUrlSession()\n              } else if (localSession) {\n                await this.fetchSessionStorageSession()\n              } else if (self.sessionQuery) {\n                // if there was a sessionQuery and we don't recognize it\n                throw new Error('unrecognized session format')\n              } else {\n                // placeholder for session loaded, but none found\n                self.setBlankSession(true)\n              }\n              if (self.bc1) {\n                self.bc1.onmessage = msg => {\n                  const ret =\n                    JSON.parse(sessionStorage.getItem('current') || '{}')\n                      .session || {}\n                  if (ret.id === msg.data) {\n                    if (self.bc2) {\n                      self.bc2.postMessage(ret)\n                    }\n                  }\n                }\n              }\n            }\n          } catch (e) {\n            console.error(e)\n            self.setSessionError(e)\n          }\n        }),\n      )\n    },\n  }))\n\nexport function Loader({\n  initialTimestamp = Date.now(),\n}: {\n  initialTimestamp?: number\n}) {\n  // return value if defined, else convert null to undefined for use with\n  // types.maybe\n  const load = (param: string | null | undefined) =>\n    param === null ? undefined : param\n\n  const [config] = useQueryParam('config', StringParam)\n  const [session] = useQueryParam('session', StringParam)\n  const [password] = useQueryParam('password', StringParam)\n  const [adminKey] = useQueryParam('adminKey', StringParam)\n\n  const loader = SessionLoader.create({\n    configPath: load(config),\n    sessionQuery: load(session),\n    password: load(password),\n    adminKey: load(adminKey),\n  })\n\n  return (\n    <Renderer\n      loader={loader}\n      initialTimestamp={initialTimestamp}\n      initialSessionQuery={session}\n    />\n  )\n}\n\nconst Renderer = observer(\n  ({\n    loader,\n    initialTimestamp,\n    initialSessionQuery,\n  }: {\n    loader: Instance<typeof SessionLoader>\n    initialTimestamp: number\n    initialSessionQuery: string | null | undefined\n  }) => {\n    const [, setPassword] = useQueryParam('password', StringParam)\n    const { sessionError, configError, ready, shareWarningOpen } = loader\n    const [pm, setPluginManager] = useState<PluginManager>()\n    const [error, setError] = useState('')\n    const [snapshotError, setSnapshotError] = useState('')\n    // only create the pluginManager/rootModel \"on mount\"\n    useEffect(() => {\n      try {\n        const {\n          runtimePlugins,\n          sessionPlugins,\n          adminKey,\n          configSnapshot,\n          sessionSnapshot,\n          configPath,\n        } = loader\n\n        if (ready) {\n          // it is ready when a session has loaded and when there is no config\n          // error Assuming that the query changes self.sessionError or\n          // self.sessionSnapshot or self.blankSession\n          const pluginManager = new PluginManager([\n            ...corePlugins.map(P => {\n              return {\n                plugin: new P(),\n                metadata: { isCore: true },\n              } as PluginLoadRecord\n            }),\n            ...runtimePlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n            ...sessionPlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n          ])\n          pluginManager.createPluggableElements()\n\n          const JBrowseRootModel = JBrowseRootModelFactory(\n            pluginManager,\n            !!adminKey,\n          )\n\n          if (loader.configSnapshot) {\n            const rootModel = JBrowseRootModel.create(\n              {\n                jbrowse: configSnapshot,\n                assemblyManager: {},\n                version: packagedef.version,\n                configPath,\n              },\n              { pluginManager },\n            )\n            rootModel.jbrowse.configuration.rpc.addDriverConfig(\n              'WebWorkerRpcDriver',\n              { type: 'WebWorkerRpcDriver' },\n            )\n            if (!loader.configSnapshot?.configuration?.rpc?.defaultDriver) {\n              rootModel.jbrowse.configuration.rpc.defaultDriver.set(\n                'WebWorkerRpcDriver',\n              )\n            }\n\n            // in order: saves the previous autosave for recovery, tries to\n            // load the local session if session in query, or loads the default\n            // session\n            if (sessionError) {\n              rootModel.setDefaultSession()\n              // make typescript happy by checking for session after\n              // setDefaultSession, even though we know this exists now\n              if (rootModel.session) {\n                rootModel.session.notify(\n                  `Error loading session: ${sessionError.message}. If you\n                received this URL from another user, request that they send you\n                a session generated with the \"Share\" button instead of copying\n                and pasting their URL`,\n                )\n              }\n            } else if (sessionSnapshot && !shareWarningOpen) {\n              try {\n                rootModel.setSession(loader.sessionSnapshot)\n              } catch (err) {\n                console.error(err)\n                rootModel.setDefaultSession()\n                const errorMessage = (err.message || '')\n                  .replace('[mobx-state-tree] ', '')\n                  .replace(/\\(.+/, '')\n                rootModel.session?.notify(\n                  `Session could not be loaded. ${\n                    errorMessage.length > 1000\n                      ? `${errorMessage.slice(0, 1000)}...see more in console`\n                      : errorMessage\n                  }`,\n                )\n              }\n            } else {\n              const defaultJBrowseSession = rootModel.jbrowse.defaultSession\n              if (defaultJBrowseSession?.views) {\n                if (defaultJBrowseSession.views.length > 0) {\n                  rootModel.setDefaultSession()\n                }\n              }\n            }\n\n            // send analytics\n            if (\n              rootModel &&\n              !readConfObject(\n                rootModel.jbrowse.configuration,\n                'disableAnalytics',\n              )\n            ) {\n              writeAWSAnalytics(\n                rootModel,\n                initialTimestamp,\n                initialSessionQuery,\n              )\n              writeGAAnalytics(rootModel, initialTimestamp)\n            }\n\n            pluginManager.setRootModel(rootModel)\n            pluginManager.configure()\n            setPluginManager(pluginManager)\n\n            // automatically clear password field once loaded\n            setPassword(undefined)\n          }\n        }\n      } catch (e) {\n        const match = e.message.match(\n          /.*at path \"(.*)\" snapshot `(.*)` is not assignable/,\n        )\n        // best effort to make a better error message than the default\n        // mobx-state-tree\n        if (match) {\n          setError(`Failed to load element at ${match[1]}`)\n          setSnapshotError(match[2])\n        } else {\n          setError(e.message.slice(0, 10000))\n        }\n        console.error(e)\n      }\n    }, [\n      loader,\n      shareWarningOpen,\n      ready,\n      sessionError,\n      setPassword,\n      initialTimestamp,\n      initialSessionQuery,\n    ])\n\n    const err = configError || error\n\n    if (err) {\n      return (\n        <div>\n          <NoConfigMessage />\n          {err ? (\n            <div\n              style={{\n                border: '1px solid black',\n                overflow: 'auto',\n                maxHeight: 200,\n                padding: 2,\n                margin: 2,\n                backgroundColor: '#ff8888',\n              }}\n            >\n              {`${err}`}\n              {snapshotError ? (\n                <>\n                  ... Failed element had snapshot:\n                  <pre\n                    style={{\n                      background: 'lightgrey',\n                      border: '1px solid black',\n                      margin: 20,\n                    }}\n                  >\n                    {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n                  </pre>\n                </>\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n      )\n    }\n\n    if (loader.sessionTriaged) {\n      const handleClose = () => {\n        loader.setSessionTriaged(undefined)\n      }\n      return loader.sessionTriaged.origin === 'session' ? (\n        <Suspense fallback={<div />}>\n          <SessionWarningDialog\n            onConfirm={async () => {\n              const session = JSON.parse(\n                JSON.stringify(loader.sessionTriaged.snap),\n              )\n\n              // second param true says we passed user confirmation\n              await loader.setSessionSnapshot(\n                { ...session, id: shortid() },\n                true,\n              )\n              handleClose()\n            }}\n            onCancel={() => {\n              loader.setBlankSession(true)\n              handleClose()\n            }}\n            reason={loader.sessionTriaged.reason}\n          />\n        </Suspense>\n      ) : (\n        <Suspense fallback={<div />}>\n          <ConfigWarningDialog\n            onConfirm={async () => {\n              const session = JSON.parse(\n                JSON.stringify(loader.sessionTriaged.snap),\n              )\n              await loader.fetchPlugins(session)\n              loader.setConfigSnapshot({ ...session, id: shortid() })\n              handleClose()\n            }}\n            onCancel={() => {\n              factoryReset()\n              handleClose()\n            }}\n            reason={loader.sessionTriaged.reason}\n          />\n        </Suspense>\n      )\n    }\n    if (pm) {\n      if (!pm.rootModel?.session) {\n        return (\n          <Suspense fallback={<div>Loading...</div>}>\n            <StartScreen root={pm.rootModel} onFactoryReset={factoryReset} />\n          </Suspense>\n        )\n      }\n      return <JBrowse pluginManager={pm} />\n    }\n    return <Loading />\n  },\n)\n\nfunction addRelativeUris(config: Config, configUri: URL) {\n  if (typeof config === 'object') {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object') {\n        addRelativeUris(config[key], configUri)\n      } else if (key === 'uri') {\n        config.baseUri = configUri.href\n      }\n    }\n  }\n}\n\nconst PlatformSpecificFatalErrorDialog = (props: unknown) => {\n  return (\n    <FatalErrorDialog\n      resetButtonText=\"Reset Session\"\n      onFactoryReset={factoryReset}\n      {...props}\n    />\n  )\n}\nconst LoaderWrapper = ({ initialTimestamp }: { initialTimestamp: number }) => {\n  return (\n    <ErrorBoundary FallbackComponent={PlatformSpecificFatalErrorDialog}>\n      <QueryParamProvider>\n        <Loader initialTimestamp={initialTimestamp} />\n      </QueryParamProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default LoaderWrapper\n\nexport type SessionLoader = Instance<typeof SessionLoader>\n","import { Feature } from '@jbrowse/core/util/simpleFeature'\n// get tag from BAM or CRAM feature, where CRAM uses feature.get('tags') and\n// BAM does not\nexport function getTag(feature: Feature, tag: string) {\n  const tags = feature.get('tags')\n  return tags ? tags[tag] : feature.get(tag)\n}\n\n// use fallback alt tag, used in situations where upper case/lower case tags\n// exist e.g. Mm/MM for base modifications\nexport function getTagAlt(feature: Feature, tag: string, alt: string) {\n  return getTag(feature, tag) || getTag(feature, alt)\n}\n\n// orientation definitions from igv.js, see also\n// https://software.broadinstitute.org/software/igv/interpreting_pair_orientations\nexport const orientationTypes = {\n  fr: {\n    F1R2: 'LR',\n    F2R1: 'LR',\n\n    F1F2: 'LL',\n    F2F1: 'LL',\n\n    R1R2: 'RR',\n    R2R1: 'RR',\n\n    R1F2: 'RL',\n    R2F1: 'RL',\n  } as { [key: string]: string },\n\n  rf: {\n    R1F2: 'LR',\n    R2F1: 'LR',\n\n    R1R2: 'LL',\n    R2R1: 'LL',\n\n    F1F2: 'RR',\n    F2F1: 'RR',\n\n    F1R2: 'RL',\n    F2R1: 'RL',\n  } as { [key: string]: string },\n\n  ff: {\n    F2F1: 'LR',\n    R1R2: 'LR',\n\n    F2R1: 'LL',\n    R1F2: 'LL',\n\n    R2F1: 'RR',\n    F1R2: 'RR',\n\n    R2R1: 'RL',\n    F1F2: 'RL',\n  } as { [key: string]: string },\n}\n\nexport function getColorWGBS(strand: number, base: string) {\n  if (strand === 1) {\n    if (base === 'C') {\n      return '#f00'\n    }\n    if (base === 'T') {\n      return '#00f'\n    }\n  } else if (strand === -1) {\n    if (base === 'G') {\n      return '#f00'\n    }\n    if (base === 'A') {\n      return '#00f'\n    }\n  }\n  return '#888'\n}\n","import { useDebounce } from '@jbrowse/core/util'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { observer, PropTypes } from 'mobx-react'\nimport React, { useEffect, useState } from 'react'\nimport Editor from 'react-simple-code-editor'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport json from 'react-syntax-highlighter/dist/cjs/languages/hljs/json'\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark'\nimport a11yLight from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-light'\n\nSyntaxHighlighter.registerLanguage('json', json)\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n// Optimize by using system default fonts: https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles({\n  callbackEditor: {\n    fontFamily,\n    fontSize,\n    overflowX: 'auto',\n    marginTop: '16px',\n    borderBottom: '1px solid rgba(0,0,0,0.42)',\n  },\n  syntaxHighlighter: {\n    margin: 0,\n    fontFamily,\n    fontSize,\n  },\n  error: {\n    color: 'red',\n    fontSize: '0.8em',\n  },\n})\n\nfunction JsonEditor({ slot }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [contents, setContents] = useState(\n    JSON.stringify(slot.value, null, '  '),\n  )\n  const [error, setError] = useState()\n  const debouncedJson = useDebounce(contents, 400)\n\n  useEffect(() => {\n    try {\n      slot.set(JSON.parse(debouncedJson))\n      setError(undefined)\n    } catch (e) {\n      setError(e.message)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedJson])\n\n  return (\n    <>\n      {error ? <p className={classes.error}>{error}</p> : null}\n      <FormControl error={error}>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={contents}\n          onValueChange={setContents}\n          highlight={newCode => (\n            <SyntaxHighlighter\n              language=\"json\"\n              style={theme.palette.type === 'dark' ? a11yDark : a11yLight}\n              className={classes.syntaxHighlighter}\n              // override some inline style stuff that's higher specificity\n              // than className\n              customStyle={{ background: 'none', padding: 0 }}\n            >\n              {newCode}\n            </SyntaxHighlighter>\n          )}\n          padding={10}\n          style={{}}\n        />\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n    </>\n  )\n}\n\nJsonEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\n\nexport default observer(JsonEditor)\n","export {\n  ConfigurationSchema,\n  ConfigurationReference,\n} from './configurationSchema'\n\nexport * from './util'\n","import { toByteArray, fromByteArray } from 'base64-js'\nimport {\n  getParent,\n  isAlive,\n  IAnyStateTreeNode,\n  getSnapshot,\n  hasParent,\n  addDisposer,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport { reaction, IReactionPublic, IReactionOptions } from 'mobx'\nimport { inflate, deflate } from 'pako'\nimport fromEntries from 'object.fromentries'\nimport { useEffect, useRef, useState } from 'react'\nimport merge from 'deepmerge'\nimport { Feature } from './simpleFeature'\nimport {\n  TypeTestedByPredicate,\n  isSessionModel,\n  isDisplayModel,\n  isViewModel,\n  isTrackModel,\n  Region,\n  AssemblyManager,\n} from './types'\nimport { isAbortException, checkAbortSignal } from './aborting'\n\nexport * from './types'\nexport * from './aborting'\nexport * from './when'\n\nexport * from './offscreenCanvasPonyfill'\n\nif (!Object.fromEntries) {\n  // @ts-ignore\n  fromEntries.shim()\n}\n\nexport const inDevelopment =\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_ENV === 'development'\nexport const inProduction = !inDevelopment\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport function toUrlSafeB64(str: string): string {\n  const bytes = new TextEncoder().encode(str)\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replace(/\\+/g, '-').replace(/\\//g, '_')\n    : encoded.replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport function fromUrlSafeB64(b64: string): string {\n  const originalB64 = b64PadSuffix(b64.replace(/-/g, '+').replace(/_/g, '/'))\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  return new TextDecoder().decode(inflated)\n}\n\n/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nfunction b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\n// https://stackoverflow.com/questions/56283920/how-to-debounce-a-callback-in-functional-component-using-hooks\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useDebouncedCallback<A extends any[]>(\n  callback: (...args: A) => void,\n  wait = 400,\n) {\n  // track args & timeout handle between calls\n  const argsRef = useRef<A>()\n  const timeout = useRef<ReturnType<typeof setTimeout>>()\n\n  function cleanup() {\n    if (timeout.current) {\n      clearTimeout(timeout.current)\n    }\n  }\n\n  // make sure our timeout gets cleared if our consuming component gets unmounted\n  useEffect(() => cleanup, [])\n\n  return function debouncedCallback(...args: A) {\n    // capture latest args\n    argsRef.current = args\n\n    // clear debounce timer\n    cleanup()\n\n    // start waiting again\n    timeout.current = setTimeout(() => {\n      if (argsRef.current) {\n        callback(...argsRef.current)\n      }\n    }, wait)\n  }\n}\n\n/** find the first node in the hierarchy that matches the given predicate */\nexport function findParentThat(\n  node: IAnyStateTreeNode,\n  predicate: (thing: IAnyStateTreeNode) => boolean,\n) {\n  let currentNode: IAnyStateTreeNode | undefined = node\n  while (currentNode && isAlive(currentNode)) {\n    if (predicate(currentNode)) {\n      return currentNode\n    }\n    if (hasParent(currentNode)) {\n      currentNode = getParent(currentNode)\n    } else {\n      break\n    }\n  }\n  throw new Error('no matching node found')\n}\n\ninterface Animation {\n  lastPosition: number\n  lastTime?: number\n  lastVelocity?: number\n}\n\n// based on https://github.com/react-spring/react-spring/blob/cd5548a987383b8023efd620f3726a981f9e18ea/src/animated/FrameLoop.ts\nexport function springAnimate(\n  fromValue: number,\n  toValue: number,\n  setValue: (value: number) => void,\n  onFinish = () => {},\n  precision = 0,\n  tension = 170,\n  friction = 26,\n) {\n  const mass = 1\n  if (!precision) {\n    precision = Math.abs(toValue - fromValue) / 1000\n  }\n\n  let animationFrameId: number\n\n  function update(animation: Animation) {\n    const time = Date.now()\n    let position = animation.lastPosition\n    let lastTime = animation.lastTime || time\n    let velocity = animation.lastVelocity || 0\n    // If we lost a lot of frames just jump to the end.\n    if (time > lastTime + 64) {\n      lastTime = time\n    }\n    // http://gafferongames.com/game-physics/fix-your-timestep/\n    const numSteps = Math.floor(time - lastTime)\n    for (let i = 0; i < numSteps; ++i) {\n      const force = -tension * (position - toValue)\n      const damping = -friction * velocity\n      const acceleration = (force + damping) / mass\n      velocity += (acceleration * 1) / 1000\n      position += (velocity * 1) / 1000\n    }\n    const isVelocity = Math.abs(velocity) <= precision\n    const isDisplacement =\n      tension !== 0 ? Math.abs(toValue - position) <= precision : true\n    const endOfAnimation = isVelocity && isDisplacement\n    if (endOfAnimation) {\n      setValue(toValue)\n      onFinish()\n    } else {\n      setValue(position)\n      animationFrameId = requestAnimationFrame(() =>\n        update({\n          lastPosition: position,\n          lastTime: time,\n          lastVelocity: velocity,\n        }),\n      )\n    }\n  }\n\n  return [\n    () => update({ lastPosition: fromValue }),\n    () => cancelAnimationFrame(animationFrameId),\n  ]\n}\n\n/** find the first node in the hierarchy that matches the given 'is' typescript type guard predicate */\nexport function findParentThatIs<\n  PREDICATE extends (thing: IAnyStateTreeNode) => boolean\n>(\n  node: IAnyStateTreeNode,\n  predicate: PREDICATE,\n): TypeTestedByPredicate<PREDICATE> & IAnyStateTreeNode {\n  return findParentThat(node, predicate) as TypeTestedByPredicate<PREDICATE> &\n    IAnyStateTreeNode\n}\n\n/** get the current JBrowse session model, starting at any node in the state tree */\nexport function getSession(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isSessionModel)\n  } catch (e) {\n    throw new Error('no session model found!')\n  }\n}\n\n/** get the state model of the view in the state tree that contains the given node */\nexport function getContainingView(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isViewModel)\n  } catch (e) {\n    throw new Error('no containing view found')\n  }\n}\n\n/** get the state model of the view in the state tree that contains the given node */\nexport function getContainingTrack(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isTrackModel)\n  } catch (e) {\n    throw new Error('no containing track found')\n  }\n}\n\nexport function getContainingDisplay(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isDisplayModel)\n  } catch (e) {\n    throw new Error('no containing display found')\n  }\n}\n\n/**\n * Assemble a 1-based \"locString\" from an interbase genomic location\n * @param region - Region\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 })\n * // ↳ '{hg19}chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1' })\n * // ↳ 'chr1'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0 })\n * // ↳ 'chr1:1..'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 1 })\n * // ↳ 'chr1:1'\n * ```\n */\nexport function assembleLocString(region: ParsedLocString): string {\n  const { assemblyName, refName, start, end } = region\n  const assemblyNameString = assemblyName ? `{${assemblyName}}` : ''\n  let startString\n  if (start !== undefined) {\n    startString = `:${(start + 1).toLocaleString('en-US')}`\n  } else if (end !== undefined) {\n    startString = ':1'\n  } else {\n    startString = ''\n  }\n  let endString\n  if (end !== undefined) {\n    endString =\n      start !== undefined && start + 1 === end\n        ? ''\n        : `..${end.toLocaleString('en-US')}`\n  } else {\n    endString = start !== undefined ? '..' : ''\n  }\n  return `${assemblyNameString}${refName}${startString}${endString}`\n}\n\nexport interface ParsedLocString {\n  assemblyName?: string\n  refName: string\n  start?: number\n  end?: number\n}\n\nexport function parseLocStringOneBased(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n): ParsedLocString {\n  if (!locString) {\n    throw new Error('no location string provided, could not parse')\n  }\n  // remove any whitespace\n  locString = locString.replace(/\\s/, '')\n  // refNames can have colons :(\n  // https://samtools.github.io/hts-specs/SAMv1.pdf Appendix A\n  const assemblyMatch = locString.match(/(\\{(.+)\\})?(.+)/)\n  if (!assemblyMatch) {\n    throw new Error(`invalid location string: \"${locString}\"`)\n  }\n  const [, , assemblyName, location] = assemblyMatch\n  if (!assemblyName && location.startsWith('{}')) {\n    throw new Error(`no assembly name was provided in location \"${location}\"`)\n  }\n  const lastColonIdx = location.lastIndexOf(':')\n  if (lastColonIdx === -1) {\n    if (isValidRefName(location, assemblyName)) {\n      return { assemblyName, refName: location }\n    }\n    throw new Error(`Unknown reference sequence \"${location}\"`)\n  }\n  const prefix = location.slice(0, lastColonIdx)\n  const suffix = location.slice(lastColonIdx + 1)\n  if (\n    isValidRefName(prefix, assemblyName) &&\n    isValidRefName(location, assemblyName)\n  ) {\n    throw new Error(`ambiguous location string: \"${locString}\"`)\n  } else if (isValidRefName(prefix, assemblyName)) {\n    if (suffix) {\n      // see if it's a range\n      const rangeMatch = suffix.match(\n        /^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)(-?(\\d+|\\d{1,3}(,\\d{3})*))$/,\n      )\n      // see if it's a single point\n      const singleMatch = suffix.match(/^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)?$/)\n      if (rangeMatch) {\n        const [, start, , , , end] = rangeMatch\n        if (start !== undefined && end !== undefined) {\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replace(/,/g, ''),\n            end: +end.replace(/,/g, ''),\n          }\n        }\n      } else if (singleMatch) {\n        const [, start, , , separator] = singleMatch\n        if (start !== undefined) {\n          if (separator) {\n            // indefinite end\n            return {\n              assemblyName,\n              refName: prefix,\n              start: +start.replace(/,/g, ''),\n            }\n          }\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replace(/,/g, ''),\n            end: +start.replace(/,/g, ''),\n          }\n        }\n      } else {\n        throw new Error(\n          `could not parse range \"${suffix}\" on location \"${locString}\"`,\n        )\n      }\n    } else {\n      return { assemblyName, refName: prefix }\n    }\n  } else if (isValidRefName(location, assemblyName)) {\n    return { assemblyName, refName: location }\n  }\n  throw new Error(`unknown reference sequence name in location \"${locString}\"`)\n}\n\n/**\n * Parse a 1-based location string into an interbase genomic location\n * @param locString - Location string\n * @param isValidRefName - Function that checks if a refName exists in the set\n * of all known refNames, or in the set of refNames for an assembly if\n * assemblyName is given\n * @example\n * ```ts\n * parseLocString('chr1:1..100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1-100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString(`{hg19}chr1:1..100`, isValidRefName)\n * // ↳ { assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1', isValidRefName)\n * // ↳ { refName: 'chr1' }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 1 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1..', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0}\n * ```\n */\nexport function parseLocString(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const parsed = parseLocStringOneBased(locString, isValidRefName)\n  if (typeof parsed.start === 'number') {\n    parsed.start -= 1\n  }\n  return parsed\n}\n\nexport function compareLocs(locA: ParsedLocString, locB: ParsedLocString) {\n  const assemblyComp =\n    locA.assemblyName || locB.assemblyName\n      ? (locA.assemblyName || '').localeCompare(locB.assemblyName || '')\n      : 0\n  if (assemblyComp) {\n    return assemblyComp\n  }\n\n  const refComp =\n    locA.refName || locB.refName\n      ? (locA.refName || '').localeCompare(locB.refName || '')\n      : 0\n  if (refComp) {\n    return refComp\n  }\n\n  if (locA.start !== undefined && locB.start !== undefined) {\n    const startComp = locA.start - locB.start\n    if (startComp) {\n      return startComp\n    }\n  }\n  if (locA.end !== undefined && locB.end !== undefined) {\n    const endComp = locA.end - locB.end\n    if (endComp) {\n      return endComp\n    }\n  }\n  return 0\n}\n\nexport function compareLocStrings(\n  a: string,\n  b: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const locA = parseLocString(a, isValidRefName)\n  const locB = parseLocString(b, isValidRefName)\n  return compareLocs(locA, locB)\n}\n\n/**\n * Ensure that a number is at least min and at most max.\n *\n * @param num -\n * @param min -\n * @param  max -\n */\nexport function clamp(num: number, min: number, max: number): number {\n  if (num < min) {\n    return min\n  }\n  if (num > max) {\n    return max\n  }\n  return num\n}\n\nfunction roundToNearestPointOne(num: number): number {\n  return Math.round(num * 10) / 10\n}\n\n/**\n * @param bp -\n * @param region -\n * @param bpPerPx -\n */\nexport function bpToPx(\n  bp: number,\n  region: { start: number; end: number; reversed?: boolean },\n  bpPerPx: number,\n): number {\n  if (region.reversed) {\n    return roundToNearestPointOne((region.end - bp) / bpPerPx)\n  }\n  return roundToNearestPointOne((bp - region.start) / bpPerPx)\n}\n\nconst oneEightyOverPi = 180.0 / Math.PI\nconst piOverOneEighty = Math.PI / 180.0\nexport function radToDeg(radians: number): number {\n  return (radians * oneEightyOverPi) % 360\n}\nexport function degToRad(degrees: number): number {\n  return (degrees * piOverOneEighty) % (2 * Math.PI)\n}\n\n/**\n * @returns [x, y]\n */\nexport function polarToCartesian(rho: number, theta: number): [number, number] {\n  return [rho * Math.cos(theta), rho * Math.sin(theta)]\n}\n\n/**\n * @param x - the x\n * @param y - the y\n * @returns [rho, theta]\n */\nexport function cartesianToPolar(x: number, y: number): [number, number] {\n  const rho = Math.sqrt(x * x + y * y)\n  const theta = Math.atan(y / x)\n  return [rho, theta]\n}\n\nexport function featureSpanPx(\n  feature: Feature,\n  region: { start: number; end: number; reversed?: boolean },\n  bpPerPx: number,\n): [number, number] {\n  return bpSpanPx(feature.get('start'), feature.get('end'), region, bpPerPx)\n}\n\nexport function bpSpanPx(\n  leftBp: number,\n  rightBp: number,\n  region: { start: number; end: number; reversed?: boolean },\n  bpPerPx: number,\n): [number, number] {\n  const start = bpToPx(leftBp, region, bpPerPx)\n  const end = bpToPx(rightBp, region, bpPerPx)\n  return region.reversed ? [end, start] : [start, end]\n}\n\nexport const objectFromEntries = Object.fromEntries.bind(Object)\n\n// do an array map of an iterable\nexport function iterMap<T, U>(\n  iterable: Iterable<T>,\n  func: (item: T) => U,\n  sizeHint?: number,\n): U[] {\n  const results = sizeHint ? new Array(sizeHint) : []\n  let counter = 0\n  for (const item of iterable) {\n    results[counter] = func(item)\n    counter += 1\n  }\n  return results\n}\n\ninterface Assembly {\n  name: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n}\ninterface Track {\n  trackId: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any\n}\ninterface Config {\n  savedSessions: unknown[]\n  assemblies: Assembly[]\n  tracks: Track[]\n  defaultSession?: {}\n}\n// similar to electron.js\nexport function mergeConfigs(A: Config, B: Config) {\n  const merged = merge(A, B)\n  if (B.defaultSession) {\n    merged.defaultSession = B.defaultSession\n  } else if (A.defaultSession) {\n    merged.defaultSession = A.defaultSession\n  }\n  return merged\n}\n\n// https://stackoverflow.com/a/53187807\n/**\n * Returns the index of the last element in the array where predicate is true,\n * and -1 otherwise.\n * @param array - The source array to search in\n * @param predicate - find calls predicate once for each element of the array, in\n * descending order, until it finds one where predicate returns true. If such an\n * element is found, findLastIndex immediately returns that element index.\n * Otherwise, findLastIndex returns -1.\n */\nexport function findLastIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, obj: T[]) => boolean,\n): number {\n  let l = array.length\n  while (l--) {\n    if (predicate(array[l], l, array)) {\n      return l\n    }\n  }\n  return -1\n}\n\n/**\n * makes a mobx reaction with the given functions, that calls actions on the\n * model for each stage of execution, and to abort the reaction function when\n * the model is destroyed.\n *\n * Will call startedFunction(signal), successFunction(result), and\n * errorFunction(error) when the async reaction function starts, completes, and\n * errors respectively.\n *\n * @param self -\n * @param dataFunction -\n * @param asyncReactionFunction -\n * @param reactionOptions -\n * @param startedFunction -\n * @param successFunction -\n * @param errorFunction -\n */\nexport function makeAbortableReaction<T, U, V>(\n  self: T,\n  dataFunction: (arg: T) => U,\n  asyncReactionFunction: (\n    arg: U | undefined,\n    signal: AbortSignal,\n    model: T,\n    handle: IReactionPublic,\n  ) => Promise<V>,\n  reactionOptions: IReactionOptions,\n  startedFunction: (aborter: AbortController) => void,\n  successFunction: (arg: V) => void,\n  errorFunction: (err: Error) => void,\n) {\n  let inProgress: AbortController | undefined\n\n  function handleError(error: Error) {\n    if (!isAbortException(error)) {\n      if (isAlive(self)) {\n        errorFunction(error)\n      } else {\n        console.error(error)\n      }\n    }\n  }\n\n  const reactionDisposer = reaction(\n    () => {\n      try {\n        return dataFunction(self)\n      } catch (error) {\n        handleError(error)\n        return undefined\n      }\n    },\n    async (data, mobxReactionHandle) => {\n      if (inProgress && !inProgress.signal.aborted) {\n        inProgress.abort()\n      }\n\n      if (!isAlive(self)) {\n        return\n      }\n      inProgress = new AbortController()\n\n      const thisInProgress = inProgress\n      startedFunction(thisInProgress)\n      try {\n        const result = await asyncReactionFunction(\n          data,\n          thisInProgress.signal,\n          self,\n          mobxReactionHandle,\n        )\n        checkAbortSignal(thisInProgress.signal)\n        if (isAlive(self)) {\n          successFunction(result)\n        }\n      } catch (error) {\n        if (thisInProgress && !thisInProgress.signal.aborted) {\n          thisInProgress.abort()\n        }\n        handleError(error)\n      }\n    },\n    reactionOptions,\n  )\n\n  addDisposer(self, reactionDisposer)\n  addDisposer(self, () => {\n    if (inProgress && !inProgress.signal.aborted) {\n      inProgress.abort()\n    }\n  })\n}\n\nexport function renameRegionIfNeeded(\n  refNameMap: Record<string, string>,\n  region: Region,\n): Region & { originalRefName?: string } {\n  if (isStateTreeNode(region) && !isAlive(region)) {\n    return region\n  }\n\n  if (region && refNameMap && refNameMap[region.refName]) {\n    // clone the region so we don't modify it\n    if (isStateTreeNode(region)) {\n      region = { ...getSnapshot(region) }\n    } else {\n      region = { ...region }\n    }\n\n    // modify it directly in the container\n    const newRef = refNameMap[region.refName]\n    if (newRef) {\n      return { ...region, refName: newRef, originalRefName: region.refName }\n    }\n  }\n  return region\n}\n\nexport async function renameRegionsIfNeeded<\n  ARGTYPE extends {\n    assemblyName?: string\n    regions?: Region[]\n    signal?: AbortSignal\n    adapterConfig: unknown\n    sessionId: string\n    statusCallback?: Function\n  }\n>(assemblyManager: AssemblyManager, args: ARGTYPE) {\n  const { regions = [], adapterConfig } = args\n  if (!args.sessionId) {\n    throw new Error('sessionId is required')\n  }\n\n  const assemblyNames = regions.map(region => region.assemblyName)\n  const assemblyMaps = Object.fromEntries(\n    await Promise.all(\n      assemblyNames.map(async assemblyName => {\n        return [\n          assemblyName,\n          await assemblyManager.getRefNameMapForAdapter(\n            adapterConfig,\n            assemblyName,\n            args,\n          ),\n        ]\n      }),\n    ),\n  )\n\n  return {\n    ...args,\n    regions: regions.map(region =>\n      renameRegionIfNeeded(assemblyMaps[region.assemblyName], region),\n    ),\n  }\n}\n\nexport function minmax(a: number, b: number) {\n  return [Math.min(a, b), Math.max(a, b)]\n}\n\nexport function stringify({\n  refName,\n  coord,\n  oob,\n}: {\n  coord: number\n  refName: string\n  oob?: boolean\n}) {\n  return `${refName}:${coord.toLocaleString('en-US')}${\n    oob ? ' (out of bounds)' : ''\n  }`\n}\n\n// this is recommended in a later comment in https://github.com/electron/electron/issues/2288\n// for detecting electron in a renderer process, which is the one that has node enabled for us\n// const isElectron = process.versions.electron\n// const i2 = process.versions.hasOwnProperty('electron')\nexport const isElectron = /electron/i.test(\n  typeof navigator !== 'undefined' ? navigator.userAgent : '',\n)\n\nexport function revcom(seqString: string) {\n  return complement(seqString).split('').reverse().join('')\n}\n\nexport const complement = (() => {\n  const complementRegex = /[ACGT]/gi\n\n  // from bioperl: tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/\n  // generated with:\n  // perl -MJSON -E '@l = split \"\",\"acgtrymkswhbvdnxACGTRYMKSWHBVDNX\"; print to_json({ map { my $in = $_; tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/; $in => $_ } @l})'\n  const complementTable = {\n    S: 'S',\n    w: 'w',\n    T: 'A',\n    r: 'y',\n    a: 't',\n    N: 'N',\n    K: 'M',\n    x: 'x',\n    d: 'h',\n    Y: 'R',\n    V: 'B',\n    y: 'r',\n    M: 'K',\n    h: 'd',\n    k: 'm',\n    C: 'G',\n    g: 'c',\n    t: 'a',\n    A: 'T',\n    n: 'n',\n    W: 'W',\n    X: 'X',\n    m: 'k',\n    v: 'b',\n    B: 'V',\n    s: 's',\n    H: 'D',\n    c: 'g',\n    D: 'H',\n    b: 'v',\n    R: 'Y',\n    G: 'C',\n  } as { [key: string]: string }\n\n  return (seqString: string) => {\n    return seqString.replace(complementRegex, m => complementTable[m] || '')\n  }\n})()\n\nexport function blobToDataURL(blob: Blob) {\n  const a = new FileReader()\n  return new Promise((resolve, reject) => {\n    a.onload = e => {\n      if (e.target) {\n        resolve(e.target.result)\n      } else {\n        reject(new Error('unknown result reading blob from canvas'))\n      }\n    }\n    a.readAsDataURL(blob)\n  })\n}\n\n// requires immediate execution in jest environment, because (hypothesis) it\n// otherwise listens for prerendered_canvas but reads empty pixels, and doesn't\n// get the contents of the canvas\nexport const rIC =\n  typeof jest === 'undefined'\n    ? // @ts-ignore\n      typeof window !== 'undefined' && window.requestIdleCallback\n      ? // @ts-ignore\n        window.requestIdleCallback\n      : (cb: Function) => setTimeout(() => cb(), 1)\n    : (cb: Function) => cb()\n\n// xref https://gist.github.com/tophtucker/62f93a4658387bb61e4510c37e2e97cf\nexport function measureText(str: unknown, fontSize = 10) {\n  // prettier-ignore\n  const widths = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2796875,0.2765625,0.3546875,0.5546875,0.5546875,0.8890625,0.665625,0.190625,0.3328125,0.3328125,0.3890625,0.5828125,0.2765625,0.3328125,0.2765625,0.3015625,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.2765625,0.2765625,0.584375,0.5828125,0.584375,0.5546875,1.0140625,0.665625,0.665625,0.721875,0.721875,0.665625,0.609375,0.7765625,0.721875,0.2765625,0.5,0.665625,0.5546875,0.8328125,0.721875,0.7765625,0.665625,0.7765625,0.721875,0.665625,0.609375,0.721875,0.665625,0.94375,0.665625,0.665625,0.609375,0.2765625,0.3546875,0.2765625,0.4765625,0.5546875,0.3328125,0.5546875,0.5546875,0.5,0.5546875,0.5546875,0.2765625,0.5546875,0.5546875,0.221875,0.240625,0.5,0.221875,0.8328125,0.5546875,0.5546875,0.5546875,0.5546875,0.3328125,0.5,0.2765625,0.5546875,0.5,0.721875,0.5,0.5,0.5,0.3546875,0.259375,0.353125,0.5890625]\n  const avg = 0.5279276315789471\n  return (\n    String(str)\n      .split('')\n      .map(c =>\n        c.charCodeAt(0) < widths.length ? widths[c.charCodeAt(0)] : avg,\n      )\n      .reduce((cur, acc) => acc + cur, 0) * fontSize\n  )\n}\n\nexport const defaultStarts = ['ATG']\nexport const defaultStops = ['TAA', 'TAG', 'TGA']\nexport const defaultCodonTable = {\n  TCA: 'S',\n  TCC: 'S',\n  TCG: 'S',\n  TCT: 'S',\n  TTC: 'F',\n  TTT: 'F',\n  TTA: 'L',\n  TTG: 'L',\n  TAC: 'Y',\n  TAT: 'Y',\n  TAA: '*',\n  TAG: '*',\n  TGC: 'C',\n  TGT: 'C',\n  TGA: '*',\n  TGG: 'W',\n  CTA: 'L',\n  CTC: 'L',\n  CTG: 'L',\n  CTT: 'L',\n  CCA: 'P',\n  CCC: 'P',\n  CCG: 'P',\n  CCT: 'P',\n  CAC: 'H',\n  CAT: 'H',\n  CAA: 'Q',\n  CAG: 'Q',\n  CGA: 'R',\n  CGC: 'R',\n  CGG: 'R',\n  CGT: 'R',\n  ATA: 'I',\n  ATC: 'I',\n  ATT: 'I',\n  ATG: 'M',\n  ACA: 'T',\n  ACC: 'T',\n  ACG: 'T',\n  ACT: 'T',\n  AAC: 'N',\n  AAT: 'N',\n  AAA: 'K',\n  AAG: 'K',\n  AGC: 'S',\n  AGT: 'S',\n  AGA: 'R',\n  AGG: 'R',\n  GTA: 'V',\n  GTC: 'V',\n  GTG: 'V',\n  GTT: 'V',\n  GCA: 'A',\n  GCC: 'A',\n  GCG: 'A',\n  GCT: 'A',\n  GAC: 'D',\n  GAT: 'D',\n  GAA: 'E',\n  GAG: 'E',\n  GGA: 'G',\n  GGC: 'G',\n  GGG: 'G',\n  GGT: 'G',\n}\n\n/**\n *  take CodonTable above and generate larger codon table that includes\n *  all permutations of upper and lower case nucleotides\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function generateCodonTable(table: any) {\n  const tempCodonTable: { [key: string]: string } = {}\n  Object.keys(table).forEach(codon => {\n    const aa = table[codon]\n    const nucs: string[][] = []\n    for (let i = 0; i < 3; i++) {\n      const nuc = codon.charAt(i)\n      nucs[i] = []\n      nucs[i][0] = nuc.toUpperCase()\n      nucs[i][1] = nuc.toLowerCase()\n    }\n    for (let i = 0; i < 2; i++) {\n      const n0 = nucs[0][i]\n      for (let j = 0; j < 2; j++) {\n        const n1 = nucs[1][j]\n        for (let k = 0; k < 2; k++) {\n          const n2 = nucs[2][k]\n          const triplet = n0 + n1 + n2\n          tempCodonTable[triplet] = aa\n        }\n      }\n    }\n  })\n  return tempCodonTable\n}\n\n// call statusCallback with current status and clear when finished\nexport async function updateStatus(\n  statusMsg: string,\n  statusCallback: Function,\n  fn: Function,\n) {\n  statusCallback(statusMsg)\n  const result = await fn()\n  statusCallback('')\n  return result\n}\n\nexport function hashCode(str: string) {\n  let hash = 0\n  let i\n  let chr\n  if (str.length === 0) {\n    return hash\n  }\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0 // Convert to 32bit integer\n  }\n  return hash\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function objectHash(obj: Record<string, any>) {\n  return `${hashCode(JSON.stringify(obj))}`\n}\n","function findCircleIntersectionX(\n  y: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(y - cy)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([cx, y])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([cx - solution, y])\n  resultArray.push([cx + solution, y])\n}\n\nfunction findCircleIntersectionY(\n  x: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(x - cx)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([x, cy])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([x, cy - solution])\n  resultArray.push([x, cy + solution])\n}\n\nfunction cartesianToTheta(x: number, y: number) {\n  let theta = (Math.atan(y / x) + 2 * Math.PI) % (2 * Math.PI)\n  if (x < 0) {\n    if (y <= 0) {\n      theta += Math.PI\n    } else {\n      theta -= Math.PI\n    }\n  }\n  return theta\n}\n\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  if (rho === 0) {\n    return [0, 0]\n  }\n  const theta = cartesianToTheta(x, y)\n  return [rho, theta]\n}\n\nconst twoPi = 2 * Math.PI\nexport function thetaRangesOverlap(\n  r1start: number,\n  r1length: number,\n  r2start: number,\n  r2length: number,\n) {\n  if (r1length <= 0 || r2length <= 0) {\n    return false\n  }\n  if (r1length + 0.0001 >= twoPi || r2length + 0.0001 >= twoPi) {\n    return true\n  }\n\n  // put both range starts between 2π and 4π\n  r1start = (((r1start % twoPi) + twoPi) % twoPi) + twoPi\n  r2start = (((r2start % twoPi) + twoPi) % twoPi) + twoPi\n\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move r2 2π to the left and check\n  r2start -= twoPi\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move it 2π to the right and check\n  r2start += twoPi + twoPi\n  return r1start < r2start + r2length && r1start + r1length > r2start\n}\n\n// return which arc range has any part of the circle visible in the viewport\nexport function viewportVisibleSection(\n  viewSides: [number, number, number, number],\n  circleCenter: [number, number],\n  circleRadius: number,\n) {\n  let [viewL, viewR, viewT, viewB] = viewSides\n  const [cx, cy] = circleCenter\n\n  // transform coordinate system to center of circle\n  viewL -= cx\n  viewR -= cx\n  viewT -= cy\n  viewB -= cy\n\n  const centerIsInsideViewport =\n    viewL < 0 && viewR > 0 && viewT < 0 && viewB > 0\n\n  if (centerIsInsideViewport) {\n    const vertices = [\n      [viewL, viewT],\n      [viewR, viewT],\n      [viewL, viewB],\n      [viewR, viewB],\n    ]\n    let maxRho = -Infinity\n    for (let i = 0; i < vertices.length; i += 1) {\n      const [x, y] = vertices[i]\n      const rho = Math.sqrt(x * x + y * y)\n      if (rho > maxRho) {\n        maxRho = rho\n      }\n    }\n    return {\n      rho: [0, Math.min(circleRadius, maxRho)],\n      theta: [0, 2 * Math.PI],\n    }\n  }\n  // const viewportCompletelyContainsCircle =\n  //   circleCenter[0] - viewL >= circleRadius &&\n  //   viewR - circleCenter[0] >= circleRadius &&\n  //   circleCenter[1] - viewT >= circleRadius &&\n  //   viewB - circleCenter[1] >= circleRadius\n\n  // if (viewportCompletelyContainsCircle) {\n  //   return [0, 2 * Math.PI]\n  // }\n\n  // const distToCenterSquared = ([x, y]) => {\n  //   const [cx, cy] = circleCenter\n  //   const sq = n => n * n\n  //   return sq(x - cx) + sq(y - cy)\n  // }\n  // const circleRadiusSquared = circleRadius * circleRadius\n\n  // const tlInside = distToCenterSquared([viewL, viewT]) <= circleRadiusSquared\n  // const trInside = distToCenterSquared([viewR, viewT]) <= circleRadiusSquared\n  // const blInside = distToCenterSquared([viewL, viewB]) <= circleRadiusSquared\n  // const brInside = distToCenterSquared([viewR, viewB]) <= circleRadiusSquared\n\n  // const noIntersection = !tlInside && !trInside && !blInside && !brInside\n  // if (noIntersection) return undefined\n\n  // const circleCompletelyContainsViewport =\n  //   tlInside && trInside && blInside && brInside\n  // if (circleCompletelyContainsViewport) {\n  //   // viewport is in the circle, but the center is not in it, so take max\n  //   // and min of thetas to the center\n  //   const thetas = [\n  //     Math.atan(viewT / viewL),\n  //     Math.atan(viewT / viewR),\n  //     Math.atan(viewB / viewL),\n  //     Math.atan(viewB / viewR),\n  //   ]\n\n  //   return [Math.min(...thetas), Math.max(...thetas)]\n  // }\n\n  // if we get here, the viewport is partly in, partly out of the circle\n\n  // const viewLIntersects = Math.abs(viewL - circleCenter[0]) <= circleRadius\n  // const viewRIntersects = Math.abs(viewR - circleCenter[0]) <= circleRadius\n  // const viewTIntersects = Math.abs(viewT - circleCenter[1]) <= circleRadius\n  // const viewBIntersects = Math.abs(viewB - circleCenter[1]) <= circleRadius\n\n  // const numIntersectingSides =\n  //   Number(viewLIntersects) +\n  //   Number(viewRIntersects) +\n  //   Number(viewTIntersects) +\n  //   Number(viewBIntersects)\n\n  // if (numIntersectingSides === 4) return [0, 2 * Math.PI]\n  // if (numIntersectingSides === 3) {\n  //   // TODO calculate the thetas of the\n  // } else if (numIntersectingSides === 2) {\n  //   // TODO calculate the thetas of the 2 intersection points\n  // } else if (numIntersectingSides === 1) {\n  //   // TODO calculate the thetas of the 1-2 intersection points of the line, and the angle between\n  // }\n\n  // make a list of vertices-of-interest that lie inside both shapes to examine\n  // to determine the range covered by their intersection\n\n  // transform coordinates to have the circle as the origin and find the intersections\n  // of the circle and the view rectangle\n  const vertices: [number, number][] = [\n    [viewL, viewT],\n    [viewR, viewT],\n    [viewL, viewB],\n    [viewR, viewB],\n  ]\n  findCircleIntersectionY(viewL, 0, 0, circleRadius, vertices)\n  findCircleIntersectionY(viewR, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewT, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewB, 0, 0, circleRadius, vertices)\n\n  // for each edge, also look at the closest point to center if it is inside the circle\n  if (-viewL < circleRadius) {\n    vertices.push([viewL, 0])\n  }\n  if (viewR < circleRadius) {\n    vertices.push([viewR, 0])\n  }\n  if (-viewT < circleRadius) {\n    vertices.push([0, viewT])\n  }\n  if (viewB < circleRadius) {\n    vertices.push([0, viewB])\n  }\n\n  // const verticesOriginal = vertices.map(([x, y]) => [x + cx, y + cy])\n\n  // now convert them all to polar and take the max and min of rho and theta\n\n  // const viewportCenterTheta = cartesianToTheta(viewR + viewL, viewT + viewB)\n  const reflect = viewL >= 0 ? -1 : 1\n  // viewportCenterTheta < Math.PI / 2 || viewportCenterTheta > 1.5 * Math.PI\n  //   ? -1\n  //   : 1\n  let rhoMin = Infinity\n  let rhoMax = -Infinity\n  let thetaMin = Infinity\n  let thetaMax = -Infinity\n  for (let i = 0; i < vertices.length; i += 1) {\n    // ignore vertex if outside the viewport\n    const [vx, vy] = vertices[i]\n    if (vx >= viewL && vx <= viewR && vy >= viewT && vy <= viewB) {\n      const [rho, theta] = cartesianToPolar(vx * reflect, vy * reflect)\n      // ignore vertex if outside the circle\n      if (rho <= circleRadius + 0.001) {\n        // ignore theta if rho is 0\n        if (theta < thetaMin && rho > 0.0001) {\n          thetaMin = theta\n        }\n        if (theta > thetaMax && rho > 0.0001) {\n          thetaMax = theta\n        }\n        if (rho < rhoMin) {\n          rhoMin = rho\n        }\n        if (rho > rhoMax) {\n          rhoMax = rho\n        }\n      }\n    }\n  }\n\n  if (reflect === -1) {\n    thetaMin += Math.PI\n    thetaMax += Math.PI\n  }\n\n  if (thetaMin > 2 * Math.PI && thetaMax > 2 * Math.PI) {\n    thetaMin -= 2 * Math.PI\n    thetaMax -= 2 * Math.PI\n  }\n\n  return {\n    rho: [rhoMin, Math.min(circleRadius, rhoMax)],\n    theta: [thetaMin, thetaMax],\n  }\n}\n","import {\n  polarToCartesian,\n  assembleLocString,\n  objectFromEntries,\n  Region,\n} from '@jbrowse/core/util'\nimport { thetaRangesOverlap } from './viewportVisibleRegion'\n\nexport class Slice {\n  key: string\n\n  region: Region & { widthBp: number; elided: boolean }\n\n  offsetRadians: number\n\n  startRadians: number\n\n  endRadians: number\n\n  bpPerRadian: number\n\n  radianWidth: number\n\n  flipped: boolean\n\n  constructor(\n    view: { bpPerRadian: number },\n    region: Region & { widthBp: number; elided: boolean },\n    currentRadianOffset: number,\n    radianWidth: number,\n  ) {\n    const { bpPerRadian } = view\n    this.key = assembleLocString(region)\n    this.region = region\n    this.offsetRadians = currentRadianOffset\n    this.bpPerRadian = bpPerRadian\n    this.radianWidth = radianWidth\n    this.flipped = false\n\n    this.startRadians = this.offsetRadians\n    this.endRadians = region.widthBp / this.bpPerRadian + this.offsetRadians\n    Object.freeze(this)\n  }\n\n  bpToXY(bp: number, radiusPx: number) {\n    let offsetBp\n    if (this.region.elided) {\n      offsetBp = this.region.widthBp / 2\n    } else if (this.flipped) {\n      offsetBp = this.region.end - bp\n    } else {\n      offsetBp = bp - this.region.start\n    }\n    const totalRadians = offsetBp / this.bpPerRadian + this.offsetRadians\n    return polarToCartesian(radiusPx, totalRadians)\n  }\n\n  toJSON() {\n    return objectFromEntries(Object.entries(this))\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction calculateStaticSlices(self: any) {\n  const slices = []\n  let currentRadianOffset = 0\n  for (const region of self.elidedRegions) {\n    const radianWidth =\n      region.widthBp / self.bpPerRadian + self.spacingPx / self.pxPerRadian\n    slices.push(new Slice(self, region, currentRadianOffset, radianWidth))\n    currentRadianOffset += radianWidth\n  }\n  return slices\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction sliceIsVisible(self: any, slice: Slice) {\n  const {\n    // rho: visibleRhoRange,\n    theta: [visibleThetaMin, visibleThetaMax],\n  } = self.visibleSection\n\n  return thetaRangesOverlap(\n    slice.offsetRadians + self.offsetRadians,\n    slice.radianWidth,\n    visibleThetaMin,\n    visibleThetaMax - visibleThetaMin,\n  )\n}\n\nexport { calculateStaticSlices, sliceIsVisible }\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  SnapshotOrInstance,\n  Instance,\n  types,\n  getParent,\n  resolveIdentifier,\n  getRoot,\n  cast,\n} from 'mobx-state-tree'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport { transaction } from 'mobx'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  getSession,\n  clamp,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { calculateStaticSlices, sliceIsVisible } from './slices'\n\nimport { viewportVisibleSection } from './viewportVisibleRegion'\n\nexport default function CircularView(pluginManager: PluginManager) {\n  const minHeight = 40\n  const minWidth = 100\n  const defaultHeight = 400\n  return types.compose(\n    BaseViewModel,\n    types\n      .model('CircularView', {\n        type: types.literal('CircularView'),\n        offsetRadians: -Math.PI / 2,\n        bpPerPx: 2000000,\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        hideVerticalResizeHandle: false,\n        hideTrackSelectorButton: false,\n        lockedFitToWindow: true,\n        disableImportForm: false,\n\n        height: types.optional(\n          types.refinement('trackHeight', types.number, n => n >= minHeight),\n          defaultHeight,\n        ),\n        minimumRadiusPx: 25,\n        spacingPx: 10,\n        paddingPx: 80,\n        lockedPaddingPx: 100,\n        minVisibleWidth: 6,\n        minimumBlockWidth: 20,\n        displayedRegions: types.array(Region),\n        scrollX: 0,\n        scrollY: 0,\n        trackSelectorType: 'hierarchical',\n      })\n      .volatile(() => ({\n        width: 800,\n      }))\n      .views(self => ({\n        get staticSlices() {\n          return calculateStaticSlices(self)\n        },\n        get visibleStaticSlices() {\n          return this.staticSlices.filter(sliceIsVisible.bind(this, self))\n        },\n        get visibleSection() {\n          return viewportVisibleSection(\n            [\n              self.scrollX,\n              self.scrollX + self.width,\n              self.scrollY,\n              self.scrollY + self.height,\n            ],\n            this.centerXY,\n            this.radiusPx,\n          )\n        },\n        get circumferencePx() {\n          let elidedBp = 0\n          for (const r of this.elidedRegions) {\n            elidedBp += r.widthBp\n          }\n          return (\n            elidedBp / self.bpPerPx + self.spacingPx * this.elidedRegions.length\n          )\n        },\n        get radiusPx() {\n          return this.circumferencePx / (2 * Math.PI)\n        },\n        get bpPerRadian() {\n          return self.bpPerPx * this.radiusPx\n        },\n        get pxPerRadian() {\n          return this.radiusPx\n        },\n        get centerXY(): [number, number] {\n          return [\n            this.radiusPx + self.paddingPx,\n            this.radiusPx + self.paddingPx,\n          ]\n        },\n        get totalBp() {\n          let total = 0\n          for (const region of self.displayedRegions) {\n            total += region.end - region.start\n          }\n          return total\n        },\n        get maximumRadiusPx() {\n          return self.lockedFitToWindow\n            ? Math.min(self.width, self.height) / 2 - self.lockedPaddingPx\n            : 1000000\n        },\n        get maxBpPerPx() {\n          const minCircumferencePx = 2 * Math.PI * self.minimumRadiusPx\n          return this.totalBp / minCircumferencePx\n        },\n        get minBpPerPx() {\n          // min depends on window dimensions, clamp between old min(0.01) and max\n          const maxCircumferencePx = 2 * Math.PI * this.maximumRadiusPx\n          return clamp(\n            this.totalBp / maxCircumferencePx,\n            0.0000000001,\n            this.maxBpPerPx,\n          )\n        },\n        get atMaxBpPerPx() {\n          return self.bpPerPx >= this.maxBpPerPx\n        },\n        get atMinBpPerPx() {\n          return self.bpPerPx <= this.minBpPerPx\n        },\n        get tooSmallToLock() {\n          return this.minBpPerPx <= 0.0000000001\n        },\n        get figureDimensions() {\n          return [\n            this.radiusPx * 2 + 2 * self.paddingPx,\n            this.radiusPx * 2 + 2 * self.paddingPx,\n          ]\n        },\n        get figureWidth() {\n          return this.figureDimensions[0]\n        },\n        get figureHeight() {\n          return this.figureDimensions[1]\n        },\n        // this is displayedRegions, post-processed to\n        // elide regions that are too small to see reasonably\n        get elidedRegions() {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const visible: any[] = []\n          self.displayedRegions.forEach(region => {\n            const widthBp = region.end - region.start\n            const widthPx = widthBp / self.bpPerPx\n            if (widthPx < self.minVisibleWidth) {\n              // too small to see, collapse into a single elision region\n              const lastVisible = visible[visible.length - 1]\n              if (lastVisible && lastVisible.elided) {\n                lastVisible.regions.push({ ...region })\n                lastVisible.widthBp += widthBp\n              } else {\n                visible.push({\n                  elided: true,\n                  widthBp,\n                  regions: [{ ...region }],\n                })\n              }\n            } else {\n              // big enough to see, display it\n              visible.push({ ...region, widthBp })\n            }\n          })\n\n          // remove any single-region elisions\n          for (let i = 0; i < visible.length; i += 1) {\n            const v = visible[i]\n            if (v.elided && v.regions.length === 1) {\n              delete v.elided\n              visible[i] = { ...v, ...v.regions[0] }\n            }\n          }\n          return visible\n        },\n\n        get assemblyNames() {\n          const assemblyNames: string[] = []\n          self.displayedRegions.forEach(displayedRegion => {\n            if (!assemblyNames.includes(displayedRegion.assemblyName)) {\n              assemblyNames.push(displayedRegion.assemblyName)\n            }\n          })\n          return assemblyNames\n        },\n      }))\n      .volatile(() => ({\n        error: undefined as Error | undefined,\n      }))\n      .actions(self => ({\n        // toggle action with a flag stating which mode it's in\n        setWidth(newWidth: number) {\n          self.width = Math.max(newWidth, minWidth)\n          return self.width\n        },\n        setHeight(newHeight: number) {\n          self.height = Math.max(newHeight, minHeight)\n          return self.height\n        },\n        resizeHeight(distance: number) {\n          const oldHeight = self.height\n          const newHeight = this.setHeight(self.height + distance)\n          this.setModelViewWhenAdjust(!self.tooSmallToLock)\n          return newHeight - oldHeight\n        },\n        resizeWidth(distance: number) {\n          const oldWidth = self.width\n          const newWidth = this.setWidth(self.width + distance)\n          this.setModelViewWhenAdjust(!self.tooSmallToLock)\n          return newWidth - oldWidth\n        },\n        rotateClockwiseButton() {\n          this.rotateClockwise(Math.PI / 6)\n        },\n\n        rotateCounterClockwiseButton() {\n          this.rotateCounterClockwise(Math.PI / 6)\n        },\n\n        rotateClockwise(distance = 0.17) {\n          self.offsetRadians += distance\n        },\n\n        rotateCounterClockwise(distance = 0.17) {\n          self.offsetRadians -= distance\n        },\n\n        zoomInButton() {\n          this.setBpPerPx(self.bpPerPx / 1.4)\n        },\n\n        zoomOutButton() {\n          this.setBpPerPx(self.bpPerPx * 1.4)\n        },\n\n        setBpPerPx(newVal: number) {\n          self.bpPerPx = clamp(newVal, self.minBpPerPx, self.maxBpPerPx)\n        },\n\n        setModelViewWhenAdjust(secondCondition: boolean) {\n          if (self.lockedFitToWindow && secondCondition) {\n            this.setBpPerPx(self.minBpPerPx)\n          }\n        },\n\n        closeView() {\n          getParent(self, 2).removeView(self)\n        },\n\n        setDisplayedRegions(regions: SnapshotOrInstance<typeof Region>[]) {\n          const previouslyEmpty = self.displayedRegions.length === 0\n          self.displayedRegions = cast(regions)\n\n          if (previouslyEmpty) {\n            this.setBpPerPx(self.minBpPerPx)\n          } else {\n            this.setBpPerPx(self.bpPerPx)\n          }\n        },\n\n        activateTrackSelector() {\n          if (self.trackSelectorType === 'hierarchical') {\n            const session = getSession(self)\n            if (isSessionModelWithWidgets(session)) {\n              const selector = session.addWidget(\n                'HierarchicalTrackSelectorWidget',\n                'hierarchicalTrackSelector',\n                { view: self },\n              )\n              session.showWidget(selector)\n              return selector\n            }\n          }\n          throw new Error(\n            `invalid track selector type ${self.trackSelectorType}`,\n          )\n        },\n\n        toggleTrack(trackId: string) {\n          // if we have any tracks with that configuration, turn them off\n          const hiddenCount = this.hideTrack(trackId)\n          // if none had that configuration, turn one on\n          if (!hiddenCount) {\n            this.showTrack(trackId)\n          }\n        },\n\n        setError(error: Error) {\n          console.error(error)\n          self.error = error\n        },\n\n        showTrack(trackId: string, initialSnapshot = {}) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          const trackType = pluginManager.getTrackType(configuration.type)\n          if (!trackType) {\n            throw new Error(`unknown track type ${configuration.type}`)\n          }\n          const viewType = pluginManager.getViewType(self.type)\n          const supportedDisplays = viewType.displayTypes.map(\n            displayType => displayType.name,\n          )\n          const displayConf = configuration.displays.find(\n            (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n          )\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            type: configuration.type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          })\n          self.tracks.push(track)\n        },\n\n        addTrackConf(\n          configuration: AnyConfigurationModel,\n          initialSnapshot = {},\n        ) {\n          const { type } = configuration\n          const name = readConfObject(configuration, 'name')\n          const trackType = pluginManager.getTrackType(type)\n          if (!trackType) {\n            throw new Error(`unknown track type ${configuration.type}`)\n          }\n          const viewType = pluginManager.getViewType(self.type)\n          const supportedDisplays = viewType.displayTypes.map(\n            displayType => displayType.name,\n          )\n          const displayConf = configuration.displays.find(\n            (d: AnyConfigurationModel) => supportedDisplays.includes(d.type),\n          )\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            name,\n            type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          })\n          self.tracks.push(track)\n        },\n\n        hideTrack(trackId: string) {\n          const trackConfigSchema = pluginManager.pluggableConfigSchemaType(\n            'track',\n          )\n          const configuration = resolveIdentifier(\n            trackConfigSchema,\n            getRoot(self),\n            trackId,\n          )\n          // if we have any tracks with that configuration, turn them off\n          const shownTracks = self.tracks.filter(\n            t => t.configuration === configuration,\n          )\n          transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n          return shownTracks.length\n        },\n\n        toggleFitToWindowLock() {\n          self.lockedFitToWindow = !self.lockedFitToWindow\n          // when going unlocked -> locked and circle is cut off, set to the locked minBpPerPx\n          this.setModelViewWhenAdjust(self.atMinBpPerPx)\n          return self.lockedFitToWindow\n        },\n      })),\n  )\n}\n\nexport type CircularViewStateModel = ReturnType<typeof CircularView>\nexport type CircularViewModel = Instance<CircularViewStateModel>\n\n/*\nPLANS\n\n- tracks\n- ruler tick marks\n- set viewport scroll from state snapshot\n\n*/\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  const { lib } = pluginManager\n  const React = lib.react\n  const { useState, useEffect } = React\n  const { makeStyles } = lib['@material-ui/core/styles']\n  const { observer } = lib['mobx-react']\n\n  const useStyles = makeStyles(theme => {\n    const offset = 2\n    const duration = 1.4\n    return {\n      path: {\n        strokeDasharray: 187,\n        strokeDashoffset: 50,\n        animation: `$dash ${duration}s ease-in-out infinite, $colors ${\n          duration * 4\n        }s ease-in-out infinite`,\n      },\n      '@keyframes colors': {\n        '0%': {\n          stroke: theme.palette.primary.light,\n        },\n        '25%': {\n          stroke: theme.palette.secondary.light,\n        },\n        '50%': {\n          stroke: theme.palette.tertiary.light,\n        },\n        '75%': {\n          stroke: theme.palette.quaternary.light,\n        },\n        '100%': {\n          stroke: theme.palette.primary.light,\n        },\n      },\n      '@keyframes dash': {\n        '0%': {\n          strokeDashoffset: offset,\n        },\n        '50%': {\n          strokeDashoffset: offset / 4,\n          transform: 'rotate(135deg)',\n        },\n        '100%': {\n          strokeDashoffset: offset,\n          transform: 'rotate(720deg)',\n        },\n      },\n    }\n  })\n\n  // 'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n  const Loading = observer(\n    ({\n      model: {\n        renderProps: { radius },\n      },\n    }: {\n      model: { renderProps: { radius: number } }\n    }) => {\n      const classes = useStyles()\n\n      // only show the loading message after 400ms to prevent excessive flickering\n      const [shown, setShown] = useState(false)\n      useEffect(() => {\n        const timeout = setTimeout(() => setShown(true), 400)\n        return () => clearTimeout(timeout)\n      })\n\n      return !shown ? null : (\n        <g>\n          <defs>\n            <pattern\n              id=\"diagonalHatch\"\n              width=\"10\"\n              height=\"10\"\n              patternTransform=\"rotate(45 0 0)\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <line\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"10\"\n                style={{ stroke: 'rgba(255,255,255,0.5)', strokeWidth: 10 }}\n              />\n            </pattern>\n          </defs>\n          <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#f1f1f1\" />\n          <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n          <text\n            x=\"0\"\n            y=\"0\"\n            transform=\"rotate(90 0 0)\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            Loading&hellip;\n          </text>\n          <circle\n            className={classes.path}\n            fill=\"none\"\n            strokeWidth=\"4\"\n            strokeLinecap=\"round\"\n            cx=\"0\"\n            cy=\"0\"\n            r=\"60\"\n          />\n        </g>\n      )\n    },\n  )\n\n  return Loading\n}\n","export default ({ jbrequire }) => {\n  const React = jbrequire('react')\n  const { makeStyles } = jbrequire('@material-ui/core/styles')\n  const { observer } = jbrequire('mobx-react')\n\n  const useStyles = makeStyles({\n    errorMessage: {},\n    errorBackground: {},\n    errorText: {},\n  })\n\n  // 'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',\n  const DisplayError = observer(\n    ({\n      model: {\n        renderProps: { radius },\n        error,\n      },\n    }) => {\n      const classes = useStyles()\n      return (\n        <g className={classes.errorMessage}>\n          <defs>\n            <pattern\n              id=\"diagonalHatch\"\n              width=\"10\"\n              height=\"10\"\n              patternTransform=\"rotate(45 0 0)\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <line\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"10\"\n                style={{ stroke: 'rgba(255,0,0,0.5)', strokeWidth: 10 }}\n              />\n            </pattern>\n          </defs>\n          <circle\n            className={classes.errorBackground}\n            cx=\"0\"\n            cy=\"0\"\n            r={radius}\n            fill=\"#ffb4b4\"\n          />\n          <circle\n            className={classes.errorPattern}\n            cx=\"0\"\n            cy=\"0\"\n            r={radius}\n            fill=\"url(#diagonalHatch)\"\n          />\n          <text\n            className={classes.errorText}\n            x=\"0\"\n            y=\"0\"\n            transform=\"rotate(90 0 0)\"\n            dominantBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {String(error)}\n          </text>\n        </g>\n      )\n    },\n  )\n\n  return DisplayError\n}\n","export default ({ jbrequire }) => {\n  const React = jbrequire('react')\n  const { isAlive } = jbrequire('mobx-state-tree')\n  const { useEffect, useRef } = React\n  const { observer, PropTypes: MobxPropTypes } = jbrequire('mobx-react')\n  const { unmountComponentAtNode, hydrate } = jbrequire('react-dom')\n  const { rIC } = jbrequire('@jbrowse/core/util')\n\n  function RpcRenderedSvgGroup({ model }) {\n    const { data, html, filled, renderProps, renderingComponent } = model\n\n    const ssrContainerNode = useRef(null)\n\n    useEffect(() => {\n      const domNode = ssrContainerNode.current\n      function doHydrate() {\n        if (domNode && filled) {\n          if (domNode && domNode.innerHTML) {\n            domNode.style.display = 'none'\n            unmountComponentAtNode(domNode)\n          }\n\n          // setting outline:none fixes react \"focusable\" element issue. see\n          // https://github.com/GMOD/jbrowse-components/issues/2160\n          domNode.style.outline = 'none'\n          domNode.innerHTML = html\n          // use requestIdleCallback to defer main-thread rendering\n          // and hydration for when we have some free time. helps\n          // keep the framerate up.\n          rIC(() => {\n            if (!isAlive(model)) {\n              return\n            }\n            const mainThreadRendering = React.createElement(\n              renderingComponent,\n              { ...data, ...renderProps },\n              null,\n            )\n            rIC(() => {\n              if (!isAlive(model)) {\n                return\n              }\n              hydrate(mainThreadRendering, domNode)\n            })\n          })\n        }\n      }\n      doHydrate()\n      return () => {\n        if (domNode) {\n          unmountComponentAtNode(domNode)\n        }\n      }\n    })\n\n    return <g ref={ssrContainerNode} />\n  }\n\n  RpcRenderedSvgGroup.propTypes = {\n    model: MobxPropTypes.observableObject.isRequired,\n  }\n\n  return observer(RpcRenderedSvgGroup)\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ChordDisplayLoadingFactory from './Loading'\nimport ChordDisplayErrorFactory from './DisplayError'\nimport RpcRenderedSvgGroupF from './RpcRenderedSvgGroup'\n\nexport default ({ lib, load }: PluginManager) => {\n  const React = lib.react\n  const { observer, PropTypes: MobxPropTypes } = lib['mobx-react']\n\n  const Loading = load(ChordDisplayLoadingFactory)\n  const DisplayError = load(ChordDisplayErrorFactory)\n  const RpcRenderedSvgGroup = load(RpcRenderedSvgGroupF)\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function BaseChordDisplay({ display }: any) {\n    if (display.error) {\n      return <DisplayError model={display} />\n    }\n    if (!display.filled) {\n      return <Loading model={display} />\n    }\n    return <RpcRenderedSvgGroup model={display} />\n  }\n  BaseChordDisplay.propTypes = {\n    display: MobxPropTypes.observableObject.isRequired,\n  }\n  return observer(BaseChordDisplay)\n}\n","export default ({ jbrequire }) => {\n  const { getRpcSessionId } = jbrequire('@jbrowse/core/util/tracks')\n  const { getContainingView } = jbrequire('@jbrowse/core/util')\n  const { getSession } = jbrequire('@jbrowse/core/util')\n\n  function renderReactionData(self) {\n    const display = self\n    const view = getContainingView(display)\n    const { rendererType, renderProps } = display\n    const { rpcManager } = getSession(view)\n\n    const a = {\n      rendererType,\n      rpcManager,\n      renderProps,\n      renderArgs: {\n        // TODO: Figure this out for multiple assembly names\n        assemblyName: view.displayedRegions[0]?.assemblyName,\n        adapterConfig: JSON.parse(JSON.stringify(display.adapterConfig)),\n        rendererType: rendererType.name,\n        regions: JSON.parse(JSON.stringify(view.displayedRegions)),\n        blockDefinitions: view.blockDefinitions,\n        sessionId: getRpcSessionId(display),\n        timeout: 1000000, // 10000,\n      },\n    }\n    return a\n  }\n\n  async function renderReactionEffect(props, signal, self) {\n    if (!props) {\n      throw new Error('cannot render with no props')\n    }\n\n    const {\n      rendererType,\n      rpcManager,\n      cannotBeRenderedReason,\n      renderArgs,\n      renderProps,\n    } = props\n\n    if (cannotBeRenderedReason) {\n      return { message: cannotBeRenderedReason }\n    }\n\n    // don't try to render 0 or NaN radius or no regions\n    if (\n      !props.renderProps.radius ||\n      !props.renderArgs.regions ||\n      !props.renderArgs.regions.length\n    ) {\n      return { message: 'Skipping render' }\n    }\n\n    // check renderertype compatibility\n    if (!self.isCompatibleWithRenderer(rendererType)) {\n      throw new Error(\n        `renderer ${rendererType.name} is not compatible with this display type`,\n      )\n    }\n\n    const { html, ...data } = await rendererType.renderInClient(rpcManager, {\n      ...renderArgs,\n      ...renderProps,\n      signal,\n    })\n\n    return { html, data, renderingComponent: rendererType.ReactComponent }\n  }\n\n  return { renderReactionData, renderReactionEffect }\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport CircularChordRendererType from '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType'\nimport RendererType from '@jbrowse/core/pluggableElementTypes/renderers/RendererType'\nimport {\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n  AnyReactComponentType,\n} from '@jbrowse/core/util'\nimport { Feature, isFeature } from '@jbrowse/core/util/simpleFeature'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\nimport { Region } from '@jbrowse/core/util/types'\nimport { getParent, isAlive, types, getEnv } from 'mobx-state-tree'\nimport React from 'react'\nimport renderReactionFactory from './renderReaction'\nimport { CircularViewModel } from '../../CircularView/models/CircularView'\n\nexport const BaseChordDisplayModel = types\n  .compose(\n    'BaseChordDisplay',\n    BaseDisplay,\n    types.model({\n      bezierRadiusRatio: 0.1,\n      assemblyName: types.maybe(types.string),\n    }),\n  )\n  .volatile(() => {\n    return {\n      // NOTE: all this volatile stuff has to be filled in at once\n      // so that it stays consistent\n      filled: false,\n      reactElement: undefined as React.ReactElement | undefined,\n      data: undefined,\n      message: '',\n      error: undefined as Error | undefined,\n      renderingComponent: undefined as undefined | AnyReactComponentType,\n      refNameMap: undefined as Record<string, string> | undefined,\n    }\n  })\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const track = self\n    return {\n      onChordClick(feature: Feature) {\n        getConf(self, 'onChordClick', { feature, track, pluginManager })\n      },\n    }\n  })\n  .views(self => ({\n    get blockDefinitions() {\n      const origSlices = (getContainingView(self) as CircularViewModel)\n        .staticSlices\n      if (!self.refNameMap) {\n        return origSlices\n      }\n\n      const slices = JSON.parse(JSON.stringify(origSlices))\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      slices.forEach((slice: any) => {\n        const regions = slice.region.elided\n          ? slice.region.regions\n          : [slice.region]\n        regions.forEach((region: Region) => {\n          const renamed = self.refNameMap?.[region.refName]\n          if (renamed && region.refName !== renamed) {\n            region.refName = renamed\n          }\n        })\n      })\n      return slices\n    },\n\n    get renderProps() {\n      const view = getContainingView(self) as CircularViewModel\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n        bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n        radius: view.radiusPx,\n        blockDefinitions: this.blockDefinitions,\n        onChordClick: self.onChordClick,\n      }\n    },\n\n    /**\n     * the pluggable element type object for this diplay's\n     * renderer\n     */\n    get rendererType() {\n      const display = self\n      const { pluginManager } = getEnv(self)\n      const ThisRendererType = pluginManager.getRendererType(\n        self.rendererTypeName,\n      )\n      if (!ThisRendererType) {\n        throw new Error(`renderer \"${display.rendererTypeName}\" not found`)\n      }\n      if (!ThisRendererType.ReactComponent) {\n        throw new Error(\n          `renderer ${display.rendererTypeName} has no ReactComponent, it may not be completely implemented yet`,\n        )\n      }\n      return ThisRendererType\n    },\n\n    isCompatibleWithRenderer(renderer: RendererType) {\n      return !!(renderer instanceof CircularChordRendererType)\n    },\n\n    /**\n     * returns a string feature ID if the globally-selected object\n     * is probably a feature\n     */\n    get selectedFeatureId() {\n      if (!isAlive(self)) {\n        return undefined\n      }\n      const session = getSession(self)\n      if (!session) {\n        return undefined\n      }\n      const { selection } = session\n      // does it quack like a feature?\n      if (isFeature(selection)) {\n        return selection.id()\n      }\n      return undefined\n    },\n  }))\n  .actions(self => ({\n    renderStarted() {\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.error = undefined\n      self.renderingComponent = undefined\n    },\n    renderSuccess({\n      message,\n      data,\n      reactElement,\n      renderingComponent,\n    }: {\n      message: string\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: any\n      reactElement: React.ReactElement\n      renderingComponent: AnyReactComponentType\n    }) {\n      if (message) {\n        self.filled = false\n        self.message = message\n        self.reactElement = undefined\n        self.data = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n      } else {\n        self.filled = true\n        self.message = ''\n        self.reactElement = reactElement\n        self.data = data\n        self.error = undefined\n        self.renderingComponent = renderingComponent\n      }\n    },\n    renderError(error: Error) {\n      console.error(error)\n      // the rendering failed for some reason\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.error = error\n      self.renderingComponent = undefined\n    },\n\n    setRefNameMap(refNameMap: Record<string, string>) {\n      self.refNameMap = refNameMap\n    },\n    setError(error: Error) {\n      self.error = error\n    },\n  }))\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const {\n      renderReactionData,\n      renderReactionEffect,\n    } = pluginManager.jbrequire(renderReactionFactory)\n    return {\n      afterAttach() {\n        makeAbortableReaction(\n          self,\n          renderReactionData,\n          renderReactionEffect,\n          {\n            name: `${self.type} ${self.id} rendering`,\n            // delay: self.renderDelay || 300,\n            fireImmediately: true,\n          },\n          self.renderStarted,\n          self.renderSuccess,\n          self.renderError,\n        )\n        makeAbortableReaction(\n          self,\n          () => ({\n            assemblyNames: getTrackAssemblyNames(self.parentTrack) as string[],\n            adapter: getConf(getParent(self, 2), 'adapter'),\n            assemblyManager: getSession(self).assemblyManager,\n          }),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          async ({ assemblyNames, adapter, assemblyManager }: any, signal) => {\n            return assemblyManager.getRefNameMapForAdapter(\n              adapter,\n              assemblyNames[0],\n              { signal, sessionId: getRpcSessionId(self) },\n            )\n          },\n          {\n            name: `${self.type} ${self.id} getting refNames`,\n            fireImmediately: true,\n          },\n          () => {},\n          refNameMap => {\n            self.setRefNameMap(refNameMap)\n          },\n          error => {\n            console.error(error)\n            self.setError(error)\n          },\n        )\n      },\n    }\n  })\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nconst baseChordDisplayConfig = ConfigurationSchema(\n  'BaseChordDisplay',\n  {\n    onChordClick: {\n      type: 'boolean',\n      description:\n        'callback that should be run when a chord in the track is clicked',\n      defaultValue: false,\n      contextVariable: ['feature', 'track', 'pluginManager'],\n    },\n  },\n  { explicitIdentifier: 'displayId' },\n)\n\nexport { baseChordDisplayConfig }\n","import { lazy } from 'react'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport DataUsageIcon from '@material-ui/icons/DataUsage'\nimport stateModelFactory from './CircularView/models/CircularView'\n\nexport default class CircularViewPlugin extends Plugin {\n  name = 'CircularViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addViewType(\n      () =>\n        new ViewType({\n          ReactComponent: lazy(\n            () => import('./CircularView/components/CircularView'),\n          ),\n          stateModel: stateModelFactory(pluginManager),\n          name: 'CircularView',\n        }),\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Circular view',\n        icon: DataUsageIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('CircularView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  BaseChordDisplayModel,\n  baseChordDisplayConfig,\n  BaseChordDisplayComponentFactory,\n} from './BaseChordDisplay'\n","import { types } from 'mobx-state-tree'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default pluginManager =>\n  types\n    .model('ConfigurationEditorWidget', {\n      id: ElementId,\n      type: types.literal('ConfigurationEditorWidget'),\n      // If you add different types of targets, don't forget to account for that\n      // in the key of ./components/ConfigurationEditor.js\n      target: types.safeReference(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .actions(self => ({\n      setTarget(newTarget) {\n        self.target = newTarget\n      },\n    }))\n","import { observer } from 'mobx-react'\nimport { isStateTreeNode, getType } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema('ConfigurationEditorWidget', {})\nexport const HeadingComponent = observer(({ model }) => {\n  if (model && model.target) {\n    if (model.target.type) {\n      return `${model.target.type} settings`\n    }\n    if (isStateTreeNode(model.target)) {\n      const type = getType(model.target)\n      if (type && type.name) {\n        return `${type.name.replace('ConfigurationSchema', '')} settings`\n      }\n    }\n  }\n  return 'Settings'\n})\n","import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { configSchema as FromConfigAdapterConfigSchema } from './configSchema'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\n\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n  protected features: Map<string, Feature[]>\n\n  constructor(\n    config: ConfigurationModel<typeof FromConfigAdapterConfigSchema>,\n  ) {\n    super(config)\n    const features = readConfObject(\n      config,\n      'features',\n    ) as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(features || [])\n  }\n\n  static makeFeatures(fdata: SimpleFeatureSerialized[]) {\n    const features = new Map<string, Feature[]>()\n    for (let i = 0; i < fdata.length; i += 1) {\n      if (fdata[i]) {\n        const f = this.makeFeature(fdata[i])\n        const refName = f.get('refName') as string\n        let bucket = features.get(refName)\n        if (!bucket) {\n          bucket = []\n          features.set(refName, bucket)\n        }\n\n        bucket.push(f)\n      }\n    }\n\n    // sort the features on each reference sequence by start coordinate\n    for (const refFeatures of features.values()) {\n      refFeatures.sort((a, b) => a.get('start') - b.get('start'))\n    }\n\n    return features\n  }\n\n  static makeFeature(data: SimpleFeatureSerialized): SimpleFeature {\n    return new SimpleFeature(data)\n  }\n\n  async getRefNames() {\n    const refNames: Set<string> = new Set()\n    for (const [refName, features] of this.features) {\n      // add the feature's primary refname\n      refNames.add(refName)\n\n      // also look in the features for mate or breakend specifications, and add\n      // the refName targets of those\n      features.forEach(feature => {\n        // get refNames of generic \"mate\" records\n        const mate = feature.get('mate')\n        if (mate && mate.refName) {\n          refNames.add(mate.refName)\n        }\n        // get refNames of VCF BND and TRA records\n        const svType = ((feature.get('INFO') || {}).SVTYPE || [])[0]\n        if (svType === 'BND') {\n          const breakendSpecification = (feature.get('ALT') || [])[0]\n          const matePosition = breakendSpecification.MatePosition.split(':')\n          refNames.add(matePosition[0])\n        } else if (svType === 'TRA') {\n          const chr2 = ((feature.get('INFO') || {}).CHR2 || [])[0]\n          refNames.add(chr2)\n        }\n      })\n    }\n    return Array.from(refNames)\n  }\n\n  async getRefNameAliases() {\n    return Array.from(this.features.values()).map(featureArray => ({\n      refName: featureArray[0].get('refName'),\n      aliases: featureArray[0].get('aliases'),\n    }))\n  }\n\n  getFeatures(region: NoAssemblyRegion) {\n    const { refName, start, end } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      const features = this.features.get(refName) || []\n      for (let i = 0; i < features.length; i += 1) {\n        const f = features[i]\n        if (f.get('end') > start && f.get('start') < end) {\n          observer.next(f)\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import {\n  BaseAdapter,\n  RegionsAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { configSchema as FromConfigAdapterConfigSchema } from './configSchema'\nimport FromConfigAdapter from './FromConfigAdapter'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\nexport default class FromConfigRegionsAdapter\n  extends BaseAdapter\n  implements RegionsAdapter {\n  private features: Map<string, Feature[]>\n\n  constructor(\n    config: ConfigurationModel<typeof FromConfigAdapterConfigSchema>,\n  ) {\n    super(config)\n    const features = readConfObject(\n      config,\n      'features',\n    ) as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(features || [])\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    // sort the regions by refName\n    regions.sort((a, b) => a.refName.localeCompare(b.refName))\n\n    return regions\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { toArray } from 'rxjs/operators'\nimport FromConfigAdapter from './FromConfigAdapter'\n\nexport default class FromSequenceConfigAdapter extends FromConfigAdapter {\n  /**\n   * Fetch features for a certain region\n   * @param region - Region\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: NoAssemblyRegion) {\n    // TODO: restore commented version below once TSDX supports Rollup v2\n    // xref: https://github.com/rollup/rollup/blob/master/CHANGELOG.md#bug-fixes-45\n    // return ObservableCreate<Feature>(async observer => {\n    //   const feats = await super.getFeatures(region).pipe(toArray()).toPromise()\n    const superGetFeatures = super.getFeatures\n    return ObservableCreate<Feature>(async observer => {\n      const feats = await superGetFeatures\n        .call(this, region)\n        .pipe(toArray())\n        .toPromise()\n      const feat = feats[0]\n      observer.next(\n        new SimpleFeature({\n          ...feat.toJSON(),\n          uniqueId: `${feat.id()}:${region.start}-${region.end}`,\n          end: region.end,\n          start: region.start,\n          seq: feat\n            .get('seq')\n            .slice(\n              Math.max(region.start - feat.get('start'), 0),\n              Math.max(region.end - feat.get('start'), 0),\n            ),\n        }),\n      )\n\n      observer.complete()\n    })\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    // sort the regions by refName\n    regions.sort((a, b) => a.refName.localeCompare(b.refName))\n\n    return regions\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the forseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const configSchema = ConfigurationSchema(\n  'FromConfigAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport const regionsConfigSchema = ConfigurationSchema(\n  'FromConfigRegionsAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport const sequenceConfigSchema = ConfigurationSchema(\n  'FromConfigSequenceAdapter',\n  {\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n    featureClass: {\n      type: 'string',\n      defaultValue: 'SimpleFeature',\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n","import {\n  BaseRefNameAliasAdapter,\n  Alias,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { GenericFilehandle } from 'generic-filehandle'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nimport { ConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport MyConfigAdapterSchema from './configSchema'\n\nexport default class RefNameAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter {\n  private location: GenericFilehandle\n\n  private promise: Promise<Alias[]>\n\n  constructor(config: ConfigurationModel<typeof MyConfigAdapterSchema>) {\n    super(config)\n    this.location = openLocation(readConfObject(config, 'location'))\n    this.promise = this.downloadResults()\n  }\n\n  private async downloadResults() {\n    const results = (await this.location.readFile('utf8')) as string\n    return results\n      .trim()\n      .split('\\n')\n      .map((row: string) => {\n        const [refName, ...aliases] = row.split('\\t')\n        return { refName, aliases }\n      })\n  }\n\n  getRefNameAliases() {\n    return this.promise\n  }\n\n  async freeResources() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'RefNameAliasAdapter',\n  {\n    location: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my/aliases.txt' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { lazy } from 'react'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as ConfigurationEditorConfigSchema,\n  HeadingComponent as ConfigurationEditorHeadingComponent,\n  stateModelFactory as ConfigurationEditorStateModelFactory,\n} from './ConfigurationEditorWidget'\nimport {\n  AdapterClass as FromConfigAdapterClass,\n  RegionsAdapterClass as FromConfigRegionsAdapterClass,\n  SequenceAdapterClass as FromConfigSequenceAdapterClass,\n  configSchema as fromConfigAdapterConfigSchema,\n  regionsConfigSchema as fromConfigRegionsAdapterConfigSchema,\n  sequenceConfigSchema as fromConfigSequenceAdapterConfigSchema,\n} from './FromConfigAdapter'\nimport {\n  AdapterClass as RefNameAliasAdapterClass,\n  configSchema as refNameAliasAdapterConfigSchema,\n} from './RefNameAliasAdapter'\n\nconst ConfigurationEditorComponent = lazy(\n  () => import('./ConfigurationEditorWidget/components/ConfigurationEditor'),\n)\n\nexport default class extends Plugin {\n  name = 'ConfigurationPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigAdapter',\n          configSchema: fromConfigAdapterConfigSchema,\n          AdapterClass: FromConfigAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigRegionsAdapter',\n          configSchema: fromConfigRegionsAdapterConfigSchema,\n          AdapterClass: FromConfigRegionsAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'FromConfigSequenceAdapter',\n          configSchema: fromConfigSequenceAdapterConfigSchema,\n          AdapterClass: FromConfigSequenceAdapterClass,\n        }),\n    )\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'RefNameAliasAdapter',\n          configSchema: refNameAliasAdapterConfigSchema,\n          AdapterClass: RefNameAliasAdapterClass,\n        }),\n    )\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'ConfigurationEditorWidget',\n        HeadingComponent: ConfigurationEditorHeadingComponent,\n        configSchema: ConfigurationEditorConfigSchema,\n        stateModel: ConfigurationEditorStateModelFactory(pluginManager),\n        ReactComponent: ConfigurationEditorComponent,\n      })\n    })\n  }\n}\n\nexport { default as JsonEditor } from './ConfigurationEditorWidget/components/JsonEditor'\n\nexport { ConfigurationEditorComponent as ConfigurationEditor }\n","import { when as mobxWhen } from 'mobx'\nimport { makeAbortError } from './aborting'\n\ninterface WhenOpts {\n  timeout?: number\n  signal?: AbortSignal\n  name?: string\n}\n\n/**\n * Wrapper for mobx `when` that adds timeout and aborting support.\n */\nexport function when(\n  getter: () => boolean,\n  { timeout, signal, name }: WhenOpts = {},\n) {\n  return new Promise((resolve, reject) => {\n    let finished = false\n\n    const whenPromise = mobxWhen(getter)\n\n    // set up timeout\n    let timeoutId: ReturnType<typeof setTimeout> | undefined\n    let finishTimeout = () => {}\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        if (!finished) {\n          finished = true\n          whenPromise.cancel()\n          reject(new Error(`timed out waiting for ${name || 'whenPresent'}`))\n        }\n      }, timeout)\n      finishTimeout = () => timeoutId && clearTimeout(timeoutId)\n    }\n\n    // set up aborting\n    if (signal) {\n      signal.addEventListener('abort', () => {\n        if (!finished) {\n          finished = true\n\n          // mobx when supports a cancel method\n          whenPromise.cancel()\n          finishTimeout()\n\n          reject(makeAbortError())\n        }\n      })\n    }\n\n    whenPromise\n      .then(() => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          resolve()\n        }\n      })\n      .catch(err => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          reject(err)\n        }\n      })\n  })\n}\n\n/**\n * Wrapper for mobx `when` that makes a promise for the return value\n * of the given function at the point in time when it becomes not\n * undefined and not null.\n */\nexport async function whenPresent<FUNCTION extends () => unknown>(\n  getter: FUNCTION,\n  opts: WhenOpts = {},\n): Promise<NonNullable<ReturnType<FUNCTION>>> {\n  await when(() => {\n    const val = getter()\n    return val !== undefined && val !== null\n  }, opts)\n\n  return getter() as NonNullable<ReturnType<FUNCTION>>\n}\n","import jexl from 'jexl'\nimport { Feature } from './simpleFeature'\n\ntype JexlWithAddFunction = typeof jexl & {\n  addFunction(name: string, func: Function): void\n}\ntype JexlNonBuildable = Omit<typeof jexl, 'Jexl'>\n\nexport default function (/* config?: any*/): JexlNonBuildable {\n  const j = new jexl.Jexl() as JexlWithAddFunction\n  // someday will make sure all of configs callbacks are added in, including\n  // ones passed in\n\n  // below are core functions\n  j.addFunction('get', (feature: Feature, data: string) => {\n    return feature.get(data)\n  })\n\n  j.addFunction('id', (feature: Feature) => {\n    return feature.id()\n  })\n\n  // let user cast a jexl type into a javascript type\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  j.addFunction('cast', (arg: any) => {\n    return arg\n  })\n\n  // logging\n  j.addFunction('log', (thing: unknown) => {\n    // eslint-disable-next-line no-console\n    console.log(thing)\n    return thing\n  })\n\n  // math\n  // addfunction added in jexl 2.3 but types/jexl still on 2.2\n  j.addFunction('max', Math.max)\n  j.addFunction('min', Math.min)\n  j.addFunction('sqrt', Math.sqrt)\n  j.addFunction('ceil', Math.ceil)\n  j.addFunction('floor', Math.floor)\n  j.addFunction('round', Math.round)\n  j.addFunction('abs', Math.abs)\n  j.addFunction('parseInt', Number.parseInt)\n  j.addFunction('parseFloat', Number.parseFloat)\n\n  // string\n  j.addFunction('split', (str: string, char: string) => str.split(char))\n  j.addFunction('charAt', (str: string, index: number) => str.charAt(index))\n  j.addFunction('charCodeAt', (str: string, index: number) =>\n    str.charCodeAt(index),\n  )\n  j.addFunction('codePointAt', (str: string, pos: number) =>\n    str.codePointAt(pos),\n  )\n  j.addFunction(\n    'startsWith',\n    (str: string, searchStr: string, length?: number | undefined) =>\n      str.startsWith(searchStr, length),\n  )\n  j.addFunction(\n    'endsWith',\n    (str: string, searchStr: string, length?: number | undefined) =>\n      str.endsWith(searchStr, length),\n  )\n  j.addFunction(\n    'padEnd',\n    (str: string, targetLength: number, padString?: string | undefined) =>\n      str.padEnd(targetLength, padString),\n  )\n  j.addFunction(\n    'padStart',\n    (str: string, targetLength: number, fillString?: string | undefined) =>\n      str.padStart(targetLength, fillString),\n  )\n  j.addFunction('repeat', (str: string, count: number) => str.repeat(count))\n  j.addFunction('replace', (str: string, match: string, newSubStr: string) =>\n    str.replace(match, newSubStr),\n  )\n  j.addFunction('replaceAll', (str: string, match: string, newSubStr: string) =>\n    str.replaceAll(match, newSubStr),\n  )\n  j.addFunction(\n    'slice',\n    (str: string, start: number, end?: number | undefined) =>\n      str.slice(start, end),\n  )\n  j.addFunction(\n    'startsWith',\n    (str: string, searchStr: string, position?: number | undefined) =>\n      str.startsWith(searchStr, position),\n  )\n  j.addFunction(\n    'substring',\n    (str: string, start: number, end?: number | undefined) =>\n      str.substring(start, end),\n  )\n  j.addFunction('toLowerCase', (str: string) => str.toLowerCase())\n  j.addFunction('toUpperCase', (str: string) => str.toUpperCase())\n  j.addFunction('trim', (str: string) => {\n    str.trim()\n  })\n  j.addFunction('trimEnd', (str: string) => str.trimEnd())\n  j.addFunction('trimStart', (str: string) => str.trimStart())\n\n  j.addFunction('getTag', (feature: Feature, str: string) => {\n    const tags = feature.get('tags')\n    return tags ? tags[str] : feature.get(str)\n  })\n\n  j.addBinaryOp('&', 15, (a: number, b: number) => a & b)\n\n  return j\n}\n"],"sourceRoot":""}